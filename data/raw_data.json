[
{"title": null, "url": "https://refactoring.guru/design-patterns/factory-method", "raw_html": "<!DOCTYPE html>\n<html lang=\"en\" dir=\"ltr\">\n<head prefix=\"og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# website: http://ogp.me/ns/website#\">\n    <meta charset=\"utf-8\">\n    <title>Factory Method</title>\n\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n    <meta name=\"theme-color\" content=\"#A2E2FD\" />\n\n            <style>\n        .buy-widget-excl-local-taxes {\n            display: none;\n        }\n    </style>\n    \n    <link rel=\"preload\" href=\"/fonts/PTSans/ptsans-regular_en.woff2?1\" as=\"font\" type=\"font/woff2\" crossorigin>\n    <link rel=\"preload\" href=\"/fonts/PTSans/ptsans-bold_en.woff2?1\" as=\"font\" type=\"font/woff2\" crossorigin>\n        <link rel=\"preload\" href=\"/fonts/fontello/fontawesome.woff2?15843843\" as=\"font\" type=\"font/woff2\" crossorigin>\n    <link rel=\"preload\" href=\"/fonts/FiraCode/woff2/FiraCode-Regular_latin.woff2\" as=\"font\" type=\"font/woff2\" crossorigin>\n        <link rel=\"preconnect dns-prefetch\" href=\"https://cdn.paddle.com\">\n    <link rel=\"preconnect dns-prefetch\" href=\"https://www.googletagmanager.com\">\n\n    <link rel=\"alternate\" href=\"https://refactoring.guru/design-patterns/factory-method\" hreflang=\"x-default\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/es/design-patterns/factory-method\" hreflang=\"es\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/fr/design-patterns/factory-method\" hreflang=\"fr\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/ja/design-patterns/factory-method\" hreflang=\"ja\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/ko/design-patterns/factory-method\" hreflang=\"ko\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/pl/design-patterns/factory-method\" hreflang=\"pl\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/pt-br/design-patterns/factory-method\" hreflang=\"pt-br\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/ru/design-patterns/factory-method\" hreflang=\"ru\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/uk/design-patterns/factory-method\" hreflang=\"uk\"/>\n    <link rel=\"alternate\" href=\"https://refactoringguru.cn/design-patterns/factory-method\" hreflang=\"zh\"/>\n\n    <meta name=\"description\" content=\"Factory Method is a creational design pattern that provides an interface for creating objects in a superclass, but allows subclasses to alter the type of objects that will be created.\">\n\n    <link rel=\"canonical\" href=\"https://refactoring.guru/design-patterns/factory-method\"/>\n\n    <link rel=\"icon\" type=\"image/x-icon\" href=\"/favicon.png\"/>\n\n        <meta property=\"fb:app_id\" content=\"666819623386327\"/>\n        <meta property=\"og:type\" content=\"website\"/>\n        <meta property=\"og:image\" content=\"https://refactoring.guru/images/refactoring/social/facebook-share-preview.png?id=dbf9e98269595be86eb668f365be6868\"/>\n    \n                    <link rel=\"stylesheet\" href=\"/css/public-packed.min.css?id=aaefab4da343b914b8dda9973604a9e8\">\n        <style type=\"text/css\">\n                    @font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_cyrillic-ext.woff2?1) format(\"woff2\");unicode-range:U+0460-052F,U+1C80-1C88,U+20B4,U+2DE0-2DFF,U+A640-A69F,U+FE2E-FE2F}@font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_cyrillic.woff2?1) format(\"woff2\");unicode-range:U+0400-045F,U+0490-0491,U+04B0-04B1,U+2116}@font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_latin-ext.woff2?1) format(\"woff2\");unicode-range:U+0100-024F,U+0259,U+1E00-1EFF,U+2020,U+20A0-20AB,U+20AD-20CF,U+2113,U+2C60-2C7F,U+A720-A7FF}@font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_latin.woff2?1) format(\"woff2\");unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}@font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_en.woff2?1) format(\"woff2\");unicode-range:U+0-FF,U+131,U+142,U+152,U+153,U+2BB,U+2BC,U+2C6,U+2DA,U+2DC,U+420,U+423,U+430,U+438-43A,U+43D,U+440,U+441,U+443,U+44C,U+457,U+2000-206F,U+2074,U+20AA-20AC,U+20B4,U+20B9,U+20BA,U+20BD,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_cyrillic-ext.woff2?1) format(\"woff2\");unicode-range:U+0460-052F,U+1C80-1C88,U+20B4,U+2DE0-2DFF,U+A640-A69F,U+FE2E-FE2F}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_cyrillic.woff2?1) format(\"woff2\");unicode-range:U+0400-045F,U+0490-0491,U+04B0-04B1,U+2116}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_latin-ext.woff2?1) format(\"woff2\");unicode-range:U+0100-024F,U+0259,U+1E00-1EFF,U+2020,U+20A0-20AB,U+20AD-20CF,U+2113,U+2C60-2C7F,U+A720-A7FF}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_latin.woff2?1) format(\"woff2\");unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_en.woff2?1) format(\"woff2\");unicode-range:U+0-FF,U+131,U+142,U+152,U+153,U+2BB,U+2BC,U+2C6,U+2DA,U+2DC,U+420,U+423,U+430,U+438-43A,U+43D,U+440,U+441,U+443,U+44C,U+457,U+2000-206F,U+2074,U+20AA-20AC,U+20B4,U+20B9,U+20BA,U+20BD,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}\n            </style>\n\n    \n            <script defer src=\"/js/public.min.js?id=1f19fe18ffe0fc844ede8a0f2ee64202\"></script>\n        <script defer src=\"/js/checkout.min.js?id=b4da9c5bd8b1cf504447c07ae8b7cd44\"></script>\n            <script defer src=\"https://cdn.paddle.com/paddle/v2/paddle.js\"></script>\n    <script async src=\"https://www.googletagmanager.com/gtag/js?id=G-SR8Y3GYQYC\"></script>\n\n    <script type=\"application/ld+json\">\n        {\"@context\": \"http://schema.org\", \"@graph\": [{\"@type\":\"Person\",\"@id\":\"https://refactoring.guru/#founder\",\"name\":\"Alexander Shvets\"},{\"@type\":\"Organization\",\"@id\":\"https://refactoring.guru/#organization\",\"name\":\"Refactoring.Guru\",\"description\":\"Refactoring.Guru makes it easy for you to discover everything you need to know about refactoring, design patterns, SOLID principles, and other smart programming topics.\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https://refactoring.guru/#organizationlogo\",\"url\":\"https://refactoring.guru/images/content-public/logos/logo-plain.png\",\"caption\":\"Refactoring.Guru\"},\"logo\":{\"@id\":\"https://refactoring.guru/#organizationlogo\"},\"founder\":{\"@id\":\"https://refactoring.guru/#founder\"},\"sameAs\":[\"https://www.facebook.com/refactoring.guru\",\"https://twitter.com/RefactoringGuru\",\"https://github.com/RefactoringGuru\"]},{\"@type\":\"WebSite\",\"@id\":\"https://refactoring.guru/#website\",\"url\":\"https://refactoring.guru/\",\"name\":\"Refactoring.Guru\",\"description\":\"Refactoring.Guru makes it easy for you to discover everything you need to know about refactoring, design patterns, SOLID principles, and other smart programming topics.\",\"author\":{\"@id\":\"https://refactoring.guru/#founder\"},\"publisher\":{\"@id\":\"https://refactoring.guru/#organization\"},\"copyrightYear\":2014},{\"@type\":\"WebPage\",\"@id\":\"https://refactoring.guru/design-patterns/factory-method#webpage\",\"url\":\"https://refactoring.guru/design-patterns/factory-method\",\"inLanguage\":\"en\",\"name\":\"Factory Method\",\"description\":\"Factory Method is a creational design pattern that provides an interface for creating objects in a superclass, but allows subclasses to alter the type of objects that will be created.\",\"isPartOf\":{\"@id\":\"https://refactoring.guru#website\"},\"breadcrumb\":{\"@id\":\"https://refactoring.guru/design-patterns/factory-method#breadcrumb\"},\"primaryImageOfPage\":{\"@id\":\"https://refactoring.guru/design-patterns/factory-method#primaryimage\"},\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https://refactoring.guru/design-patterns/factory-method#primaryimage\",\"url\":\"https://refactoring.guru/images/patterns/content/factory-method/factory-method-en-3x.png\",\"width\":1920,\"height\":1200}},{\"@type\":\"Article\",\"@id\":\"https://refactoring.guru/design-patterns/factory-method#article\",\"isPartOf\":{\"@id\":\"https://refactoring.guru/design-patterns/factory-method#webpage\"},\"mainEntityOfPage\":{\"@id\":\"https://refactoring.guru/design-patterns/factory-method#webpage\"},\"author\":{\"@id\":\"https://refactoring.guru#founder\"},\"publisher\":{\"@id\":\"https://refactoring.guru#organization\"},\"headline\":\"Factory Method\",\"datePublished\":\"2024-01-01\",\"dateModified\":\"2025-01-01\",\"articleSection\":\"Design Patterns\",\"image\":{\"@id\":\"https://refactoring.guru/design-patterns/factory-method#primaryimage\"}},{\"@type\":\"BreadcrumbList\",\"@id\":\"https://refactoring.guru/design-patterns/factory-method#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https://refactoring.guru\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Design Patterns\",\"item\":\"https://refactoring.guru/design-patterns\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"Creational Patterns\",\"item\":\"https://refactoring.guru/design-patterns/creational-patterns\"}]}] }\n    </script>\n\n    <script>\nfunction extend(){var extended={};var deep=false;var i=0;var length=arguments[\"length\"];if(Object[\"prototype\"][\"toString\"][\"call\"](arguments[0])=== '[object Boolean]'){deep= arguments[0];i++};var merge=function(obj){for(var prop in obj){if(Object[\"prototype\"][\"hasOwnProperty\"][\"call\"](obj,prop)){if(deep&& Object[\"prototype\"][\"toString\"][\"call\"](obj[prop])=== '[object Object]'){extended[prop]= extend(true,extended[prop],obj[prop])}else {extended[prop]= obj[prop]}}}};for(;i< length;i++){var obj=arguments[i];merge(obj)};return extended}\nfunction defer(method) {if (window.jQuery) {method();} else {setTimeout(function() { defer(method) }, 50);}}\n</script>\n<script>\n+function(sd){sd = (typeof sd === \"string\") ? JSON.parse(atob(sd)) : sd;for(var property in sd){if(window[property]!== null&&  typeof window[property]=== 'object'){window[property]= extend(true,window[property],sd[property])}else {window[property]= sd[property]}}}(\"eyJsb2NhbGUiOiJlbiIsImxvY2FsZV9wcmVmaXgiOiIiLCJsb2NhbGl6ZWRfdXJsX3ByZWZpeCI6Imh0dHBzOlwvXC9yZWZhY3RvcmluZy5ndXJ1XC8iLCJ1cmxfcHJlZml4IjoiaHR0cHM6XC9cL3JlZmFjdG9yaW5nLmd1cnVcLyIsImxvY2FsaXplZF91cmxfcHJlZml4X20iOiJodHRwczpcL1wvcmVmYWN0b3JpbmcuZ3VydVwvIiwidXJsX3ByZWZpeF9tIjoiaHR0cHM6XC9cL3JlZmFjdG9yaW5nLmd1cnVcLyIsInVzZXJfZWNob19hbGlhcyI6InJlZmFjdG9yaW5nIiwidXNlcl9lY2hvX2hvc3QiOiJmZWVkYmFjay5yZWZhY3RvcmluZy5ndXJ1IiwidXNlcl9lY2hvX3ByaXZhdGVfZm9ydW0iOiIyIiwidXNlcl9lY2hvX2xvY2FsZSI6ImVuIiwidXNlcl9lY2hvX3B1YmxpY19mb3J1bSI6IjMiLCJ1c2VyX2VjaG9fcHVibGljX2ZvcnVtX3VybCI6Imh0dHBzOlwvXC9mZWVkYmFjay5yZWZhY3RvcmluZy5ndXJ1XC8iLCJ1c2VyX2VjaG9fc3NvX3Rva2VuIjoiIn0=\");\n</script>\n\n<script>\n    window.dataLayer = window.dataLayer || [];\n    function gtag(){dataLayer.push(arguments);}\n    gtag('js', new Date());\n            gtag('set', 'linker', {'domains': [\"refactoring.guru,refactoringguru.cn\"]});\n        gtag('config', 'G-SR8Y3GYQYC', {\n        // Disable default page view, because we're going to report them on our own.\n        // This is done to report traffic on localized domains as part of the main website traffic\n        // See the Chinese overrides below.\n        send_page_view: false,\n    });\n</script>\n\n<script>\n    (() => {\n        // On first page view after returning from social network, we need to send the social login event.\n        (function detectSocialLogin() {\n            let getCookie = function (name) {\n                var nameEQ = name + \"=\";\n                var ca = document.cookie.split(';');\n                for (var i = 0; i < ca.length; i++) {\n                    var c = ca[i];\n                    while (c.charAt(0) == ' ') c = c.substring(1, c.length);\n                    if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);\n                }\n                return null;\n            };\n            window.social_login_provider = window.social_login_provider || getCookie('social_login_provider');\n            if (window.social_login_provider) {\n                gtag('set', {referrer: null});\n                gtag('event', 'login', {\"method\": window.social_login_provider});\n                // Delete cookie.\n                document.cookie = 'social_login_provider=; Path=/; Max-Age=-99999999;';\n            }\n        })();\n\n        function trackPageView(location, title) {\n            location = location || document.location.href;\n            title = title || document.title;\n\n            // This is show on https://refactoringguru.cn/ and alike.\n            if (typeof window.analytics_path_prefix === 'string') {\n                if (/^(https?:\\/\\/[^\\/]+?)\\/$/.test(location)) {\n                    location = location.replace(/(https?:\\/\\/[^\\/]+?)\\//, '$1' + window.analytics_path_prefix);\n                } else {\n                    location = location.replace(/(https?:\\/\\/[^\\/]+?)\\//, '$1' + window.analytics_path_prefix + '/');\n                }\n                gtag('set', {\n                    'page_location': location\n                });\n            }\n\n            // This is show on https://refactoring.guru/zh/login and alike.\n            if (typeof window.analytics_location_prefix === 'string') {\n                location = location.replace(/(https?:\\/\\/[^\\/]+?)\\//, window.analytics_location_prefix);\n                gtag('set', {\n                    'page_location': location\n                });\n            }\n\n            gtag('event', 'page_view', {\n                page_location: location,\n                page_title: title,\n                locale: window.locale ?? 'en'\n            });\n        }\n\n        if (window.loadContent) {\n            window.onPageLoad = window.onPageLoad || [];\n            window.onPageLoad.push({\n                func: function (context) {\n                    trackPageView(window.location.origin + context.canonicalPath, context.title);\n                },\n                afterAll: true,\n            });\n        }\n        else {\n            trackPageView();\n        }\n    })();\n</script>\n\n\n</head>\n<body class=\"locale-en   announcement   factory-method\" data-body_class=\"factory-method\">\n\n<div class=\"body-holder\">\n\n            <div class=\"announcement-block announcement-block-summer prom\" data-id=\"DIDP-announcement\" data-creative-id=\"en\" data-position=\"top\">\n        <span class=\"beach-and-sea\">\n            <span class=\"a1\"></span>\n            <span class=\"a2\"><span class=\"wave\"></span></span>\n            <span class=\"yacht\"></span>\n        </span>\n        <a href=\"/store\">\n            <img src=\"/images/content-public/ann/summer/sunbed.svg?id=b1e7314a63715a13870a6bd1a43613f7\" loading=\"lazy\" style=\"width: 32px; height:32px;vertical-align: middle; scale: -1 1 1;\">\n            <span class=\"announcement-link-text\">Summer SALE</span>\n            <img src=\"/images/content-public/ann/summer/reading-book.svg?id=36006ea720df8c171968cf613e8ea164\" loading=\"lazy\" style=\"width: 32px; height:32px;vertical-align: middle;\">\n        </a>\n    </div>\n\n    \n    <div class=\"cart-placeholder\">\n    <div class=\"cart-block-container\" style=\"display:none\">\n        <div class=\"cart-block btn-group\">\n            <a href=\"#checkout\" class=\"btn cart open-checkout\">\n                <span class=\"cart-text\"></span>&nbsp;<strong class=\"cart-total font-money\"></strong>\n            </a><a href=\"#checkout\" class=\"btn btn-secondary checkout open-checkout\"><i class=\"fa fa-shopping-cart\" aria-hidden=\"true\"></i> <span class=\"btn-text-span d-none d-sm-inline-block d-lg-none d-hg-inline-block\"></span></a>\n        </div>\n    </div>\n</div>\n    <main role=\"main\" class=\"main-content top-content center-content \" data-page_class=\"\">\n        <div class=\"main-content-container center-content-container\">\n                        <div class=\"pattern page text\">\n<article>\n    <div class=\"breadcrumb\">\n                                    <a class=\"home\" href=\"/\"><i class=\"fa fa-home\" aria-hidden=\"true\"></i></a>\n                                                / <a class=\"type\" href=\"/design-patterns\">Design Patterns</a>\n                                                / <a class=\"type\" href=\"/design-patterns/creational-patterns\">Creational Patterns</a>\n                        </div>\n    <h1 class=\"title\">Factory Method</h1>\n\n    <script type=\"text/javascript\">\n        // Shorten examples titles for users.\n        var h1 = document.getElementsByTagName(\"H1\")[0];\n        if (h1.offsetHeight > 160) {\n            h1.className += ' smaller';\n        }\n\n        // Small beautification for pattern examples.\n        var title = h1.innerHTML;\n        title = title.replace(/^(Java|C\\+\\+|C#|PHP|Python|Ruby|Delphi): (.*)$/, '<strong>$1:</strong> $2');\n        h1.innerHTML = title;\n    </script>\n\n            <div class=\"aka\">\n            Also known as: <span style=\"display:inline-block\">Virtual Constructor</span>\n        </div>\n    \n    \n\n    <div class=\"section intent\">\n<h2 id=\"intent\"><i class=\"fa fa-flip-horizontal fa-comment-alt-dots\" aria-hidden=\"true\"></i> Intent</h2>\n<p><strong>Factory Method</strong> is a creational design pattern that provides an interface for creating objects in a superclass, but allows subclasses to alter the type of objects that will be created.</p>\n<figure class=\"image\"><img src=\"/images/patterns/content/factory-method/factory-method-en.png?id=cfa26f33dc8473e803fadae0d262100a\" alt=\"Factory Method pattern\" srcset=\"/images/patterns/content/factory-method/factory-method-en.png?id=cfa26f33dc8473e803fadae0d262100a 640w,/images/patterns/content/factory-method/factory-method-en-1.5x.png?id=d035a9f21f1ee88860cc44bf63d0e1c0 960w,/images/patterns/content/factory-method/factory-method-en-2x.png?id=b3961995a4449fb90820a693013511df 1280w\" sizes=\"(max-width: 720px) 100vw, 640px\" width=\"640\" style=\"aspect-ratio: 1.6;\" fetchpriority=\"high\" /></figure>\n</div>\n<div class=\"section problem\">\n<h2 id=\"problem\"><i class=\"fa fa-frown\" aria-hidden=\"true\"></i> Problem</h2>\n<p>Imagine that you’re creating a logistics management application. The first version of your app can only handle transportation by trucks, so the bulk of your code lives inside the <code>Truck</code> class.</p>\n<p>After a while, your app becomes pretty popular. Each day you receive dozens of requests from sea transportation companies to incorporate sea logistics into the app.</p>\n<figure class=\"image\"><img src=\"/images/patterns/diagrams/factory-method/problem1-en.png?id=de638561be0bbb1025ada6bfcb815def\" alt=\"Adding a new transportation class to the program causes an issue\" srcset=\"/images/patterns/diagrams/factory-method/problem1-en.png?id=de638561be0bbb1025ada6bfcb815def 600w,/images/patterns/diagrams/factory-method/problem1-en-1.5x.png?id=a46ffaf7114d367522cabda6012404bf 900w,/images/patterns/diagrams/factory-method/problem1-en-2x.png?id=9a4959d9dde4edadf809be33d3da0c74 1200w\" sizes=\"(max-width: 720px) 100vw, 600px\" width=\"600\" style=\"aspect-ratio: 2.4;\" loading=\"lazy\" /><figcaption>\n<p>Adding a new class to the program isn’t that simple if the rest of the code is already coupled to existing classes.</p>\n</figcaption></figure>\n<p>Great news, right? But how about the code? At present, most of your code is coupled to the <code>Truck</code> class. Adding <code>Ships</code> into the app would require making changes to the entire codebase. Moreover, if later you decide to add another type of transportation to the app, you will probably need to make all of these changes again.</p>\n<p>As a result, you will end up with pretty nasty code, riddled with conditionals that switch the app’s behavior depending on the class of transportation objects.</p>\n</div>\n<div class=\"section solution\">\n<h2 id=\"solution\"><i class=\"fa fa-smile-beam\" aria-hidden=\"true\"></i> Solution</h2>\n<p>The Factory Method pattern suggests that you replace direct object construction calls (using the <code>new</code> operator) with calls to a special <em>factory</em> method. Don’t worry: the objects are still created via the <code>new</code> operator, but it’s being called from within the factory method. Objects returned by a factory method are often referred to as <em>products.</em></p>\n<figure class=\"image\"><img src=\"/images/patterns/diagrams/factory-method/solution1.png?id=fc756d2af296b5b4d482e548214d08ef\" alt=\"The structure of creator classes\" srcset=\"/images/patterns/diagrams/factory-method/solution1.png?id=fc756d2af296b5b4d482e548214d08ef 620w,/images/patterns/diagrams/factory-method/solution1-1.5x.png?id=22d3b6bb74e966d1cb3a4d8f380cefa3 930w,/images/patterns/diagrams/factory-method/solution1-2x.png?id=c482b3cd7a4d8dd73b4c8c12dfcaa03c 1240w\" sizes=\"(max-width: 720px) 100vw, 620px\" width=\"620\" style=\"aspect-ratio: 2.3;\" loading=\"lazy\" /><figcaption>\n<p>Subclasses can alter the class of objects being returned by the factory method.</p>\n</figcaption></figure>\n<p>At first glance, this change may look pointless: we just moved the constructor call from one part of the program to another. However, consider this: now you can override the factory method in a subclass and change the class of products being created by the method.</p>\n<p>There’s a slight limitation though: subclasses may return different types of products only if these products have a common base class or interface. Also, the factory method in the base class should have its return type declared as this interface.</p>\n<figure class=\"image\"><img src=\"/images/patterns/diagrams/factory-method/solution2-en.png?id=db5de848c1d490b835666ef54d131d46\" alt=\"The structure of the products hierarchy\" srcset=\"/images/patterns/diagrams/factory-method/solution2-en.png?id=db5de848c1d490b835666ef54d131d46 490w,/images/patterns/diagrams/factory-method/solution2-en-1.5x.png?id=eac87ef445435f4ed86bf271679c009d 735w,/images/patterns/diagrams/factory-method/solution2-en-2x.png?id=1209a3156e450b9d7c437ca6bb98b219 980w\" sizes=\"(max-width: 720px) 100vw, 490px\" width=\"490\" style=\"aspect-ratio: 1.96;\" loading=\"lazy\" /><figcaption>\n<p>All products must follow the same interface.</p>\n</figcaption></figure>\n<p>For example, both <code>Truck</code> and <code>Ship</code> classes should implement the <code>Transport</code> interface, which declares a method called <code>deliver</code>. Each class implements this method differently: trucks deliver cargo by land, ships deliver cargo by sea. The factory method in the <code>RoadLogistics</code> class returns truck objects, whereas the factory method in the <code>SeaLogistics</code> class returns ships.</p>\n<figure class=\"image\"><img src=\"/images/patterns/diagrams/factory-method/solution3-en.png?id=b6f53911fc0d56f9ef99501fc4aec059\" alt=\"The structure of the code after applying the factory method pattern\" srcset=\"/images/patterns/diagrams/factory-method/solution3-en.png?id=b6f53911fc0d56f9ef99501fc4aec059 640w,/images/patterns/diagrams/factory-method/solution3-en-1.5x.png?id=f66d5c45f61b619d513a12b7e0a755d5 960w,/images/patterns/diagrams/factory-method/solution3-en-2x.png?id=542c0ba89e91ac11ea79e94bc0229f70 1280w\" sizes=\"(max-width: 720px) 100vw, 640px\" width=\"640\" style=\"aspect-ratio: 1.83;\" loading=\"lazy\" /><figcaption>\n<p>As long as all product classes implement a common interface, you can pass their objects to the client code without breaking it.</p>\n</figcaption></figure>\n<p>The code that uses the factory method (often called the <em>client</em> code) doesn’t see a difference between the actual products returned by various subclasses. The client treats all the products as abstract <code>Transport</code>. The client knows that all transport objects are supposed to have the <code>deliver</code> method, but exactly how it works isn’t important to the client.</p>\n</div>\n<div class=\"section structure-container\">\n<h2 id=\"structure\"><i class=\"fa fa-sitemap\" aria-hidden=\"true\"></i> Structure</h2>\n<div class=\"structure\">\n<div class=\"struct-image1 struct-image\">\n<figure class=\"image\"><img class=\"structure-img-non-indexed d-none d-xl-block\" src=\"/images/patterns/diagrams/factory-method/structure.png?id=4cba0803f42517cfe8548c9bc7dc4c9b\" alt=\"The structure of the Factory Method pattern\" srcset=\"/images/patterns/diagrams/factory-method/structure.png?id=4cba0803f42517cfe8548c9bc7dc4c9b 660w,/images/patterns/diagrams/factory-method/structure-1.5x.png?id=ece8300890afc14494770a6b6d370428 990w,/images/patterns/diagrams/factory-method/structure-2x.png?id=9ea3aa8a47f8be22e12e523c15b448fd 1320w\" sizes=\"(max-width: 720px) 100vw, 640px\" width=\"660\" style=\"aspect-ratio: 1.74;\" loading=\"lazy\" /><img class=\"structure-img-indexed d-xl-none\" src=\"/images/patterns/diagrams/factory-method/structure-indexed.png?id=4c603207859ca1f939b17b60a3a2e9e0\" alt=\"The structure of the Factory Method pattern\" srcset=\"/images/patterns/diagrams/factory-method/structure-indexed.png?id=4c603207859ca1f939b17b60a3a2e9e0 660w,/images/patterns/diagrams/factory-method/structure-indexed-1.5x.png?id=626b6d7f577e1c265cce244678b2cf7f 990w,/images/patterns/diagrams/factory-method/structure-indexed-2x.png?id=c794e4f2d05013fb176464a1d1a5d7ab 1320w\" sizes=\"(max-width: 720px) 100vw, 640px\" width=\"660\" style=\"aspect-ratio: 1.74;\" loading=\"lazy\" /></figure>\n</div>\n<ol><li class=\"struct-li1\">\n<p>The <strong>Product</strong> declares the interface, which is common to all objects that can be produced by the creator and its subclasses.</p>\n</li>\n<li class=\"struct-li2\">\n<p><strong>Concrete Products</strong> are different implementations of the product interface.</p>\n</li>\n<li class=\"struct-li3\">\n<p>The <strong>Creator</strong> class declares the factory method that returns new product objects. It’s important that the return type of this method matches the product interface.</p>\n<p>You can declare the factory method as <code>abstract</code> to force all subclasses to implement their own versions of the method. As an alternative, the base factory method can return some default product type.</p>\n<p>Note, despite its name, product creation is <strong>not</strong> the primary responsibility of the creator. Usually, the creator class already has some core business logic related to products. The factory method helps to decouple this logic from the concrete product classes. Here is an analogy: a large software development company can have a training department for programmers. However, the primary function of the company as a whole is still writing code, not producing programmers.</p>\n</li>\n<li class=\"struct-li4\">\n<p><strong>Concrete Creators</strong> override the base factory method so it returns a different type of product.</p>\n<p>Note that the factory method doesn’t have to <strong>create</strong> new instances all the time. It can also return existing objects from a cache, an object pool, or another source.</p>\n</li></ol>\n<style structure type=\"text/css\" >\n@media (min-width: 1200px) {\n.structure {\nmargin: 0;\nwidth: auto;\nheight: 600px;\n}\n\n.struct-li3 > p:nth-child(3) {\nfont-size: 12px;\nline-height: 18px;\n}\n\n.struct-image1 {\nleft: 240px;\ntop: 60px;\n}\n\n.struct-li1 {\nleft: 660px;\ntop: 30px;\nwidth: 240px;\n}\n\n.struct-li2 {\nleft: 670px;\ntop: 360px;\nwidth: 220px;\n}\n\n.struct-li3 {\nleft: 0px;\ntop: 10px;\nwidth: 230px;\n}\n\n.struct-li4 {\nleft: 250px;\ntop: 450px;\nwidth: 400px;\n}\n\n}\n\n</style>\n</div></div>\n<div class=\"section pseudocode\">\n<h2 id=\"pseudocode\"><i class=\"fa fa-hashtag\" aria-hidden=\"true\"></i> Pseudocode</h2>\n<p>This example illustrates how the <strong>Factory Method</strong> can be used for creating cross-platform UI elements without coupling the client code to concrete UI classes.</p>\n<figure class=\"image\"><img src=\"/images/patterns/diagrams/factory-method/example.png?id=67db9a5cb817913444efcb1c067c9835\" alt=\"The structure of the Factory Method pattern example\" srcset=\"/images/patterns/diagrams/factory-method/example.png?id=67db9a5cb817913444efcb1c067c9835 640w,/images/patterns/diagrams/factory-method/example-1.5x.png?id=921d97276e5e2fd8e64609c9cfa021e7 960w,/images/patterns/diagrams/factory-method/example-2x.png?id=a2470830778e318263155000dbdc5870 1280w\" sizes=\"(max-width: 720px) 100vw, 640px\" width=\"640\" style=\"aspect-ratio: 1.6;\" loading=\"lazy\" /><figcaption>\n<p>The cross-platform dialog example.</p>\n</figcaption></figure>\n<p>The base <code>Dialog</code> class uses different UI elements to render its window. Under various operating systems, these elements may look a little bit different, but they should still behave consistently. A button in Windows is still a button in Linux.</p>\n<p>When the factory method comes into play, you don’t need to rewrite the logic of the <code>Dialog</code> class for each operating system. If we declare a factory method that produces buttons inside the base <code>Dialog</code> class, we can later create a subclass that returns Windows-styled buttons from the factory method. The subclass then inherits most of the code from the base class, but, thanks to the factory method, can render Windows-looking buttons on the screen.</p>\n<p>For this pattern to work, the base <code>Dialog</code> class must work with abstract buttons: a base class or an interface that all concrete buttons follow. This way the code within <code>Dialog</code> remains functional, whichever type of buttons it works with.</p>\n<p>Of course, you can apply this approach to other UI elements as well. However, with each new factory method you add to the <code>Dialog</code>, you get closer to the <a href=\"/design-patterns/abstract-factory\">Abstract Factory</a> pattern. Fear not, we’ll talk about this pattern later.</p>\n<figure class=\"code\">\n<pre class=\"code\" lang=\"pseudocode\">// The creator class declares the factory method that must\n// return an object of a product class. The creator's subclasses\n// usually provide the implementation of this method.\nclass Dialog is\n    // The creator may also provide some default implementation\n    // of the factory method.\n    abstract method createButton():Button\n\n    // Note that, despite its name, the creator's primary\n    // responsibility isn't creating products. It usually\n    // contains some core business logic that relies on product\n    // objects returned by the factory method. Subclasses can\n    // indirectly change that business logic by overriding the\n    // factory method and returning a different type of product\n    // from it.\n    method render() is\n        // Call the factory method to create a product object.\n        Button okButton = createButton()\n        // Now use the product.\n        okButton.onClick(closeDialog)\n        okButton.render()\n\n\n// Concrete creators override the factory method to change the\n// resulting product's type.\nclass WindowsDialog extends Dialog is\n    method createButton():Button is\n        return new WindowsButton()\n\nclass WebDialog extends Dialog is\n    method createButton():Button is\n        return new HTMLButton()\n\n\n// The product interface declares the operations that all\n// concrete products must implement.\ninterface Button is\n    method render()\n    method onClick(f)\n\n// Concrete products provide various implementations of the\n// product interface.\nclass WindowsButton implements Button is\n    method render(a, b) is\n        // Render a button in Windows style.\n    method onClick(f) is\n        // Bind a native OS click event.\n\nclass HTMLButton implements Button is\n    method render(a, b) is\n        // Return an HTML representation of a button.\n    method onClick(f) is\n        // Bind a web browser click event.\n\n\nclass Application is\n    field dialog: Dialog\n\n    // The application picks a creator's type depending on the\n    // current configuration or environment settings.\n    method initialize() is\n        config = readApplicationConfigFile()\n\n        if (config.OS == &quot;Windows&quot;) then\n            dialog = new WindowsDialog()\n        else if (config.OS == &quot;Web&quot;) then\n            dialog = new WebDialog()\n        else\n            throw new Exception(&quot;Error! Unknown operating system.&quot;)\n\n    // The client code works with an instance of a concrete\n    // creator, albeit through its base interface. As long as\n    // the client keeps working with the creator via the base\n    // interface, you can pass it any creator's subclass.\n    method main() is\n        this.initialize()\n        dialog.render()\n</pre>\n</figure>\n</div>\n<div class=\"section applicability-container\">\n<h2 id=\"applicability\"><i class=\"fa fa-lightbulb-on\" aria-hidden=\"true\"></i> Applicability</h2>\n<div class=\"applicability\">\n<div class=\"applicability-problem\">\n<p><i class=\"fa fa-fw fa-bug\" aria-hidden=\"true\"></i> Use the Factory Method when you don’t know beforehand the exact types and dependencies of the objects your code should work with.</p>\n</div><div class=\"applicability-solution\">\n<p><i class=\"fa fa-fw fa-bolt\" aria-hidden=\"true\"></i> The Factory Method separates product construction code from the code that actually uses the product. Therefore it’s easier to extend the product construction code independently from the rest of the code.</p>\n<p>For example, to add a new product type to the app, you’ll only need to create a new creator subclass and override the factory method in it.</p>\n</div>\n<div class=\"applicability-problem\">\n<p><i class=\"fa fa-fw fa-bug\" aria-hidden=\"true\"></i> Use the Factory Method when you want to provide users of your library or framework with a way to extend its internal components.</p>\n</div><div class=\"applicability-solution\">\n<p><i class=\"fa fa-fw fa-bolt\" aria-hidden=\"true\"></i> Inheritance is probably the easiest way to extend the default behavior of a library or framework. But how would the framework recognize that your subclass should be used instead of a standard component?</p>\n<p>The solution is to reduce the code that constructs components across the framework into a single factory method and let anyone override this method in addition to extending the component itself.</p>\n<p>Let’s see how that would work. Imagine that you write an app using an open source UI framework. Your app should have round buttons, but the framework only provides square ones. You extend the standard <code>Button</code> class with a glorious <code>RoundButton</code> subclass. But now you need to tell the main <code>UIFramework</code> class to use the new button subclass instead of a default one.</p>\n<p>To achieve this, you create a subclass <code>UIWithRoundButtons</code> from a base framework class and override its <code>createButton</code> method. While this method returns <code>Button</code> objects in the base class, you make your subclass return <code>RoundButton</code> objects. Now use the <code>UIWithRoundButtons</code> class instead of <code>UIFramework</code>. And that’s about it!</p>\n</div>\n<div class=\"applicability-problem\">\n<p><i class=\"fa fa-fw fa-bug\" aria-hidden=\"true\"></i> Use the Factory Method when you want to save system resources by reusing existing objects instead of rebuilding them each time.</p>\n</div><div class=\"applicability-solution\">\n<p><i class=\"fa fa-fw fa-bolt\" aria-hidden=\"true\"></i> You often experience this need when dealing with large, resource-intensive objects such as database connections, file systems, and network resources.</p>\n<p>Let’s think about what has to be done to reuse an existing object:</p>\n<ol>\n<li>First, you need to create some storage to keep track of all of the created objects.</li>\n<li>When someone requests an object, the program should look for a free object inside that pool.</li>\n<li>… and then return it to the client code.</li>\n<li>If there are no free objects, the program should create a new one (and add it to the pool).</li>\n</ol>\n<p>That’s a lot of code! And it must all be put into a single place so that you don’t pollute the program with duplicate code.</p>\n<p>Probably the most obvious and convenient place where this code could be placed is the constructor of the class whose objects we’re trying to reuse. However, a constructor must always return <strong>new objects</strong> by definition. It can’t return existing instances.</p>\n<p>Therefore, you need to have a regular method capable of creating new objects as well as reusing existing ones. That sounds very much like a factory method.</p>\n</div>\n</div></div>\n<div class=\"section checklist\">\n<h2 id=\"checklist\"><i class=\"fa fa-clipboard-list-check\" aria-hidden=\"true\"></i> How to Implement</h2>\n<ol>\n<li>\n<p>Make all products follow the same interface. This interface should declare methods that make sense in every product.</p>\n</li>\n<li>\n<p>Add an empty factory method inside the creator class. The return type of the method should match the common product interface.</p>\n</li>\n<li>\n<p>In the creator’s code find all references to product constructors. One by one, replace them with calls to the factory method, while extracting the product creation code into the factory method.</p>\n<p>You might need to add a temporary parameter to the factory method to control the type of returned product.</p>\n<p>At this point, the code of the factory method may look pretty ugly. It may have a large <code>switch</code> statement that picks which product class to instantiate. But don’t worry, we’ll fix it soon enough.</p>\n</li>\n<li>\n<p>Now, create a set of creator subclasses for each type of product listed in the factory method. Override the factory method in the subclasses and extract the appropriate bits of construction code from the base method.</p>\n</li>\n<li>\n<p>If there are too many product types and it doesn’t make sense to create subclasses for all of them, you can reuse the control parameter from the base class in subclasses.</p>\n<p>For instance, imagine that you have the following hierarchy of classes: the base <code>Mail</code> class with a couple of subclasses: <code>AirMail</code> and <code>GroundMail</code>; the <code>Transport</code> classes are <code>Plane</code>, <code>Truck</code> and <code>Train</code>. While the <code>AirMail</code> class only uses <code>Plane</code> objects, <code>GroundMail</code> may work with both <code>Truck</code> and <code>Train</code> objects. You can create a new subclass (say <code>TrainMail</code>) to handle both cases, but there’s another option. The client code can pass an argument to the factory method of the <code>GroundMail</code> class to control which product it wants to receive.</p>\n</li>\n<li>\n<p>If, after all of the extractions, the base factory method has become empty, you can make it abstract. If there’s something left, you can make it a default behavior of the method.</p>\n</li>\n</ol>\n</div>\n<div class=\"section pros-cons\">\n<h2 id=\"pros-cons\"><i class=\"fa fa-balance-scale\" aria-hidden=\"true\"></i> Pros and Cons</h2>\n<div class=\"row\"><div class=\"col-sm-6\">\n<ul>\n<li><i class=\"fa fa-fw fa-check\" aria-hidden=\"true\"></i> You avoid tight coupling between the creator and the concrete products.</li>\n<li><i class=\"fa fa-fw fa-check\" aria-hidden=\"true\"></i> <em>Single Responsibility Principle</em>. You can move the product creation code into one place in the program, making the code easier to support.</li>\n<li><i class=\"fa fa-fw fa-check\" aria-hidden=\"true\"></i> <em>Open/Closed Principle</em>. You can introduce new types of products into the program without breaking existing client code.</li>\n</ul>\n</div><div class=\"col-sm-6\">\n<ul>\n<li><i class=\"fa fa-fw fa-times\" aria-hidden=\"true\"></i> The code may become more complicated since you need to introduce a lot of new subclasses to implement the pattern. The best case scenario is when you’re introducing the pattern into an existing hierarchy of creator classes.</li>\n</ul>\n</div></div></div>\n<div class=\"section relations\">\n<h2 id=\"relations\"><i class=\"fa fa-exchange-alt\" aria-hidden=\"true\"></i> Relations with Other Patterns</h2>\n<ul>\n<li>\n<p>Many designs start by using <a href=\"/design-patterns/factory-method\">Factory Method</a> (less complicated and more customizable via subclasses) and evolve toward <a href=\"/design-patterns/abstract-factory\">Abstract Factory</a>, <a href=\"/design-patterns/prototype\">Prototype</a>, or <a href=\"/design-patterns/builder\">Builder</a> (more flexible, but more complicated).</p>\n</li>\n<li>\n<p><a href=\"/design-patterns/abstract-factory\">Abstract Factory</a> classes are often based on a set of <a href=\"/design-patterns/factory-method\">Factory Methods</a>, but you can also use <a href=\"/design-patterns/prototype\">Prototype</a> to compose the methods on these classes.</p>\n</li>\n<li>\n<p>You can use <a href=\"/design-patterns/factory-method\">Factory Method</a> along with <a href=\"/design-patterns/iterator\">Iterator</a> to let collection subclasses return different types of iterators that are compatible with the collections.</p>\n</li>\n<li>\n<p><a href=\"/design-patterns/prototype\">Prototype</a> isn’t based on inheritance, so it doesn’t have its drawbacks. On the other hand, <em>Prototype</em> requires a complicated initialization of the cloned object. <a href=\"/design-patterns/factory-method\">Factory Method</a> is based on inheritance but doesn’t require an initialization step.</p>\n</li>\n<li>\n<p><a href=\"/design-patterns/factory-method\">Factory Method</a> is a specialization of <a href=\"/design-patterns/template-method\">Template Method</a>. At the same time, a <em>Factory Method</em> may serve as a step in a large <em>Template Method</em>.</p>\n</li>\n</ul>\n</div>\n<div class=\"section implementations\">\n<h2 id=\"implementations\"><i class=\"fa fa-code\" aria-hidden=\"true\"></i> Code Examples</h2>\n<p><a href=\"/design-patterns/factory-method/csharp/example\" title=\"Factory Method in C#\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/csharp.svg?id=da64592defc6e86d57c39c66e9de3e58\" alt=\"Factory Method in C#\" /></a>\n<a href=\"/design-patterns/factory-method/cpp/example\" title=\"Factory Method in C++\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/cpp.svg?id=f7782ed8b8666246bfcc3f8fefc3b858\" alt=\"Factory Method in C++\" /></a>\n<a href=\"/design-patterns/factory-method/go/example\" title=\"Factory Method in Go\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/go.svg?id=1a89927eb99b1ea3fde7701d97970aca\" alt=\"Factory Method in Go\" /></a>\n<a href=\"/design-patterns/factory-method/java/example\" title=\"Factory Method in Java\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/java.svg?id=e6d87e2dca08c953fe3acd1275ed4f4e\" alt=\"Factory Method in Java\" /></a>\n<a href=\"/design-patterns/factory-method/php/example\" title=\"Factory Method in PHP\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/php.svg?id=be1906eb26b71ec1d3b93720d6156618\" alt=\"Factory Method in PHP\" /></a>\n<a href=\"/design-patterns/factory-method/python/example\" title=\"Factory Method in Python\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/python.svg?id=6d815d43c0f7050a1151b43e51569c9f\" alt=\"Factory Method in Python\" /></a>\n<a href=\"/design-patterns/factory-method/ruby/example\" title=\"Factory Method in Ruby\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/ruby.svg?id=b065b718c914bf8e960ef731600be1eb\" alt=\"Factory Method in Ruby\" /></a>\n<a href=\"/design-patterns/factory-method/rust/example\" title=\"Factory Method in Rust\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/rust.svg?id=1f5698a4b5ae23fe79413511747e4a87\" alt=\"Factory Method in Rust\" /></a>\n<a href=\"/design-patterns/factory-method/swift/example\" title=\"Factory Method in Swift\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/swift.svg?id=0b716c2d52ec3a48fbe91ac031070c1d\" alt=\"Factory Method in Swift\" /></a>\n<a href=\"/design-patterns/factory-method/typescript/example\" title=\"Factory Method in TypeScript\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/typescript.svg?id=2239d0f16cb703540c205dd8cb0c0cb7\" alt=\"Factory Method in TypeScript\" /></a></p>\n</div>\n<div class=\"section extras\">\n<h2 id=\"extras\"><i class=\"fa fa-gift\" aria-hidden=\"true\"></i> Extra Content</h2>\n<ul>\n<li>Read our <a href=\"/design-patterns/factory-comparison\">Factory Comparison</a> if you can’t figure out the difference between various factory patterns and concepts.</li>\n</ul>\n</div>\n\n\n    <div class=\"banner-set2\" id=\"book-promo\">\n            <div class=\"prom banner-content banner-bg banner-striped banner-with-image\" data-id=\"DP: 1: Support our free website and own the eBook!\" data-creative-id=\"standard-en\" data-position=\"content_bottom\">\n                <div class=\"banner-image\">\n                    <a href=\"/design-patterns/book\">\n                        <img width=\"200\" height=\"200\" loading=\"lazy\" src=\"/images/patterns/banners/patterns-book-banner-3.png?id=7d445df13c80287beaab234b4f3b698c\" srcset=\"/images/patterns/banners/patterns-book-banner-3-2x.png?id=0cc3f77ab421d1a5c02ee46488231c3a 2x\">\n                    </a>\n                </div>\n\n                <div class=\"banner-text\">\n                    <h3 class=\"title\">Support our free website and own the eBook!</h3>\n                    <ul style=\"font-size: 14px;\">\n                        <li style=\"margin: 0;\">22 design patterns and 8 principles explained in depth.</li>\n                        <li style=\"margin: 0;\">409 well-structured, easy to read, jargon-free pages.</li>\n                        <li style=\"margin: 0;\">225 clear and helpful illustrations and diagrams.</li>\n                        <li style=\"margin: 0;\">An archive with code examples in 11 languages.</li>\n                        <li style=\"margin: 0;\">All devices supported: PDF/EPUB/MOBI/KFX formats.</li>\n                    </ul>\n                    <a class=\"btn btn-secondary\" href=\"/design-patterns/book\"><i class=\"fa fa-book\" aria-hidden=\"true\"></i> Learn more…</a>\n                </div>\n            </div>\n        </div>\n\n    </article>\n\n<nav class=\"prev-next\">\n                    <div class=\"next\">\n                <h4>Read next</h4>\n                <a rel=\"next\" href=\"/design-patterns/abstract-factory\" class=\"btn btn-primary\">Abstract Factory&nbsp;<span class=\"fa fa-arrow-right\"></span></a>\n            </div>\n                            <div class=\"prev\">\n                <h4>Return</h4>\n                <a rel=\"prev\" href=\"/design-patterns/creational-patterns\" class=\"btn btn-default\"><span class=\"fa fa-arrow-left\"></span>&nbsp;Creational Patterns </a>\n            </div>\n            </nav>\n</div>\n\n<aside class=\"feature content-secondary\">\n    <div class=\"prom banner-sidebar banner-removable banner-removable-patterns\" data-id=\"DP: Sidebar\" data-creative-id=\"standard-sidebar-en\" data-position=\"sidebar\">\n        <div class=\"banner-inner\">\n            <div class=\"image3d-book-right\">\n                <div class=\"image3d-cover\" style=\"background: #0b3752;\">\n                    <a href=\"/design-patterns/book\">\n                        <img width=\"250\" height=\"375\" loading=\"lazy\" src=\"/images/patterns/book/web-cover-en.png?id=328861769fd11617674e3b8a7e2dd9e7\" srcset=\"/images/patterns/book/web-cover-en-2x.png?id=02940141c5652ed5a426d87390b16366 2x\">\n                    </a>\n                </div>\n            </div>\n            <div style=\"margin-top: 1rem\">\n                <p class=\"text-center\" >This article is a part of our eBook<br/><strong>Dive Into Design Patterns</strong>.</p>\n                <a href=\"/design-patterns/book\" class=\"btn btn-secondary btn-block\"><i class=\"fa fa-book\" aria-hidden=\"true\"></i> Learn more…</a>\n            </div>\n        </div>\n    </div>\n\n\n</aside>\n                    </div>\n    </main>\n\n    <aside class=\"sidebar main-menu\">\n    <div class=\"main-menu-controls\">\n        <button class=\"navigation-toggle\"><i class=\"fa fa-fw fa-times\"></i></button>\n    </div>\n    <div class=\"main-menu-list-wrapper nano\">\n        <div class=\"main-menu-list nano-content\">\n            <a class=\"menu-brand\" href=\"/\">\n                                    <img width=200 height=241 loading=\"lazy\" alt=\"Refactoring.Guru\" src=\"/images/content-public/logos/logo-new.png?id=97d554614702483f31e38b32e82d8e34\" srcset=\"/images/content-public/logos/logo-new-2x.png?id=3bc33294e095bab1d6fe9ae421d07837 2x\">\n                            </a>\n\n            <div class=\"menu-container\" style=\"position: relative\">\n                                <ul class=\"menu-list trail\">\n                            <li class=\"featured\">\n            <a href=\"/store\">\n                <i class=\"fa fa-fw fa-star\" aria-hidden=\"true\"></i> Premium Content\n            </a>\n    \n            <ul >\n                            <li class=\"featured menu-fs15\">\n            <a href=\"/design-patterns/book\">\n                <i class=\"fa fa-fw fa-book\" aria-hidden=\"true\"></i> Design Patterns eBook\n            </a>\n    \n    \n            </li>\n                                <li class=\"featured menu-fs15\">\n            <a href=\"/refactoring/course\">\n                <i class=\"fa fa-fw fa-graduation-cap\" aria-hidden=\"true\"></i> Refactoring Course\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring\">\n                <i class=\"fa fa-fw fa-scissors\" aria-hidden=\"true\"></i> Refactoring\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/refactoring/what-is-refactoring\">\n                What is Refactoring\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/refactoring/what-is-refactoring\">\n                Clean code\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/technical-debt\">\n                Technical debt\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/when\">\n                When to refactor\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/how-to\">\n                How to refactor\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/catalog\">\n                Catalog\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells\">\n                Code Smells\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/refactoring/smells/bloaters\">\n                Bloaters\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/long-method\">\n                Long Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/large-class\">\n                Large Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/primitive-obsession\">\n                Primitive Obsession\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/long-parameter-list\">\n                Long Parameter List\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/data-clumps\">\n                Data Clumps\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/oo-abusers\">\n                Object-Orientation Abusers\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/switch-statements\">\n                Switch Statements\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/temporary-field\">\n                Temporary Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/refused-bequest\">\n                Refused Bequest\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/alternative-classes-with-different-interfaces\">\n                Alternative Classes with Different Interfaces\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/change-preventers\">\n                Change Preventers\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/divergent-change\">\n                Divergent Change\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/shotgun-surgery\">\n                Shotgun Surgery\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/parallel-inheritance-hierarchies\">\n                Parallel Inheritance Hierarchies\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/dispensables\">\n                Dispensables\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/comments\">\n                Comments\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/duplicate-code\">\n                Duplicate Code\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/lazy-class\">\n                Lazy Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/data-class\">\n                Data Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/dead-code\">\n                Dead Code\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/speculative-generality\">\n                Speculative Generality\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/couplers\">\n                Couplers\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/feature-envy\">\n                Feature Envy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/inappropriate-intimacy\">\n                Inappropriate Intimacy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/message-chains\">\n                Message Chains\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/middle-man\">\n                Middle Man\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/other\">\n                Other Smells\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/incomplete-library-class\">\n                Incomplete Library Class\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques\">\n                Refactorings\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/refactoring/techniques/composing-methods\">\n                Composing Methods\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/extract-method\">\n                Extract Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/inline-method\">\n                Inline Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-variable\">\n                Extract Variable\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/inline-temp\">\n                Inline Temp\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-temp-with-query\">\n                Replace Temp with Query\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/split-temporary-variable\">\n                Split Temporary Variable\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-assignments-to-parameters\">\n                Remove Assignments to Parameters\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-method-with-method-object\">\n                Replace Method with Method Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/substitute-algorithm\">\n                Substitute Algorithm\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/moving-features-between-objects\">\n                Moving Features between Objects\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/move-method\">\n                Move Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/move-field\">\n                Move Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-class\">\n                Extract Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/inline-class\">\n                Inline Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/hide-delegate\">\n                Hide Delegate\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-middle-man\">\n                Remove Middle Man\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-foreign-method\">\n                Introduce Foreign Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-local-extension\">\n                Introduce Local Extension\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/organizing-data\">\n                Organizing Data\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/self-encapsulate-field\">\n                Self Encapsulate Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-data-value-with-object\">\n                Replace Data Value with Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/change-value-to-reference\">\n                Change Value to Reference\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/change-reference-to-value\">\n                Change Reference to Value\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-array-with-object\">\n                Replace Array with Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/duplicate-observed-data\">\n                Duplicate Observed Data\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/change-unidirectional-association-to-bidirectional\">\n                Change Unidirectional Association to Bidirectional\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/change-bidirectional-association-to-unidirectional\">\n                Change Bidirectional Association to Unidirectional\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-magic-number-with-symbolic-constant\">\n                Replace Magic Number with Symbolic Constant\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/encapsulate-field\">\n                Encapsulate Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/encapsulate-collection\">\n                Encapsulate Collection\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-type-code-with-class\">\n                Replace Type Code with Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-type-code-with-subclasses\">\n                Replace Type Code with Subclasses\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-type-code-with-state-strategy\">\n                Replace Type Code with State/Strategy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-subclass-with-fields\">\n                Replace Subclass with Fields\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/simplifying-conditional-expressions\">\n                Simplifying Conditional Expressions\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/decompose-conditional\">\n                Decompose Conditional\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/consolidate-conditional-expression\">\n                Consolidate Conditional Expression\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/consolidate-duplicate-conditional-fragments\">\n                Consolidate Duplicate Conditional Fragments\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-control-flag\">\n                Remove Control Flag\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-nested-conditional-with-guard-clauses\">\n                Replace Nested Conditional with Guard Clauses\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-conditional-with-polymorphism\">\n                Replace Conditional with Polymorphism\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-null-object\">\n                Introduce Null Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-assertion\">\n                Introduce Assertion\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/simplifying-method-calls\">\n                Simplifying Method Calls\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/rename-method\">\n                Rename Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/add-parameter\">\n                Add Parameter\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-parameter\">\n                Remove Parameter\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/separate-query-from-modifier\">\n                Separate Query from Modifier\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/parameterize-method\">\n                Parameterize Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-parameter-with-explicit-methods\">\n                Replace Parameter with Explicit Methods\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/preserve-whole-object\">\n                Preserve Whole Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-parameter-with-method-call\">\n                Replace Parameter with Method Call\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-parameter-object\">\n                Introduce Parameter Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-setting-method\">\n                Remove Setting Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/hide-method\">\n                Hide Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-constructor-with-factory-method\">\n                Replace Constructor with Factory Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-error-code-with-exception\">\n                Replace Error Code with Exception\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-exception-with-test\">\n                Replace Exception with Test\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/dealing-with-generalization\">\n                Dealing with Generalization\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/pull-up-field\">\n                Pull Up Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/pull-up-method\">\n                Pull Up Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/pull-up-constructor-body\">\n                Pull Up Constructor Body\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/push-down-method\">\n                Push Down Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/push-down-field\">\n                Push Down Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-subclass\">\n                Extract Subclass\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-superclass\">\n                Extract Superclass\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-interface\">\n                Extract Interface\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/collapse-hierarchy\">\n                Collapse Hierarchy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/form-template-method\">\n                Form Template Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-inheritance-with-delegation\">\n                Replace Inheritance with Delegation\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-delegation-with-inheritance\">\n                Replace Delegation with Inheritance\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"trail\">\n            <a href=\"/design-patterns\">\n                <i class=\"fa fa-fw fa-puzzle-piece\" aria-hidden=\"true\"></i> Design Patterns\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/what-is-pattern\">\n                What is a Pattern\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/what-is-pattern\">\n                What's a design pattern?\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/history\">\n                History of patterns\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/why-learn-patterns\">\n                Why should I learn patterns?\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/criticism\">\n                Criticism of patterns\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/classification\">\n                Classification of patterns\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/catalog\">\n                Catalog\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-third-level trail\">\n            <a href=\"/design-patterns/creational-patterns\">\n                Creational Patterns\n            </a>\n    \n            <ul >\n                            <li class=\"trail active\">\n            <a href=\"/design-patterns/factory-method\">\n                Factory Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/abstract-factory\">\n                Abstract Factory\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/builder\">\n                Builder\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/prototype\">\n                Prototype\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/singleton\">\n                Singleton\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"menu-third-level\">\n            <a href=\"/design-patterns/structural-patterns\">\n                Structural Patterns\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/adapter\">\n                Adapter\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/bridge\">\n                Bridge\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/composite\">\n                Composite\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/decorator\">\n                Decorator\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/facade\">\n                Facade\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/flyweight\">\n                Flyweight\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/proxy\">\n                Proxy\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"menu-third-level\">\n            <a href=\"/design-patterns/behavioral-patterns\">\n                Behavioral Patterns\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/chain-of-responsibility\">\n                Chain of Responsibility\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/command\">\n                Command\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/iterator\">\n                Iterator\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/mediator\">\n                Mediator\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/memento\">\n                Memento\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/observer\">\n                Observer\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/state\">\n                State\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/strategy\">\n                Strategy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/template-method\">\n                Template Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/visitor\">\n                Visitor\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"menu-code-examples\">\n            <a href=\"/design-patterns/examples\">\n                Code Examples\n            </a>\n    \n            <ul >\n                            <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/csharp\">\n                C#\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/cpp\">\n                C++\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/go\">\n                Go\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/java\">\n                Java\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/php\">\n                PHP\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/python\">\n                Python\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/ruby\">\n                Ruby\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/rust\">\n                Rust\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/swift\">\n                Swift\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/typescript\">\n                TypeScript\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n                </div>\n\n            <div class=\"main-menu-aux-controls\">\n                <a href=\"https://refactoring.guru/login\" title=\"Sign in\" style=\" display: inline-flex; align-items: center; gap: 6px; \"><svg style=\"width: 16px; height: 16px; filter:drop-shadow(0 1px 1px #74261e)\" class=\"inline-block mx-0\"  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\"opacity=\"0.4\" d=\"M352.7 222.4c3.2 1 6.5 1.6 10 1.6l21.3 0c17.7 0 32 14.3 32 32s-14.3 32-32 32l-21.3 0c-.8 0-1.7 0-2.5 0c-.9 0-1.7-.1-2.5-.1c-1.7-.1-3.4-.2-5-.4C357.4 414 391.1 512 432 512c44.2 0 80-114.6 80-256S476.2 0 432 0c-40.6 0-74.2 96.9-79.3 222.4z\"/><path fill=\"currentColor\"class=\"fa-primary\" d=\"M320 48a48 48 0 1 0 -96 0 48 48 0 1 0 96 0zM125.7 175.5c9.9-9.9 23.4-15.5 37.5-15.5c1.9 0 3.8 .1 5.6 .3L137.6 254c-9.3 28 1.7 58.8 26.8 74.5l86.2 53.9-25.4 88.8c-4.9 17 5 34.7 22 39.6s34.7-5 39.6-22l28.7-100.4c5.9-20.6-2.6-42.6-20.7-53.9L238 299l30.9-82.4 5.1 12.3C289 264.7 323.9 288 362.7 288l21.3 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-21.3 0c-12.9 0-24.6-7.8-29.5-19.7l-6.3-15c-14.6-35.1-44.1-61.9-80.5-73.1l-48.7-15c-11.1-3.4-22.7-5.2-34.4-5.2c-31 0-60.8 12.3-82.7 34.3L57.4 153.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l23.1-23.1zM91.2 352L32 352c-17.7 0-32 14.3-32 32s14.3 32 32 32l69.6 0c19 0 36.2-11.2 43.9-28.5L157 361.6l-9.5-6c-17.5-10.9-30.5-26.8-37.9-44.9L91.2 352z\"/></svg> Sign in</a>\n                <a href=\"https://feedback.refactoring.guru/\" class=\"userecho-public\" rel=\"nofollow\" title=\"Contact us\"><i class=\"fa fa-fw fa-fw fa-envelope\" aria-hidden=\"true\"></i> Contact us</a>\n            </div>\n        </div>\n    </div>\n</aside>\n\n    <nav class=\"navigation\" role=\"navigation\">\n    <div class=\"navigation-container\">\n        <a class=\"navigation-brand\" href=\"/\">\n            <img alt=\"Refactoring.Guru\"\n                 src=\"/images/content-public/logos/logo-new-mobile.png?id=ea18aa9b032eaa92835ed6d472b03b4a\"\n                 srcset=\"/images/content-public/logos/logo-new-mobile-2x.png?id=7ad5648bfd86ae2e8524147a72877c64 2x\">\n        </a>\n\n        <div class=\"shop-link d-none d-lg-block\" style=\"display: none !important;\">\n            <a class=\"btn btn-md btn-primary btn-featured\" href=\"/store\"><svg style=\"width: 28px; height: 28px; fill: currentColor; display: inline-block; margin-top: -14px;\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><!--! Font Awesome Pro 6.3.0 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2023 Fonticons, Inc. --><path d=\"M356 60l60 20-60 20-20 60-20-60L256 80l60-20L336 0l20 60zM464 208l48 16-48 16-16 48-16-48-48-16 48-16 16-48 16 48zm-243.8-9.8l33 66.9 73.8 10.7 59.8 8.7-43.3 42.2-53.4 52.1 12.6 73.5L313 512l-53.5-28.1-66-34.7-66 34.7L73.9 512l10.2-59.6 12.6-73.5L43.3 326.8 0 284.6l59.8-8.7 73.8-10.7 33-66.9L193.5 144l26.8 54.2zm26.1 114.4l-25-3.6-11.2-22.6-16.7-33.9-16.7 33.9L165.6 309l-25 3.6-37.4 5.4 27.1 26.4 18.1 17.6L144 387l-6.4 37.3 33.5-17.6 22.3-11.7 22.3 11.7 33.5 17.6L242.9 387l-4.3-24.9 18.1-17.6 27.1-26.4-37.4-5.4z\"/></svg>\n                Shop Now!</a>\n        </div>\n\n        <ul class=\"navigation-menu\">\n                            <li class=\"nav-locale dropdown dropdown-locales\">\n                    <button class=\"dropdown-toggle\" id=\"dropdownLanguage\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                        <i class=\"fa fa-fw fa-globe\" aria-hidden=\"true\"></i> <span class=\"caption d-none d-lg-inline-block\">English</span>\n                    </button>\n                    <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownLanguage\">\n                                                                                                                        <a href=\"https://refactoring.guru/design-patterns/factory-method\" class=\"dropdown-item locale-link active\" data-locale=\"en\" title=\"English\">English</a>\n                                                                                                                                <a href=\"https://refactoring.guru/es/design-patterns/factory-method\" class=\"dropdown-item locale-link \" data-locale=\"es\" title=\"Español\">Español</a>\n                                                                                                                                <a href=\"https://refactoring.guru/fr/design-patterns/factory-method\" class=\"dropdown-item locale-link \" data-locale=\"fr\" title=\"Français\">Français</a>\n                                                                                                                                <a href=\"https://refactoring.guru/ja/design-patterns/factory-method\" class=\"dropdown-item locale-link \" data-locale=\"ja\" title=\"日本語\">日本語</a>\n                                                                                                                                <a href=\"https://refactoring.guru/ko/design-patterns/factory-method\" class=\"dropdown-item locale-link \" data-locale=\"ko\" title=\"한국어\">한국어</a>\n                                                                                                                                <a href=\"https://refactoring.guru/pl/design-patterns/factory-method\" class=\"dropdown-item locale-link \" data-locale=\"pl\" title=\"Polski\">Polski</a>\n                                                                                                                                <a href=\"https://refactoring.guru/pt-br/design-patterns/factory-method\" class=\"dropdown-item locale-link \" data-locale=\"pt-br\" title=\"Português Brasileiro\">Português Brasileiro</a>\n                                                                                                                                <a href=\"https://refactoring.guru/ru/design-patterns/factory-method\" class=\"dropdown-item locale-link \" data-locale=\"ru\" title=\"Русский\">Русский</a>\n                                                                                                                                <a href=\"https://refactoring.guru/uk/design-patterns/factory-method\" class=\"dropdown-item locale-link \" data-locale=\"uk\" title=\"Українська\">Українська</a>\n                                                                                                                                <a href=\"https://refactoringguru.cn/design-patterns/factory-method\" class=\"dropdown-item locale-link \" data-locale=\"zh\" title=\"中文\">中文</a>\ndiv>\n                </li>\n                        <li class=\"nav-contacts\">\n                <a class=\"userecho-private\" href=\"https://feedback.refactoring.guru/?show_feedback_form_private=true\" rel=\"nofollow\" title=\"Contact us\">\n                    <i class=\"fa fa-fw fa-envelope\" aria-hidden=\"true\"></i> <span class=\"caption d-none d-xl-inline-block\">Contact us</span>\n                </a>\n            </li>\n                            <li class=\"nav-user\">\n                    <a href=\"https://refactoring.guru/login\" title=\"Sign in\"><span class=\"sign-in-icon\"><svg style=\"width: 24px; height: 24px; \" class=\"inline-block \"  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\"opacity=\"0.4\" d=\"M352.7 222.4c3.2 1 6.5 1.6 10 1.6l21.3 0c17.7 0 32 14.3 32 32s-14.3 32-32 32l-21.3 0c-.8 0-1.7 0-2.5 0c-.9 0-1.7-.1-2.5-.1c-1.7-.1-3.4-.2-5-.4C357.4 414 391.1 512 432 512c44.2 0 80-114.6 80-256S476.2 0 432 0c-40.6 0-74.2 96.9-79.3 222.4z\"/><path fill=\"currentColor\"class=\"fa-primary\" d=\"M320 48a48 48 0 1 0 -96 0 48 48 0 1 0 96 0zM125.7 175.5c9.9-9.9 23.4-15.5 37.5-15.5c1.9 0 3.8 .1 5.6 .3L137.6 254c-9.3 28 1.7 58.8 26.8 74.5l86.2 53.9-25.4 88.8c-4.9 17 5 34.7 22 39.6s34.7-5 39.6-22l28.7-100.4c5.9-20.6-2.6-42.6-20.7-53.9L238 299l30.9-82.4 5.1 12.3C289 264.7 323.9 288 362.7 288l21.3 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-21.3 0c-12.9 0-24.6-7.8-29.5-19.7l-6.3-15c-14.6-35.1-44.1-61.9-80.5-73.1l-48.7-15c-11.1-3.4-22.7-5.2-34.4-5.2c-31 0-60.8 12.3-82.7 34.3L57.4 153.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l23.1-23.1zM91.2 352L32 352c-17.7 0-32 14.3-32 32s14.3 32 32 32l69.6 0c19 0 36.2-11.2 43.9-28.5L157 361.6l-9.5-6c-17.5-10.9-30.5-26.8-37.9-44.9L91.2 352z\"/></svg></span> <span class=\"account-icon\" style=\"display:none\"><svg style=\"width: 24px; height: 24px; \" class=\"inline-block \"  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 576 512\"><path fill=\"currentColor\"opacity=\"0.4\" d=\"M64 270.5l224-196c74.7 65.4 149.4 130.7 224.1 196.1l.4 177.3c.1 35.4-28.6 64.1-64 64.1l-320.4 0c-35.3 0-64-28.6-64-64L64 270.5zM176.1 433.6c.1 .5 .1 1.1 .2 1.6c.2 1 .5 2 .9 3c.8 1.9 2 3.6 3.4 5.1c2.9 2.9 6.9 4.7 11.3 4.7l192 0c8.8 0 16-7.2 16-16c0-44.2-35.8-80-80-80l-64 0c-22.1 0-42.1 9-56.6 23.4c-7.2 7.2-13.1 15.9-17.1 25.4c-2 4.8-3.6 9.8-4.7 15c-.5 2.6-.9 5.3-1.2 7.9c-.1 1.3-.2 2.7-.3 4.1c-.1 1.4-.1 2.7-.1 4.1c0 .6 0 1.1 .1 1.6zm48.2-184.2c-.1 1.1-.2 2.2-.2 3.2c-.1 1.1-.1 2.2-.1 3.3s0 2.2 .1 3.3c.1 1.1 .1 2.2 .2 3.2c.2 2.1 .5 4.3 1 6.4c.9 4.2 2.1 8.2 3.7 12c3.2 7.7 7.9 14.6 13.7 20.3C254.3 312.8 270.3 320 288 320c35.3 0 64-28.7 64-64s-28.7-64-64-64c-17.7 0-33.7 7.2-45.3 18.7c-5.8 5.8-10.5 12.7-13.7 20.3c-1.6 3.8-2.9 7.8-3.7 12c-.4 2.1-.8 4.2-1 6.4z\"/><path fill=\"currentColor\"class=\"fa-primary\" d=\"M309.1 7.9C297-2.6 279-2.6 266.9 7.9l-256 224c-13.3 11.6-14.6 31.9-3 45.2s31.9 14.6 45.2 3L288 74.5 522.9 280.1c13.3 11.6 33.5 10.3 45.2-3s10.3-33.5-3-45.2L512 185.5 512 64c0-17.7-14.3-32-32-32l-32 0c-17.7 0-32 14.3-32 32l0 37.5L309.1 7.9zM352 256a64 64 0 1 0 -128 0 64 64 0 1 0 128 0zm-96 96c-44.2 0-80 35.8-80 80c0 8.8 7.2 16 16 16l192 0c8.8 0 16-7.2 16-16c0-44.2-35.8-80-80-80l-64 0z\"/></svg></span> <span class=\"sign-out-icon\" style=\"display:none\"><svg style=\"width: 24px; height: 24px; \" class=\"inline-block \"  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\"opacity=\"0.4\" d=\"M0 256C0 397.4 35.8 512 80 512c25.3 0 47.8-37.5 62.5-96L128 416c-.5 0-1.1 0-1.6 0c-.6 0-1.1-.1-1.6-.1c-1.1-.1-2.1-.3-3.2-.5c-2.1-.4-4.1-1.1-6-1.9c-3.8-1.6-7.3-4-10.2-6.9s-5.2-6.3-6.9-10.2c-.8-1.9-1.4-3.9-1.9-6c-.2-1.1-.4-2.3-.5-3.5c0-.3 0-.6-.1-.8c0-.2 0-.4 0-.7c0-.4 0-.7 0-.7c0-.5 0-.7 0-.9c0-.3 0-.6 0-.9c0 0 0-.3 0-.7c0-.2 0-.4 0-.7c0-.2 0-.4 .1-.8c0-.3 .1-.6 .1-.9c0-.2 .1-.4 .1-.7c.1-.8 .2-1.2 .3-1.7c.5-2.2 1.1-4.2 1.9-6.1c1.6-3.8 4-7.3 6.9-10.2c5.8-5.8 13.8-9.4 22.6-9.4l26.2 0c3.8-29.6 5.8-62.1 5.8-96c0-18.3-.6-36.1-1.7-53.4c-1.7-1.2-3.4-2.5-4.9-4c-.8-.8-1.6-1.6-2.2-2.5s-1.3-1.7-1.9-2.6c-1.2-1.8-2.1-3.6-2.9-5.5s-1.4-3.9-1.8-5.9c-.2-1-.3-2-.4-3s-.1-2-.2-3c0-8.3 3.1-16.5 9.4-22.8C141 63.1 112.8 0 80 0C35.8 0 0 114.6 0 256z\"/><path fill=\"currentColor\"class=\"fa-primary\" d=\"M416 48a48 48 0 1 0 -96 0 48 48 0 1 0 96 0zM221.7 175.5c9.9-9.9 23.4-15.5 37.5-15.5c1.9 0 3.8 .1 5.6 .3L233.6 254c-9.3 28 1.7 58.8 26.8 74.5l86.2 53.9-25.4 88.8c-4.9 17 5 34.7 22 39.6s34.7-5 39.6-22l28.7-100.4c5.9-20.6-2.6-42.6-20.7-53.9L334 299l30.9-82.4 5.1 12.3C385 264.7 419.9 288 458.7 288l21.3 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-21.3 0c-12.9 0-24.6-7.8-29.5-19.7l-6.3-15c-14.6-35.1-44.1-61.9-80.5-73.1l-48.7-15c-11.1-3.4-22.7-5.2-34.4-5.2c-31 0-60.8 12.3-82.7 34.3l-23.1 23.1c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l23.1-23.1zM187.2 352L128 352c-17.7 0-32 14.3-32 32s14.3 32 32 32l69.6 0c19 0 36.2-11.2 43.9-28.5L253 361.6l-9.5-6c-17.5-10.9-30.5-26.8-37.9-44.9L187.2 352z\"/></svg></span> <span class=\"caption d-none d-xl-inline-block\">Sign in</span></a>\n                </li>\n                        <li class=\"nav-menu\">\n                <button class=\"navigation-toggle\"><i class=\"fa fa-fw fa-bars\" aria-hidden=\"true\"></i></button>\n            </li>\n        </ul>\n    </div>\n</nav>\n\n    <footer class=\"footer center-content\">\n    <div class=\"footer-container center-content-container\">\n        <div class=\"footer-inner container-fluid\">\n            <div class=\"row\">\n                <div class=\"col-8 col-md-10\">\n                    <ul class=\"footer-list footer-list-horizontal\">\n                        <li><a href=\"/\">Home</a></li>\n                        <li><a href=\"/refactoring\">Refactoring</a></li>\n                        <li><a href=\"/design-patterns\">Design Patterns</a></li>\n                        <li><a href=\"/store\">Premium Content</a></li>\n                        <li><a href=\"https://gitbybit.com/\">Git Course</a></li>\n                        <li><a href=\"https://refactoring.userecho.com/\" rel=\"nofollow\" class=\"userecho-public\">Forum</a></li>\n                        <li><a href=\"https://refactoring.userecho.com/\" rel=\"nofollow\" class=\"userecho-private\">Contact us</a></li>\n                    </ul>\n                </div>\n                <div class=\"col-4 col-md-2\">\n                    <ul class=\"footer-list footer-list-iconic footer-list-right\">\n                                                    <li><a href=\"https://www.facebook.com/refactoring.guru\"><i class=\"fa fa-facebook-official\"></i></a></li>\n                                                <li><a href=\"/sendy/form\" rel=\"nofollow\"><i class=\"fa fa-envelope\" aria-hidden=\"true\"></i></a></li>\n                        <li><a href=\"https://github.com/RefactoringGuru\"><i class=\"fa fa-github-circled\"></i></a></li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"footer-second\">\n        <div class=\"footer-container center-content-container\">\n            <div class=\"footer-inner container-fluid\">\n                <div class=\"row\">\n                    <div class=\"col-12 col-sm-6\">\n                        <i class=\"fa fa-fw fa-copyright\"></i> 2014-2025 <a href=\"/\">Refactoring.Guru</a>. <span style=\"white-space: nowrap\">All rights reserved.</span><br>\n                        <i class=\"fa fa-fw fa-image\"></i> Illustrations by <a href=\"http://zhart.us/\" rel=\"nofollow\"><span style=\"white-space: nowrap\">Dmitry Zhart</span></a>\n                    </div>\n                    <div class=\"footer-links-right col-12 col-sm-6 mt-4 mt-sm-0\">\n                        <ul class=\"footer-list footer-list-horizontal footer-list-right\">\n                            <li><a href=\"/terms\"><span>Terms &amp; Conditions</span></a>\n                            </li>\n                            <li><a href=\"/privacy-policy\"><span>Privacy Policy</span></a>\n                            </li>\n                            <li><a href=\"/content-usage-policy\"><span>Content Usage Policy</span></a>\n                            </li>\n                            <li><a href=\"/site-about\"><span>About us</span></a>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n                                    <div class=\"row\">\n                        <div class=\"col-12 col-sm-4\">\n                            <div class=\"mt-4\">\n                                                                    <b>Ukrainian office:</b><br>\n                                    <object class=\"fa-fw\" style=\"height: 0.8rem; filter: invert(50%);\"  type=\"image/svg+xml\" data=\"/images/content-public/icons/fa-building.svg?id=afddb5806968b0a9acfc1df75a181234\">\n                                        <img class=\"fa-fw\" style=\"height: 0.8rem;\" src=\"/images/content-public/icons/fa-building.svg?id=afddb5806968b0a9acfc1df75a181234\" alt=\"Organization address\"/>\n                                    </object> FOP Olga Skobeleva<br>\n                                    <svg style=\"width: 16px; height: 16px; margin-right: 1px; fill: currentColor;\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\"><path d=\"M352 192c0-88.4-71.6-160-160-160S32 103.6 32 192c0 15.6 5.4 37 16.6 63.4c10.9 25.9 26.2 54 43.6 82.1c34.1 55.3 74.4 108.2 99.9 140c25.4-31.8 65.8-84.7 99.9-140c17.3-28.1 32.7-56.3 43.6-82.1C346.6 229 352 207.6 352 192zm32 0c0 87.4-117 243-168.3 307.2c-12.3 15.3-35.1 15.3-47.4 0C117 435 0 279.4 0 192C0 86 86 0 192 0S384 86 384 192zm-240 0a48 48 0 1 0 96 0 48 48 0 1 0 -96 0zm48 80a80 80 0 1 1 0-160 80 80 0 1 1 0 160z\"/></svg> Abolmasova 7<br>\n                                    <span style=\"margin-left: 21px;\">Kyiv, Ukraine, 02002</span><br>\n                                    <i class=\"fa fa-fw fa-envelope\"></i>  Email: support@refactoring.guru\n                                \n                            </div>\n                        </div>\n                        <div class=\"col-12 col-sm-4\">\n                            <div class=\"mt-4\">\n                                <b>Spanish office:</b><br>\n                                <object class=\"fa-fw\" style=\"height: 0.8rem; filter: invert(50%);\"  type=\"image/svg+xml\" data=\"/images/content-public/icons/fa-building.svg?id=afddb5806968b0a9acfc1df75a181234\">\n                                    <img class=\"fa-fw\" style=\"height: 0.8rem;\" src=\"/images/content-public/icons/fa-building.svg?id=afddb5806968b0a9acfc1df75a181234\" alt=\"Organization address\"/>\n                                </object> Oleksandr Shvets<br>\n                                <svg style=\"width: 16px; height: 16px; margin-right: 1px; fill: currentColor;\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\"><path d=\"M352 192c0-88.4-71.6-160-160-160S32 103.6 32 192c0 15.6 5.4 37 16.6 63.4c10.9 25.9 26.2 54 43.6 82.1c34.1 55.3 74.4 108.2 99.9 140c25.4-31.8 65.8-84.7 99.9-140c17.3-28.1 32.7-56.3 43.6-82.1C346.6 229 352 207.6 352 192zm32 0c0 87.4-117 243-168.3 307.2c-12.3 15.3-35.1 15.3-47.4 0C117 435 0 279.4 0 192C0 86 86 0 192 0S384 86 384 192zm-240 0a48 48 0 1 0 96 0 48 48 0 1 0 -96 0zm48 80a80 80 0 1 1 0-160 80 80 0 1 1 0 160z\"/></svg> Avda Pamplona 64<br>\n                                <span style=\"margin-left: 21px;\">Pamplona, Spain, 31009</span><br>\n                                <i class=\"fa fa-fw fa-envelope\"></i>  Email: support@refactoring.guru\n                            </div>\n                        </div>\n                    </div>\n                            </div>\n        </div>\n    </div>\n</footer>\n\n</div>\n\n\n    <script defer>\n    var CodeMirrorScripts = [\"/js/codemirror.min.js?id=f7ae4adf14bd00338caf8e95da733cc9\"];\n</script>\n\n\n\n    <script>window.loadContent = true;window.loadCart = true;</script>\n</body>\n</html>\n"},
{"title": null, "url": "https://refactoring.guru/design-patterns/visitor", "raw_html": "<!DOCTYPE html>\n<html lang=\"en\" dir=\"ltr\">\n<head prefix=\"og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# website: http://ogp.me/ns/website#\">\n    <meta charset=\"utf-8\">\n    <title>Visitor</title>\n\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n    <meta name=\"theme-color\" content=\"#A2E2FD\" />\n\n            <style>\n        .buy-widget-excl-local-taxes {\n            display: none;\n        }\n    </style>\n    \n    <link rel=\"preload\" href=\"/fonts/PTSans/ptsans-regular_en.woff2?1\" as=\"font\" type=\"font/woff2\" crossorigin>\n    <link rel=\"preload\" href=\"/fonts/PTSans/ptsans-bold_en.woff2?1\" as=\"font\" type=\"font/woff2\" crossorigin>\n        <link rel=\"preload\" href=\"/fonts/fontello/fontawesome.woff2?15843843\" as=\"font\" type=\"font/woff2\" crossorigin>\n    <link rel=\"preload\" href=\"/fonts/FiraCode/woff2/FiraCode-Regular_latin.woff2\" as=\"font\" type=\"font/woff2\" crossorigin>\n        <link rel=\"preconnect dns-prefetch\" href=\"https://cdn.paddle.com\">\n    <link rel=\"preconnect dns-prefetch\" href=\"https://www.googletagmanager.com\">\n\n    <link rel=\"alternate\" href=\"https://refactoring.guru/design-patterns/visitor\" hreflang=\"x-default\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/es/design-patterns/visitor\" hreflang=\"es\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/fr/design-patterns/visitor\" hreflang=\"fr\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/ja/design-patterns/visitor\" hreflang=\"ja\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/ko/design-patterns/visitor\" hreflang=\"ko\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/pl/design-patterns/visitor\" hreflang=\"pl\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/pt-br/design-patterns/visitor\" hreflang=\"pt-br\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/ru/design-patterns/visitor\" hreflang=\"ru\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/uk/design-patterns/visitor\" hreflang=\"uk\"/>\n    <link rel=\"alternate\" href=\"https://refactoringguru.cn/design-patterns/visitor\" hreflang=\"zh\"/>\n\n    <meta name=\"description\" content=\"Visitor is a behavioral design pattern that lets you separate algorithms from the objects on which they operate.\">\n\n    <link rel=\"canonical\" href=\"https://refactoring.guru/design-patterns/visitor\"/>\n\n    <link rel=\"icon\" type=\"image/x-icon\" href=\"/favicon.png\"/>\n\n        <meta property=\"fb:app_id\" content=\"666819623386327\"/>\n        <meta property=\"og:type\" content=\"website\"/>\n        <meta property=\"og:image\" content=\"https://refactoring.guru/images/refactoring/social/facebook-share-preview.png?id=dbf9e98269595be86eb668f365be6868\"/>\n    \n                    <link rel=\"stylesheet\" href=\"/css/public-packed.min.css?id=aaefab4da343b914b8dda9973604a9e8\">\n        <style type=\"text/css\">\n                    @font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_cyrillic-ext.woff2?1) format(\"woff2\");unicode-range:U+0460-052F,U+1C80-1C88,U+20B4,U+2DE0-2DFF,U+A640-A69F,U+FE2E-FE2F}@font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_cyrillic.woff2?1) format(\"woff2\");unicode-range:U+0400-045F,U+0490-0491,U+04B0-04B1,U+2116}@font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_latin-ext.woff2?1) format(\"woff2\");unicode-range:U+0100-024F,U+0259,U+1E00-1EFF,U+2020,U+20A0-20AB,U+20AD-20CF,U+2113,U+2C60-2C7F,U+A720-A7FF}@font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_latin.woff2?1) format(\"woff2\");unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}@font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_en.woff2?1) format(\"woff2\");unicode-range:U+0-FF,U+131,U+142,U+152,U+153,U+2BB,U+2BC,U+2C6,U+2DA,U+2DC,U+420,U+423,U+430,U+438-43A,U+43D,U+440,U+441,U+443,U+44C,U+457,U+2000-206F,U+2074,U+20AA-20AC,U+20B4,U+20B9,U+20BA,U+20BD,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_cyrillic-ext.woff2?1) format(\"woff2\");unicode-range:U+0460-052F,U+1C80-1C88,U+20B4,U+2DE0-2DFF,U+A640-A69F,U+FE2E-FE2F}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_cyrillic.woff2?1) format(\"woff2\");unicode-range:U+0400-045F,U+0490-0491,U+04B0-04B1,U+2116}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_latin-ext.woff2?1) format(\"woff2\");unicode-range:U+0100-024F,U+0259,U+1E00-1EFF,U+2020,U+20A0-20AB,U+20AD-20CF,U+2113,U+2C60-2C7F,U+A720-A7FF}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_latin.woff2?1) format(\"woff2\");unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_en.woff2?1) format(\"woff2\");unicode-range:U+0-FF,U+131,U+142,U+152,U+153,U+2BB,U+2BC,U+2C6,U+2DA,U+2DC,U+420,U+423,U+430,U+438-43A,U+43D,U+440,U+441,U+443,U+44C,U+457,U+2000-206F,U+2074,U+20AA-20AC,U+20B4,U+20B9,U+20BA,U+20BD,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}\n            </style>\n\n    \n            <script defer src=\"/js/public.min.js?id=1f19fe18ffe0fc844ede8a0f2ee64202\"></script>\n        <script defer src=\"/js/checkout.min.js?id=b4da9c5bd8b1cf504447c07ae8b7cd44\"></script>\n            <script defer src=\"https://cdn.paddle.com/paddle/v2/paddle.js\"></script>\n    <script async src=\"https://www.googletagmanager.com/gtag/js?id=G-SR8Y3GYQYC\"></script>\n\n    <script type=\"application/ld+json\">\n        {\"@context\": \"http://schema.org\", \"@graph\": [{\"@type\":\"Person\",\"@id\":\"https://refactoring.guru/#founder\",\"name\":\"Alexander Shvets\"},{\"@type\":\"Organization\",\"@id\":\"https://refactoring.guru/#organization\",\"name\":\"Refactoring.Guru\",\"description\":\"Refactoring.Guru makes it easy for you to discover everything you need to know about refactoring, design patterns, SOLID principles, and other smart programming topics.\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https://refactoring.guru/#organizationlogo\",\"url\":\"https://refactoring.guru/images/content-public/logos/logo-plain.png\",\"caption\":\"Refactoring.Guru\"},\"logo\":{\"@id\":\"https://refactoring.guru/#organizationlogo\"},\"founder\":{\"@id\":\"https://refactoring.guru/#founder\"},\"sameAs\":[\"https://www.facebook.com/refactoring.guru\",\"https://twitter.com/RefactoringGuru\",\"https://github.com/RefactoringGuru\"]},{\"@type\":\"WebSite\",\"@id\":\"https://refactoring.guru/#website\",\"url\":\"https://refactoring.guru/\",\"name\":\"Refactoring.Guru\",\"description\":\"Refactoring.Guru makes it easy for you to discover everything you need to know about refactoring, design patterns, SOLID principles, and other smart programming topics.\",\"author\":{\"@id\":\"https://refactoring.guru/#founder\"},\"publisher\":{\"@id\":\"https://refactoring.guru/#organization\"},\"copyrightYear\":2014},{\"@type\":\"WebPage\",\"@id\":\"https://refactoring.guru/design-patterns/visitor#webpage\",\"url\":\"https://refactoring.guru/design-patterns/visitor\",\"inLanguage\":\"en\",\"name\":\"Visitor\",\"description\":\"Visitor is a behavioral design pattern that lets you separate algorithms from the objects on which they operate.\",\"isPartOf\":{\"@id\":\"https://refactoring.guru#website\"},\"breadcrumb\":{\"@id\":\"https://refactoring.guru/design-patterns/visitor#breadcrumb\"},\"primaryImageOfPage\":{\"@id\":\"https://refactoring.guru/design-patterns/visitor#primaryimage\"},\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https://refactoring.guru/design-patterns/visitor#primaryimage\",\"url\":\"https://refactoring.guru/images/patterns/content/visitor/visitor-3x.png\",\"width\":1920,\"height\":1200}},{\"@type\":\"Article\",\"@id\":\"https://refactoring.guru/design-patterns/visitor#article\",\"isPartOf\":{\"@id\":\"https://refactoring.guru/design-patterns/visitor#webpage\"},\"mainEntityOfPage\":{\"@id\":\"https://refactoring.guru/design-patterns/visitor#webpage\"},\"author\":{\"@id\":\"https://refactoring.guru#founder\"},\"publisher\":{\"@id\":\"https://refactoring.guru#organization\"},\"headline\":\"Visitor\",\"datePublished\":\"2024-01-01\",\"dateModified\":\"2025-01-01\",\"articleSection\":\"Design Patterns\",\"image\":{\"@id\":\"https://refactoring.guru/design-patterns/visitor#primaryimage\"}},{\"@type\":\"BreadcrumbList\",\"@id\":\"https://refactoring.guru/design-patterns/visitor#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https://refactoring.guru\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Design Patterns\",\"item\":\"https://refactoring.guru/design-patterns\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"Behavioral Patterns\",\"item\":\"https://refactoring.guru/design-patterns/behavioral-patterns\"}]}] }\n    </script>\n\n    <script>\nfunction extend(){var extended={};var deep=false;var i=0;var length=arguments[\"length\"];if(Object[\"prototype\"][\"toString\"][\"call\"](arguments[0])=== '[object Boolean]'){deep= arguments[0];i++};var merge=function(obj){for(var prop in obj){if(Object[\"prototype\"][\"hasOwnProperty\"][\"call\"](obj,prop)){if(deep&& Object[\"prototype\"][\"toString\"][\"call\"](obj[prop])=== '[object Object]'){extended[prop]= extend(true,extended[prop],obj[prop])}else {extended[prop]= obj[prop]}}}};for(;i< length;i++){var obj=arguments[i];merge(obj)};return extended}\nfunction defer(method) {if (window.jQuery) {method();} else {setTimeout(function() { defer(method) }, 50);}}\n</script>\n<script>\n+function(sd){sd = (typeof sd === \"string\") ? JSON.parse(atob(sd)) : sd;for(var property in sd){if(window[property]!== null&&  typeof window[property]=== 'object'){window[property]= extend(true,window[property],sd[property])}else {window[property]= sd[property]}}}(\"eyJsb2NhbGUiOiJlbiIsImxvY2FsZV9wcmVmaXgiOiIiLCJsb2NhbGl6ZWRfdXJsX3ByZWZpeCI6Imh0dHBzOlwvXC9yZWZhY3RvcmluZy5ndXJ1XC8iLCJ1cmxfcHJlZml4IjoiaHR0cHM6XC9cL3JlZmFjdG9yaW5nLmd1cnVcLyIsImxvY2FsaXplZF91cmxfcHJlZml4X20iOiJodHRwczpcL1wvcmVmYWN0b3JpbmcuZ3VydVwvIiwidXJsX3ByZWZpeF9tIjoiaHR0cHM6XC9cL3JlZmFjdG9yaW5nLmd1cnVcLyIsInVzZXJfZWNob19hbGlhcyI6InJlZmFjdG9yaW5nIiwidXNlcl9lY2hvX2hvc3QiOiJmZWVkYmFjay5yZWZhY3RvcmluZy5ndXJ1IiwidXNlcl9lY2hvX3ByaXZhdGVfZm9ydW0iOiIyIiwidXNlcl9lY2hvX2xvY2FsZSI6ImVuIiwidXNlcl9lY2hvX3B1YmxpY19mb3J1bSI6IjMiLCJ1c2VyX2VjaG9fcHVibGljX2ZvcnVtX3VybCI6Imh0dHBzOlwvXC9mZWVkYmFjay5yZWZhY3RvcmluZy5ndXJ1XC8iLCJ1c2VyX2VjaG9fc3NvX3Rva2VuIjoiIn0=\");\n</script>\n\n<script>\n    window.dataLayer = window.dataLayer || [];\n    function gtag(){dataLayer.push(arguments);}\n    gtag('js', new Date());\n            gtag('set', 'linker', {'domains': [\"refactoring.guru,refactoringguru.cn\"]});\n        gtag('config', 'G-SR8Y3GYQYC', {\n        // Disable default page view, because we're going to report them on our own.\n        // This is done to report traffic on localized domains as part of the main website traffic\n        // See the Chinese overrides below.\n        send_page_view: false,\n    });\n</script>\n\n<script>\n    (() => {\n        // On first page view after returning from social network, we need to send the social login event.\n        (function detectSocialLogin() {\n            let getCookie = function (name) {\n                var nameEQ = name + \"=\";\n                var ca = document.cookie.split(';');\n                for (var i = 0; i < ca.length; i++) {\n                    var c = ca[i];\n                    while (c.charAt(0) == ' ') c = c.substring(1, c.length);\n                    if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);\n                }\n                return null;\n            };\n            window.social_login_provider = window.social_login_provider || getCookie('social_login_provider');\n            if (window.social_login_provider) {\n                gtag('set', {referrer: null});\n                gtag('event', 'login', {\"method\": window.social_login_provider});\n                // Delete cookie.\n                document.cookie = 'social_login_provider=; Path=/; Max-Age=-99999999;';\n            }\n        })();\n\n        function trackPageView(location, title) {\n            location = location || document.location.href;\n            title = title || document.title;\n\n            // This is show on https://refactoringguru.cn/ and alike.\n            if (typeof window.analytics_path_prefix === 'string') {\n                if (/^(https?:\\/\\/[^\\/]+?)\\/$/.test(location)) {\n                    location = location.replace(/(https?:\\/\\/[^\\/]+?)\\//, '$1' + window.analytics_path_prefix);\n                } else {\n                    location = location.replace(/(https?:\\/\\/[^\\/]+?)\\//, '$1' + window.analytics_path_prefix + '/');\n                }\n                gtag('set', {\n                    'page_location': location\n                });\n            }\n\n            // This is show on https://refactoring.guru/zh/login and alike.\n            if (typeof window.analytics_location_prefix === 'string') {\n                location = location.replace(/(https?:\\/\\/[^\\/]+?)\\//, window.analytics_location_prefix);\n                gtag('set', {\n                    'page_location': location\n                });\n            }\n\n            gtag('event', 'page_view', {\n                page_location: location,\n                page_title: title,\n                locale: window.locale ?? 'en'\n            });\n        }\n\n        if (window.loadContent) {\n            window.onPageLoad = window.onPageLoad || [];\n            window.onPageLoad.push({\n                func: function (context) {\n                    trackPageView(window.location.origin + context.canonicalPath, context.title);\n                },\n                afterAll: true,\n            });\n        }\n        else {\n            trackPageView();\n        }\n    })();\n</script>\n\n\n</head>\n<body class=\"locale-en   announcement   visitor\" data-body_class=\"visitor\">\n\n<div class=\"body-holder\">\n\n            <div class=\"announcement-block announcement-block-summer prom\" data-id=\"DIDP-announcement\" data-creative-id=\"en\" data-position=\"top\">\n        <span class=\"beach-and-sea\">\n            <span class=\"a1\"></span>\n            <span class=\"a2\"><span class=\"wave\"></span></span>\n            <span class=\"yacht\"></span>\n        </span>\n        <a href=\"/store\">\n            <img src=\"/images/content-public/ann/summer/sunbed.svg?id=b1e7314a63715a13870a6bd1a43613f7\" loading=\"lazy\" style=\"width: 32px; height:32px;vertical-align: middle; scale: -1 1 1;\">\n            <span class=\"announcement-link-text\">Summer SALE</span>\n            <img src=\"/images/content-public/ann/summer/reading-book.svg?id=36006ea720df8c171968cf613e8ea164\" loading=\"lazy\" style=\"width: 32px; height:32px;vertical-align: middle;\">\n        </a>\n    </div>\n\n    \n    <div class=\"cart-placeholder\">\n    <div class=\"cart-block-container\" style=\"display:none\">\n        <div class=\"cart-block btn-group\">\n            <a href=\"#checkout\" class=\"btn cart open-checkout\">\n                <span class=\"cart-text\"></span>&nbsp;<strong class=\"cart-total font-money\"></strong>\n            </a><a href=\"#checkout\" class=\"btn btn-secondary checkout open-checkout\"><i class=\"fa fa-shopping-cart\" aria-hidden=\"true\"></i> <span class=\"btn-text-span d-none d-sm-inline-block d-lg-none d-hg-inline-block\"></span></a>\n        </div>\n    </div>\n</div>\n    <main role=\"main\" class=\"main-content top-content center-content \" data-page_class=\"\">\n        <div class=\"main-content-container center-content-container\">\n                        <div class=\"pattern page text\">\n<article>\n    <div class=\"breadcrumb\">\n                                    <a class=\"home\" href=\"/\"><i class=\"fa fa-home\" aria-hidden=\"true\"></i></a>\n                                                / <a class=\"type\" href=\"/design-patterns\">Design Patterns</a>\n                                                / <a class=\"type\" href=\"/design-patterns/behavioral-patterns\">Behavioral Patterns</a>\n                        </div>\n    <h1 class=\"title\">Visitor</h1>\n\n    <script type=\"text/javascript\">\n        // Shorten examples titles for users.\n        var h1 = document.getElementsByTagName(\"H1\")[0];\n        if (h1.offsetHeight > 160) {\n            h1.className += ' smaller';\n        }\n\n        // Small beautification for pattern examples.\n        var title = h1.innerHTML;\n        title = title.replace(/^(Java|C\\+\\+|C#|PHP|Python|Ruby|Delphi): (.*)$/, '<strong>$1:</strong> $2');\n        h1.innerHTML = title;\n    </script>\n\n    \n    \n\n    <div class=\"section intent\">\n<h2 id=\"intent\"><i class=\"fa fa-flip-horizontal fa-comment-alt-dots\" aria-hidden=\"true\"></i> Intent</h2>\n<p><strong>Visitor</strong> is a behavioral design pattern that lets you separate algorithms from the objects on which they operate.</p>\n<figure class=\"image\"><img src=\"/images/patterns/content/visitor/visitor.png?id=f36d100188340db7a18854ef7916f972\" alt=\"Visitor Design Pattern\" srcset=\"/images/patterns/content/visitor/visitor.png?id=f36d100188340db7a18854ef7916f972 640w,/images/patterns/content/visitor/visitor-1.5x.png?id=751e251363b632b20df856d72d02ee72 960w,/images/patterns/content/visitor/visitor-2x.png?id=2c5d9ab3046d782c19809d3b80650d65 1280w\" sizes=\"(max-width: 720px) 100vw, 640px\" width=\"640\" style=\"aspect-ratio: 1.6;\" fetchpriority=\"high\" /></figure>\n</div>\n<div class=\"section problem\">\n<h2 id=\"problem\"><i class=\"fa fa-frown\" aria-hidden=\"true\"></i> Problem</h2>\n<p>Imagine that your team develops an app which works with geographic information structured as one colossal graph. Each node of the graph may represent a complex entity such as a city, but also more granular things like industries, sightseeing areas, etc. The nodes are connected with others if there’s a road between the real objects that they represent. Under the hood, each node type is represented by its own class, while each specific node is an object.</p>\n<figure class=\"image\"><img src=\"/images/patterns/diagrams/visitor/problem1.png?id=e7076532da1e936f3519c63270da8454\" alt=\"Exporting the graph into XML\" srcset=\"/images/patterns/diagrams/visitor/problem1.png?id=e7076532da1e936f3519c63270da8454 560w,/images/patterns/diagrams/visitor/problem1-1.5x.png?id=250216d3458c38e9855eda96bf71251b 840w,/images/patterns/diagrams/visitor/problem1-2x.png?id=2e5d5143ac55af218754f28761bec17e 1120w\" sizes=\"(max-width: 720px) 100vw, 560px\" width=\"560\" style=\"aspect-ratio: 2.43;\" loading=\"lazy\" /><figcaption>\n<p>Exporting the graph into XML.</p>\n</figcaption></figure>\n<p>At some point, you got a task to implement exporting the graph into XML format. At first, the job seemed pretty straightforward. You planned to add an export method to each node class and then leverage recursion to go over each node of the graph, executing the export method. The solution was simple and elegant: thanks to polymorphism, you weren’t coupling the code which called the export method to concrete classes of nodes.</p>\n<p>Unfortunately, the system architect refused to allow you to alter existing node classes. He said that the code was already in production and he didn’t want to risk breaking it because of a potential bug in your changes.</p>\n<figure class=\"image\"><img src=\"/images/patterns/diagrams/visitor/problem2-en.png?id=f53c592d755890f5d027d7950b9967fc\" alt=\"The XML export method had to be added into all node classes\" srcset=\"/images/patterns/diagrams/visitor/problem2-en.png?id=f53c592d755890f5d027d7950b9967fc 500w,/images/patterns/diagrams/visitor/problem2-en-1.5x.png?id=3db8e786967e33cd0f26c785af9c918b 750w,/images/patterns/diagrams/visitor/problem2-en-2x.png?id=8a241a88057253b879e7b756023b52a1 1000w\" sizes=\"(max-width: 720px) 100vw, 500px\" width=\"500\" style=\"aspect-ratio: 1.92;\" loading=\"lazy\" /><figcaption>\n<p>The XML export method had to be added into all node classes, which bore the risk of breaking the whole application if any bugs slipped through along with the change.</p>\n</figcaption></figure>\n<p>Besides, he questioned whether it makes sense to have the XML export code within the node classes. The primary job of these classes was to work with geodata. The XML export behavior would look alien there.</p>\n<p>There was another reason for the refusal. It was highly likely that after this feature was implemented, someone from the marketing department would ask you to provide the ability to export into a different format, or request some other weird stuff. This would force you to change those precious and fragile classes again.</p>\n</div>\n<div class=\"section solution\">\n<h2 id=\"solution\"><i class=\"fa fa-smile-beam\" aria-hidden=\"true\"></i> Solution</h2>\n<p>The Visitor pattern suggests that you place the new behavior into a separate class called <em>visitor</em>, instead of trying to integrate it into existing classes. The original object that had to perform the behavior is now passed to one of the visitor’s methods as an argument, providing the method access to all necessary data contained within the object.</p>\n<p>Now, what if that behavior can be executed over objects of different classes? For example, in our case with XML export, the actual implementation will probably be a little bit different across various node classes. Thus, the visitor class may define not one, but a set of methods, each of which could take arguments of different types, like this:</p>\n<figure class=\"code\">\n<pre class=\"code\" lang=\"pseudocode\">class ExportVisitor implements Visitor is\n    method doForCity(City c) { ... }\n    method doForIndustry(Industry f) { ... }\n    method doForSightSeeing(SightSeeing ss) { ... }\n    // ...\n</pre>\n</figure>\n<p>But how exactly would we call these methods, especially when dealing with the whole graph? These methods have different signatures, so we can’t use polymorphism. To pick a proper visitor method that’s able to process a given object, we’d need to check its class. Doesn’t this sound like a nightmare?</p>\n<figure class=\"code\">\n<pre class=\"code\" lang=\"pseudocode\">foreach (Node node in graph)\n    if (node instanceof City)\n        exportVisitor.doForCity((City) node)\n    if (node instanceof Industry)\n        exportVisitor.doForIndustry((Industry) node)\n    // ...\n}\n</pre>\n</figure>\n<p>You might ask, why don’t we use method overloading? That’s when you give all methods the same name, even if they support different sets of parameters. Unfortunately, even assuming that our programming language supports it at all (as Java and C# do), it won’t help us. Since the exact class of a node object is unknown in advance, the overloading mechanism won’t be able to determine the correct method to execute. It’ll default to the method that takes an object of the base <code>Node</code> class.</p>\n<p>However, the Visitor pattern addresses this problem. It uses a technique called <a href=\"/design-patterns/visitor-double-dispatch\">Double Dispatch</a>, which helps to execute the proper method on an object without cumbersome conditionals. Instead of letting the client select a proper version of the method to call, how about we delegate this choice to objects we’re passing to the visitor as an argument? Since the objects know their own classes, they’ll be able to pick a proper method on the visitor less awkwardly. They “accept” a visitor and tell it what visiting method should be executed.</p>\n<figure class=\"code\">\n<pre class=\"code\" lang=\"pseudocode\">// Client code\nforeach (Node node in graph)\n    node.accept(exportVisitor)\n\n// City\nclass City is\n    method accept(Visitor v) is\n        v.doForCity(this)\n    // ...\n\n// Industry\nclass Industry is\n    method accept(Visitor v) is\n        v.doForIndustry(this)\n    // ...\n</pre>\n</figure>\n<p>I confess. We had to change the node classes after all. But at least the change is trivial and it lets us add further behaviors without altering the code once again.</p>\n<p>Now, if we extract a common interface for all visitors, all existing nodes can work with any visitor you introduce into the app. If you find yourself introducing a new behavior related to nodes, all you have to do is implement a new visitor class.</p>\n</div>\n<div class=\"section analogy\">\n<h2 id=\"analogy\"><i class=\"fa fa-car-side\" aria-hidden=\"true\"></i> Real-World Analogy</h2>\n<figure class=\"image\"><img src=\"/images/patterns/content/visitor/visitor-comic-1.png?id=7ee4fa8800f7c4df4e1aa3b1aca2b7f1\" alt=\"Insurance agent\" srcset=\"/images/patterns/content/visitor/visitor-comic-1.png?id=7ee4fa8800f7c4df4e1aa3b1aca2b7f1 600w,/images/patterns/content/visitor/visitor-comic-1-1.5x.png?id=c9cadd73d25cc63fce94312f3c82bfee 900w,/images/patterns/content/visitor/visitor-comic-1-2x.png?id=439032451eb49ebbcb5257f25ecee790 1200w\" sizes=\"(max-width: 720px) 100vw, 600px\" width=\"600\" style=\"aspect-ratio: 2;\" loading=\"lazy\" /><figcaption>\n<p>A good insurance agent is always ready to offer different policies to various types of organizations.</p>\n</figcaption></figure>\n<p>Imagine a seasoned insurance agent who’s eager to get new customers. He can visit every building in a neighborhood, trying to sell insurance to everyone he meets. Depending on the type of organization that occupies the building, he can offer specialized insurance policies:</p>\n<ul>\n<li>If it’s a residential building, he sells medical insurance.</li>\n<li>If it’s a bank, he sells theft insurance.</li>\n<li>If it’s a coffee shop, he sells fire and flood insurance.</li>\n</ul>\n</div>\n<div class=\"section structure-container\">\n<h2 id=\"structure\"><i class=\"fa fa-sitemap\" aria-hidden=\"true\"></i> Structure</h2>\n<div class=\"structure\">\n<div class=\"struct-image1 struct-image\">\n<figure class=\"image\"><img class=\"structure-img-non-indexed d-none d-xl-block\" src=\"/images/patterns/diagrams/visitor/structure-en.png?id=34126311c4e0d5c9fbb970595d2f1777\" alt=\"Structure of the Visitor design pattern\" srcset=\"/images/patterns/diagrams/visitor/structure-en.png?id=34126311c4e0d5c9fbb970595d2f1777 520w,/images/patterns/diagrams/visitor/structure-en-1.5x.png?id=6b25f7171bc76113633dc377b80e6811 780w,/images/patterns/diagrams/visitor/structure-en-2x.png?id=8f0367e7fdc92dbe05df3a86f2d0db45 1040w\" sizes=\"(max-width: 720px) 100vw, 520px\" width=\"520\" style=\"aspect-ratio: 0.96;\" loading=\"lazy\" /><img class=\"structure-img-indexed d-xl-none\" src=\"/images/patterns/diagrams/visitor/structure-en-indexed.png?id=5896a26c1b13364872b585022f29f29c\" alt=\"Structure of the Visitor design pattern\" srcset=\"/images/patterns/diagrams/visitor/structure-en-indexed.png?id=5896a26c1b13364872b585022f29f29c 520w,/images/patterns/diagrams/visitor/structure-en-indexed-1.5x.png?id=9f0d143e757c15cd6e16d6396721fe8e 780w,/images/patterns/diagrams/visitor/structure-en-indexed-2x.png?id=16068894aa794946000a539b5f950086 1040w\" sizes=\"(max-width: 720px) 100vw, 520px\" width=\"520\" style=\"aspect-ratio: 0.93;\" loading=\"lazy\" /></figure>\n</div>\n<ol><li class=\"struct-li1\">\n<p>The <strong>Visitor</strong> interface declares a set of visiting methods that can take concrete elements of an object structure as arguments. These methods may have the same names if the program is written in a language that supports overloading, but the type of their parameters must be different.</p>\n</li>\n<li class=\"struct-li2\">\n<p>Each <strong>Concrete Visitor</strong> implements several versions of the same behaviors, tailored for different concrete element classes.</p>\n</li>\n<li class=\"struct-li3\">\n<p>The <strong>Element</strong> interface declares a method for “accepting” visitors. This method should have one parameter declared with the type of the visitor interface.</p>\n</li>\n<li class=\"struct-li4\">\n<p>Each <strong>Concrete Element</strong> must implement the acceptance method. The purpose of this method is to redirect the call to the proper visitor’s method corresponding to the current element class. Be aware that even if a base element class implements this method, all subclasses must still override this method in their own classes and call the appropriate method on the visitor object.</p>\n</li>\n<li class=\"struct-li5\">\n<p>The <strong>Client</strong> usually represents a collection or some other complex object (for example, a <a href=\"/design-patterns/composite\">Composite</a> tree). Usually, clients aren’t aware of all the concrete element classes because they work with objects from that collection via some abstract interface.</p>\n</li></ol>\n<style structure type=\"text/css\" >\n@media (min-width: 1200px) {\n.structure {\nmargin: 0;\nwidth: auto;\nheight: 600px;\n}\n\n.struct-image1 {\nleft: 180px;\ntop: 50px;\n}\n\n.struct-li1 {\nleft: 0px;\ntop: 10px;\nwidth: 180px;\n}\n\n.struct-li2 {\nleft: 0px;\ntop: 320px;\nwidth: 180px;\n}\n\n.struct-li3 {\nleft: 700px;\ntop: 10px;\nwidth: 220px;\n}\n\n.struct-li4 {\nleft: 700px;\ntop: 180px;\nwidth: 220px;\n}\n\n.struct-li5 {\nleft: 600px;\ntop: 490px;\nwidth: 320px;\n}\n}\n\n</style>\n</div></div>\n<div class=\"section pseudocode\">\n<h2 id=\"pseudocode\"><i class=\"fa fa-hashtag\" aria-hidden=\"true\"></i> Pseudocode</h2>\n<p>In this example, the <strong>Visitor</strong> pattern adds XML export support to the class hierarchy of geometric shapes.</p>\n<figure class=\"image\"><img src=\"/images/patterns/diagrams/visitor/example.png?id=d66acd1b9096c47db17ab3bb82b54a59\" alt=\"Structure of the Visitor pattern example\" srcset=\"/images/patterns/diagrams/visitor/example.png?id=d66acd1b9096c47db17ab3bb82b54a59 560w,/images/patterns/diagrams/visitor/example-1.5x.png?id=534425a20f1128cb81f418cbee30cba8 840w,/images/patterns/diagrams/visitor/example-2x.png?id=f44438b98f13fcb50898baefad67ffff 1120w\" sizes=\"(max-width: 720px) 100vw, 560px\" width=\"560\" style=\"aspect-ratio: 1.14;\" loading=\"lazy\" /><figcaption>\n<p>Exporting various types of objects into XML format via a visitor object.</p>\n</figcaption></figure>\n<figure class=\"code\">\n<pre class=\"code\" lang=\"pseudocode\">// The element interface declares an `accept` method that takes\n// the base visitor interface as an argument.\ninterface Shape is\n    method move(x, y)\n    method draw()\n    method accept(v: Visitor)\n\n// Each concrete element class must implement the `accept`\n// method in such a way that it calls the visitor's method that\n// corresponds to the element's class.\nclass Dot implements Shape is\n    // ...\n\n    // Note that we're calling `visitDot`, which matches the\n    // current class name. This way we let the visitor know the\n    // class of the element it works with.\n    method accept(v: Visitor) is\n        v.visitDot(this)\n\nclass Circle implements Shape is\n    // ...\n    method accept(v: Visitor) is\n        v.visitCircle(this)\n\nclass Rectangle implements Shape is\n    // ...\n    method accept(v: Visitor) is\n        v.visitRectangle(this)\n\nclass CompoundShape implements Shape is\n    // ...\n    method accept(v: Visitor) is\n        v.visitCompoundShape(this)\n\n\n// The Visitor interface declares a set of visiting methods that\n// correspond to element classes. The signature of a visiting\n// method lets the visitor identify the exact class of the\n// element that it's dealing with.\ninterface Visitor is\n    method visitDot(d: Dot)\n    method visitCircle(c: Circle)\n    method visitRectangle(r: Rectangle)\n    method visitCompoundShape(cs: CompoundShape)\n\n// Concrete visitors implement several versions of the same\n// algorithm, which can work with all concrete element classes.\n//\n// You can experience the biggest benefit of the Visitor pattern\n// when using it with a complex object structure such as a\n// Composite tree. In this case, it might be helpful to store\n// some intermediate state of the algorithm while executing the\n// visitor's methods over various objects of the structure.\nclass XMLExportVisitor implements Visitor is\n    method visitDot(d: Dot) is\n        // Export the dot's ID and center coordinates.\n\n    method visitCircle(c: Circle) is\n        // Export the circle's ID, center coordinates and\n        // radius.\n\n    method visitRectangle(r: Rectangle) is\n        // Export the rectangle's ID, left-top coordinates,\n        // width and height.\n\n    method visitCompoundShape(cs: CompoundShape) is\n        // Export the shape's ID as well as the list of its\n        // children's IDs.\n\n\n// The client code can run visitor operations over any set of\n// elements without figuring out their concrete classes. The\n// accept operation directs a call to the appropriate operation\n// in the visitor object.\nclass Application is\n    field allShapes: array of Shapes\n\n    method export() is\n        exportVisitor = new XMLExportVisitor()\n\n        foreach (shape in allShapes) do\n            shape.accept(exportVisitor)\n</pre>\n</figure>\n<p>If you wonder why we need the <code>accept</code> method in this example,  my article <a href=\"/design-patterns/visitor-double-dispatch\">Visitor and Double Dispatch</a> addresses this question in detail.</p>\n</div>\n<div class=\"section applicability-container\">\n<h2 id=\"applicability\"><i class=\"fa fa-lightbulb-on\" aria-hidden=\"true\"></i> Applicability</h2>\n<div class=\"applicability\">\n<div class=\"applicability-problem\">\n<p><i class=\"fa fa-fw fa-bug\" aria-hidden=\"true\"></i> Use the Visitor when you need to perform an operation on all elements of a complex object structure (for example, an object tree).</p>\n</div><div class=\"applicability-solution\">\n<p><i class=\"fa fa-fw fa-bolt\" aria-hidden=\"true\"></i> The Visitor pattern lets you execute an operation over a set of objects with different classes by having a visitor object implement several variants of the same operation, which correspond to all target classes.</p>\n</div>\n<div class=\"applicability-problem\">\n<p><i class=\"fa fa-fw fa-bug\" aria-hidden=\"true\"></i> Use the Visitor to clean up the business logic of auxiliary behaviors.</p>\n</div><div class=\"applicability-solution\">\n<p><i class=\"fa fa-fw fa-bolt\" aria-hidden=\"true\"></i> The pattern lets you make the primary classes of your app more focused on their main jobs by extracting all other behaviors into a set of visitor classes.</p>\n</div>\n<div class=\"applicability-problem\">\n<p><i class=\"fa fa-fw fa-bug\" aria-hidden=\"true\"></i> Use the pattern when a behavior makes sense only in some classes of a class hierarchy, but not in others.</p>\n</div><div class=\"applicability-solution\">\n<p><i class=\"fa fa-fw fa-bolt\" aria-hidden=\"true\"></i> You can extract this behavior into a separate visitor class and implement only those visiting methods that accept objects of relevant classes, leaving the rest empty.</p>\n</div>\n</div></div>\n<div class=\"section checklist\">\n<h2 id=\"checklist\"><i class=\"fa fa-clipboard-list-check\" aria-hidden=\"true\"></i> How to Implement</h2>\n<ol>\n<li>\n<p>Declare the visitor interface with a set of “visiting” methods, one per each concrete element class that exists in the program.</p>\n</li>\n<li>\n<p>Declare the element interface. If you’re working with an existing element class hierarchy, add the abstract “acceptance” method to the base class of the hierarchy. This method should accept a visitor object as an argument.</p>\n</li>\n<li>\n<p>Implement the acceptance methods in all concrete element classes. These methods must simply redirect the call to a visiting method on the incoming visitor object which matches the class of the current element.</p>\n</li>\n<li>\n<p>The element classes should only work with visitors via the visitor interface. Visitors, however, must be aware of all concrete element classes, referenced as parameter types of the visiting methods.</p>\n</li>\n<li>\n<p>For each behavior that can’t be implemented inside the element hierarchy, create a new concrete visitor class and implement all of the visiting methods.</p>\n<p>You might encounter a situation where the visitor will need access to some private members of the element class. In this case, you can either make these fields or methods public, violating the element’s encapsulation, or nest the visitor class in the element class. The latter is only possible if you’re lucky to work with a programming language that supports nested classes.</p>\n</li>\n<li>\n<p>The client must create visitor objects and pass them into elements via “acceptance” methods.</p>\n</li>\n</ol>\n</div>\n<div class=\"section pros-cons\">\n<h2 id=\"pros-cons\"><i class=\"fa fa-balance-scale\" aria-hidden=\"true\"></i> Pros and Cons</h2>\n<div class=\"row\"><div class=\"col-sm-6\">\n<ul>\n<li><i class=\"fa fa-fw fa-check\" aria-hidden=\"true\"></i> <em>Open/Closed Principle</em>. You can introduce a new behavior that can work with objects of different classes without changing these classes.</li>\n<li><i class=\"fa fa-fw fa-check\" aria-hidden=\"true\"></i> <em>Single Responsibility Principle</em>. You can move multiple versions of the same behavior into the same class.</li>\n<li><i class=\"fa fa-fw fa-check\" aria-hidden=\"true\"></i> A visitor object can accumulate some useful information while working with various objects. This might be handy when you want to traverse some complex object structure, such as an object tree, and apply the visitor to each object of this structure.</li>\n</ul>\n</div><div class=\"col-sm-6\">\n<ul>\n<li><i class=\"fa fa-fw fa-times\" aria-hidden=\"true\"></i> You need to update all visitors each time a class gets added to or removed from the element hierarchy.</li>\n<li><i class=\"fa fa-fw fa-times\" aria-hidden=\"true\"></i> Visitors might lack the necessary access to the private fields and methods of the elements that they’re supposed to work with.</li>\n</ul>\n</div></div></div>\n<div class=\"section relations\">\n<h2 id=\"relations\"><i class=\"fa fa-exchange-alt\" aria-hidden=\"true\"></i> Relations with Other Patterns</h2>\n<ul>\n<li>\n<p>You can treat <a href=\"/design-patterns/visitor\">Visitor</a> as a powerful version of the <a href=\"/design-patterns/command\">Command</a> pattern. Its objects can execute operations over various objects of different classes.</p>\n</li>\n<li>\n<p>You can use <a href=\"/design-patterns/visitor\">Visitor</a> to execute an operation over an entire <a href=\"/design-patterns/composite\">Composite</a> tree.</p>\n</li>\n<li>\n<p>You can use <a href=\"/design-patterns/visitor\">Visitor</a> along with <a href=\"/design-patterns/iterator\">Iterator</a> to traverse a complex data structure and execute some operation over its elements, even if they all have different classes.</p>\n</li>\n</ul>\n</div>\n<div class=\"section implementations\">\n<h2 id=\"implementations\"><i class=\"fa fa-code\" aria-hidden=\"true\"></i> Code Examples</h2>\n<p><a href=\"/design-patterns/visitor/csharp/example\" title=\"Visitor in C#\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/csharp.svg?id=da64592defc6e86d57c39c66e9de3e58\" alt=\"Visitor in C#\" /></a>\n<a href=\"/design-patterns/visitor/cpp/example\" title=\"Visitor in C++\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/cpp.svg?id=f7782ed8b8666246bfcc3f8fefc3b858\" alt=\"Visitor in C++\" /></a>\n<a href=\"/design-patterns/visitor/go/example\" title=\"Visitor in Go\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/go.svg?id=1a89927eb99b1ea3fde7701d97970aca\" alt=\"Visitor in Go\" /></a>\n<a href=\"/design-patterns/visitor/java/example\" title=\"Visitor in Java\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/java.svg?id=e6d87e2dca08c953fe3acd1275ed4f4e\" alt=\"Visitor in Java\" /></a>\n<a href=\"/design-patterns/visitor/php/example\" title=\"Visitor in PHP\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/php.svg?id=be1906eb26b71ec1d3b93720d6156618\" alt=\"Visitor in PHP\" /></a>\n<a href=\"/design-patterns/visitor/python/example\" title=\"Visitor in Python\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/python.svg?id=6d815d43c0f7050a1151b43e51569c9f\" alt=\"Visitor in Python\" /></a>\n<a href=\"/design-patterns/visitor/ruby/example\" title=\"Visitor in Ruby\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/ruby.svg?id=b065b718c914bf8e960ef731600be1eb\" alt=\"Visitor in Ruby\" /></a>\n<a href=\"/design-patterns/visitor/rust/example\" title=\"Visitor in Rust\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/rust.svg?id=1f5698a4b5ae23fe79413511747e4a87\" alt=\"Visitor in Rust\" /></a>\n<a href=\"/design-patterns/visitor/swift/example\" title=\"Visitor in Swift\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/swift.svg?id=0b716c2d52ec3a48fbe91ac031070c1d\" alt=\"Visitor in Swift\" /></a>\n<a href=\"/design-patterns/visitor/typescript/example\" title=\"Visitor in TypeScript\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/typescript.svg?id=2239d0f16cb703540c205dd8cb0c0cb7\" alt=\"Visitor in TypeScript\" /></a></p>\n</div>\n<div class=\"section extras\">\n<h2 id=\"extras\"><i class=\"fa fa-gift\" aria-hidden=\"true\"></i> Extra Content</h2>\n<ul>\n<li>Puzzled why we can’t simply replace the Visitor pattern with method overloading? Read my article <a href=\"/design-patterns/visitor-double-dispatch\">Visitor and Double Dispatch</a> to learn about the nasty details.</li>\n</ul>\n</div>\n\n\n    <div class=\"banner-set2\" id=\"book-promo\">\n            <div class=\"prom banner-content banner-bg banner-striped banner-with-image\" data-id=\"DP: 1: Support our free website and own the eBook!\" data-creative-id=\"standard-en\" data-position=\"content_bottom\">\n                <div class=\"banner-image\">\n                    <a href=\"/design-patterns/book\">\n                        <img width=\"200\" height=\"200\" loading=\"lazy\" src=\"/images/patterns/banners/patterns-book-banner-3.png?id=7d445df13c80287beaab234b4f3b698c\" srcset=\"/images/patterns/banners/patterns-book-banner-3-2x.png?id=0cc3f77ab421d1a5c02ee46488231c3a 2x\">\n                    </a>\n                </div>\n\n                <div class=\"banner-text\">\n                    <h3 class=\"title\">Support our free website and own the eBook!</h3>\n                    <ul style=\"font-size: 14px;\">\n                        <li style=\"margin: 0;\">22 design patterns and 8 principles explained in depth.</li>\n                        <li style=\"margin: 0;\">409 well-structured, easy to read, jargon-free pages.</li>\n                        <li style=\"margin: 0;\">225 clear and helpful illustrations and diagrams.</li>\n                        <li style=\"margin: 0;\">An archive with code examples in 11 languages.</li>\n                        <li style=\"margin: 0;\">All devices supported: PDF/EPUB/MOBI/KFX formats.</li>\n                    </ul>\n                    <a class=\"btn btn-secondary\" href=\"/design-patterns/book\"><i class=\"fa fa-book\" aria-hidden=\"true\"></i> Learn more…</a>\n                </div>\n            </div>\n        </div>\n\n    </article>\n\n<nav class=\"prev-next\">\n                    <div class=\"next\">\n                <h4>Read next</h4>\n                <a rel=\"next\" href=\"/design-patterns/visitor-double-dispatch\" class=\"btn btn-primary\">Visitor and Double Dispatch&nbsp;<span class=\"fa fa-arrow-right\"></span></a>\n            </div>\n                            <div class=\"prev\">\n                <h4>Return</h4>\n                <a rel=\"prev\" href=\"/design-patterns/template-method\" class=\"btn btn-default\"><span class=\"fa fa-arrow-left\"></span>&nbsp;Template Method </a>\n            </div>\n            </nav>\n</div>\n\n<aside class=\"feature content-secondary\">\n    <div class=\"prom banner-sidebar banner-removable banner-removable-patterns\" data-id=\"DP: Sidebar\" data-creative-id=\"standard-sidebar-en\" data-position=\"sidebar\">\n        <div class=\"banner-inner\">\n            <div class=\"image3d-book-right\">\n                <div class=\"image3d-cover\" style=\"background: #0b3752;\">\n                    <a href=\"/design-patterns/book\">\n                        <img width=\"250\" height=\"375\" loading=\"lazy\" src=\"/images/patterns/book/web-cover-en.png?id=328861769fd11617674e3b8a7e2dd9e7\" srcset=\"/images/patterns/book/web-cover-en-2x.png?id=02940141c5652ed5a426d87390b16366 2x\">\n                    </a>\n                </div>\n            </div>\n            <div style=\"margin-top: 1rem\">\n                <p class=\"text-center\" >This article is a part of our eBook<br/><strong>Dive Into Design Patterns</strong>.</p>\n                <a href=\"/design-patterns/book\" class=\"btn btn-secondary btn-block\"><i class=\"fa fa-book\" aria-hidden=\"true\"></i> Learn more…</a>\n            </div>\n        </div>\n    </div>\n\n\n</aside>\n                    </div>\n    </main>\n\n    <aside class=\"sidebar main-menu\">\n    <div class=\"main-menu-controls\">\n        <button class=\"navigation-toggle\"><i class=\"fa fa-fw fa-times\"></i></button>\n    </div>\n    <div class=\"main-menu-list-wrapper nano\">\n        <div class=\"main-menu-list nano-content\">\n            <a class=\"menu-brand\" href=\"/\">\n                                    <img width=200 height=241 loading=\"lazy\" alt=\"Refactoring.Guru\" src=\"/images/content-public/logos/logo-new.png?id=97d554614702483f31e38b32e82d8e34\" srcset=\"/images/content-public/logos/logo-new-2x.png?id=3bc33294e095bab1d6fe9ae421d07837 2x\">\n                            </a>\n\n            <div class=\"menu-container\" style=\"position: relative\">\n                                <ul class=\"menu-list trail\">\n                            <li class=\"featured\">\n            <a href=\"/store\">\n                <i class=\"fa fa-fw fa-star\" aria-hidden=\"true\"></i> Premium Content\n            </a>\n    \n            <ul >\n                            <li class=\"featured menu-fs15\">\n            <a href=\"/design-patterns/book\">\n                <i class=\"fa fa-fw fa-book\" aria-hidden=\"true\"></i> Design Patterns eBook\n            </a>\n    \n    \n            </li>\n                                <li class=\"featured menu-fs15\">\n            <a href=\"/refactoring/course\">\n                <i class=\"fa fa-fw fa-graduation-cap\" aria-hidden=\"true\"></i> Refactoring Course\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring\">\n                <i class=\"fa fa-fw fa-scissors\" aria-hidden=\"true\"></i> Refactoring\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/refactoring/what-is-refactoring\">\n                What is Refactoring\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/refactoring/what-is-refactoring\">\n                Clean code\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/technical-debt\">\n                Technical debt\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/when\">\n                When to refactor\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/how-to\">\n                How to refactor\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/catalog\">\n                Catalog\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells\">\n                Code Smells\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/refactoring/smells/bloaters\">\n                Bloaters\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/long-method\">\n                Long Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/large-class\">\n                Large Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/primitive-obsession\">\n                Primitive Obsession\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/long-parameter-list\">\n                Long Parameter List\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/data-clumps\">\n                Data Clumps\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/oo-abusers\">\n                Object-Orientation Abusers\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/switch-statements\">\n                Switch Statements\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/temporary-field\">\n                Temporary Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/refused-bequest\">\n                Refused Bequest\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/alternative-classes-with-different-interfaces\">\n                Alternative Classes with Different Interfaces\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/change-preventers\">\n                Change Preventers\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/divergent-change\">\n                Divergent Change\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/shotgun-surgery\">\n                Shotgun Surgery\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/parallel-inheritance-hierarchies\">\n                Parallel Inheritance Hierarchies\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/dispensables\">\n                Dispensables\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/comments\">\n                Comments\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/duplicate-code\">\n                Duplicate Code\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/lazy-class\">\n                Lazy Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/data-class\">\n                Data Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/dead-code\">\n                Dead Code\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/speculative-generality\">\n                Speculative Generality\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/couplers\">\n                Couplers\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/feature-envy\">\n                Feature Envy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/inappropriate-intimacy\">\n                Inappropriate Intimacy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/message-chains\">\n                Message Chains\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/middle-man\">\n                Middle Man\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/other\">\n                Other Smells\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/incomplete-library-class\">\n                Incomplete Library Class\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques\">\n                Refactorings\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/refactoring/techniques/composing-methods\">\n                Composing Methods\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/extract-method\">\n                Extract Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/inline-method\">\n                Inline Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-variable\">\n                Extract Variable\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/inline-temp\">\n                Inline Temp\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-temp-with-query\">\n                Replace Temp with Query\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/split-temporary-variable\">\n                Split Temporary Variable\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-assignments-to-parameters\">\n                Remove Assignments to Parameters\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-method-with-method-object\">\n                Replace Method with Method Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/substitute-algorithm\">\n                Substitute Algorithm\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/moving-features-between-objects\">\n                Moving Features between Objects\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/move-method\">\n                Move Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/move-field\">\n                Move Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-class\">\n                Extract Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/inline-class\">\n                Inline Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/hide-delegate\">\n                Hide Delegate\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-middle-man\">\n                Remove Middle Man\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-foreign-method\">\n                Introduce Foreign Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-local-extension\">\n                Introduce Local Extension\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/organizing-data\">\n                Organizing Data\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/self-encapsulate-field\">\n                Self Encapsulate Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-data-value-with-object\">\n                Replace Data Value with Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/change-value-to-reference\">\n                Change Value to Reference\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/change-reference-to-value\">\n                Change Reference to Value\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-array-with-object\">\n                Replace Array with Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/duplicate-observed-data\">\n                Duplicate Observed Data\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/change-unidirectional-association-to-bidirectional\">\n                Change Unidirectional Association to Bidirectional\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/change-bidirectional-association-to-unidirectional\">\n                Change Bidirectional Association to Unidirectional\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-magic-number-with-symbolic-constant\">\n                Replace Magic Number with Symbolic Constant\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/encapsulate-field\">\n                Encapsulate Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/encapsulate-collection\">\n                Encapsulate Collection\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-type-code-with-class\">\n                Replace Type Code with Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-type-code-with-subclasses\">\n                Replace Type Code with Subclasses\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-type-code-with-state-strategy\">\n                Replace Type Code with State/Strategy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-subclass-with-fields\">\n                Replace Subclass with Fields\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/simplifying-conditional-expressions\">\n                Simplifying Conditional Expressions\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/decompose-conditional\">\n                Decompose Conditional\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/consolidate-conditional-expression\">\n                Consolidate Conditional Expression\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/consolidate-duplicate-conditional-fragments\">\n                Consolidate Duplicate Conditional Fragments\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-control-flag\">\n                Remove Control Flag\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-nested-conditional-with-guard-clauses\">\n                Replace Nested Conditional with Guard Clauses\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-conditional-with-polymorphism\">\n                Replace Conditional with Polymorphism\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-null-object\">\n                Introduce Null Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-assertion\">\n                Introduce Assertion\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/simplifying-method-calls\">\n                Simplifying Method Calls\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/rename-method\">\n                Rename Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/add-parameter\">\n                Add Parameter\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-parameter\">\n                Remove Parameter\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/separate-query-from-modifier\">\n                Separate Query from Modifier\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/parameterize-method\">\n                Parameterize Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-parameter-with-explicit-methods\">\n                Replace Parameter with Explicit Methods\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/preserve-whole-object\">\n                Preserve Whole Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-parameter-with-method-call\">\n                Replace Parameter with Method Call\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-parameter-object\">\n                Introduce Parameter Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-setting-method\">\n                Remove Setting Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/hide-method\">\n                Hide Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-constructor-with-factory-method\">\n                Replace Constructor with Factory Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-error-code-with-exception\">\n                Replace Error Code with Exception\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-exception-with-test\">\n                Replace Exception with Test\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/dealing-with-generalization\">\n                Dealing with Generalization\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/pull-up-field\">\n                Pull Up Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/pull-up-method\">\n                Pull Up Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/pull-up-constructor-body\">\n                Pull Up Constructor Body\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/push-down-method\">\n                Push Down Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/push-down-field\">\n                Push Down Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-subclass\">\n                Extract Subclass\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-superclass\">\n                Extract Superclass\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-interface\">\n                Extract Interface\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/collapse-hierarchy\">\n                Collapse Hierarchy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/form-template-method\">\n                Form Template Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-inheritance-with-delegation\">\n                Replace Inheritance with Delegation\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-delegation-with-inheritance\">\n                Replace Delegation with Inheritance\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"trail\">\n            <a href=\"/design-patterns\">\n                <i class=\"fa fa-fw fa-puzzle-piece\" aria-hidden=\"true\"></i> Design Patterns\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/what-is-pattern\">\n                What is a Pattern\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/what-is-pattern\">\n                What's a design pattern?\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/history\">\n                History of patterns\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/why-learn-patterns\">\n                Why should I learn patterns?\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/criticism\">\n                Criticism of patterns\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/classification\">\n                Classification of patterns\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/catalog\">\n                Catalog\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-third-level\">\n            <a href=\"/design-patterns/creational-patterns\">\n                Creational Patterns\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/factory-method\">\n                Factory Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/abstract-factory\">\n                Abstract Factory\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/builder\">\n                Builder\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/prototype\">\n                Prototype\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/singleton\">\n                Singleton\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"menu-third-level\">\n            <a href=\"/design-patterns/structural-patterns\">\n                Structural Patterns\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/adapter\">\n                Adapter\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/bridge\">\n                Bridge\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/composite\">\n                Composite\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/decorator\">\n                Decorator\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/facade\">\n                Facade\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/flyweight\">\n                Flyweight\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/proxy\">\n                Proxy\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"menu-third-level trail\">\n            <a href=\"/design-patterns/behavioral-patterns\">\n                Behavioral Patterns\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/chain-of-responsibility\">\n                Chain of Responsibility\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/command\">\n                Command\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/iterator\">\n                Iterator\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/mediator\">\n                Mediator\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/memento\">\n                Memento\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/observer\">\n                Observer\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/state\">\n                State\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/strategy\">\n                Strategy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/template-method\">\n                Template Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"trail active\">\n            <a href=\"/design-patterns/visitor\">\n                Visitor\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"menu-code-examples\">\n            <a href=\"/design-patterns/examples\">\n                Code Examples\n            </a>\n    \n            <ul >\n                            <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/csharp\">\n                C#\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/cpp\">\n                C++\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/go\">\n                Go\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/java\">\n                Java\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/php\">\n                PHP\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/python\">\n                Python\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/ruby\">\n                Ruby\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/rust\">\n                Rust\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/swift\">\n                Swift\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/typescript\">\n                TypeScript\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n                </div>\n\n            <div class=\"main-menu-aux-controls\">\n                <a href=\"https://refactoring.guru/login\" title=\"Sign in\" style=\" display: inline-flex; align-items: center; gap: 6px; \"><svg style=\"width: 16px; height: 16px; filter:drop-shadow(0 1px 1px #74261e)\" class=\"inline-block mx-0\"  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\"opacity=\"0.4\" d=\"M352.7 222.4c3.2 1 6.5 1.6 10 1.6l21.3 0c17.7 0 32 14.3 32 32s-14.3 32-32 32l-21.3 0c-.8 0-1.7 0-2.5 0c-.9 0-1.7-.1-2.5-.1c-1.7-.1-3.4-.2-5-.4C357.4 414 391.1 512 432 512c44.2 0 80-114.6 80-256S476.2 0 432 0c-40.6 0-74.2 96.9-79.3 222.4z\"/><path fill=\"currentColor\"class=\"fa-primary\" d=\"M320 48a48 48 0 1 0 -96 0 48 48 0 1 0 96 0zM125.7 175.5c9.9-9.9 23.4-15.5 37.5-15.5c1.9 0 3.8 .1 5.6 .3L137.6 254c-9.3 28 1.7 58.8 26.8 74.5l86.2 53.9-25.4 88.8c-4.9 17 5 34.7 22 39.6s34.7-5 39.6-22l28.7-100.4c5.9-20.6-2.6-42.6-20.7-53.9L238 299l30.9-82.4 5.1 12.3C289 264.7 323.9 288 362.7 288l21.3 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-21.3 0c-12.9 0-24.6-7.8-29.5-19.7l-6.3-15c-14.6-35.1-44.1-61.9-80.5-73.1l-48.7-15c-11.1-3.4-22.7-5.2-34.4-5.2c-31 0-60.8 12.3-82.7 34.3L57.4 153.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l23.1-23.1zM91.2 352L32 352c-17.7 0-32 14.3-32 32s14.3 32 32 32l69.6 0c19 0 36.2-11.2 43.9-28.5L157 361.6l-9.5-6c-17.5-10.9-30.5-26.8-37.9-44.9L91.2 352z\"/></svg> Sign in</a>\n                <a href=\"https://feedback.refactoring.guru/\" class=\"userecho-public\" rel=\"nofollow\" title=\"Contact us\"><i class=\"fa fa-fw fa-fw fa-envelope\" aria-hidden=\"true\"></i> Contact us</a>\n            </div>\n        </div>\n    </div>\n</aside>\n\n    <nav class=\"navigation\" role=\"navigation\">\n    <div class=\"navigation-container\">\n        <a class=\"navigation-brand\" href=\"/\">\n            <img alt=\"Refactoring.Guru\"\n                 src=\"/images/content-public/logos/logo-new-mobile.png?id=ea18aa9b032eaa92835ed6d472b03b4a\"\n                 srcset=\"/images/content-public/logos/logo-new-mobile-2x.png?id=7ad5648bfd86ae2e8524147a72877c64 2x\">\n        </a>\n\n        <div class=\"shop-link d-none d-lg-block\" style=\"display: none !important;\">\n            <a class=\"btn btn-md btn-primary btn-featured\" href=\"/store\"><svg style=\"width: 28px; height: 28px; fill: currentColor; display: inline-block; margin-top: -14px;\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><!--! Font Awesome Pro 6.3.0 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2023 Fonticons, Inc. --><path d=\"M356 60l60 20-60 20-20 60-20-60L256 80l60-20L336 0l20 60zM464 208l48 16-48 16-16 48-16-48-48-16 48-16 16-48 16 48zm-243.8-9.8l33 66.9 73.8 10.7 59.8 8.7-43.3 42.2-53.4 52.1 12.6 73.5L313 512l-53.5-28.1-66-34.7-66 34.7L73.9 512l10.2-59.6 12.6-73.5L43.3 326.8 0 284.6l59.8-8.7 73.8-10.7 33-66.9L193.5 144l26.8 54.2zm26.1 114.4l-25-3.6-11.2-22.6-16.7-33.9-16.7 33.9L165.6 309l-25 3.6-37.4 5.4 27.1 26.4 18.1 17.6L144 387l-6.4 37.3 33.5-17.6 22.3-11.7 22.3 11.7 33.5 17.6L242.9 387l-4.3-24.9 18.1-17.6 27.1-26.4-37.4-5.4z\"/></svg>\n                Shop Now!</a>\n        </div>\n\n        <ul class=\"navigation-menu\">\n                            <li class=\"nav-locale dropdown dropdown-locales\">\n                    <button class=\"dropdown-toggle\" id=\"dropdownLanguage\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                        <i class=\"fa fa-fw fa-globe\" aria-hidden=\"true\"></i> <span class=\"caption d-none d-lg-inline-block\">English</span>\n                    </button>\n                    <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownLanguage\">\n                                                                                                                        <a href=\"https://refactoring.guru/design-patterns/visitor\" class=\"dropdown-item locale-link active\" data-locale=\"en\" title=\"English\">English</a>\n                                                                                                                                <a href=\"https://refactoring.guru/es/design-patterns/visitor\" class=\"dropdown-item locale-link \" data-locale=\"es\" title=\"Español\">Español</a>\n                                                                                                                                <a href=\"https://refactoring.guru/fr/design-patterns/visitor\" class=\"dropdown-item locale-link \" data-locale=\"fr\" title=\"Français\">Français</a>\n                                                                                                                                <a href=\"https://refactoring.guru/ja/design-patterns/visitor\" class=\"dropdown-item locale-link \" data-locale=\"ja\" title=\"日本語\">日本語</a>\n                                                                                                                                <a href=\"https://refactoring.guru/ko/design-patterns/visitor\" class=\"dropdown-item locale-link \" data-locale=\"ko\" title=\"한국어\">한국어</a>\n                                                                                                                                <a href=\"https://refactoring.guru/pl/design-patterns/visitor\" class=\"dropdown-item locale-link \" data-locale=\"pl\" title=\"Polski\">Polski</a>\n                                                                                                                                <a href=\"https://refactoring.guru/pt-br/design-patterns/visitor\" class=\"dropdown-item locale-link \" data-locale=\"pt-br\" title=\"Português Brasileiro\">Português Brasileiro</a>\n                                                                                                                                <a href=\"https://refactoring.guru/ru/design-patterns/visitor\" class=\"dropdown-item locale-link \" data-locale=\"ru\" title=\"Русский\">Русский</a>\n                                                                                                                                <a href=\"https://refactoring.guru/uk/design-patterns/visitor\" class=\"dropdown-item locale-link \" data-locale=\"uk\" title=\"Українська\">Українська</a>\n                                                                                                                                <a href=\"https://refactoringguru.cn/design-patterns/visitor\" class=\"dropdown-item locale-link \" data-locale=\"zh\" title=\"中文\">中文</a>\ndiv>\n                </li>\n                        <li class=\"nav-contacts\">\n                <a class=\"userecho-private\" href=\"https://feedback.refactoring.guru/?show_feedback_form_private=true\" rel=\"nofollow\" title=\"Contact us\">\n                    <i class=\"fa fa-fw fa-envelope\" aria-hidden=\"true\"></i> <span class=\"caption d-none d-xl-inline-block\">Contact us</span>\n                </a>\n            </li>\n                            <li class=\"nav-user\">\n                    <a href=\"https://refactoring.guru/login\" title=\"Sign in\"><span class=\"sign-in-icon\"><svg style=\"width: 24px; height: 24px; \" class=\"inline-block \"  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\"opacity=\"0.4\" d=\"M352.7 222.4c3.2 1 6.5 1.6 10 1.6l21.3 0c17.7 0 32 14.3 32 32s-14.3 32-32 32l-21.3 0c-.8 0-1.7 0-2.5 0c-.9 0-1.7-.1-2.5-.1c-1.7-.1-3.4-.2-5-.4C357.4 414 391.1 512 432 512c44.2 0 80-114.6 80-256S476.2 0 432 0c-40.6 0-74.2 96.9-79.3 222.4z\"/><path fill=\"currentColor\"class=\"fa-primary\" d=\"M320 48a48 48 0 1 0 -96 0 48 48 0 1 0 96 0zM125.7 175.5c9.9-9.9 23.4-15.5 37.5-15.5c1.9 0 3.8 .1 5.6 .3L137.6 254c-9.3 28 1.7 58.8 26.8 74.5l86.2 53.9-25.4 88.8c-4.9 17 5 34.7 22 39.6s34.7-5 39.6-22l28.7-100.4c5.9-20.6-2.6-42.6-20.7-53.9L238 299l30.9-82.4 5.1 12.3C289 264.7 323.9 288 362.7 288l21.3 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-21.3 0c-12.9 0-24.6-7.8-29.5-19.7l-6.3-15c-14.6-35.1-44.1-61.9-80.5-73.1l-48.7-15c-11.1-3.4-22.7-5.2-34.4-5.2c-31 0-60.8 12.3-82.7 34.3L57.4 153.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l23.1-23.1zM91.2 352L32 352c-17.7 0-32 14.3-32 32s14.3 32 32 32l69.6 0c19 0 36.2-11.2 43.9-28.5L157 361.6l-9.5-6c-17.5-10.9-30.5-26.8-37.9-44.9L91.2 352z\"/></svg></span> <span class=\"account-icon\" style=\"display:none\"><svg style=\"width: 24px; height: 24px; \" class=\"inline-block \"  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 576 512\"><path fill=\"currentColor\"opacity=\"0.4\" d=\"M64 270.5l224-196c74.7 65.4 149.4 130.7 224.1 196.1l.4 177.3c.1 35.4-28.6 64.1-64 64.1l-320.4 0c-35.3 0-64-28.6-64-64L64 270.5zM176.1 433.6c.1 .5 .1 1.1 .2 1.6c.2 1 .5 2 .9 3c.8 1.9 2 3.6 3.4 5.1c2.9 2.9 6.9 4.7 11.3 4.7l192 0c8.8 0 16-7.2 16-16c0-44.2-35.8-80-80-80l-64 0c-22.1 0-42.1 9-56.6 23.4c-7.2 7.2-13.1 15.9-17.1 25.4c-2 4.8-3.6 9.8-4.7 15c-.5 2.6-.9 5.3-1.2 7.9c-.1 1.3-.2 2.7-.3 4.1c-.1 1.4-.1 2.7-.1 4.1c0 .6 0 1.1 .1 1.6zm48.2-184.2c-.1 1.1-.2 2.2-.2 3.2c-.1 1.1-.1 2.2-.1 3.3s0 2.2 .1 3.3c.1 1.1 .1 2.2 .2 3.2c.2 2.1 .5 4.3 1 6.4c.9 4.2 2.1 8.2 3.7 12c3.2 7.7 7.9 14.6 13.7 20.3C254.3 312.8 270.3 320 288 320c35.3 0 64-28.7 64-64s-28.7-64-64-64c-17.7 0-33.7 7.2-45.3 18.7c-5.8 5.8-10.5 12.7-13.7 20.3c-1.6 3.8-2.9 7.8-3.7 12c-.4 2.1-.8 4.2-1 6.4z\"/><path fill=\"currentColor\"class=\"fa-primary\" d=\"M309.1 7.9C297-2.6 279-2.6 266.9 7.9l-256 224c-13.3 11.6-14.6 31.9-3 45.2s31.9 14.6 45.2 3L288 74.5 522.9 280.1c13.3 11.6 33.5 10.3 45.2-3s10.3-33.5-3-45.2L512 185.5 512 64c0-17.7-14.3-32-32-32l-32 0c-17.7 0-32 14.3-32 32l0 37.5L309.1 7.9zM352 256a64 64 0 1 0 -128 0 64 64 0 1 0 128 0zm-96 96c-44.2 0-80 35.8-80 80c0 8.8 7.2 16 16 16l192 0c8.8 0 16-7.2 16-16c0-44.2-35.8-80-80-80l-64 0z\"/></svg></span> <span class=\"sign-out-icon\" style=\"display:none\"><svg style=\"width: 24px; height: 24px; \" class=\"inline-block \"  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\"opacity=\"0.4\" d=\"M0 256C0 397.4 35.8 512 80 512c25.3 0 47.8-37.5 62.5-96L128 416c-.5 0-1.1 0-1.6 0c-.6 0-1.1-.1-1.6-.1c-1.1-.1-2.1-.3-3.2-.5c-2.1-.4-4.1-1.1-6-1.9c-3.8-1.6-7.3-4-10.2-6.9s-5.2-6.3-6.9-10.2c-.8-1.9-1.4-3.9-1.9-6c-.2-1.1-.4-2.3-.5-3.5c0-.3 0-.6-.1-.8c0-.2 0-.4 0-.7c0-.4 0-.7 0-.7c0-.5 0-.7 0-.9c0-.3 0-.6 0-.9c0 0 0-.3 0-.7c0-.2 0-.4 0-.7c0-.2 0-.4 .1-.8c0-.3 .1-.6 .1-.9c0-.2 .1-.4 .1-.7c.1-.8 .2-1.2 .3-1.7c.5-2.2 1.1-4.2 1.9-6.1c1.6-3.8 4-7.3 6.9-10.2c5.8-5.8 13.8-9.4 22.6-9.4l26.2 0c3.8-29.6 5.8-62.1 5.8-96c0-18.3-.6-36.1-1.7-53.4c-1.7-1.2-3.4-2.5-4.9-4c-.8-.8-1.6-1.6-2.2-2.5s-1.3-1.7-1.9-2.6c-1.2-1.8-2.1-3.6-2.9-5.5s-1.4-3.9-1.8-5.9c-.2-1-.3-2-.4-3s-.1-2-.2-3c0-8.3 3.1-16.5 9.4-22.8C141 63.1 112.8 0 80 0C35.8 0 0 114.6 0 256z\"/><path fill=\"currentColor\"class=\"fa-primary\" d=\"M416 48a48 48 0 1 0 -96 0 48 48 0 1 0 96 0zM221.7 175.5c9.9-9.9 23.4-15.5 37.5-15.5c1.9 0 3.8 .1 5.6 .3L233.6 254c-9.3 28 1.7 58.8 26.8 74.5l86.2 53.9-25.4 88.8c-4.9 17 5 34.7 22 39.6s34.7-5 39.6-22l28.7-100.4c5.9-20.6-2.6-42.6-20.7-53.9L334 299l30.9-82.4 5.1 12.3C385 264.7 419.9 288 458.7 288l21.3 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-21.3 0c-12.9 0-24.6-7.8-29.5-19.7l-6.3-15c-14.6-35.1-44.1-61.9-80.5-73.1l-48.7-15c-11.1-3.4-22.7-5.2-34.4-5.2c-31 0-60.8 12.3-82.7 34.3l-23.1 23.1c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l23.1-23.1zM187.2 352L128 352c-17.7 0-32 14.3-32 32s14.3 32 32 32l69.6 0c19 0 36.2-11.2 43.9-28.5L253 361.6l-9.5-6c-17.5-10.9-30.5-26.8-37.9-44.9L187.2 352z\"/></svg></span> <span class=\"caption d-none d-xl-inline-block\">Sign in</span></a>\n                </li>\n                        <li class=\"nav-menu\">\n                <button class=\"navigation-toggle\"><i class=\"fa fa-fw fa-bars\" aria-hidden=\"true\"></i></button>\n            </li>\n        </ul>\n    </div>\n</nav>\n\n    <footer class=\"footer center-content\">\n    <div class=\"footer-container center-content-container\">\n        <div class=\"footer-inner container-fluid\">\n            <div class=\"row\">\n                <div class=\"col-8 col-md-10\">\n                    <ul class=\"footer-list footer-list-horizontal\">\n                        <li><a href=\"/\">Home</a></li>\n                        <li><a href=\"/refactoring\">Refactoring</a></li>\n                        <li><a href=\"/design-patterns\">Design Patterns</a></li>\n                        <li><a href=\"/store\">Premium Content</a></li>\n                        <li><a href=\"https://gitbybit.com/\">Git Course</a></li>\n                        <li><a href=\"https://refactoring.userecho.com/\" rel=\"nofollow\" class=\"userecho-public\">Forum</a></li>\n                        <li><a href=\"https://refactoring.userecho.com/\" rel=\"nofollow\" class=\"userecho-private\">Contact us</a></li>\n                    </ul>\n                </div>\n                <div class=\"col-4 col-md-2\">\n                    <ul class=\"footer-list footer-list-iconic footer-list-right\">\n                                                    <li><a href=\"https://www.facebook.com/refactoring.guru\"><i class=\"fa fa-facebook-official\"></i></a></li>\n                                                <li><a href=\"/sendy/form\" rel=\"nofollow\"><i class=\"fa fa-envelope\" aria-hidden=\"true\"></i></a></li>\n                        <li><a href=\"https://github.com/RefactoringGuru\"><i class=\"fa fa-github-circled\"></i></a></li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"footer-second\">\n        <div class=\"footer-container center-content-container\">\n            <div class=\"footer-inner container-fluid\">\n                <div class=\"row\">\n                    <div class=\"col-12 col-sm-6\">\n                        <i class=\"fa fa-fw fa-copyright\"></i> 2014-2025 <a href=\"/\">Refactoring.Guru</a>. <span style=\"white-space: nowrap\">All rights reserved.</span><br>\n                        <i class=\"fa fa-fw fa-image\"></i> Illustrations by <a href=\"http://zhart.us/\" rel=\"nofollow\"><span style=\"white-space: nowrap\">Dmitry Zhart</span></a>\n                    </div>\n                    <div class=\"footer-links-right col-12 col-sm-6 mt-4 mt-sm-0\">\n                        <ul class=\"footer-list footer-list-horizontal footer-list-right\">\n                            <li><a href=\"/terms\"><span>Terms &amp; Conditions</span></a>\n                            </li>\n                            <li><a href=\"/privacy-policy\"><span>Privacy Policy</span></a>\n                            </li>\n                            <li><a href=\"/content-usage-policy\"><span>Content Usage Policy</span></a>\n                            </li>\n                            <li><a href=\"/site-about\"><span>About us</span></a>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n                                    <div class=\"row\">\n                        <div class=\"col-12 col-sm-4\">\n                            <div class=\"mt-4\">\n                                                                    <b>Ukrainian office:</b><br>\n                                    <object class=\"fa-fw\" style=\"height: 0.8rem; filter: invert(50%);\"  type=\"image/svg+xml\" data=\"/images/content-public/icons/fa-building.svg?id=afddb5806968b0a9acfc1df75a181234\">\n                                        <img class=\"fa-fw\" style=\"height: 0.8rem;\" src=\"/images/content-public/icons/fa-building.svg?id=afddb5806968b0a9acfc1df75a181234\" alt=\"Organization address\"/>\n                                    </object> FOP Olga Skobeleva<br>\n                                    <svg style=\"width: 16px; height: 16px; margin-right: 1px; fill: currentColor;\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\"><path d=\"M352 192c0-88.4-71.6-160-160-160S32 103.6 32 192c0 15.6 5.4 37 16.6 63.4c10.9 25.9 26.2 54 43.6 82.1c34.1 55.3 74.4 108.2 99.9 140c25.4-31.8 65.8-84.7 99.9-140c17.3-28.1 32.7-56.3 43.6-82.1C346.6 229 352 207.6 352 192zm32 0c0 87.4-117 243-168.3 307.2c-12.3 15.3-35.1 15.3-47.4 0C117 435 0 279.4 0 192C0 86 86 0 192 0S384 86 384 192zm-240 0a48 48 0 1 0 96 0 48 48 0 1 0 -96 0zm48 80a80 80 0 1 1 0-160 80 80 0 1 1 0 160z\"/></svg> Abolmasova 7<br>\n                                    <span style=\"margin-left: 21px;\">Kyiv, Ukraine, 02002</span><br>\n                                    <i class=\"fa fa-fw fa-envelope\"></i>  Email: support@refactoring.guru\n                                \n                            </div>\n                        </div>\n                        <div class=\"col-12 col-sm-4\">\n                            <div class=\"mt-4\">\n                                <b>Spanish office:</b><br>\n                                <object class=\"fa-fw\" style=\"height: 0.8rem; filter: invert(50%);\"  type=\"image/svg+xml\" data=\"/images/content-public/icons/fa-building.svg?id=afddb5806968b0a9acfc1df75a181234\">\n                                    <img class=\"fa-fw\" style=\"height: 0.8rem;\" src=\"/images/content-public/icons/fa-building.svg?id=afddb5806968b0a9acfc1df75a181234\" alt=\"Organization address\"/>\n                                </object> Oleksandr Shvets<br>\n                                <svg style=\"width: 16px; height: 16px; margin-right: 1px; fill: currentColor;\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\"><path d=\"M352 192c0-88.4-71.6-160-160-160S32 103.6 32 192c0 15.6 5.4 37 16.6 63.4c10.9 25.9 26.2 54 43.6 82.1c34.1 55.3 74.4 108.2 99.9 140c25.4-31.8 65.8-84.7 99.9-140c17.3-28.1 32.7-56.3 43.6-82.1C346.6 229 352 207.6 352 192zm32 0c0 87.4-117 243-168.3 307.2c-12.3 15.3-35.1 15.3-47.4 0C117 435 0 279.4 0 192C0 86 86 0 192 0S384 86 384 192zm-240 0a48 48 0 1 0 96 0 48 48 0 1 0 -96 0zm48 80a80 80 0 1 1 0-160 80 80 0 1 1 0 160z\"/></svg> Avda Pamplona 64<br>\n                                <span style=\"margin-left: 21px;\">Pamplona, Spain, 31009</span><br>\n                                <i class=\"fa fa-fw fa-envelope\"></i>  Email: support@refactoring.guru\n                            </div>\n                        </div>\n                    </div>\n                            </div>\n        </div>\n    </div>\n</footer>\n\n</div>\n\n\n    <script defer>\n    var CodeMirrorScripts = [\"/js/codemirror.min.js?id=f7ae4adf14bd00338caf8e95da733cc9\"];\n</script>\n\n\n\n    <script>window.loadContent = true;window.loadCart = true;</script>\n</body>\n</html>\n"},
{"title": null, "url": "https://refactoring.guru/design-patterns/template-method", "raw_html": "<!DOCTYPE html>\n<html lang=\"en\" dir=\"ltr\">\n<head prefix=\"og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# website: http://ogp.me/ns/website#\">\n    <meta charset=\"utf-8\">\n    <title>Template Method</title>\n\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n    <meta name=\"theme-color\" content=\"#A2E2FD\" />\n\n            <style>\n        .buy-widget-excl-local-taxes {\n            display: none;\n        }\n    </style>\n    \n    <link rel=\"preload\" href=\"/fonts/PTSans/ptsans-regular_en.woff2?1\" as=\"font\" type=\"font/woff2\" crossorigin>\n    <link rel=\"preload\" href=\"/fonts/PTSans/ptsans-bold_en.woff2?1\" as=\"font\" type=\"font/woff2\" crossorigin>\n        <link rel=\"preload\" href=\"/fonts/fontello/fontawesome.woff2?15843843\" as=\"font\" type=\"font/woff2\" crossorigin>\n    <link rel=\"preload\" href=\"/fonts/FiraCode/woff2/FiraCode-Regular_latin.woff2\" as=\"font\" type=\"font/woff2\" crossorigin>\n        <link rel=\"preconnect dns-prefetch\" href=\"https://cdn.paddle.com\">\n    <link rel=\"preconnect dns-prefetch\" href=\"https://www.googletagmanager.com\">\n\n    <link rel=\"alternate\" href=\"https://refactoring.guru/design-patterns/template-method\" hreflang=\"x-default\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/es/design-patterns/template-method\" hreflang=\"es\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/fr/design-patterns/template-method\" hreflang=\"fr\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/ja/design-patterns/template-method\" hreflang=\"ja\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/ko/design-patterns/template-method\" hreflang=\"ko\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/pl/design-patterns/template-method\" hreflang=\"pl\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/pt-br/design-patterns/template-method\" hreflang=\"pt-br\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/ru/design-patterns/template-method\" hreflang=\"ru\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/uk/design-patterns/template-method\" hreflang=\"uk\"/>\n    <link rel=\"alternate\" href=\"https://refactoringguru.cn/design-patterns/template-method\" hreflang=\"zh\"/>\n\n    <meta name=\"description\" content=\"Template Method is a behavioral design pattern that defines the skeleton of an algorithm in the superclass but lets subclasses override specific steps of the algorithm without changing its structure.\">\n\n    <link rel=\"canonical\" href=\"https://refactoring.guru/design-patterns/template-method\"/>\n\n    <link rel=\"icon\" type=\"image/x-icon\" href=\"/favicon.png\"/>\n\n        <meta property=\"fb:app_id\" content=\"666819623386327\"/>\n        <meta property=\"og:type\" content=\"website\"/>\n        <meta property=\"og:image\" content=\"https://refactoring.guru/images/refactoring/social/facebook-share-preview.png?id=dbf9e98269595be86eb668f365be6868\"/>\n    \n                    <link rel=\"stylesheet\" href=\"/css/public-packed.min.css?id=aaefab4da343b914b8dda9973604a9e8\">\n        <style type=\"text/css\">\n                    @font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_cyrillic-ext.woff2?1) format(\"woff2\");unicode-range:U+0460-052F,U+1C80-1C88,U+20B4,U+2DE0-2DFF,U+A640-A69F,U+FE2E-FE2F}@font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_cyrillic.woff2?1) format(\"woff2\");unicode-range:U+0400-045F,U+0490-0491,U+04B0-04B1,U+2116}@font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_latin-ext.woff2?1) format(\"woff2\");unicode-range:U+0100-024F,U+0259,U+1E00-1EFF,U+2020,U+20A0-20AB,U+20AD-20CF,U+2113,U+2C60-2C7F,U+A720-A7FF}@font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_latin.woff2?1) format(\"woff2\");unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}@font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_en.woff2?1) format(\"woff2\");unicode-range:U+0-FF,U+131,U+142,U+152,U+153,U+2BB,U+2BC,U+2C6,U+2DA,U+2DC,U+420,U+423,U+430,U+438-43A,U+43D,U+440,U+441,U+443,U+44C,U+457,U+2000-206F,U+2074,U+20AA-20AC,U+20B4,U+20B9,U+20BA,U+20BD,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_cyrillic-ext.woff2?1) format(\"woff2\");unicode-range:U+0460-052F,U+1C80-1C88,U+20B4,U+2DE0-2DFF,U+A640-A69F,U+FE2E-FE2F}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_cyrillic.woff2?1) format(\"woff2\");unicode-range:U+0400-045F,U+0490-0491,U+04B0-04B1,U+2116}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_latin-ext.woff2?1) format(\"woff2\");unicode-range:U+0100-024F,U+0259,U+1E00-1EFF,U+2020,U+20A0-20AB,U+20AD-20CF,U+2113,U+2C60-2C7F,U+A720-A7FF}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_latin.woff2?1) format(\"woff2\");unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_en.woff2?1) format(\"woff2\");unicode-range:U+0-FF,U+131,U+142,U+152,U+153,U+2BB,U+2BC,U+2C6,U+2DA,U+2DC,U+420,U+423,U+430,U+438-43A,U+43D,U+440,U+441,U+443,U+44C,U+457,U+2000-206F,U+2074,U+20AA-20AC,U+20B4,U+20B9,U+20BA,U+20BD,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}\n            </style>\n\n    \n            <script defer src=\"/js/public.min.js?id=1f19fe18ffe0fc844ede8a0f2ee64202\"></script>\n        <script defer src=\"/js/checkout.min.js?id=b4da9c5bd8b1cf504447c07ae8b7cd44\"></script>\n            <script defer src=\"https://cdn.paddle.com/paddle/v2/paddle.js\"></script>\n    <script async src=\"https://www.googletagmanager.com/gtag/js?id=G-SR8Y3GYQYC\"></script>\n\n    <script type=\"application/ld+json\">\n        {\"@context\": \"http://schema.org\", \"@graph\": [{\"@type\":\"Person\",\"@id\":\"https://refactoring.guru/#founder\",\"name\":\"Alexander Shvets\"},{\"@type\":\"Organization\",\"@id\":\"https://refactoring.guru/#organization\",\"name\":\"Refactoring.Guru\",\"description\":\"Refactoring.Guru makes it easy for you to discover everything you need to know about refactoring, design patterns, SOLID principles, and other smart programming topics.\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https://refactoring.guru/#organizationlogo\",\"url\":\"https://refactoring.guru/images/content-public/logos/logo-plain.png\",\"caption\":\"Refactoring.Guru\"},\"logo\":{\"@id\":\"https://refactoring.guru/#organizationlogo\"},\"founder\":{\"@id\":\"https://refactoring.guru/#founder\"},\"sameAs\":[\"https://www.facebook.com/refactoring.guru\",\"https://twitter.com/RefactoringGuru\",\"https://github.com/RefactoringGuru\"]},{\"@type\":\"WebSite\",\"@id\":\"https://refactoring.guru/#website\",\"url\":\"https://refactoring.guru/\",\"name\":\"Refactoring.Guru\",\"description\":\"Refactoring.Guru makes it easy for you to discover everything you need to know about refactoring, design patterns, SOLID principles, and other smart programming topics.\",\"author\":{\"@id\":\"https://refactoring.guru/#founder\"},\"publisher\":{\"@id\":\"https://refactoring.guru/#organization\"},\"copyrightYear\":2014},{\"@type\":\"WebPage\",\"@id\":\"https://refactoring.guru/design-patterns/template-method#webpage\",\"url\":\"https://refactoring.guru/design-patterns/template-method\",\"inLanguage\":\"en\",\"name\":\"Template Method\",\"description\":\"Template Method is a behavioral design pattern that defines the skeleton of an algorithm in the superclass but lets subclasses override specific steps of the algorithm without changing its structure.\",\"isPartOf\":{\"@id\":\"https://refactoring.guru#website\"},\"breadcrumb\":{\"@id\":\"https://refactoring.guru/design-patterns/template-method#breadcrumb\"},\"primaryImageOfPage\":{\"@id\":\"https://refactoring.guru/design-patterns/template-method#primaryimage\"},\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https://refactoring.guru/design-patterns/template-method#primaryimage\",\"url\":\"https://refactoring.guru/images/patterns/content/template-method/template-method-3x.png\",\"width\":1920,\"height\":1200}},{\"@type\":\"Article\",\"@id\":\"https://refactoring.guru/design-patterns/template-method#article\",\"isPartOf\":{\"@id\":\"https://refactoring.guru/design-patterns/template-method#webpage\"},\"mainEntityOfPage\":{\"@id\":\"https://refactoring.guru/design-patterns/template-method#webpage\"},\"author\":{\"@id\":\"https://refactoring.guru#founder\"},\"publisher\":{\"@id\":\"https://refactoring.guru#organization\"},\"headline\":\"Template Method\",\"datePublished\":\"2024-01-01\",\"dateModified\":\"2025-01-01\",\"articleSection\":\"Design Patterns\",\"image\":{\"@id\":\"https://refactoring.guru/design-patterns/template-method#primaryimage\"}},{\"@type\":\"BreadcrumbList\",\"@id\":\"https://refactoring.guru/design-patterns/template-method#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https://refactoring.guru\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Design Patterns\",\"item\":\"https://refactoring.guru/design-patterns\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"Behavioral Patterns\",\"item\":\"https://refactoring.guru/design-patterns/behavioral-patterns\"}]}] }\n    </script>\n\n    <script>\nfunction extend(){var extended={};var deep=false;var i=0;var length=arguments[\"length\"];if(Object[\"prototype\"][\"toString\"][\"call\"](arguments[0])=== '[object Boolean]'){deep= arguments[0];i++};var merge=function(obj){for(var prop in obj){if(Object[\"prototype\"][\"hasOwnProperty\"][\"call\"](obj,prop)){if(deep&& Object[\"prototype\"][\"toString\"][\"call\"](obj[prop])=== '[object Object]'){extended[prop]= extend(true,extended[prop],obj[prop])}else {extended[prop]= obj[prop]}}}};for(;i< length;i++){var obj=arguments[i];merge(obj)};return extended}\nfunction defer(method) {if (window.jQuery) {method();} else {setTimeout(function() { defer(method) }, 50);}}\n</script>\n<script>\n+function(sd){sd = (typeof sd === \"string\") ? JSON.parse(atob(sd)) : sd;for(var property in sd){if(window[property]!== null&&  typeof window[property]=== 'object'){window[property]= extend(true,window[property],sd[property])}else {window[property]= sd[property]}}}(\"eyJsb2NhbGUiOiJlbiIsImxvY2FsZV9wcmVmaXgiOiIiLCJsb2NhbGl6ZWRfdXJsX3ByZWZpeCI6Imh0dHBzOlwvXC9yZWZhY3RvcmluZy5ndXJ1XC8iLCJ1cmxfcHJlZml4IjoiaHR0cHM6XC9cL3JlZmFjdG9yaW5nLmd1cnVcLyIsImxvY2FsaXplZF91cmxfcHJlZml4X20iOiJodHRwczpcL1wvcmVmYWN0b3JpbmcuZ3VydVwvIiwidXJsX3ByZWZpeF9tIjoiaHR0cHM6XC9cL3JlZmFjdG9yaW5nLmd1cnVcLyIsInVzZXJfZWNob19hbGlhcyI6InJlZmFjdG9yaW5nIiwidXNlcl9lY2hvX2hvc3QiOiJmZWVkYmFjay5yZWZhY3RvcmluZy5ndXJ1IiwidXNlcl9lY2hvX3ByaXZhdGVfZm9ydW0iOiIyIiwidXNlcl9lY2hvX2xvY2FsZSI6ImVuIiwidXNlcl9lY2hvX3B1YmxpY19mb3J1bSI6IjMiLCJ1c2VyX2VjaG9fcHVibGljX2ZvcnVtX3VybCI6Imh0dHBzOlwvXC9mZWVkYmFjay5yZWZhY3RvcmluZy5ndXJ1XC8iLCJ1c2VyX2VjaG9fc3NvX3Rva2VuIjoiIn0=\");\n</script>\n\n<script>\n    window.dataLayer = window.dataLayer || [];\n    function gtag(){dataLayer.push(arguments);}\n    gtag('js', new Date());\n            gtag('set', 'linker', {'domains': [\"refactoring.guru,refactoringguru.cn\"]});\n        gtag('config', 'G-SR8Y3GYQYC', {\n        // Disable default page view, because we're going to report them on our own.\n        // This is done to report traffic on localized domains as part of the main website traffic\n        // See the Chinese overrides below.\n        send_page_view: false,\n    });\n</script>\n\n<script>\n    (() => {\n        // On first page view after returning from social network, we need to send the social login event.\n        (function detectSocialLogin() {\n            let getCookie = function (name) {\n                var nameEQ = name + \"=\";\n                var ca = document.cookie.split(';');\n                for (var i = 0; i < ca.length; i++) {\n                    var c = ca[i];\n                    while (c.charAt(0) == ' ') c = c.substring(1, c.length);\n                    if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);\n                }\n                return null;\n            };\n            window.social_login_provider = window.social_login_provider || getCookie('social_login_provider');\n            if (window.social_login_provider) {\n                gtag('set', {referrer: null});\n                gtag('event', 'login', {\"method\": window.social_login_provider});\n                // Delete cookie.\n                document.cookie = 'social_login_provider=; Path=/; Max-Age=-99999999;';\n            }\n        })();\n\n        function trackPageView(location, title) {\n            location = location || document.location.href;\n            title = title || document.title;\n\n            // This is show on https://refactoringguru.cn/ and alike.\n            if (typeof window.analytics_path_prefix === 'string') {\n                if (/^(https?:\\/\\/[^\\/]+?)\\/$/.test(location)) {\n                    location = location.replace(/(https?:\\/\\/[^\\/]+?)\\//, '$1' + window.analytics_path_prefix);\n                } else {\n                    location = location.replace(/(https?:\\/\\/[^\\/]+?)\\//, '$1' + window.analytics_path_prefix + '/');\n                }\n                gtag('set', {\n                    'page_location': location\n                });\n            }\n\n            // This is show on https://refactoring.guru/zh/login and alike.\n            if (typeof window.analytics_location_prefix === 'string') {\n                location = location.replace(/(https?:\\/\\/[^\\/]+?)\\//, window.analytics_location_prefix);\n                gtag('set', {\n                    'page_location': location\n                });\n            }\n\n            gtag('event', 'page_view', {\n                page_location: location,\n                page_title: title,\n                locale: window.locale ?? 'en'\n            });\n        }\n\n        if (window.loadContent) {\n            window.onPageLoad = window.onPageLoad || [];\n            window.onPageLoad.push({\n                func: function (context) {\n                    trackPageView(window.location.origin + context.canonicalPath, context.title);\n                },\n                afterAll: true,\n            });\n        }\n        else {\n            trackPageView();\n        }\n    })();\n</script>\n\n\n</head>\n<body class=\"locale-en   announcement   template-method\" data-body_class=\"template-method\">\n\n<div class=\"body-holder\">\n\n            <div class=\"announcement-block announcement-block-summer prom\" data-id=\"DIDP-announcement\" data-creative-id=\"en\" data-position=\"top\">\n        <span class=\"beach-and-sea\">\n            <span class=\"a1\"></span>\n            <span class=\"a2\"><span class=\"wave\"></span></span>\n            <span class=\"yacht\"></span>\n        </span>\n        <a href=\"/store\">\n            <img src=\"/images/content-public/ann/summer/sunbed.svg?id=b1e7314a63715a13870a6bd1a43613f7\" loading=\"lazy\" style=\"width: 32px; height:32px;vertical-align: middle; scale: -1 1 1;\">\n            <span class=\"announcement-link-text\">Summer SALE</span>\n            <img src=\"/images/content-public/ann/summer/reading-book.svg?id=36006ea720df8c171968cf613e8ea164\" loading=\"lazy\" style=\"width: 32px; height:32px;vertical-align: middle;\">\n        </a>\n    </div>\n\n    \n    <div class=\"cart-placeholder\">\n    <div class=\"cart-block-container\" style=\"display:none\">\n        <div class=\"cart-block btn-group\">\n            <a href=\"#checkout\" class=\"btn cart open-checkout\">\n                <span class=\"cart-text\"></span>&nbsp;<strong class=\"cart-total font-money\"></strong>\n            </a><a href=\"#checkout\" class=\"btn btn-secondary checkout open-checkout\"><i class=\"fa fa-shopping-cart\" aria-hidden=\"true\"></i> <span class=\"btn-text-span d-none d-sm-inline-block d-lg-none d-hg-inline-block\"></span></a>\n        </div>\n    </div>\n</div>\n    <main role=\"main\" class=\"main-content top-content center-content \" data-page_class=\"\">\n        <div class=\"main-content-container center-content-container\">\n                        <div class=\"pattern page text\">\n<article>\n    <div class=\"breadcrumb\">\n                                    <a class=\"home\" href=\"/\"><i class=\"fa fa-home\" aria-hidden=\"true\"></i></a>\n                                                / <a class=\"type\" href=\"/design-patterns\">Design Patterns</a>\n                                                / <a class=\"type\" href=\"/design-patterns/behavioral-patterns\">Behavioral Patterns</a>\n                        </div>\n    <h1 class=\"title\">Template Method</h1>\n\n    <script type=\"text/javascript\">\n        // Shorten examples titles for users.\n        var h1 = document.getElementsByTagName(\"H1\")[0];\n        if (h1.offsetHeight > 160) {\n            h1.className += ' smaller';\n        }\n\n        // Small beautification for pattern examples.\n        var title = h1.innerHTML;\n        title = title.replace(/^(Java|C\\+\\+|C#|PHP|Python|Ruby|Delphi): (.*)$/, '<strong>$1:</strong> $2');\n        h1.innerHTML = title;\n    </script>\n\n    \n    \n\n    <div class=\"section intent\">\n<h2 id=\"intent\"><i class=\"fa fa-flip-horizontal fa-comment-alt-dots\" aria-hidden=\"true\"></i> Intent</h2>\n<p><strong>Template Method</strong> is a behavioral design pattern that defines the skeleton of an algorithm in the superclass but lets subclasses override specific steps of the algorithm without changing its structure.</p>\n<figure class=\"image\"><img src=\"/images/patterns/content/template-method/template-method.png?id=eee9461742f832814f19612ccf472819\" alt=\"Template method design pattern\" srcset=\"/images/patterns/content/template-method/template-method.png?id=eee9461742f832814f19612ccf472819 640w,/images/patterns/content/template-method/template-method-1.5x.png?id=2b4c179aaa02f5c45a59324b904cd130 960w,/images/patterns/content/template-method/template-method-2x.png?id=4e164dc41be4dcfa122628864c2be210 1280w\" sizes=\"(max-width: 720px) 100vw, 640px\" width=\"640\" style=\"aspect-ratio: 1.6;\" fetchpriority=\"high\" /></figure>\n</div>\n<div class=\"section problem\">\n<h2 id=\"problem\"><i class=\"fa fa-frown\" aria-hidden=\"true\"></i> Problem</h2>\n<p>Imagine that you’re creating a data mining application that analyzes corporate documents. Users feed the app documents in various formats (PDF, DOC, CSV), and it tries to extract meaningful data from these docs in a uniform format.</p>\n<p>The first version of the app could work only with DOC files. In the following version, it was able to support CSV files. A month later, you “taught” it to extract data from PDF files.</p>\n<figure class=\"image\"><img src=\"/images/patterns/diagrams/template-method/problem.png?id=60fa4f735c467ac1c9438231a1782807\" alt=\"Data mining classes contained a lot of duplicate code\" srcset=\"/images/patterns/diagrams/template-method/problem.png?id=60fa4f735c467ac1c9438231a1782807 620w,/images/patterns/diagrams/template-method/problem-1.5x.png?id=83fa009f7727bdcc69335b946919f0d8 930w,/images/patterns/diagrams/template-method/problem-2x.png?id=fc8b434afec7b6135043d0d2f48189f0 1240w\" sizes=\"(max-width: 720px) 100vw, 620px\" width=\"620\" style=\"aspect-ratio: 1.35;\" loading=\"lazy\" /><figcaption>\n<p>Data mining classes contained a lot of duplicate code.</p>\n</figcaption></figure>\n<p>At some point, you noticed that all three classes have a lot of similar code. While the code for dealing with various data formats was entirely different in all classes, the code for data processing and analysis is almost identical. Wouldn’t it be great to get rid of the code duplication, leaving the algorithm structure intact?</p>\n<p>There was another problem related to client code that used these classes. It had lots of conditionals that picked a proper course of action depending on the class of the processing object. If all three processing classes had a common interface or a base class, you’d be able to eliminate the conditionals in client code and use polymorphism when calling methods on a processing object.</p>\n</div>\n<div class=\"section solution\">\n<h2 id=\"solution\"><i class=\"fa fa-smile-beam\" aria-hidden=\"true\"></i> Solution</h2>\n<p>The Template Method pattern suggests that you break down an algorithm into a series of steps, turn these steps into methods, and put a series of calls to these methods inside a single <em>template method.</em> The steps may either be <code>abstract</code>, or have some default implementation. To use the algorithm, the client is supposed to provide its own subclass, implement all abstract steps, and override some of the optional ones if needed (but not the template method itself).</p>\n<p>Let’s see how this will play out in our data mining app. We can create a base class for all three parsing algorithms. This class defines a template method consisting of a series of calls to various document-processing steps.</p>\n<figure class=\"image\"><img src=\"/images/patterns/diagrams/template-method/solution-en.png?id=98cb323d5736539b684da62a0fd49730\" alt=\"Template method defines the skeleton of the algorithm\" srcset=\"/images/patterns/diagrams/template-method/solution-en.png?id=98cb323d5736539b684da62a0fd49730 600w,/images/patterns/diagrams/template-method/solution-en-1.5x.png?id=d4ab5229a87ffa3b02cf5b56f5ef169e 900w,/images/patterns/diagrams/template-method/solution-en-2x.png?id=4980d5dfb1fe07f065650e09756f5614 1200w\" sizes=\"(max-width: 720px) 100vw, 600px\" width=\"600\" style=\"aspect-ratio: 1.43;\" loading=\"lazy\" /><figcaption>\n<p>Template method breaks the algorithm into steps, allowing subclasses to override these steps but not the actual method.</p>\n</figcaption></figure>\n<p>At first, we can declare all steps <code>abstract</code>, forcing the subclasses to provide their own implementations for these methods. In our case, subclasses already have all necessary implementations, so the only thing we might need to do is adjust signatures of the methods to match the methods of the superclass.</p>\n<p>Now, let’s see what we can do to get rid of the duplicate code. It looks like the code for opening/closing files and extracting/parsing data is different for various data formats, so there’s no point in touching those methods. However, implementation of other steps, such as analyzing the raw data and composing reports, is very similar, so it can be pulled up into the base class, where subclasses can share that code.</p>\n<p>As you can see, we’ve got two types of steps:</p>\n<ul>\n<li><em>abstract steps</em> must be implemented by every subclass</li>\n<li><em>optional steps</em> already have some default implementation, but still can be overridden if needed</li>\n</ul>\n<p>There’s another type of step, called <em>hooks</em>. A hook is an optional step with an empty body. A template method would work even if a hook isn’t overridden. Usually, hooks are placed before and after crucial steps of algorithms, providing subclasses with additional extension points for an algorithm.</p>\n</div>\n<div class=\"section analogy\">\n<h2 id=\"analogy\"><i class=\"fa fa-car-side\" aria-hidden=\"true\"></i> Real-World Analogy</h2>\n<figure class=\"image\"><img src=\"/images/patterns/diagrams/template-method/live-example.png?id=2485d52852f87da06c9cc0e2fd257d6a\" alt=\"Mass housing construction\" srcset=\"/images/patterns/diagrams/template-method/live-example.png?id=2485d52852f87da06c9cc0e2fd257d6a 590w,/images/patterns/diagrams/template-method/live-example-1.5x.png?id=92c5fd9345329da09e3233302158678c 885w,/images/patterns/diagrams/template-method/live-example-2x.png?id=89083a3dcd1fe2b627b9b6e6ff4986dc 1180w\" sizes=\"(max-width: 720px) 100vw, 590px\" width=\"590\" style=\"aspect-ratio: 1.74;\" loading=\"lazy\" /><figcaption>\n<p>A typical architectural plan can be slightly altered to better fit the client’s needs.</p>\n</figcaption></figure>\n<p>The template method approach can be used in mass housing construction. The architectural plan for building a standard house may contain several extension points that would let a potential owner adjust some details of the resulting house.</p>\n<p>Each building step, such as laying the foundation, framing, building walls, installing plumbing and wiring for water and electricity, etc., can be slightly changed to make the resulting house a little bit different from others.</p>\n</div>\n<div class=\"section structure-container\">\n<h2 id=\"structure\"><i class=\"fa fa-sitemap\" aria-hidden=\"true\"></i> Structure</h2>\n<div class=\"structure\">\n<div class=\"struct-image1 struct-image\">\n<figure class=\"image\"><img class=\"structure-img-non-indexed d-none d-xl-block\" src=\"/images/patterns/diagrams/template-method/structure.png?id=924692f994bff6578d8408d90f6fc459\" alt=\"Structure of the Template Method design pattern\" srcset=\"/images/patterns/diagrams/template-method/structure.png?id=924692f994bff6578d8408d90f6fc459 340w,/images/patterns/diagrams/template-method/structure-1.5x.png?id=613d78ad8ec08536ec70f4e0976b5a1a 510w,/images/patterns/diagrams/template-method/structure-2x.png?id=25082d6d6a76f51c6b64d8aeeaffdbb5 680w\" sizes=\"(max-width: 720px) 100vw, 340px\" width=\"340\" style=\"aspect-ratio: 0.89;\" loading=\"lazy\" /><img class=\"structure-img-indexed d-xl-none\" src=\"/images/patterns/diagrams/template-method/structure-indexed.png?id=4ced6107519bc66710d2f05c0f4097a1\" alt=\"Structure of the Template Method design pattern\" srcset=\"/images/patterns/diagrams/template-method/structure-indexed.png?id=4ced6107519bc66710d2f05c0f4097a1 350w,/images/patterns/diagrams/template-method/structure-indexed-1.5x.png?id=58e3a9092786c824eb738a7771702093 525w,/images/patterns/diagrams/template-method/structure-indexed-2x.png?id=86f28789cdcc5a4c415d6a1100de56fc 700w\" sizes=\"(max-width: 720px) 100vw, 350px\" width=\"350\" style=\"aspect-ratio: 0.92;\" loading=\"lazy\" /></figure>\n</div>\n<ol><li class=\"struct-li1\">\n<p>The <strong>Abstract Class</strong> declares methods that act as steps of an algorithm, as well as the actual template method which calls these methods in a specific order. The steps may either be declared <code>abstract</code> or have some default implementation.</p>\n</li>\n<li class=\"struct-li2\">\n<p><strong>Concrete Classes</strong> can override all of the steps, but not the template method itself.</p>\n</li></ol>\n<style structure type=\"text/css\" >\n@media (min-width: 1200px) {\n.structure {\nmargin: 0;\nwidth: auto;\nheight: 400px;\n}\n\n.struct-image1 {\nleft: 240px;\ntop: 0px;\n}\n\n.struct-li1 {\nleft: 0px;\ntop: 10px;\nwidth: 250px;\n}\n\n.struct-li2 {\nleft: 0px;\ntop: 200px;\nwidth: 220px;\n}\n}\n\n</style>\n</div></div>\n<div class=\"section pseudocode\">\n<h2 id=\"pseudocode\"><i class=\"fa fa-hashtag\" aria-hidden=\"true\"></i> Pseudocode</h2>\n<p>In this example, the <strong>Template Method</strong> pattern provides a “skeleton” for various branches of artificial intelligence in a simple strategy video game.</p>\n<figure class=\"image\"><img src=\"/images/patterns/diagrams/template-method/example.png?id=c0ce5cc8070925a1cd345fac6afa16b6\" alt=\"Structure of the Template Method pattern example\" srcset=\"/images/patterns/diagrams/template-method/example.png?id=c0ce5cc8070925a1cd345fac6afa16b6 430w,/images/patterns/diagrams/template-method/example-1.5x.png?id=d85c6b81c900f46d55688406170600bc 645w,/images/patterns/diagrams/template-method/example-2x.png?id=d8b309659c4b722237ec97733da935bd 860w\" sizes=\"(max-width: 720px) 100vw, 430px\" width=\"430\" style=\"aspect-ratio: 1;\" loading=\"lazy\" /><figcaption>\n<p>AI classes of a simple video game.</p>\n</figcaption></figure>\n<p>All races in the game have almost the same types of units and buildings. Therefore you can reuse the same AI structure for various races, while being able to override some of the details. With this approach, you can override the orcs’ AI to make it more aggressive, make humans more defense-oriented, and make monsters unable to build anything. Adding a new race to the game would require creating a new AI subclass and overriding the default methods declared in the base AI class.</p>\n<figure class=\"code\">\n<pre class=\"code\" lang=\"pseudocode\">// The abstract class defines a template method that contains a\n// skeleton of some algorithm composed of calls, usually to\n// abstract primitive operations. Concrete subclasses implement\n// these operations, but leave the template method itself\n// intact.\nclass GameAI is\n    // The template method defines the skeleton of an algorithm.\n    method turn() is\n        collectResources()\n        buildStructures()\n        buildUnits()\n        attack()\n\n    // Some of the steps may be implemented right in a base\n    // class.\n    method collectResources() is\n        foreach (s in this.builtStructures) do\n            s.collect()\n\n    // And some of them may be defined as abstract.\n    abstract method buildStructures()\n    abstract method buildUnits()\n\n    // A class can have several template methods.\n    method attack() is\n        enemy = closestEnemy()\n        if (enemy == null)\n            sendScouts(map.center)\n        else\n            sendWarriors(enemy.position)\n\n    abstract method sendScouts(position)\n    abstract method sendWarriors(position)\n\n// Concrete classes have to implement all abstract operations of\n// the base class but they must not override the template method\n// itself.\nclass OrcsAI extends GameAI is\n    method buildStructures() is\n        if (there are some resources) then\n            // Build farms, then barracks, then stronghold.\n\n    method buildUnits() is\n        if (there are plenty of resources) then\n            if (there are no scouts)\n                // Build peon, add it to scouts group.\n            else\n                // Build grunt, add it to warriors group.\n\n    // ...\n\n    method sendScouts(position) is\n        if (scouts.length &gt; 0) then\n            // Send scouts to position.\n\n    method sendWarriors(position) is\n        if (warriors.length &gt; 5) then\n            // Send warriors to position.\n\n// Subclasses can also override some operations with a default\n// implementation.\nclass MonstersAI extends GameAI is\n    method collectResources() is\n        // Monsters don't collect resources.\n\n    method buildStructures() is\n        // Monsters don't build structures.\n\n    method buildUnits() is\n        // Monsters don't build units.\n</pre>\n</figure>\n</div>\n<div class=\"section applicability-container\">\n<h2 id=\"applicability\"><i class=\"fa fa-lightbulb-on\" aria-hidden=\"true\"></i> Applicability</h2>\n<div class=\"applicability\">\n<div class=\"applicability-problem\">\n<p><i class=\"fa fa-fw fa-bug\" aria-hidden=\"true\"></i> Use the Template Method pattern when you want to let clients extend only particular steps of an algorithm, but not the whole algorithm or its structure.</p>\n</div><div class=\"applicability-solution\">\n<p><i class=\"fa fa-fw fa-bolt\" aria-hidden=\"true\"></i> The Template Method lets you turn a monolithic algorithm into a series of individual steps which can be easily extended by subclasses while keeping intact the structure defined in a superclass.</p>\n</div>\n<div class=\"applicability-problem\">\n<p><i class=\"fa fa-fw fa-bug\" aria-hidden=\"true\"></i> Use the pattern when you have several classes that contain almost identical algorithms with some minor differences. As a result, you might need to modify all classes when the algorithm changes.</p>\n</div><div class=\"applicability-solution\">\n<p><i class=\"fa fa-fw fa-bolt\" aria-hidden=\"true\"></i> When you turn such an algorithm into a template method, you can also pull up the steps with similar implementations into a superclass, eliminating code duplication. Code that varies between subclasses can remain in subclasses.</p>\n</div>\n</div></div>\n<div class=\"section checklist\">\n<h2 id=\"checklist\"><i class=\"fa fa-clipboard-list-check\" aria-hidden=\"true\"></i> How to Implement</h2>\n<ol>\n<li>\n<p>Analyze the target algorithm to see whether you can break it into steps. Consider which steps are common to all subclasses and which ones will always be unique.</p>\n</li>\n<li>\n<p>Create the abstract base class and declare the template method and a set of abstract methods representing the algorithm’s steps. Outline the algorithm’s structure in the template method by executing corresponding steps. Consider making the template method <code>final</code> to prevent subclasses from overriding it.</p>\n</li>\n<li>\n<p>It’s okay if all the steps end up being abstract. However, some steps might benefit from having a default implementation. Subclasses don’t have to implement those methods.</p>\n</li>\n<li>\n<p>Think of adding hooks between the crucial steps of the algorithm.</p>\n</li>\n<li>\n<p>For each variation of the algorithm, create a new concrete subclass. It <em>must</em> implement all of the abstract steps, but <em>may</em> also override some of the optional ones.</p>\n</li>\n</ol>\n</div>\n<div class=\"section pros-cons\">\n<h2 id=\"pros-cons\"><i class=\"fa fa-balance-scale\" aria-hidden=\"true\"></i> Pros and Cons</h2>\n<div class=\"row\"><div class=\"col-sm-6\">\n<ul>\n<li><i class=\"fa fa-fw fa-check\" aria-hidden=\"true\"></i> You can let clients override only certain parts of a large algorithm, making them less affected by changes that happen to other parts of the algorithm.</li>\n<li><i class=\"fa fa-fw fa-check\" aria-hidden=\"true\"></i> You can pull the duplicate code into a superclass.</li>\n</ul>\n</div><div class=\"col-sm-6\">\n<ul>\n<li><i class=\"fa fa-fw fa-times\" aria-hidden=\"true\"></i> Some clients may be limited by the provided skeleton of an algorithm.</li>\n<li><i class=\"fa fa-fw fa-times\" aria-hidden=\"true\"></i> You might violate the <em>Liskov Substitution Principle</em> by suppressing a default step implementation via a subclass.</li>\n<li><i class=\"fa fa-fw fa-times\" aria-hidden=\"true\"></i> Template methods tend to be harder to maintain the more steps they have.</li>\n</ul>\n</div></div></div>\n<div class=\"section relations\">\n<h2 id=\"relations\"><i class=\"fa fa-exchange-alt\" aria-hidden=\"true\"></i> Relations with Other Patterns</h2>\n<ul>\n<li>\n<p><a href=\"/design-patterns/factory-method\">Factory Method</a> is a specialization of <a href=\"/design-patterns/template-method\">Template Method</a>. At the same time, a <em>Factory Method</em> may serve as a step in a large <em>Template Method</em>.</p>\n</li>\n<li>\n<p><a href=\"/design-patterns/template-method\">Template Method</a> is based on inheritance: it lets you alter parts of an algorithm by extending those parts in subclasses. <a href=\"/design-patterns/strategy\">Strategy</a> is based on composition: you can alter parts of the object’s behavior by supplying it with different strategies that correspond to that behavior. <em>Template Method</em> works at the class level, so it’s static. <em>Strategy</em> works on the object level, letting you switch behaviors at runtime.</p>\n</li>\n</ul>\n</div>\n<div class=\"section implementations\">\n<h2 id=\"implementations\"><i class=\"fa fa-code\" aria-hidden=\"true\"></i> Code Examples</h2>\n<p><a href=\"/design-patterns/template-method/csharp/example\" title=\"Template Method in C#\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/csharp.svg?id=da64592defc6e86d57c39c66e9de3e58\" alt=\"Template Method in C#\" /></a>\n<a href=\"/design-patterns/template-method/cpp/example\" title=\"Template Method in C++\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/cpp.svg?id=f7782ed8b8666246bfcc3f8fefc3b858\" alt=\"Template Method in C++\" /></a>\n<a href=\"/design-patterns/template-method/go/example\" title=\"Template Method in Go\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/go.svg?id=1a89927eb99b1ea3fde7701d97970aca\" alt=\"Template Method in Go\" /></a>\n<a href=\"/design-patterns/template-method/java/example\" title=\"Template Method in Java\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/java.svg?id=e6d87e2dca08c953fe3acd1275ed4f4e\" alt=\"Template Method in Java\" /></a>\n<a href=\"/design-patterns/template-method/php/example\" title=\"Template Method in PHP\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/php.svg?id=be1906eb26b71ec1d3b93720d6156618\" alt=\"Template Method in PHP\" /></a>\n<a href=\"/design-patterns/template-method/python/example\" title=\"Template Method in Python\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/python.svg?id=6d815d43c0f7050a1151b43e51569c9f\" alt=\"Template Method in Python\" /></a>\n<a href=\"/design-patterns/template-method/ruby/example\" title=\"Template Method in Ruby\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/ruby.svg?id=b065b718c914bf8e960ef731600be1eb\" alt=\"Template Method in Ruby\" /></a>\n<a href=\"/design-patterns/template-method/rust/example\" title=\"Template Method in Rust\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/rust.svg?id=1f5698a4b5ae23fe79413511747e4a87\" alt=\"Template Method in Rust\" /></a>\n<a href=\"/design-patterns/template-method/swift/example\" title=\"Template Method in Swift\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/swift.svg?id=0b716c2d52ec3a48fbe91ac031070c1d\" alt=\"Template Method in Swift\" /></a>\n<a href=\"/design-patterns/template-method/typescript/example\" title=\"Template Method in TypeScript\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/typescript.svg?id=2239d0f16cb703540c205dd8cb0c0cb7\" alt=\"Template Method in TypeScript\" /></a></p>\n</div>\n\n\n    <div class=\"banner-set2\" id=\"book-promo\">\n            <div class=\"prom banner-content banner-bg banner-striped banner-with-image\" data-id=\"DP: 1: Support our free website and own the eBook!\" data-creative-id=\"standard-en\" data-position=\"content_bottom\">\n                <div class=\"banner-image\">\n                    <a href=\"/design-patterns/book\">\n                        <img width=\"200\" height=\"200\" loading=\"lazy\" src=\"/images/patterns/banners/patterns-book-banner-3.png?id=7d445df13c80287beaab234b4f3b698c\" srcset=\"/images/patterns/banners/patterns-book-banner-3-2x.png?id=0cc3f77ab421d1a5c02ee46488231c3a 2x\">\n                    </a>\n                </div>\n\n                <div class=\"banner-text\">\n                    <h3 class=\"title\">Support our free website and own the eBook!</h3>\n                    <ul style=\"font-size: 14px;\">\n                        <li style=\"margin: 0;\">22 design patterns and 8 principles explained in depth.</li>\n                        <li style=\"margin: 0;\">409 well-structured, easy to read, jargon-free pages.</li>\n                        <li style=\"margin: 0;\">225 clear and helpful illustrations and diagrams.</li>\n                        <li style=\"margin: 0;\">An archive with code examples in 11 languages.</li>\n                        <li style=\"margin: 0;\">All devices supported: PDF/EPUB/MOBI/KFX formats.</li>\n                    </ul>\n                    <a class=\"btn btn-secondary\" href=\"/design-patterns/book\"><i class=\"fa fa-book\" aria-hidden=\"true\"></i> Learn more…</a>\n                </div>\n            </div>\n        </div>\n\n    </article>\n\n<nav class=\"prev-next\">\n                    <div class=\"next\">\n                <h4>Read next</h4>\n                <a rel=\"next\" href=\"/design-patterns/visitor\" class=\"btn btn-primary\">Visitor&nbsp;<span class=\"fa fa-arrow-right\"></span></a>\n            </div>\n                            <div class=\"prev\">\n                <h4>Return</h4>\n                <a rel=\"prev\" href=\"/design-patterns/strategy\" class=\"btn btn-default\"><span class=\"fa fa-arrow-left\"></span>&nbsp;Strategy </a>\n            </div>\n            </nav>\n</div>\n\n<aside class=\"feature content-secondary\">\n    <div class=\"prom banner-sidebar banner-removable banner-removable-patterns\" data-id=\"DP: Sidebar\" data-creative-id=\"standard-sidebar-en\" data-position=\"sidebar\">\n        <div class=\"banner-inner\">\n            <div class=\"image3d-book-right\">\n                <div class=\"image3d-cover\" style=\"background: #0b3752;\">\n                    <a href=\"/design-patterns/book\">\n                        <img width=\"250\" height=\"375\" loading=\"lazy\" src=\"/images/patterns/book/web-cover-en.png?id=328861769fd11617674e3b8a7e2dd9e7\" srcset=\"/images/patterns/book/web-cover-en-2x.png?id=02940141c5652ed5a426d87390b16366 2x\">\n                    </a>\n                </div>\n            </div>\n            <div style=\"margin-top: 1rem\">\n                <p class=\"text-center\" >This article is a part of our eBook<br/><strong>Dive Into Design Patterns</strong>.</p>\n                <a href=\"/design-patterns/book\" class=\"btn btn-secondary btn-block\"><i class=\"fa fa-book\" aria-hidden=\"true\"></i> Learn more…</a>\n            </div>\n        </div>\n    </div>\n\n\n</aside>\n                    </div>\n    </main>\n\n    <aside class=\"sidebar main-menu\">\n    <div class=\"main-menu-controls\">\n        <button class=\"navigation-toggle\"><i class=\"fa fa-fw fa-times\"></i></button>\n    </div>\n    <div class=\"main-menu-list-wrapper nano\">\n        <div class=\"main-menu-list nano-content\">\n            <a class=\"menu-brand\" href=\"/\">\n                                    <img width=200 height=241 loading=\"lazy\" alt=\"Refactoring.Guru\" src=\"/images/content-public/logos/logo-new.png?id=97d554614702483f31e38b32e82d8e34\" srcset=\"/images/content-public/logos/logo-new-2x.png?id=3bc33294e095bab1d6fe9ae421d07837 2x\">\n                            </a>\n\n            <div class=\"menu-container\" style=\"position: relative\">\n                                <ul class=\"menu-list trail\">\n                            <li class=\"featured\">\n            <a href=\"/store\">\n                <i class=\"fa fa-fw fa-star\" aria-hidden=\"true\"></i> Premium Content\n            </a>\n    \n            <ul >\n                            <li class=\"featured menu-fs15\">\n            <a href=\"/design-patterns/book\">\n                <i class=\"fa fa-fw fa-book\" aria-hidden=\"true\"></i> Design Patterns eBook\n            </a>\n    \n    \n            </li>\n                                <li class=\"featured menu-fs15\">\n            <a href=\"/refactoring/course\">\n                <i class=\"fa fa-fw fa-graduation-cap\" aria-hidden=\"true\"></i> Refactoring Course\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring\">\n                <i class=\"fa fa-fw fa-scissors\" aria-hidden=\"true\"></i> Refactoring\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/refactoring/what-is-refactoring\">\n                What is Refactoring\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/refactoring/what-is-refactoring\">\n                Clean code\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/technical-debt\">\n                Technical debt\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/when\">\n                When to refactor\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/how-to\">\n                How to refactor\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/catalog\">\n                Catalog\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells\">\n                Code Smells\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/refactoring/smells/bloaters\">\n                Bloaters\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/long-method\">\n                Long Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/large-class\">\n                Large Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/primitive-obsession\">\n                Primitive Obsession\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/long-parameter-list\">\n                Long Parameter List\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/data-clumps\">\n                Data Clumps\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/oo-abusers\">\n                Object-Orientation Abusers\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/switch-statements\">\n                Switch Statements\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/temporary-field\">\n                Temporary Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/refused-bequest\">\n                Refused Bequest\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/alternative-classes-with-different-interfaces\">\n                Alternative Classes with Different Interfaces\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/change-preventers\">\n                Change Preventers\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/divergent-change\">\n                Divergent Change\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/shotgun-surgery\">\n                Shotgun Surgery\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/parallel-inheritance-hierarchies\">\n                Parallel Inheritance Hierarchies\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/dispensables\">\n                Dispensables\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/comments\">\n                Comments\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/duplicate-code\">\n                Duplicate Code\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/lazy-class\">\n                Lazy Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/data-class\">\n                Data Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/dead-code\">\n                Dead Code\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/speculative-generality\">\n                Speculative Generality\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/couplers\">\n                Couplers\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/feature-envy\">\n                Feature Envy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/inappropriate-intimacy\">\n                Inappropriate Intimacy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/message-chains\">\n                Message Chains\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/middle-man\">\n                Middle Man\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/other\">\n                Other Smells\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/incomplete-library-class\">\n                Incomplete Library Class\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques\">\n                Refactorings\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/refactoring/techniques/composing-methods\">\n                Composing Methods\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/extract-method\">\n                Extract Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/inline-method\">\n                Inline Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-variable\">\n                Extract Variable\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/inline-temp\">\n                Inline Temp\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-temp-with-query\">\n                Replace Temp with Query\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/split-temporary-variable\">\n                Split Temporary Variable\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-assignments-to-parameters\">\n                Remove Assignments to Parameters\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-method-with-method-object\">\n                Replace Method with Method Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/substitute-algorithm\">\n                Substitute Algorithm\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/moving-features-between-objects\">\n                Moving Features between Objects\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/move-method\">\n                Move Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/move-field\">\n                Move Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-class\">\n                Extract Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/inline-class\">\n                Inline Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/hide-delegate\">\n                Hide Delegate\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-middle-man\">\n                Remove Middle Man\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-foreign-method\">\n                Introduce Foreign Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-local-extension\">\n                Introduce Local Extension\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/organizing-data\">\n                Organizing Data\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/self-encapsulate-field\">\n                Self Encapsulate Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-data-value-with-object\">\n                Replace Data Value with Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/change-value-to-reference\">\n                Change Value to Reference\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/change-reference-to-value\">\n                Change Reference to Value\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-array-with-object\">\n                Replace Array with Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/duplicate-observed-data\">\n                Duplicate Observed Data\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/change-unidirectional-association-to-bidirectional\">\n                Change Unidirectional Association to Bidirectional\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/change-bidirectional-association-to-unidirectional\">\n                Change Bidirectional Association to Unidirectional\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-magic-number-with-symbolic-constant\">\n                Replace Magic Number with Symbolic Constant\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/encapsulate-field\">\n                Encapsulate Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/encapsulate-collection\">\n                Encapsulate Collection\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-type-code-with-class\">\n                Replace Type Code with Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-type-code-with-subclasses\">\n                Replace Type Code with Subclasses\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-type-code-with-state-strategy\">\n                Replace Type Code with State/Strategy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-subclass-with-fields\">\n                Replace Subclass with Fields\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/simplifying-conditional-expressions\">\n                Simplifying Conditional Expressions\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/decompose-conditional\">\n                Decompose Conditional\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/consolidate-conditional-expression\">\n                Consolidate Conditional Expression\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/consolidate-duplicate-conditional-fragments\">\n                Consolidate Duplicate Conditional Fragments\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-control-flag\">\n                Remove Control Flag\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-nested-conditional-with-guard-clauses\">\n                Replace Nested Conditional with Guard Clauses\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-conditional-with-polymorphism\">\n                Replace Conditional with Polymorphism\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-null-object\">\n                Introduce Null Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-assertion\">\n                Introduce Assertion\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/simplifying-method-calls\">\n                Simplifying Method Calls\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/rename-method\">\n                Rename Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/add-parameter\">\n                Add Parameter\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-parameter\">\n                Remove Parameter\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/separate-query-from-modifier\">\n                Separate Query from Modifier\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/parameterize-method\">\n                Parameterize Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-parameter-with-explicit-methods\">\n                Replace Parameter with Explicit Methods\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/preserve-whole-object\">\n                Preserve Whole Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-parameter-with-method-call\">\n                Replace Parameter with Method Call\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-parameter-object\">\n                Introduce Parameter Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-setting-method\">\n                Remove Setting Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/hide-method\">\n                Hide Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-constructor-with-factory-method\">\n                Replace Constructor with Factory Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-error-code-with-exception\">\n                Replace Error Code with Exception\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-exception-with-test\">\n                Replace Exception with Test\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/dealing-with-generalization\">\n                Dealing with Generalization\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/pull-up-field\">\n                Pull Up Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/pull-up-method\">\n                Pull Up Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/pull-up-constructor-body\">\n                Pull Up Constructor Body\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/push-down-method\">\n                Push Down Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/push-down-field\">\n                Push Down Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-subclass\">\n                Extract Subclass\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-superclass\">\n                Extract Superclass\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-interface\">\n                Extract Interface\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/collapse-hierarchy\">\n                Collapse Hierarchy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/form-template-method\">\n                Form Template Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-inheritance-with-delegation\">\n                Replace Inheritance with Delegation\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-delegation-with-inheritance\">\n                Replace Delegation with Inheritance\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"trail\">\n            <a href=\"/design-patterns\">\n                <i class=\"fa fa-fw fa-puzzle-piece\" aria-hidden=\"true\"></i> Design Patterns\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/what-is-pattern\">\n                What is a Pattern\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/what-is-pattern\">\n                What's a design pattern?\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/history\">\n                History of patterns\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/why-learn-patterns\">\n                Why should I learn patterns?\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/criticism\">\n                Criticism of patterns\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/classification\">\n                Classification of patterns\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/catalog\">\n                Catalog\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-third-level\">\n            <a href=\"/design-patterns/creational-patterns\">\n                Creational Patterns\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/factory-method\">\n                Factory Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/abstract-factory\">\n                Abstract Factory\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/builder\">\n                Builder\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/prototype\">\n                Prototype\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/singleton\">\n                Singleton\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"menu-third-level\">\n            <a href=\"/design-patterns/structural-patterns\">\n                Structural Patterns\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/adapter\">\n                Adapter\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/bridge\">\n                Bridge\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/composite\">\n                Composite\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/decorator\">\n                Decorator\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/facade\">\n                Facade\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/flyweight\">\n                Flyweight\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/proxy\">\n                Proxy\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"menu-third-level trail\">\n            <a href=\"/design-patterns/behavioral-patterns\">\n                Behavioral Patterns\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/chain-of-responsibility\">\n                Chain of Responsibility\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/command\">\n                Command\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/iterator\">\n                Iterator\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/mediator\">\n                Mediator\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/memento\">\n                Memento\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/observer\">\n                Observer\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/state\">\n                State\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/strategy\">\n                Strategy\n            </a>\n    \n    \n            </li>\n                                <li class=\"trail active\">\n            <a href=\"/design-patterns/template-method\">\n                Template Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/visitor\">\n                Visitor\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"menu-code-examples\">\n            <a href=\"/design-patterns/examples\">\n                Code Examples\n            </a>\n    \n            <ul >\n                            <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/csharp\">\n                C#\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/cpp\">\n                C++\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/go\">\n                Go\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/java\">\n                Java\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/php\">\n                PHP\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/python\">\n                Python\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/ruby\">\n                Ruby\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/rust\">\n                Rust\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/swift\">\n                Swift\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/typescript\">\n                TypeScript\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n                </div>\n\n            <div class=\"main-menu-aux-controls\">\n                <a href=\"https://refactoring.guru/login\" title=\"Sign in\" style=\" display: inline-flex; align-items: center; gap: 6px; \"><svg style=\"width: 16px; height: 16px; filter:drop-shadow(0 1px 1px #74261e)\" class=\"inline-block mx-0\"  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\"opacity=\"0.4\" d=\"M352.7 222.4c3.2 1 6.5 1.6 10 1.6l21.3 0c17.7 0 32 14.3 32 32s-14.3 32-32 32l-21.3 0c-.8 0-1.7 0-2.5 0c-.9 0-1.7-.1-2.5-.1c-1.7-.1-3.4-.2-5-.4C357.4 414 391.1 512 432 512c44.2 0 80-114.6 80-256S476.2 0 432 0c-40.6 0-74.2 96.9-79.3 222.4z\"/><path fill=\"currentColor\"class=\"fa-primary\" d=\"M320 48a48 48 0 1 0 -96 0 48 48 0 1 0 96 0zM125.7 175.5c9.9-9.9 23.4-15.5 37.5-15.5c1.9 0 3.8 .1 5.6 .3L137.6 254c-9.3 28 1.7 58.8 26.8 74.5l86.2 53.9-25.4 88.8c-4.9 17 5 34.7 22 39.6s34.7-5 39.6-22l28.7-100.4c5.9-20.6-2.6-42.6-20.7-53.9L238 299l30.9-82.4 5.1 12.3C289 264.7 323.9 288 362.7 288l21.3 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-21.3 0c-12.9 0-24.6-7.8-29.5-19.7l-6.3-15c-14.6-35.1-44.1-61.9-80.5-73.1l-48.7-15c-11.1-3.4-22.7-5.2-34.4-5.2c-31 0-60.8 12.3-82.7 34.3L57.4 153.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l23.1-23.1zM91.2 352L32 352c-17.7 0-32 14.3-32 32s14.3 32 32 32l69.6 0c19 0 36.2-11.2 43.9-28.5L157 361.6l-9.5-6c-17.5-10.9-30.5-26.8-37.9-44.9L91.2 352z\"/></svg> Sign in</a>\n                <a href=\"https://feedback.refactoring.guru/\" class=\"userecho-public\" rel=\"nofollow\" title=\"Contact us\"><i class=\"fa fa-fw fa-fw fa-envelope\" aria-hidden=\"true\"></i> Contact us</a>\n            </div>\n        </div>\n    </div>\n</aside>\n\n    <nav class=\"navigation\" role=\"navigation\">\n    <div class=\"navigation-container\">\n        <a class=\"navigation-brand\" href=\"/\">\n            <img alt=\"Refactoring.Guru\"\n                 src=\"/images/content-public/logos/logo-new-mobile.png?id=ea18aa9b032eaa92835ed6d472b03b4a\"\n                 srcset=\"/images/content-public/logos/logo-new-mobile-2x.png?id=7ad5648bfd86ae2e8524147a72877c64 2x\">\n        </a>\n\n        <div class=\"shop-link d-none d-lg-block\" style=\"display: none !important;\">\n            <a class=\"btn btn-md btn-primary btn-featured\" href=\"/store\"><svg style=\"width: 28px; height: 28px; fill: currentColor; display: inline-block; margin-top: -14px;\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><!--! Font Awesome Pro 6.3.0 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2023 Fonticons, Inc. --><path d=\"M356 60l60 20-60 20-20 60-20-60L256 80l60-20L336 0l20 60zM464 208l48 16-48 16-16 48-16-48-48-16 48-16 16-48 16 48zm-243.8-9.8l33 66.9 73.8 10.7 59.8 8.7-43.3 42.2-53.4 52.1 12.6 73.5L313 512l-53.5-28.1-66-34.7-66 34.7L73.9 512l10.2-59.6 12.6-73.5L43.3 326.8 0 284.6l59.8-8.7 73.8-10.7 33-66.9L193.5 144l26.8 54.2zm26.1 114.4l-25-3.6-11.2-22.6-16.7-33.9-16.7 33.9L165.6 309l-25 3.6-37.4 5.4 27.1 26.4 18.1 17.6L144 387l-6.4 37.3 33.5-17.6 22.3-11.7 22.3 11.7 33.5 17.6L242.9 387l-4.3-24.9 18.1-17.6 27.1-26.4-37.4-5.4z\"/></svg>\n                Shop Now!</a>\n        </div>\n\n        <ul class=\"navigation-menu\">\n                            <li class=\"nav-locale dropdown dropdown-locales\">\n                    <button class=\"dropdown-toggle\" id=\"dropdownLanguage\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                        <i class=\"fa fa-fw fa-globe\" aria-hidden=\"true\"></i> <span class=\"caption d-none d-lg-inline-block\">English</span>\n                    </button>\n                    <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownLanguage\">\n                                                                                                                        <a href=\"https://refactoring.guru/design-patterns/template-method\" class=\"dropdown-item locale-link active\" data-locale=\"en\" title=\"English\">English</a>\n                                                                                                                                <a href=\"https://refactoring.guru/es/design-patterns/template-method\" class=\"dropdown-item locale-link \" data-locale=\"es\" title=\"Español\">Español</a>\n                                                                                                                                <a href=\"https://refactoring.guru/fr/design-patterns/template-method\" class=\"dropdown-item locale-link \" data-locale=\"fr\" title=\"Français\">Français</a>\n                                                                                                                                <a href=\"https://refactoring.guru/ja/design-patterns/template-method\" class=\"dropdown-item locale-link \" data-locale=\"ja\" title=\"日本語\">日本語</a>\n                                                                                                                                <a href=\"https://refactoring.guru/ko/design-patterns/template-method\" class=\"dropdown-item locale-link \" data-locale=\"ko\" title=\"한국어\">한국어</a>\n                                                                                                                                <a href=\"https://refactoring.guru/pl/design-patterns/template-method\" class=\"dropdown-item locale-link \" data-locale=\"pl\" title=\"Polski\">Polski</a>\n                                                                                                                                <a href=\"https://refactoring.guru/pt-br/design-patterns/template-method\" class=\"dropdown-item locale-link \" data-locale=\"pt-br\" title=\"Português Brasileiro\">Português Brasileiro</a>\n                                                                                                                                <a href=\"https://refactoring.guru/ru/design-patterns/template-method\" class=\"dropdown-item locale-link \" data-locale=\"ru\" title=\"Русский\">Русский</a>\n                                                                                                                                <a href=\"https://refactoring.guru/uk/design-patterns/template-method\" class=\"dropdown-item locale-link \" data-locale=\"uk\" title=\"Українська\">Українська</a>\n                                                                                                                                <a href=\"https://refactoringguru.cn/design-patterns/template-method\" class=\"dropdown-item locale-link \" data-locale=\"zh\" title=\"中文\">中文</a>\ndiv>\n                </li>\n                        <li class=\"nav-contacts\">\n                <a class=\"userecho-private\" href=\"https://feedback.refactoring.guru/?show_feedback_form_private=true\" rel=\"nofollow\" title=\"Contact us\">\n                    <i class=\"fa fa-fw fa-envelope\" aria-hidden=\"true\"></i> <span class=\"caption d-none d-xl-inline-block\">Contact us</span>\n                </a>\n            </li>\n                            <li class=\"nav-user\">\n                    <a href=\"https://refactoring.guru/login\" title=\"Sign in\"><span class=\"sign-in-icon\"><svg style=\"width: 24px; height: 24px; \" class=\"inline-block \"  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\"opacity=\"0.4\" d=\"M352.7 222.4c3.2 1 6.5 1.6 10 1.6l21.3 0c17.7 0 32 14.3 32 32s-14.3 32-32 32l-21.3 0c-.8 0-1.7 0-2.5 0c-.9 0-1.7-.1-2.5-.1c-1.7-.1-3.4-.2-5-.4C357.4 414 391.1 512 432 512c44.2 0 80-114.6 80-256S476.2 0 432 0c-40.6 0-74.2 96.9-79.3 222.4z\"/><path fill=\"currentColor\"class=\"fa-primary\" d=\"M320 48a48 48 0 1 0 -96 0 48 48 0 1 0 96 0zM125.7 175.5c9.9-9.9 23.4-15.5 37.5-15.5c1.9 0 3.8 .1 5.6 .3L137.6 254c-9.3 28 1.7 58.8 26.8 74.5l86.2 53.9-25.4 88.8c-4.9 17 5 34.7 22 39.6s34.7-5 39.6-22l28.7-100.4c5.9-20.6-2.6-42.6-20.7-53.9L238 299l30.9-82.4 5.1 12.3C289 264.7 323.9 288 362.7 288l21.3 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-21.3 0c-12.9 0-24.6-7.8-29.5-19.7l-6.3-15c-14.6-35.1-44.1-61.9-80.5-73.1l-48.7-15c-11.1-3.4-22.7-5.2-34.4-5.2c-31 0-60.8 12.3-82.7 34.3L57.4 153.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l23.1-23.1zM91.2 352L32 352c-17.7 0-32 14.3-32 32s14.3 32 32 32l69.6 0c19 0 36.2-11.2 43.9-28.5L157 361.6l-9.5-6c-17.5-10.9-30.5-26.8-37.9-44.9L91.2 352z\"/></svg></span> <span class=\"account-icon\" style=\"display:none\"><svg style=\"width: 24px; height: 24px; \" class=\"inline-block \"  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 576 512\"><path fill=\"currentColor\"opacity=\"0.4\" d=\"M64 270.5l224-196c74.7 65.4 149.4 130.7 224.1 196.1l.4 177.3c.1 35.4-28.6 64.1-64 64.1l-320.4 0c-35.3 0-64-28.6-64-64L64 270.5zM176.1 433.6c.1 .5 .1 1.1 .2 1.6c.2 1 .5 2 .9 3c.8 1.9 2 3.6 3.4 5.1c2.9 2.9 6.9 4.7 11.3 4.7l192 0c8.8 0 16-7.2 16-16c0-44.2-35.8-80-80-80l-64 0c-22.1 0-42.1 9-56.6 23.4c-7.2 7.2-13.1 15.9-17.1 25.4c-2 4.8-3.6 9.8-4.7 15c-.5 2.6-.9 5.3-1.2 7.9c-.1 1.3-.2 2.7-.3 4.1c-.1 1.4-.1 2.7-.1 4.1c0 .6 0 1.1 .1 1.6zm48.2-184.2c-.1 1.1-.2 2.2-.2 3.2c-.1 1.1-.1 2.2-.1 3.3s0 2.2 .1 3.3c.1 1.1 .1 2.2 .2 3.2c.2 2.1 .5 4.3 1 6.4c.9 4.2 2.1 8.2 3.7 12c3.2 7.7 7.9 14.6 13.7 20.3C254.3 312.8 270.3 320 288 320c35.3 0 64-28.7 64-64s-28.7-64-64-64c-17.7 0-33.7 7.2-45.3 18.7c-5.8 5.8-10.5 12.7-13.7 20.3c-1.6 3.8-2.9 7.8-3.7 12c-.4 2.1-.8 4.2-1 6.4z\"/><path fill=\"currentColor\"class=\"fa-primary\" d=\"M309.1 7.9C297-2.6 279-2.6 266.9 7.9l-256 224c-13.3 11.6-14.6 31.9-3 45.2s31.9 14.6 45.2 3L288 74.5 522.9 280.1c13.3 11.6 33.5 10.3 45.2-3s10.3-33.5-3-45.2L512 185.5 512 64c0-17.7-14.3-32-32-32l-32 0c-17.7 0-32 14.3-32 32l0 37.5L309.1 7.9zM352 256a64 64 0 1 0 -128 0 64 64 0 1 0 128 0zm-96 96c-44.2 0-80 35.8-80 80c0 8.8 7.2 16 16 16l192 0c8.8 0 16-7.2 16-16c0-44.2-35.8-80-80-80l-64 0z\"/></svg></span> <span class=\"sign-out-icon\" style=\"display:none\"><svg style=\"width: 24px; height: 24px; \" class=\"inline-block \"  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\"opacity=\"0.4\" d=\"M0 256C0 397.4 35.8 512 80 512c25.3 0 47.8-37.5 62.5-96L128 416c-.5 0-1.1 0-1.6 0c-.6 0-1.1-.1-1.6-.1c-1.1-.1-2.1-.3-3.2-.5c-2.1-.4-4.1-1.1-6-1.9c-3.8-1.6-7.3-4-10.2-6.9s-5.2-6.3-6.9-10.2c-.8-1.9-1.4-3.9-1.9-6c-.2-1.1-.4-2.3-.5-3.5c0-.3 0-.6-.1-.8c0-.2 0-.4 0-.7c0-.4 0-.7 0-.7c0-.5 0-.7 0-.9c0-.3 0-.6 0-.9c0 0 0-.3 0-.7c0-.2 0-.4 0-.7c0-.2 0-.4 .1-.8c0-.3 .1-.6 .1-.9c0-.2 .1-.4 .1-.7c.1-.8 .2-1.2 .3-1.7c.5-2.2 1.1-4.2 1.9-6.1c1.6-3.8 4-7.3 6.9-10.2c5.8-5.8 13.8-9.4 22.6-9.4l26.2 0c3.8-29.6 5.8-62.1 5.8-96c0-18.3-.6-36.1-1.7-53.4c-1.7-1.2-3.4-2.5-4.9-4c-.8-.8-1.6-1.6-2.2-2.5s-1.3-1.7-1.9-2.6c-1.2-1.8-2.1-3.6-2.9-5.5s-1.4-3.9-1.8-5.9c-.2-1-.3-2-.4-3s-.1-2-.2-3c0-8.3 3.1-16.5 9.4-22.8C141 63.1 112.8 0 80 0C35.8 0 0 114.6 0 256z\"/><path fill=\"currentColor\"class=\"fa-primary\" d=\"M416 48a48 48 0 1 0 -96 0 48 48 0 1 0 96 0zM221.7 175.5c9.9-9.9 23.4-15.5 37.5-15.5c1.9 0 3.8 .1 5.6 .3L233.6 254c-9.3 28 1.7 58.8 26.8 74.5l86.2 53.9-25.4 88.8c-4.9 17 5 34.7 22 39.6s34.7-5 39.6-22l28.7-100.4c5.9-20.6-2.6-42.6-20.7-53.9L334 299l30.9-82.4 5.1 12.3C385 264.7 419.9 288 458.7 288l21.3 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-21.3 0c-12.9 0-24.6-7.8-29.5-19.7l-6.3-15c-14.6-35.1-44.1-61.9-80.5-73.1l-48.7-15c-11.1-3.4-22.7-5.2-34.4-5.2c-31 0-60.8 12.3-82.7 34.3l-23.1 23.1c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l23.1-23.1zM187.2 352L128 352c-17.7 0-32 14.3-32 32s14.3 32 32 32l69.6 0c19 0 36.2-11.2 43.9-28.5L253 361.6l-9.5-6c-17.5-10.9-30.5-26.8-37.9-44.9L187.2 352z\"/></svg></span> <span class=\"caption d-none d-xl-inline-block\">Sign in</span></a>\n                </li>\n                        <li class=\"nav-menu\">\n                <button class=\"navigation-toggle\"><i class=\"fa fa-fw fa-bars\" aria-hidden=\"true\"></i></button>\n            </li>\n        </ul>\n    </div>\n</nav>\n\n    <footer class=\"footer center-content\">\n    <div class=\"footer-container center-content-container\">\n        <div class=\"footer-inner container-fluid\">\n            <div class=\"row\">\n                <div class=\"col-8 col-md-10\">\n                    <ul class=\"footer-list footer-list-horizontal\">\n                        <li><a href=\"/\">Home</a></li>\n                        <li><a href=\"/refactoring\">Refactoring</a></li>\n                        <li><a href=\"/design-patterns\">Design Patterns</a></li>\n                        <li><a href=\"/store\">Premium Content</a></li>\n                        <li><a href=\"https://gitbybit.com/\">Git Course</a></li>\n                        <li><a href=\"https://refactoring.userecho.com/\" rel=\"nofollow\" class=\"userecho-public\">Forum</a></li>\n                        <li><a href=\"https://refactoring.userecho.com/\" rel=\"nofollow\" class=\"userecho-private\">Contact us</a></li>\n                    </ul>\n                </div>\n                <div class=\"col-4 col-md-2\">\n                    <ul class=\"footer-list footer-list-iconic footer-list-right\">\n                                                    <li><a href=\"https://www.facebook.com/refactoring.guru\"><i class=\"fa fa-facebook-official\"></i></a></li>\n                                                <li><a href=\"/sendy/form\" rel=\"nofollow\"><i class=\"fa fa-envelope\" aria-hidden=\"true\"></i></a></li>\n                        <li><a href=\"https://github.com/RefactoringGuru\"><i class=\"fa fa-github-circled\"></i></a></li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"footer-second\">\n        <div class=\"footer-container center-content-container\">\n            <div class=\"footer-inner container-fluid\">\n                <div class=\"row\">\n                    <div class=\"col-12 col-sm-6\">\n                        <i class=\"fa fa-fw fa-copyright\"></i> 2014-2025 <a href=\"/\">Refactoring.Guru</a>. <span style=\"white-space: nowrap\">All rights reserved.</span><br>\n                        <i class=\"fa fa-fw fa-image\"></i> Illustrations by <a href=\"http://zhart.us/\" rel=\"nofollow\"><span style=\"white-space: nowrap\">Dmitry Zhart</span></a>\n                    </div>\n                    <div class=\"footer-links-right col-12 col-sm-6 mt-4 mt-sm-0\">\n                        <ul class=\"footer-list footer-list-horizontal footer-list-right\">\n                            <li><a href=\"/terms\"><span>Terms &amp; Conditions</span></a>\n                            </li>\n                            <li><a href=\"/privacy-policy\"><span>Privacy Policy</span></a>\n                            </li>\n                            <li><a href=\"/content-usage-policy\"><span>Content Usage Policy</span></a>\n                            </li>\n                            <li><a href=\"/site-about\"><span>About us</span></a>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n                                    <div class=\"row\">\n                        <div class=\"col-12 col-sm-4\">\n                            <div class=\"mt-4\">\n                                                                    <b>Ukrainian office:</b><br>\n                                    <object class=\"fa-fw\" style=\"height: 0.8rem; filter: invert(50%);\"  type=\"image/svg+xml\" data=\"/images/content-public/icons/fa-building.svg?id=afddb5806968b0a9acfc1df75a181234\">\n                                        <img class=\"fa-fw\" style=\"height: 0.8rem;\" src=\"/images/content-public/icons/fa-building.svg?id=afddb5806968b0a9acfc1df75a181234\" alt=\"Organization address\"/>\n                                    </object> FOP Olga Skobeleva<br>\n                                    <svg style=\"width: 16px; height: 16px; margin-right: 1px; fill: currentColor;\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\"><path d=\"M352 192c0-88.4-71.6-160-160-160S32 103.6 32 192c0 15.6 5.4 37 16.6 63.4c10.9 25.9 26.2 54 43.6 82.1c34.1 55.3 74.4 108.2 99.9 140c25.4-31.8 65.8-84.7 99.9-140c17.3-28.1 32.7-56.3 43.6-82.1C346.6 229 352 207.6 352 192zm32 0c0 87.4-117 243-168.3 307.2c-12.3 15.3-35.1 15.3-47.4 0C117 435 0 279.4 0 192C0 86 86 0 192 0S384 86 384 192zm-240 0a48 48 0 1 0 96 0 48 48 0 1 0 -96 0zm48 80a80 80 0 1 1 0-160 80 80 0 1 1 0 160z\"/></svg> Abolmasova 7<br>\n                                    <span style=\"margin-left: 21px;\">Kyiv, Ukraine, 02002</span><br>\n                                    <i class=\"fa fa-fw fa-envelope\"></i>  Email: support@refactoring.guru\n                                \n                            </div>\n                        </div>\n                        <div class=\"col-12 col-sm-4\">\n                            <div class=\"mt-4\">\n                                <b>Spanish office:</b><br>\n                                <object class=\"fa-fw\" style=\"height: 0.8rem; filter: invert(50%);\"  type=\"image/svg+xml\" data=\"/images/content-public/icons/fa-building.svg?id=afddb5806968b0a9acfc1df75a181234\">\n                                    <img class=\"fa-fw\" style=\"height: 0.8rem;\" src=\"/images/content-public/icons/fa-building.svg?id=afddb5806968b0a9acfc1df75a181234\" alt=\"Organization address\"/>\n                                </object> Oleksandr Shvets<br>\n                                <svg style=\"width: 16px; height: 16px; margin-right: 1px; fill: currentColor;\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\"><path d=\"M352 192c0-88.4-71.6-160-160-160S32 103.6 32 192c0 15.6 5.4 37 16.6 63.4c10.9 25.9 26.2 54 43.6 82.1c34.1 55.3 74.4 108.2 99.9 140c25.4-31.8 65.8-84.7 99.9-140c17.3-28.1 32.7-56.3 43.6-82.1C346.6 229 352 207.6 352 192zm32 0c0 87.4-117 243-168.3 307.2c-12.3 15.3-35.1 15.3-47.4 0C117 435 0 279.4 0 192C0 86 86 0 192 0S384 86 384 192zm-240 0a48 48 0 1 0 96 0 48 48 0 1 0 -96 0zm48 80a80 80 0 1 1 0-160 80 80 0 1 1 0 160z\"/></svg> Avda Pamplona 64<br>\n                                <span style=\"margin-left: 21px;\">Pamplona, Spain, 31009</span><br>\n                                <i class=\"fa fa-fw fa-envelope\"></i>  Email: support@refactoring.guru\n                            </div>\n                        </div>\n                    </div>\n                            </div>\n        </div>\n    </div>\n</footer>\n\n</div>\n\n\n    <script defer>\n    var CodeMirrorScripts = [\"/js/codemirror.min.js?id=f7ae4adf14bd00338caf8e95da733cc9\"];\n</script>\n\n\n\n    <script>window.loadContent = true;window.loadCart = true;</script>\n</body>\n</html>\n"},
{"title": null, "url": "https://refactoring.guru/design-patterns/strategy", "raw_html": "<!DOCTYPE html>\n<html lang=\"en\" dir=\"ltr\">\n<head prefix=\"og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# website: http://ogp.me/ns/website#\">\n    <meta charset=\"utf-8\">\n    <title>Strategy</title>\n\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n    <meta name=\"theme-color\" content=\"#A2E2FD\" />\n\n            <style>\n        .buy-widget-excl-local-taxes {\n            display: none;\n        }\n    </style>\n    \n    <link rel=\"preload\" href=\"/fonts/PTSans/ptsans-regular_en.woff2?1\" as=\"font\" type=\"font/woff2\" crossorigin>\n    <link rel=\"preload\" href=\"/fonts/PTSans/ptsans-bold_en.woff2?1\" as=\"font\" type=\"font/woff2\" crossorigin>\n        <link rel=\"preload\" href=\"/fonts/fontello/fontawesome.woff2?15843843\" as=\"font\" type=\"font/woff2\" crossorigin>\n    <link rel=\"preload\" href=\"/fonts/FiraCode/woff2/FiraCode-Regular_latin.woff2\" as=\"font\" type=\"font/woff2\" crossorigin>\n        <link rel=\"preconnect dns-prefetch\" href=\"https://cdn.paddle.com\">\n    <link rel=\"preconnect dns-prefetch\" href=\"https://www.googletagmanager.com\">\n\n    <link rel=\"alternate\" href=\"https://refactoring.guru/design-patterns/strategy\" hreflang=\"x-default\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/es/design-patterns/strategy\" hreflang=\"es\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/fr/design-patterns/strategy\" hreflang=\"fr\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/ja/design-patterns/strategy\" hreflang=\"ja\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/ko/design-patterns/strategy\" hreflang=\"ko\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/pl/design-patterns/strategy\" hreflang=\"pl\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/pt-br/design-patterns/strategy\" hreflang=\"pt-br\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/ru/design-patterns/strategy\" hreflang=\"ru\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/uk/design-patterns/strategy\" hreflang=\"uk\"/>\n    <link rel=\"alternate\" href=\"https://refactoringguru.cn/design-patterns/strategy\" hreflang=\"zh\"/>\n\n    <meta name=\"description\" content=\"Strategy is a behavioral design pattern that lets you define a family of algorithms, put each of them into a separate class, and make their objects interchangeable.\">\n\n    <link rel=\"canonical\" href=\"https://refactoring.guru/design-patterns/strategy\"/>\n\n    <link rel=\"icon\" type=\"image/x-icon\" href=\"/favicon.png\"/>\n\n        <meta property=\"fb:app_id\" content=\"666819623386327\"/>\n        <meta property=\"og:type\" content=\"website\"/>\n        <meta property=\"og:image\" content=\"https://refactoring.guru/images/refactoring/social/facebook-share-preview.png?id=dbf9e98269595be86eb668f365be6868\"/>\n    \n                    <link rel=\"stylesheet\" href=\"/css/public-packed.min.css?id=aaefab4da343b914b8dda9973604a9e8\">\n        <style type=\"text/css\">\n                    @font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_cyrillic-ext.woff2?1) format(\"woff2\");unicode-range:U+0460-052F,U+1C80-1C88,U+20B4,U+2DE0-2DFF,U+A640-A69F,U+FE2E-FE2F}@font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_cyrillic.woff2?1) format(\"woff2\");unicode-range:U+0400-045F,U+0490-0491,U+04B0-04B1,U+2116}@font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_latin-ext.woff2?1) format(\"woff2\");unicode-range:U+0100-024F,U+0259,U+1E00-1EFF,U+2020,U+20A0-20AB,U+20AD-20CF,U+2113,U+2C60-2C7F,U+A720-A7FF}@font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_latin.woff2?1) format(\"woff2\");unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}@font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_en.woff2?1) format(\"woff2\");unicode-range:U+0-FF,U+131,U+142,U+152,U+153,U+2BB,U+2BC,U+2C6,U+2DA,U+2DC,U+420,U+423,U+430,U+438-43A,U+43D,U+440,U+441,U+443,U+44C,U+457,U+2000-206F,U+2074,U+20AA-20AC,U+20B4,U+20B9,U+20BA,U+20BD,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_cyrillic-ext.woff2?1) format(\"woff2\");unicode-range:U+0460-052F,U+1C80-1C88,U+20B4,U+2DE0-2DFF,U+A640-A69F,U+FE2E-FE2F}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_cyrillic.woff2?1) format(\"woff2\");unicode-range:U+0400-045F,U+0490-0491,U+04B0-04B1,U+2116}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_latin-ext.woff2?1) format(\"woff2\");unicode-range:U+0100-024F,U+0259,U+1E00-1EFF,U+2020,U+20A0-20AB,U+20AD-20CF,U+2113,U+2C60-2C7F,U+A720-A7FF}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_latin.woff2?1) format(\"woff2\");unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_en.woff2?1) format(\"woff2\");unicode-range:U+0-FF,U+131,U+142,U+152,U+153,U+2BB,U+2BC,U+2C6,U+2DA,U+2DC,U+420,U+423,U+430,U+438-43A,U+43D,U+440,U+441,U+443,U+44C,U+457,U+2000-206F,U+2074,U+20AA-20AC,U+20B4,U+20B9,U+20BA,U+20BD,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}\n            </style>\n\n    \n            <script defer src=\"/js/public.min.js?id=1f19fe18ffe0fc844ede8a0f2ee64202\"></script>\n        <script defer src=\"/js/checkout.min.js?id=b4da9c5bd8b1cf504447c07ae8b7cd44\"></script>\n            <script defer src=\"https://cdn.paddle.com/paddle/v2/paddle.js\"></script>\n    <script async src=\"https://www.googletagmanager.com/gtag/js?id=G-SR8Y3GYQYC\"></script>\n\n    <script type=\"application/ld+json\">\n        {\"@context\": \"http://schema.org\", \"@graph\": [{\"@type\":\"Person\",\"@id\":\"https://refactoring.guru/#founder\",\"name\":\"Alexander Shvets\"},{\"@type\":\"Organization\",\"@id\":\"https://refactoring.guru/#organization\",\"name\":\"Refactoring.Guru\",\"description\":\"Refactoring.Guru makes it easy for you to discover everything you need to know about refactoring, design patterns, SOLID principles, and other smart programming topics.\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https://refactoring.guru/#organizationlogo\",\"url\":\"https://refactoring.guru/images/content-public/logos/logo-plain.png\",\"caption\":\"Refactoring.Guru\"},\"logo\":{\"@id\":\"https://refactoring.guru/#organizationlogo\"},\"founder\":{\"@id\":\"https://refactoring.guru/#founder\"},\"sameAs\":[\"https://www.facebook.com/refactoring.guru\",\"https://twitter.com/RefactoringGuru\",\"https://github.com/RefactoringGuru\"]},{\"@type\":\"WebSite\",\"@id\":\"https://refactoring.guru/#website\",\"url\":\"https://refactoring.guru/\",\"name\":\"Refactoring.Guru\",\"description\":\"Refactoring.Guru makes it easy for you to discover everything you need to know about refactoring, design patterns, SOLID principles, and other smart programming topics.\",\"author\":{\"@id\":\"https://refactoring.guru/#founder\"},\"publisher\":{\"@id\":\"https://refactoring.guru/#organization\"},\"copyrightYear\":2014},{\"@type\":\"WebPage\",\"@id\":\"https://refactoring.guru/design-patterns/strategy#webpage\",\"url\":\"https://refactoring.guru/design-patterns/strategy\",\"inLanguage\":\"en\",\"name\":\"Strategy\",\"description\":\"Strategy is a behavioral design pattern that lets you define a family of algorithms, put each of them into a separate class, and make their objects interchangeable.\",\"isPartOf\":{\"@id\":\"https://refactoring.guru#website\"},\"breadcrumb\":{\"@id\":\"https://refactoring.guru/design-patterns/strategy#breadcrumb\"},\"primaryImageOfPage\":{\"@id\":\"https://refactoring.guru/design-patterns/strategy#primaryimage\"},\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https://refactoring.guru/design-patterns/strategy#primaryimage\",\"url\":\"https://refactoring.guru/images/patterns/content/strategy/strategy-3x.png\",\"width\":1920,\"height\":1200}},{\"@type\":\"Article\",\"@id\":\"https://refactoring.guru/design-patterns/strategy#article\",\"isPartOf\":{\"@id\":\"https://refactoring.guru/design-patterns/strategy#webpage\"},\"mainEntityOfPage\":{\"@id\":\"https://refactoring.guru/design-patterns/strategy#webpage\"},\"author\":{\"@id\":\"https://refactoring.guru#founder\"},\"publisher\":{\"@id\":\"https://refactoring.guru#organization\"},\"headline\":\"Strategy\",\"datePublished\":\"2024-01-01\",\"dateModified\":\"2025-01-01\",\"articleSection\":\"Design Patterns\",\"image\":{\"@id\":\"https://refactoring.guru/design-patterns/strategy#primaryimage\"}},{\"@type\":\"BreadcrumbList\",\"@id\":\"https://refactoring.guru/design-patterns/strategy#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https://refactoring.guru\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Design Patterns\",\"item\":\"https://refactoring.guru/design-patterns\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"Behavioral Patterns\",\"item\":\"https://refactoring.guru/design-patterns/behavioral-patterns\"}]}] }\n    </script>\n\n    <script>\nfunction extend(){var extended={};var deep=false;var i=0;var length=arguments[\"length\"];if(Object[\"prototype\"][\"toString\"][\"call\"](arguments[0])=== '[object Boolean]'){deep= arguments[0];i++};var merge=function(obj){for(var prop in obj){if(Object[\"prototype\"][\"hasOwnProperty\"][\"call\"](obj,prop)){if(deep&& Object[\"prototype\"][\"toString\"][\"call\"](obj[prop])=== '[object Object]'){extended[prop]= extend(true,extended[prop],obj[prop])}else {extended[prop]= obj[prop]}}}};for(;i< length;i++){var obj=arguments[i];merge(obj)};return extended}\nfunction defer(method) {if (window.jQuery) {method();} else {setTimeout(function() { defer(method) }, 50);}}\n</script>\n<script>\n+function(sd){sd = (typeof sd === \"string\") ? JSON.parse(atob(sd)) : sd;for(var property in sd){if(window[property]!== null&&  typeof window[property]=== 'object'){window[property]= extend(true,window[property],sd[property])}else {window[property]= sd[property]}}}(\"eyJsb2NhbGUiOiJlbiIsImxvY2FsZV9wcmVmaXgiOiIiLCJsb2NhbGl6ZWRfdXJsX3ByZWZpeCI6Imh0dHBzOlwvXC9yZWZhY3RvcmluZy5ndXJ1XC8iLCJ1cmxfcHJlZml4IjoiaHR0cHM6XC9cL3JlZmFjdG9yaW5nLmd1cnVcLyIsImxvY2FsaXplZF91cmxfcHJlZml4X20iOiJodHRwczpcL1wvcmVmYWN0b3JpbmcuZ3VydVwvIiwidXJsX3ByZWZpeF9tIjoiaHR0cHM6XC9cL3JlZmFjdG9yaW5nLmd1cnVcLyIsInVzZXJfZWNob19hbGlhcyI6InJlZmFjdG9yaW5nIiwidXNlcl9lY2hvX2hvc3QiOiJmZWVkYmFjay5yZWZhY3RvcmluZy5ndXJ1IiwidXNlcl9lY2hvX3ByaXZhdGVfZm9ydW0iOiIyIiwidXNlcl9lY2hvX2xvY2FsZSI6ImVuIiwidXNlcl9lY2hvX3B1YmxpY19mb3J1bSI6IjMiLCJ1c2VyX2VjaG9fcHVibGljX2ZvcnVtX3VybCI6Imh0dHBzOlwvXC9mZWVkYmFjay5yZWZhY3RvcmluZy5ndXJ1XC8iLCJ1c2VyX2VjaG9fc3NvX3Rva2VuIjoiIn0=\");\n</script>\n\n<script>\n    window.dataLayer = window.dataLayer || [];\n    function gtag(){dataLayer.push(arguments);}\n    gtag('js', new Date());\n            gtag('set', 'linker', {'domains': [\"refactoring.guru,refactoringguru.cn\"]});\n        gtag('config', 'G-SR8Y3GYQYC', {\n        // Disable default page view, because we're going to report them on our own.\n        // This is done to report traffic on localized domains as part of the main website traffic\n        // See the Chinese overrides below.\n        send_page_view: false,\n    });\n</script>\n\n<script>\n    (() => {\n        // On first page view after returning from social network, we need to send the social login event.\n        (function detectSocialLogin() {\n            let getCookie = function (name) {\n                var nameEQ = name + \"=\";\n                var ca = document.cookie.split(';');\n                for (var i = 0; i < ca.length; i++) {\n                    var c = ca[i];\n                    while (c.charAt(0) == ' ') c = c.substring(1, c.length);\n                    if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);\n                }\n                return null;\n            };\n            window.social_login_provider = window.social_login_provider || getCookie('social_login_provider');\n            if (window.social_login_provider) {\n                gtag('set', {referrer: null});\n                gtag('event', 'login', {\"method\": window.social_login_provider});\n                // Delete cookie.\n                document.cookie = 'social_login_provider=; Path=/; Max-Age=-99999999;';\n            }\n        })();\n\n        function trackPageView(location, title) {\n            location = location || document.location.href;\n            title = title || document.title;\n\n            // This is show on https://refactoringguru.cn/ and alike.\n            if (typeof window.analytics_path_prefix === 'string') {\n                if (/^(https?:\\/\\/[^\\/]+?)\\/$/.test(location)) {\n                    location = location.replace(/(https?:\\/\\/[^\\/]+?)\\//, '$1' + window.analytics_path_prefix);\n                } else {\n                    location = location.replace(/(https?:\\/\\/[^\\/]+?)\\//, '$1' + window.analytics_path_prefix + '/');\n                }\n                gtag('set', {\n                    'page_location': location\n                });\n            }\n\n            // This is show on https://refactoring.guru/zh/login and alike.\n            if (typeof window.analytics_location_prefix === 'string') {\n                location = location.replace(/(https?:\\/\\/[^\\/]+?)\\//, window.analytics_location_prefix);\n                gtag('set', {\n                    'page_location': location\n                });\n            }\n\n            gtag('event', 'page_view', {\n                page_location: location,\n                page_title: title,\n                locale: window.locale ?? 'en'\n            });\n        }\n\n        if (window.loadContent) {\n            window.onPageLoad = window.onPageLoad || [];\n            window.onPageLoad.push({\n                func: function (context) {\n                    trackPageView(window.location.origin + context.canonicalPath, context.title);\n                },\n                afterAll: true,\n            });\n        }\n        else {\n            trackPageView();\n        }\n    })();\n</script>\n\n\n</head>\n<body class=\"locale-en   announcement   strategy\" data-body_class=\"strategy\">\n\n<div class=\"body-holder\">\n\n            <div class=\"announcement-block announcement-block-summer prom\" data-id=\"DIDP-announcement\" data-creative-id=\"en\" data-position=\"top\">\n        <span class=\"beach-and-sea\">\n            <span class=\"a1\"></span>\n            <span class=\"a2\"><span class=\"wave\"></span></span>\n            <span class=\"yacht\"></span>\n        </span>\n        <a href=\"/store\">\n            <img src=\"/images/content-public/ann/summer/sunbed.svg?id=b1e7314a63715a13870a6bd1a43613f7\" loading=\"lazy\" style=\"width: 32px; height:32px;vertical-align: middle; scale: -1 1 1;\">\n            <span class=\"announcement-link-text\">Summer SALE</span>\n            <img src=\"/images/content-public/ann/summer/reading-book.svg?id=36006ea720df8c171968cf613e8ea164\" loading=\"lazy\" style=\"width: 32px; height:32px;vertical-align: middle;\">\n        </a>\n    </div>\n\n    \n    <div class=\"cart-placeholder\">\n    <div class=\"cart-block-container\" style=\"display:none\">\n        <div class=\"cart-block btn-group\">\n            <a href=\"#checkout\" class=\"btn cart open-checkout\">\n                <span class=\"cart-text\"></span>&nbsp;<strong class=\"cart-total font-money\"></strong>\n            </a><a href=\"#checkout\" class=\"btn btn-secondary checkout open-checkout\"><i class=\"fa fa-shopping-cart\" aria-hidden=\"true\"></i> <span class=\"btn-text-span d-none d-sm-inline-block d-lg-none d-hg-inline-block\"></span></a>\n        </div>\n    </div>\n</div>\n    <main role=\"main\" class=\"main-content top-content center-content \" data-page_class=\"\">\n        <div class=\"main-content-container center-content-container\">\n                        <div class=\"pattern page text\">\n<article>\n    <div class=\"breadcrumb\">\n                                    <a class=\"home\" href=\"/\"><i class=\"fa fa-home\" aria-hidden=\"true\"></i></a>\n                                                / <a class=\"type\" href=\"/design-patterns\">Design Patterns</a>\n                                                / <a class=\"type\" href=\"/design-patterns/behavioral-patterns\">Behavioral Patterns</a>\n                        </div>\n    <h1 class=\"title\">Strategy</h1>\n\n    <script type=\"text/javascript\">\n        // Shorten examples titles for users.\n        var h1 = document.getElementsByTagName(\"H1\")[0];\n        if (h1.offsetHeight > 160) {\n            h1.className += ' smaller';\n        }\n\n        // Small beautification for pattern examples.\n        var title = h1.innerHTML;\n        title = title.replace(/^(Java|C\\+\\+|C#|PHP|Python|Ruby|Delphi): (.*)$/, '<strong>$1:</strong> $2');\n        h1.innerHTML = title;\n    </script>\n\n    \n    \n\n    <div class=\"section intent\">\n<h2 id=\"intent\"><i class=\"fa fa-flip-horizontal fa-comment-alt-dots\" aria-hidden=\"true\"></i> Intent</h2>\n<p><strong>Strategy</strong> is a behavioral design pattern that lets you define a family of algorithms, put each of them into a separate class, and make their objects interchangeable.</p>\n<figure class=\"image\"><img src=\"/images/patterns/content/strategy/strategy.png?id=379bfba335380500375881a3da6507e0\" alt=\"Strategy design pattern\" srcset=\"/images/patterns/content/strategy/strategy.png?id=379bfba335380500375881a3da6507e0 640w,/images/patterns/content/strategy/strategy-1.5x.png?id=33ecebc66a9761454f2786a9b3e9bbe5 960w,/images/patterns/content/strategy/strategy-2x.png?id=1cee47d05a76fddf07dce9c67b700748 1280w\" sizes=\"(max-width: 720px) 100vw, 640px\" width=\"640\" style=\"aspect-ratio: 1.6;\" fetchpriority=\"high\" /></figure>\n</div>\n<div class=\"section problem\">\n<h2 id=\"problem\"><i class=\"fa fa-frown\" aria-hidden=\"true\"></i> Problem</h2>\n<p>One day you decided to create a navigation app for casual travelers. The app was centered around a beautiful map which helped users quickly orient themselves in any city.</p>\n<p>One of the most requested features for the app was automatic route planning. A user should be able to enter an address and see the fastest route to that destination displayed on the map.</p>\n<p>The first version of the app could only build the routes over roads. People who traveled by car were bursting with joy. But apparently, not everybody likes to drive on their vacation. So with the next update, you added an option to build walking routes. Right after that, you added another option to let people use public transport in their routes.</p>\n<p>However, that was only the beginning. Later you planned to add route building for cyclists. And even later, another option for building routes through all of a city’s tourist attractions.</p>\n<figure class=\"image\"><img src=\"/images/patterns/diagrams/strategy/problem.png?id=e5ca943e559a979bd31d20e232dc22b6\" alt=\"The code of the navigator became very bloated\" srcset=\"/images/patterns/diagrams/strategy/problem.png?id=e5ca943e559a979bd31d20e232dc22b6 330w,/images/patterns/diagrams/strategy/problem-1.5x.png?id=31d1042ffc28056845e45d5c616da2a9 495w,/images/patterns/diagrams/strategy/problem-2x.png?id=3974fb99c97aec525dd0ffcff2e48e78 660w\" sizes=\"(max-width: 720px) 100vw, 330px\" width=\"330\" style=\"aspect-ratio: 2.2;\" loading=\"lazy\" /><figcaption>\n<p>The code of the navigator became bloated.</p>\n</figcaption></figure>\n<p>While from a business perspective the app was a success, the technical part caused you many headaches. Each time you added a new routing algorithm, the main class of the navigator doubled in size. At some point, the beast became too hard to maintain.</p>\n<p>Any change to one of the algorithms, whether it was a simple bug fix or a slight adjustment of the street score, affected the whole class, increasing the chance of creating an error in already-working code.</p>\n<p>In addition, teamwork became inefficient. Your teammates, who had been hired right after the successful release, complain that they spend too much time resolving merge conflicts. Implementing a new feature requires you to change the same huge class, conflicting with the code produced by other people.</p>\n</div>\n<div class=\"section solution\">\n<h2 id=\"solution\"><i class=\"fa fa-smile-beam\" aria-hidden=\"true\"></i> Solution</h2>\n<p>The Strategy pattern suggests that you take a class that does something specific in a lot of different ways and extract all of these algorithms into separate classes called <em>strategies</em>.</p>\n<p>The original class, called <em>context</em>, must have a field for storing a reference to one of the strategies. The context delegates the work to a linked strategy object instead of executing it on its own.</p>\n<p>The context isn’t responsible for selecting an appropriate algorithm for the job. Instead, the client passes the desired strategy to the context. In fact, the context doesn’t know much about strategies. It works with all strategies through the same generic interface, which only exposes a single method for triggering the algorithm encapsulated within the selected strategy.</p>\n<p>This way the context becomes independent of concrete strategies, so you can add new algorithms or modify existing ones without changing the code of the context or other strategies.</p>\n<figure class=\"image\"><img src=\"/images/patterns/diagrams/strategy/solution.png?id=0813a174b29a2ed5902d321aba28e5fc\" alt=\"Route planning strategies\" srcset=\"/images/patterns/diagrams/strategy/solution.png?id=0813a174b29a2ed5902d321aba28e5fc 570w,/images/patterns/diagrams/strategy/solution-1.5x.png?id=ce3d4e57f4a2a06ebc96f2607b3d6691 855w,/images/patterns/diagrams/strategy/solution-2x.png?id=66b5ee048ea2ad25c4b20f180ebf94d7 1140w\" sizes=\"(max-width: 720px) 100vw, 570px\" width=\"570\" style=\"aspect-ratio: 2.04;\" loading=\"lazy\" /><figcaption>\n<p>Route planning strategies.</p>\n</figcaption></figure>\n<p>In our navigation app, each routing algorithm can be extracted to its own class with a single <code>buildRoute</code> method. The method accepts an origin and destination and returns a collection of the route’s checkpoints.</p>\n<p>Even though given the same arguments, each routing class might build a different route, the main navigator class doesn’t really care which algorithm is selected since its primary job is to render a set of checkpoints on the map. The class has a method for switching the active routing strategy, so its clients, such as the buttons in the user interface, can replace the currently selected routing behavior with another one.</p>\n</div>\n<div class=\"section analogy\">\n<h2 id=\"analogy\"><i class=\"fa fa-car-side\" aria-hidden=\"true\"></i> Real-World Analogy</h2>\n<figure class=\"image\"><img src=\"/images/patterns/content/strategy/strategy-comic-1-en.png?id=f64d7d8e6f83a7792a769039a66007c1\" alt=\"Various transportation strategies\" srcset=\"/images/patterns/content/strategy/strategy-comic-1-en.png?id=f64d7d8e6f83a7792a769039a66007c1 640w,/images/patterns/content/strategy/strategy-comic-1-en-1.5x.png?id=b952bc8d43f5e4e0db81b8e3c62dc205 960w,/images/patterns/content/strategy/strategy-comic-1-en-2x.png?id=7eb14bd7920ad630c1ecf448d40602df 1280w\" sizes=\"(max-width: 720px) 100vw, 640px\" width=\"640\" style=\"aspect-ratio: 2.13;\" loading=\"lazy\" /><figcaption>\n<p>Various strategies for getting to the airport.</p>\n</figcaption></figure>\n<p>Imagine that you have to get to the airport. You can catch a bus, order a cab, or get on your bicycle. These are your transportation strategies. You can pick one of the strategies depending on factors such as budget or time constraints.</p>\n</div>\n<div class=\"section structure-container\">\n<h2 id=\"structure\"><i class=\"fa fa-sitemap\" aria-hidden=\"true\"></i> Structure</h2>\n<div class=\"structure\">\n<div class=\"struct-image1 struct-image\">\n<figure class=\"image\"><img class=\"structure-img-non-indexed d-none d-xl-block\" src=\"/images/patterns/diagrams/strategy/structure.png?id=c6aa910c94960f35d100bfca02810ea1\" alt=\"Structure of the Strategy design pattern\" srcset=\"/images/patterns/diagrams/strategy/structure.png?id=c6aa910c94960f35d100bfca02810ea1 440w,/images/patterns/diagrams/strategy/structure-1.5x.png?id=5b1c6376b06374719dcae95455b068d8 660w,/images/patterns/diagrams/strategy/structure-2x.png?id=5bd791857c3bab419bcf4fa86877439d 880w\" sizes=\"(max-width: 720px) 100vw, 440px\" width=\"440\" style=\"aspect-ratio: 1.19;\" loading=\"lazy\" /><img class=\"structure-img-indexed d-xl-none\" src=\"/images/patterns/diagrams/strategy/structure-indexed.png?id=ff55c5a6273cf82a5667f3cab5b605c7\" alt=\"Structure of the Strategy design pattern\" srcset=\"/images/patterns/diagrams/strategy/structure-indexed.png?id=ff55c5a6273cf82a5667f3cab5b605c7 450w,/images/patterns/diagrams/strategy/structure-indexed-1.5x.png?id=3d6ba05b8a74a9fb8e3f88eb9ca1e30f 675w,/images/patterns/diagrams/strategy/structure-indexed-2x.png?id=9f8e2f838f16705775411e2b4616820e 900w\" sizes=\"(max-width: 720px) 100vw, 450px\" width=\"450\" style=\"aspect-ratio: 1.15;\" loading=\"lazy\" /></figure>\n</div>\n<ol><li class=\"struct-li1\">\n<p>The <strong>Context</strong> maintains a reference to one of the concrete strategies and communicates with this object only via the strategy interface.</p>\n</li>\n<li class=\"struct-li2\">\n<p>The <strong>Strategy</strong> interface is common to all concrete strategies. It declares a method the context uses to execute a strategy.</p>\n</li>\n<li class=\"struct-li3\">\n<p><strong>Concrete Strategies</strong> implement different variations of an algorithm the context uses.</p>\n</li>\n<li class=\"struct-li4\">\n<p>The context calls the execution method on the linked strategy object each time it needs to run the algorithm. The context doesn’t know what type of strategy it works with or how the algorithm is executed.</p>\n</li>\n<li class=\"struct-li5\">\n<p>The <strong>Client</strong> creates a specific strategy object and passes it to the context. The context exposes a setter which lets clients replace the strategy associated with the context at runtime.</p>\n</li></ol>\n<style structure type=\"text/css\" >\n@media (min-width: 1200px) {\n.structure {\nmargin: 0;\nwidth: auto;\nheight: 460px;\n}\n\n.struct-image1 {\nleft: 170px;\ntop: 40px;\n}\n\n.struct-li1 {\nleft: 0px;\ntop: 10px;\nwidth: 210px;\n}\n\n.struct-li2 {\nleft: 620px;\ntop: 40px;\nwidth: 240px;\n}\n\n.struct-li3 {\nleft: 620px;\ntop: 200px;\nwidth: 240px;\n}\n\n.struct-li4 {\nleft: 440px;\ntop: 320px;\nwidth: 280px;\n}\n\n.struct-li5 {\nleft: 0px;\ntop: 230px;\nwidth: 210px;\n}\n\n}\n\n</style>\n</div></div>\n<div class=\"section pseudocode\">\n<h2 id=\"pseudocode\"><i class=\"fa fa-hashtag\" aria-hidden=\"true\"></i> Pseudocode</h2>\n<p>In this example, the context uses multiple <strong>strategies</strong> to execute various arithmetic operations.</p>\n<figure class=\"code\">\n<pre class=\"code\" lang=\"pseudocode\">// The strategy interface declares operations common to all\n// supported versions of some algorithm. The context uses this\n// interface to call the algorithm defined by the concrete\n// strategies.\ninterface Strategy is\n    method execute(a, b)\n\n// Concrete strategies implement the algorithm while following\n// the base strategy interface. The interface makes them\n// interchangeable in the context.\nclass ConcreteStrategyAdd implements Strategy is\n    method execute(a, b) is\n        return a + b\n\nclass ConcreteStrategySubtract implements Strategy is\n    method execute(a, b) is\n        return a - b\n\nclass ConcreteStrategyMultiply implements Strategy is\n    method execute(a, b) is\n        return a * b\n\n// The context defines the interface of interest to clients.\nclass Context is\n    // The context maintains a reference to one of the strategy\n    // objects. The context doesn't know the concrete class of a\n    // strategy. It should work with all strategies via the\n    // strategy interface.\n    private strategy: Strategy\n\n    // Usually the context accepts a strategy through the\n    // constructor, and also provides a setter so that the\n    // strategy can be switched at runtime.\n    method setStrategy(Strategy strategy) is\n        this.strategy = strategy\n\n    // The context delegates some work to the strategy object\n    // instead of implementing multiple versions of the\n    // algorithm on its own.\n    method executeStrategy(int a, int b) is\n        return strategy.execute(a, b)\n\n\n// The client code picks a concrete strategy and passes it to\n// the context. The client should be aware of the differences\n// between strategies in order to make the right choice.\nclass ExampleApplication is\n    method main() is\n        Create context object.\n\n        Read first number.\n        Read last number.\n        Read the desired action from user input.\n\n        if (action == addition) then\n            context.setStrategy(new ConcreteStrategyAdd())\n\n        if (action == subtraction) then\n            context.setStrategy(new ConcreteStrategySubtract())\n\n        if (action == multiplication) then\n            context.setStrategy(new ConcreteStrategyMultiply())\n\n        result = context.executeStrategy(First number, Second number)\n\n        Print result.\n</pre>\n</figure>\n</div>\n<div class=\"section applicability-container\">\n<h2 id=\"applicability\"><i class=\"fa fa-lightbulb-on\" aria-hidden=\"true\"></i> Applicability</h2>\n<div class=\"applicability\">\n<div class=\"applicability-problem\">\n<p><i class=\"fa fa-fw fa-bug\" aria-hidden=\"true\"></i> Use the Strategy pattern when you want to use different variants of an algorithm within an object and be able to switch from one algorithm to another during runtime.</p>\n</div><div class=\"applicability-solution\">\n<p><i class=\"fa fa-fw fa-bolt\" aria-hidden=\"true\"></i> The Strategy pattern lets you indirectly alter the object’s behavior at runtime by associating it with different sub-objects which can perform specific sub-tasks in different ways.</p>\n</div>\n<div class=\"applicability-problem\">\n<p><i class=\"fa fa-fw fa-bug\" aria-hidden=\"true\"></i> Use the Strategy when you have a lot of similar classes that only differ in the way they execute some behavior.</p>\n</div><div class=\"applicability-solution\">\n<p><i class=\"fa fa-fw fa-bolt\" aria-hidden=\"true\"></i> The Strategy pattern lets you extract the varying behavior into a separate class hierarchy and combine the original classes into one, thereby reducing duplicate code.</p>\n</div>\n<div class=\"applicability-problem\">\n<p><i class=\"fa fa-fw fa-bug\" aria-hidden=\"true\"></i> Use the pattern to isolate the business logic of a class from the implementation details of algorithms that may not be as important in the context of that logic.</p>\n</div><div class=\"applicability-solution\">\n<p><i class=\"fa fa-fw fa-bolt\" aria-hidden=\"true\"></i> The Strategy pattern lets you isolate the code, internal data, and dependencies of various algorithms from the rest of the code. Various clients get a simple interface to execute the algorithms and switch them at runtime.</p>\n</div>\n<div class=\"applicability-problem\">\n<p><i class=\"fa fa-fw fa-bug\" aria-hidden=\"true\"></i> Use the pattern when your class has a massive conditional statement that switches between different variants of the same algorithm.</p>\n</div><div class=\"applicability-solution\">\n<p><i class=\"fa fa-fw fa-bolt\" aria-hidden=\"true\"></i> The Strategy pattern lets you do away with such a conditional by extracting all algorithms into separate classes, all of which implement the same interface. The original object delegates execution to one of these objects, instead of implementing all variants of the algorithm.</p>\n</div>\n</div></div>\n<div class=\"section checklist\">\n<h2 id=\"checklist\"><i class=\"fa fa-clipboard-list-check\" aria-hidden=\"true\"></i> How to Implement</h2>\n<ol>\n<li>\n<p>In the context class, identify an algorithm that’s prone to frequent changes. It may also be a massive conditional that selects and executes a variant of the same algorithm at runtime.</p>\n</li>\n<li>\n<p>Declare the strategy interface common to all variants of the algorithm.</p>\n</li>\n<li>\n<p>One by one, extract all algorithms into their own classes. They should all implement the strategy interface.</p>\n</li>\n<li>\n<p>In the context class, add a field for storing a reference to a strategy object. Provide a setter for replacing values of that field. The context should work with the strategy object only via the strategy interface. The context may define an interface which lets the strategy access its data.</p>\n</li>\n<li>\n<p>Clients of the context must associate it with a suitable strategy that matches the way they expect the context to perform its primary job.</p>\n</li>\n</ol>\n</div>\n<div class=\"section pros-cons\">\n<h2 id=\"pros-cons\"><i class=\"fa fa-balance-scale\" aria-hidden=\"true\"></i> Pros and Cons</h2>\n<div class=\"row\"><div class=\"col-sm-6\">\n<ul>\n<li><i class=\"fa fa-fw fa-check\" aria-hidden=\"true\"></i> You can swap algorithms used inside an object at runtime.</li>\n<li><i class=\"fa fa-fw fa-check\" aria-hidden=\"true\"></i> You can isolate the implementation details of an algorithm from the code that uses it.</li>\n<li><i class=\"fa fa-fw fa-check\" aria-hidden=\"true\"></i> You can replace inheritance with composition.</li>\n<li><i class=\"fa fa-fw fa-check\" aria-hidden=\"true\"></i> <em>Open/Closed Principle</em>. You can introduce new strategies without having to change the context.</li>\n</ul>\n</div><div class=\"col-sm-6\">\n<ul>\n<li><i class=\"fa fa-fw fa-times\" aria-hidden=\"true\"></i> If you only have a couple of algorithms and they rarely change, there’s no real reason to overcomplicate the program with new classes and interfaces that come along with the pattern.</li>\n<li><i class=\"fa fa-fw fa-times\" aria-hidden=\"true\"></i> Clients must be aware of the differences between strategies to be able to select a proper one.</li>\n<li><i class=\"fa fa-fw fa-times\" aria-hidden=\"true\"></i> A lot of modern programming languages have functional type support that lets you implement different versions of an algorithm inside a set of anonymous functions. Then you could use these functions exactly as you’d have used the strategy objects, but without bloating your code with extra classes and interfaces.</li>\n</ul>\n</div></div></div>\n<div class=\"section relations\">\n<h2 id=\"relations\"><i class=\"fa fa-exchange-alt\" aria-hidden=\"true\"></i> Relations with Other Patterns</h2>\n<ul>\n<li>\n<p><a href=\"/design-patterns/bridge\">Bridge</a>, <a href=\"/design-patterns/state\">State</a>, <a href=\"/design-patterns/strategy\">Strategy</a> (and to some degree <a href=\"/design-patterns/adapter\">Adapter</a>) have very similar structures. Indeed, all of these patterns are based on composition, which is delegating work to other objects. However, they all solve different problems. A pattern isn’t just a recipe for structuring your code in a specific way. It can also communicate to other developers the problem the pattern solves.</p>\n</li>\n<li>\n<p><a href=\"/design-patterns/command\">Command</a> and <a href=\"/design-patterns/strategy\">Strategy</a> may look similar because you can use both to parameterize an object with some action. However, they have very different intents.</p>\n<ul>\n<li>\n<p>You can use <em>Command</em> to convert any operation into an object. The operation’s parameters become fields of that object. The conversion lets you defer execution of the operation, queue it, store the history of commands, send commands to remote services, etc.</p>\n</li>\n<li>\n<p>On the other hand, <em>Strategy</em> usually describes different ways of doing the same thing, letting you swap these algorithms within a single context class.</p>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"/design-patterns/decorator\">Decorator</a> lets you change the skin of an object, while <a href=\"/design-patterns/strategy\">Strategy</a> lets you change the guts.</p>\n</li>\n<li>\n<p><a href=\"/design-patterns/template-method\">Template Method</a> is based on inheritance: it lets you alter parts of an algorithm by extending those parts in subclasses. <a href=\"/design-patterns/strategy\">Strategy</a> is based on composition: you can alter parts of the object’s behavior by supplying it with different strategies that correspond to that behavior. <em>Template Method</em> works at the class level, so it’s static. <em>Strategy</em> works on the object level, letting you switch behaviors at runtime.</p>\n</li>\n<li>\n<p><a href=\"/design-patterns/state\">State</a> can be considered as an extension of <a href=\"/design-patterns/strategy\">Strategy</a>. Both patterns are based on composition: they change the behavior of the context by delegating some work to helper objects. <em>Strategy</em> makes these objects completely independent and unaware of each other. However, <em>State</em> doesn’t restrict dependencies between concrete states, letting them alter the state of the context at will.</p>\n</li>\n</ul>\n</div>\n<div class=\"section implementations\">\n<h2 id=\"implementations\"><i class=\"fa fa-code\" aria-hidden=\"true\"></i> Code Examples</h2>\n<p><a href=\"/design-patterns/strategy/csharp/example\" title=\"Strategy in C#\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/csharp.svg?id=da64592defc6e86d57c39c66e9de3e58\" alt=\"Strategy in C#\" /></a>\n<a href=\"/design-patterns/strategy/cpp/example\" title=\"Strategy in C++\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/cpp.svg?id=f7782ed8b8666246bfcc3f8fefc3b858\" alt=\"Strategy in C++\" /></a>\n<a href=\"/design-patterns/strategy/go/example\" title=\"Strategy in Go\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/go.svg?id=1a89927eb99b1ea3fde7701d97970aca\" alt=\"Strategy in Go\" /></a>\n<a href=\"/design-patterns/strategy/java/example\" title=\"Strategy in Java\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/java.svg?id=e6d87e2dca08c953fe3acd1275ed4f4e\" alt=\"Strategy in Java\" /></a>\n<a href=\"/design-patterns/strategy/php/example\" title=\"Strategy in PHP\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/php.svg?id=be1906eb26b71ec1d3b93720d6156618\" alt=\"Strategy in PHP\" /></a>\n<a href=\"/design-patterns/strategy/python/example\" title=\"Strategy in Python\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/python.svg?id=6d815d43c0f7050a1151b43e51569c9f\" alt=\"Strategy in Python\" /></a>\n<a href=\"/design-patterns/strategy/ruby/example\" title=\"Strategy in Ruby\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/ruby.svg?id=b065b718c914bf8e960ef731600be1eb\" alt=\"Strategy in Ruby\" /></a>\n<a href=\"/design-patterns/strategy/rust/example\" title=\"Strategy in Rust\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/rust.svg?id=1f5698a4b5ae23fe79413511747e4a87\" alt=\"Strategy in Rust\" /></a>\n<a href=\"/design-patterns/strategy/swift/example\" title=\"Strategy in Swift\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/swift.svg?id=0b716c2d52ec3a48fbe91ac031070c1d\" alt=\"Strategy in Swift\" /></a>\n<a href=\"/design-patterns/strategy/typescript/example\" title=\"Strategy in TypeScript\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/typescript.svg?id=2239d0f16cb703540c205dd8cb0c0cb7\" alt=\"Strategy in TypeScript\" /></a></p>\n</div>\n\n\n    <div class=\"banner-set2\" id=\"book-promo\">\n            <div class=\"prom banner-content banner-bg banner-striped banner-with-image\" data-id=\"DP: 1: Support our free website and own the eBook!\" data-creative-id=\"standard-en\" data-position=\"content_bottom\">\n                <div class=\"banner-image\">\n                    <a href=\"/design-patterns/book\">\n                        <img width=\"200\" height=\"200\" loading=\"lazy\" src=\"/images/patterns/banners/patterns-book-banner-3.png?id=7d445df13c80287beaab234b4f3b698c\" srcset=\"/images/patterns/banners/patterns-book-banner-3-2x.png?id=0cc3f77ab421d1a5c02ee46488231c3a 2x\">\n                    </a>\n                </div>\n\n                <div class=\"banner-text\">\n                    <h3 class=\"title\">Support our free website and own the eBook!</h3>\n                    <ul style=\"font-size: 14px;\">\n                        <li style=\"margin: 0;\">22 design patterns and 8 principles explained in depth.</li>\n                        <li style=\"margin: 0;\">409 well-structured, easy to read, jargon-free pages.</li>\n                        <li style=\"margin: 0;\">225 clear and helpful illustrations and diagrams.</li>\n                        <li style=\"margin: 0;\">An archive with code examples in 11 languages.</li>\n                        <li style=\"margin: 0;\">All devices supported: PDF/EPUB/MOBI/KFX formats.</li>\n                    </ul>\n                    <a class=\"btn btn-secondary\" href=\"/design-patterns/book\"><i class=\"fa fa-book\" aria-hidden=\"true\"></i> Learn more…</a>\n                </div>\n            </div>\n        </div>\n\n    </article>\n\n<nav class=\"prev-next\">\n                    <div class=\"next\">\n                <h4>Read next</h4>\n                <a rel=\"next\" href=\"/design-patterns/template-method\" class=\"btn btn-primary\">Template Method&nbsp;<span class=\"fa fa-arrow-right\"></span></a>\n            </div>\n                            <div class=\"prev\">\n                <h4>Return</h4>\n                <a rel=\"prev\" href=\"/design-patterns/state\" class=\"btn btn-default\"><span class=\"fa fa-arrow-left\"></span>&nbsp;State </a>\n            </div>\n            </nav>\n</div>\n\n<aside class=\"feature content-secondary\">\n    <div class=\"prom banner-sidebar banner-removable banner-removable-patterns\" data-id=\"DP: Sidebar\" data-creative-id=\"standard-sidebar-en\" data-position=\"sidebar\">\n        <div class=\"banner-inner\">\n            <div class=\"image3d-book-right\">\n                <div class=\"image3d-cover\" style=\"background: #0b3752;\">\n                    <a href=\"/design-patterns/book\">\n                        <img width=\"250\" height=\"375\" loading=\"lazy\" src=\"/images/patterns/book/web-cover-en.png?id=328861769fd11617674e3b8a7e2dd9e7\" srcset=\"/images/patterns/book/web-cover-en-2x.png?id=02940141c5652ed5a426d87390b16366 2x\">\n                    </a>\n                </div>\n            </div>\n            <div style=\"margin-top: 1rem\">\n                <p class=\"text-center\" >This article is a part of our eBook<br/><strong>Dive Into Design Patterns</strong>.</p>\n                <a href=\"/design-patterns/book\" class=\"btn btn-secondary btn-block\"><i class=\"fa fa-book\" aria-hidden=\"true\"></i> Learn more…</a>\n            </div>\n        </div>\n    </div>\n\n\n</aside>\n                    </div>\n    </main>\n\n    <aside class=\"sidebar main-menu\">\n    <div class=\"main-menu-controls\">\n        <button class=\"navigation-toggle\"><i class=\"fa fa-fw fa-times\"></i></button>\n    </div>\n    <div class=\"main-menu-list-wrapper nano\">\n        <div class=\"main-menu-list nano-content\">\n            <a class=\"menu-brand\" href=\"/\">\n                                    <img width=200 height=241 loading=\"lazy\" alt=\"Refactoring.Guru\" src=\"/images/content-public/logos/logo-new.png?id=97d554614702483f31e38b32e82d8e34\" srcset=\"/images/content-public/logos/logo-new-2x.png?id=3bc33294e095bab1d6fe9ae421d07837 2x\">\n                            </a>\n\n            <div class=\"menu-container\" style=\"position: relative\">\n                                <ul class=\"menu-list trail\">\n                            <li class=\"featured\">\n            <a href=\"/store\">\n                <i class=\"fa fa-fw fa-star\" aria-hidden=\"true\"></i> Premium Content\n            </a>\n    \n            <ul >\n                            <li class=\"featured menu-fs15\">\n            <a href=\"/design-patterns/book\">\n                <i class=\"fa fa-fw fa-book\" aria-hidden=\"true\"></i> Design Patterns eBook\n            </a>\n    \n    \n            </li>\n                                <li class=\"featured menu-fs15\">\n            <a href=\"/refactoring/course\">\n                <i class=\"fa fa-fw fa-graduation-cap\" aria-hidden=\"true\"></i> Refactoring Course\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring\">\n                <i class=\"fa fa-fw fa-scissors\" aria-hidden=\"true\"></i> Refactoring\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/refactoring/what-is-refactoring\">\n                What is Refactoring\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/refactoring/what-is-refactoring\">\n                Clean code\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/technical-debt\">\n                Technical debt\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/when\">\n                When to refactor\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/how-to\">\n                How to refactor\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/catalog\">\n                Catalog\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells\">\n                Code Smells\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/refactoring/smells/bloaters\">\n                Bloaters\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/long-method\">\n                Long Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/large-class\">\n                Large Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/primitive-obsession\">\n                Primitive Obsession\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/long-parameter-list\">\n                Long Parameter List\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/data-clumps\">\n                Data Clumps\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/oo-abusers\">\n                Object-Orientation Abusers\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/switch-statements\">\n                Switch Statements\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/temporary-field\">\n                Temporary Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/refused-bequest\">\n                Refused Bequest\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/alternative-classes-with-different-interfaces\">\n                Alternative Classes with Different Interfaces\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/change-preventers\">\n                Change Preventers\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/divergent-change\">\n                Divergent Change\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/shotgun-surgery\">\n                Shotgun Surgery\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/parallel-inheritance-hierarchies\">\n                Parallel Inheritance Hierarchies\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/dispensables\">\n                Dispensables\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/comments\">\n                Comments\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/duplicate-code\">\n                Duplicate Code\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/lazy-class\">\n                Lazy Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/data-class\">\n                Data Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/dead-code\">\n                Dead Code\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/speculative-generality\">\n                Speculative Generality\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/couplers\">\n                Couplers\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/feature-envy\">\n                Feature Envy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/inappropriate-intimacy\">\n                Inappropriate Intimacy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/message-chains\">\n                Message Chains\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/middle-man\">\n                Middle Man\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/other\">\n                Other Smells\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/incomplete-library-class\">\n                Incomplete Library Class\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques\">\n                Refactorings\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/refactoring/techniques/composing-methods\">\n                Composing Methods\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/extract-method\">\n                Extract Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/inline-method\">\n                Inline Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-variable\">\n                Extract Variable\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/inline-temp\">\n                Inline Temp\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-temp-with-query\">\n                Replace Temp with Query\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/split-temporary-variable\">\n                Split Temporary Variable\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-assignments-to-parameters\">\n                Remove Assignments to Parameters\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-method-with-method-object\">\n                Replace Method with Method Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/substitute-algorithm\">\n                Substitute Algorithm\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/moving-features-between-objects\">\n                Moving Features between Objects\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/move-method\">\n                Move Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/move-field\">\n                Move Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-class\">\n                Extract Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/inline-class\">\n                Inline Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/hide-delegate\">\n                Hide Delegate\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-middle-man\">\n                Remove Middle Man\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-foreign-method\">\n                Introduce Foreign Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-local-extension\">\n                Introduce Local Extension\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/organizing-data\">\n                Organizing Data\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/self-encapsulate-field\">\n                Self Encapsulate Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-data-value-with-object\">\n                Replace Data Value with Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/change-value-to-reference\">\n                Change Value to Reference\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/change-reference-to-value\">\n                Change Reference to Value\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-array-with-object\">\n                Replace Array with Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/duplicate-observed-data\">\n                Duplicate Observed Data\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/change-unidirectional-association-to-bidirectional\">\n                Change Unidirectional Association to Bidirectional\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/change-bidirectional-association-to-unidirectional\">\n                Change Bidirectional Association to Unidirectional\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-magic-number-with-symbolic-constant\">\n                Replace Magic Number with Symbolic Constant\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/encapsulate-field\">\n                Encapsulate Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/encapsulate-collection\">\n                Encapsulate Collection\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-type-code-with-class\">\n                Replace Type Code with Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-type-code-with-subclasses\">\n                Replace Type Code with Subclasses\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-type-code-with-state-strategy\">\n                Replace Type Code with State/Strategy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-subclass-with-fields\">\n                Replace Subclass with Fields\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/simplifying-conditional-expressions\">\n                Simplifying Conditional Expressions\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/decompose-conditional\">\n                Decompose Conditional\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/consolidate-conditional-expression\">\n                Consolidate Conditional Expression\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/consolidate-duplicate-conditional-fragments\">\n                Consolidate Duplicate Conditional Fragments\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-control-flag\">\n                Remove Control Flag\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-nested-conditional-with-guard-clauses\">\n                Replace Nested Conditional with Guard Clauses\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-conditional-with-polymorphism\">\n                Replace Conditional with Polymorphism\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-null-object\">\n                Introduce Null Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-assertion\">\n                Introduce Assertion\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/simplifying-method-calls\">\n                Simplifying Method Calls\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/rename-method\">\n                Rename Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/add-parameter\">\n                Add Parameter\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-parameter\">\n                Remove Parameter\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/separate-query-from-modifier\">\n                Separate Query from Modifier\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/parameterize-method\">\n                Parameterize Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-parameter-with-explicit-methods\">\n                Replace Parameter with Explicit Methods\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/preserve-whole-object\">\n                Preserve Whole Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-parameter-with-method-call\">\n                Replace Parameter with Method Call\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-parameter-object\">\n                Introduce Parameter Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-setting-method\">\n                Remove Setting Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/hide-method\">\n                Hide Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-constructor-with-factory-method\">\n                Replace Constructor with Factory Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-error-code-with-exception\">\n                Replace Error Code with Exception\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-exception-with-test\">\n                Replace Exception with Test\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/dealing-with-generalization\">\n                Dealing with Generalization\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/pull-up-field\">\n                Pull Up Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/pull-up-method\">\n                Pull Up Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/pull-up-constructor-body\">\n                Pull Up Constructor Body\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/push-down-method\">\n                Push Down Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/push-down-field\">\n                Push Down Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-subclass\">\n                Extract Subclass\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-superclass\">\n                Extract Superclass\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-interface\">\n                Extract Interface\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/collapse-hierarchy\">\n                Collapse Hierarchy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/form-template-method\">\n                Form Template Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-inheritance-with-delegation\">\n                Replace Inheritance with Delegation\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-delegation-with-inheritance\">\n                Replace Delegation with Inheritance\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"trail\">\n            <a href=\"/design-patterns\">\n                <i class=\"fa fa-fw fa-puzzle-piece\" aria-hidden=\"true\"></i> Design Patterns\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/what-is-pattern\">\n                What is a Pattern\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/what-is-pattern\">\n                What's a design pattern?\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/history\">\n                History of patterns\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/why-learn-patterns\">\n                Why should I learn patterns?\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/criticism\">\n                Criticism of patterns\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/classification\">\n                Classification of patterns\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/catalog\">\n                Catalog\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-third-level\">\n            <a href=\"/design-patterns/creational-patterns\">\n                Creational Patterns\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/factory-method\">\n                Factory Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/abstract-factory\">\n                Abstract Factory\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/builder\">\n                Builder\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/prototype\">\n                Prototype\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/singleton\">\n                Singleton\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"menu-third-level\">\n            <a href=\"/design-patterns/structural-patterns\">\n                Structural Patterns\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/adapter\">\n                Adapter\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/bridge\">\n                Bridge\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/composite\">\n                Composite\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/decorator\">\n                Decorator\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/facade\">\n                Facade\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/flyweight\">\n                Flyweight\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/proxy\">\n                Proxy\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"menu-third-level trail\">\n            <a href=\"/design-patterns/behavioral-patterns\">\n                Behavioral Patterns\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/chain-of-responsibility\">\n                Chain of Responsibility\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/command\">\n                Command\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/iterator\">\n                Iterator\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/mediator\">\n                Mediator\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/memento\">\n                Memento\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/observer\">\n                Observer\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/state\">\n                State\n            </a>\n    \n    \n            </li>\n                                <li class=\"trail active\">\n            <a href=\"/design-patterns/strategy\">\n                Strategy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/template-method\">\n                Template Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/visitor\">\n                Visitor\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"menu-code-examples\">\n            <a href=\"/design-patterns/examples\">\n                Code Examples\n            </a>\n    \n            <ul >\n                            <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/csharp\">\n                C#\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/cpp\">\n                C++\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/go\">\n                Go\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/java\">\n                Java\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/php\">\n                PHP\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/python\">\n                Python\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/ruby\">\n                Ruby\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/rust\">\n                Rust\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/swift\">\n                Swift\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/typescript\">\n                TypeScript\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n                </div>\n\n            <div class=\"main-menu-aux-controls\">\n                <a href=\"https://refactoring.guru/login\" title=\"Sign in\" style=\" display: inline-flex; align-items: center; gap: 6px; \"><svg style=\"width: 16px; height: 16px; filter:drop-shadow(0 1px 1px #74261e)\" class=\"inline-block mx-0\"  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\"opacity=\"0.4\" d=\"M352.7 222.4c3.2 1 6.5 1.6 10 1.6l21.3 0c17.7 0 32 14.3 32 32s-14.3 32-32 32l-21.3 0c-.8 0-1.7 0-2.5 0c-.9 0-1.7-.1-2.5-.1c-1.7-.1-3.4-.2-5-.4C357.4 414 391.1 512 432 512c44.2 0 80-114.6 80-256S476.2 0 432 0c-40.6 0-74.2 96.9-79.3 222.4z\"/><path fill=\"currentColor\"class=\"fa-primary\" d=\"M320 48a48 48 0 1 0 -96 0 48 48 0 1 0 96 0zM125.7 175.5c9.9-9.9 23.4-15.5 37.5-15.5c1.9 0 3.8 .1 5.6 .3L137.6 254c-9.3 28 1.7 58.8 26.8 74.5l86.2 53.9-25.4 88.8c-4.9 17 5 34.7 22 39.6s34.7-5 39.6-22l28.7-100.4c5.9-20.6-2.6-42.6-20.7-53.9L238 299l30.9-82.4 5.1 12.3C289 264.7 323.9 288 362.7 288l21.3 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-21.3 0c-12.9 0-24.6-7.8-29.5-19.7l-6.3-15c-14.6-35.1-44.1-61.9-80.5-73.1l-48.7-15c-11.1-3.4-22.7-5.2-34.4-5.2c-31 0-60.8 12.3-82.7 34.3L57.4 153.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l23.1-23.1zM91.2 352L32 352c-17.7 0-32 14.3-32 32s14.3 32 32 32l69.6 0c19 0 36.2-11.2 43.9-28.5L157 361.6l-9.5-6c-17.5-10.9-30.5-26.8-37.9-44.9L91.2 352z\"/></svg> Sign in</a>\n                <a href=\"https://feedback.refactoring.guru/\" class=\"userecho-public\" rel=\"nofollow\" title=\"Contact us\"><i class=\"fa fa-fw fa-fw fa-envelope\" aria-hidden=\"true\"></i> Contact us</a>\n            </div>\n        </div>\n    </div>\n</aside>\n\n    <nav class=\"navigation\" role=\"navigation\">\n    <div class=\"navigation-container\">\n        <a class=\"navigation-brand\" href=\"/\">\n            <img alt=\"Refactoring.Guru\"\n                 src=\"/images/content-public/logos/logo-new-mobile.png?id=ea18aa9b032eaa92835ed6d472b03b4a\"\n                 srcset=\"/images/content-public/logos/logo-new-mobile-2x.png?id=7ad5648bfd86ae2e8524147a72877c64 2x\">\n        </a>\n\n        <div class=\"shop-link d-none d-lg-block\" style=\"display: none !important;\">\n            <a class=\"btn btn-md btn-primary btn-featured\" href=\"/store\"><svg style=\"width: 28px; height: 28px; fill: currentColor; display: inline-block; margin-top: -14px;\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><!--! Font Awesome Pro 6.3.0 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2023 Fonticons, Inc. --><path d=\"M356 60l60 20-60 20-20 60-20-60L256 80l60-20L336 0l20 60zM464 208l48 16-48 16-16 48-16-48-48-16 48-16 16-48 16 48zm-243.8-9.8l33 66.9 73.8 10.7 59.8 8.7-43.3 42.2-53.4 52.1 12.6 73.5L313 512l-53.5-28.1-66-34.7-66 34.7L73.9 512l10.2-59.6 12.6-73.5L43.3 326.8 0 284.6l59.8-8.7 73.8-10.7 33-66.9L193.5 144l26.8 54.2zm26.1 114.4l-25-3.6-11.2-22.6-16.7-33.9-16.7 33.9L165.6 309l-25 3.6-37.4 5.4 27.1 26.4 18.1 17.6L144 387l-6.4 37.3 33.5-17.6 22.3-11.7 22.3 11.7 33.5 17.6L242.9 387l-4.3-24.9 18.1-17.6 27.1-26.4-37.4-5.4z\"/></svg>\n                Shop Now!</a>\n        </div>\n\n        <ul class=\"navigation-menu\">\n                            <li class=\"nav-locale dropdown dropdown-locales\">\n                    <button class=\"dropdown-toggle\" id=\"dropdownLanguage\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                        <i class=\"fa fa-fw fa-globe\" aria-hidden=\"true\"></i> <span class=\"caption d-none d-lg-inline-block\">English</span>\n                    </button>\n                    <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownLanguage\">\n                                                                                                                        <a href=\"https://refactoring.guru/design-patterns/strategy\" class=\"dropdown-item locale-link active\" data-locale=\"en\" title=\"English\">English</a>\n                                                                                                                                <a href=\"https://refactoring.guru/es/design-patterns/strategy\" class=\"dropdown-item locale-link \" data-locale=\"es\" title=\"Español\">Español</a>\n                                                                                                                                <a href=\"https://refactoring.guru/fr/design-patterns/strategy\" class=\"dropdown-item locale-link \" data-locale=\"fr\" title=\"Français\">Français</a>\n                                                                                                                                <a href=\"https://refactoring.guru/ja/design-patterns/strategy\" class=\"dropdown-item locale-link \" data-locale=\"ja\" title=\"日本語\">日本語</a>\n                                                                                                                                <a href=\"https://refactoring.guru/ko/design-patterns/strategy\" class=\"dropdown-item locale-link \" data-locale=\"ko\" title=\"한국어\">한국어</a>\n                                                                                                                                <a href=\"https://refactoring.guru/pl/design-patterns/strategy\" class=\"dropdown-item locale-link \" data-locale=\"pl\" title=\"Polski\">Polski</a>\n                                                                                                                                <a href=\"https://refactoring.guru/pt-br/design-patterns/strategy\" class=\"dropdown-item locale-link \" data-locale=\"pt-br\" title=\"Português Brasileiro\">Português Brasileiro</a>\n                                                                                                                                <a href=\"https://refactoring.guru/ru/design-patterns/strategy\" class=\"dropdown-item locale-link \" data-locale=\"ru\" title=\"Русский\">Русский</a>\n                                                                                                                                <a href=\"https://refactoring.guru/uk/design-patterns/strategy\" class=\"dropdown-item locale-link \" data-locale=\"uk\" title=\"Українська\">Українська</a>\n                                                                                                                                <a href=\"https://refactoringguru.cn/design-patterns/strategy\" class=\"dropdown-item locale-link \" data-locale=\"zh\" title=\"中文\">中文</a>\ndiv>\n                </li>\n                        <li class=\"nav-contacts\">\n                <a class=\"userecho-private\" href=\"https://feedback.refactoring.guru/?show_feedback_form_private=true\" rel=\"nofollow\" title=\"Contact us\">\n                    <i class=\"fa fa-fw fa-envelope\" aria-hidden=\"true\"></i> <span class=\"caption d-none d-xl-inline-block\">Contact us</span>\n                </a>\n            </li>\n                            <li class=\"nav-user\">\n                    <a href=\"https://refactoring.guru/login\" title=\"Sign in\"><span class=\"sign-in-icon\"><svg style=\"width: 24px; height: 24px; \" class=\"inline-block \"  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\"opacity=\"0.4\" d=\"M352.7 222.4c3.2 1 6.5 1.6 10 1.6l21.3 0c17.7 0 32 14.3 32 32s-14.3 32-32 32l-21.3 0c-.8 0-1.7 0-2.5 0c-.9 0-1.7-.1-2.5-.1c-1.7-.1-3.4-.2-5-.4C357.4 414 391.1 512 432 512c44.2 0 80-114.6 80-256S476.2 0 432 0c-40.6 0-74.2 96.9-79.3 222.4z\"/><path fill=\"currentColor\"class=\"fa-primary\" d=\"M320 48a48 48 0 1 0 -96 0 48 48 0 1 0 96 0zM125.7 175.5c9.9-9.9 23.4-15.5 37.5-15.5c1.9 0 3.8 .1 5.6 .3L137.6 254c-9.3 28 1.7 58.8 26.8 74.5l86.2 53.9-25.4 88.8c-4.9 17 5 34.7 22 39.6s34.7-5 39.6-22l28.7-100.4c5.9-20.6-2.6-42.6-20.7-53.9L238 299l30.9-82.4 5.1 12.3C289 264.7 323.9 288 362.7 288l21.3 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-21.3 0c-12.9 0-24.6-7.8-29.5-19.7l-6.3-15c-14.6-35.1-44.1-61.9-80.5-73.1l-48.7-15c-11.1-3.4-22.7-5.2-34.4-5.2c-31 0-60.8 12.3-82.7 34.3L57.4 153.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l23.1-23.1zM91.2 352L32 352c-17.7 0-32 14.3-32 32s14.3 32 32 32l69.6 0c19 0 36.2-11.2 43.9-28.5L157 361.6l-9.5-6c-17.5-10.9-30.5-26.8-37.9-44.9L91.2 352z\"/></svg></span> <span class=\"account-icon\" style=\"display:none\"><svg style=\"width: 24px; height: 24px; \" class=\"inline-block \"  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 576 512\"><path fill=\"currentColor\"opacity=\"0.4\" d=\"M64 270.5l224-196c74.7 65.4 149.4 130.7 224.1 196.1l.4 177.3c.1 35.4-28.6 64.1-64 64.1l-320.4 0c-35.3 0-64-28.6-64-64L64 270.5zM176.1 433.6c.1 .5 .1 1.1 .2 1.6c.2 1 .5 2 .9 3c.8 1.9 2 3.6 3.4 5.1c2.9 2.9 6.9 4.7 11.3 4.7l192 0c8.8 0 16-7.2 16-16c0-44.2-35.8-80-80-80l-64 0c-22.1 0-42.1 9-56.6 23.4c-7.2 7.2-13.1 15.9-17.1 25.4c-2 4.8-3.6 9.8-4.7 15c-.5 2.6-.9 5.3-1.2 7.9c-.1 1.3-.2 2.7-.3 4.1c-.1 1.4-.1 2.7-.1 4.1c0 .6 0 1.1 .1 1.6zm48.2-184.2c-.1 1.1-.2 2.2-.2 3.2c-.1 1.1-.1 2.2-.1 3.3s0 2.2 .1 3.3c.1 1.1 .1 2.2 .2 3.2c.2 2.1 .5 4.3 1 6.4c.9 4.2 2.1 8.2 3.7 12c3.2 7.7 7.9 14.6 13.7 20.3C254.3 312.8 270.3 320 288 320c35.3 0 64-28.7 64-64s-28.7-64-64-64c-17.7 0-33.7 7.2-45.3 18.7c-5.8 5.8-10.5 12.7-13.7 20.3c-1.6 3.8-2.9 7.8-3.7 12c-.4 2.1-.8 4.2-1 6.4z\"/><path fill=\"currentColor\"class=\"fa-primary\" d=\"M309.1 7.9C297-2.6 279-2.6 266.9 7.9l-256 224c-13.3 11.6-14.6 31.9-3 45.2s31.9 14.6 45.2 3L288 74.5 522.9 280.1c13.3 11.6 33.5 10.3 45.2-3s10.3-33.5-3-45.2L512 185.5 512 64c0-17.7-14.3-32-32-32l-32 0c-17.7 0-32 14.3-32 32l0 37.5L309.1 7.9zM352 256a64 64 0 1 0 -128 0 64 64 0 1 0 128 0zm-96 96c-44.2 0-80 35.8-80 80c0 8.8 7.2 16 16 16l192 0c8.8 0 16-7.2 16-16c0-44.2-35.8-80-80-80l-64 0z\"/></svg></span> <span class=\"sign-out-icon\" style=\"display:none\"><svg style=\"width: 24px; height: 24px; \" class=\"inline-block \"  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\"opacity=\"0.4\" d=\"M0 256C0 397.4 35.8 512 80 512c25.3 0 47.8-37.5 62.5-96L128 416c-.5 0-1.1 0-1.6 0c-.6 0-1.1-.1-1.6-.1c-1.1-.1-2.1-.3-3.2-.5c-2.1-.4-4.1-1.1-6-1.9c-3.8-1.6-7.3-4-10.2-6.9s-5.2-6.3-6.9-10.2c-.8-1.9-1.4-3.9-1.9-6c-.2-1.1-.4-2.3-.5-3.5c0-.3 0-.6-.1-.8c0-.2 0-.4 0-.7c0-.4 0-.7 0-.7c0-.5 0-.7 0-.9c0-.3 0-.6 0-.9c0 0 0-.3 0-.7c0-.2 0-.4 0-.7c0-.2 0-.4 .1-.8c0-.3 .1-.6 .1-.9c0-.2 .1-.4 .1-.7c.1-.8 .2-1.2 .3-1.7c.5-2.2 1.1-4.2 1.9-6.1c1.6-3.8 4-7.3 6.9-10.2c5.8-5.8 13.8-9.4 22.6-9.4l26.2 0c3.8-29.6 5.8-62.1 5.8-96c0-18.3-.6-36.1-1.7-53.4c-1.7-1.2-3.4-2.5-4.9-4c-.8-.8-1.6-1.6-2.2-2.5s-1.3-1.7-1.9-2.6c-1.2-1.8-2.1-3.6-2.9-5.5s-1.4-3.9-1.8-5.9c-.2-1-.3-2-.4-3s-.1-2-.2-3c0-8.3 3.1-16.5 9.4-22.8C141 63.1 112.8 0 80 0C35.8 0 0 114.6 0 256z\"/><path fill=\"currentColor\"class=\"fa-primary\" d=\"M416 48a48 48 0 1 0 -96 0 48 48 0 1 0 96 0zM221.7 175.5c9.9-9.9 23.4-15.5 37.5-15.5c1.9 0 3.8 .1 5.6 .3L233.6 254c-9.3 28 1.7 58.8 26.8 74.5l86.2 53.9-25.4 88.8c-4.9 17 5 34.7 22 39.6s34.7-5 39.6-22l28.7-100.4c5.9-20.6-2.6-42.6-20.7-53.9L334 299l30.9-82.4 5.1 12.3C385 264.7 419.9 288 458.7 288l21.3 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-21.3 0c-12.9 0-24.6-7.8-29.5-19.7l-6.3-15c-14.6-35.1-44.1-61.9-80.5-73.1l-48.7-15c-11.1-3.4-22.7-5.2-34.4-5.2c-31 0-60.8 12.3-82.7 34.3l-23.1 23.1c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l23.1-23.1zM187.2 352L128 352c-17.7 0-32 14.3-32 32s14.3 32 32 32l69.6 0c19 0 36.2-11.2 43.9-28.5L253 361.6l-9.5-6c-17.5-10.9-30.5-26.8-37.9-44.9L187.2 352z\"/></svg></span> <span class=\"caption d-none d-xl-inline-block\">Sign in</span></a>\n                </li>\n                        <li class=\"nav-menu\">\n                <button class=\"navigation-toggle\"><i class=\"fa fa-fw fa-bars\" aria-hidden=\"true\"></i></button>\n            </li>\n        </ul>\n    </div>\n</nav>\n\n    <footer class=\"footer center-content\">\n    <div class=\"footer-container center-content-container\">\n        <div class=\"footer-inner container-fluid\">\n            <div class=\"row\">\n                <div class=\"col-8 col-md-10\">\n                    <ul class=\"footer-list footer-list-horizontal\">\n                        <li><a href=\"/\">Home</a></li>\n                        <li><a href=\"/refactoring\">Refactoring</a></li>\n                        <li><a href=\"/design-patterns\">Design Patterns</a></li>\n                        <li><a href=\"/store\">Premium Content</a></li>\n                        <li><a href=\"https://gitbybit.com/\">Git Course</a></li>\n                        <li><a href=\"https://refactoring.userecho.com/\" rel=\"nofollow\" class=\"userecho-public\">Forum</a></li>\n                        <li><a href=\"https://refactoring.userecho.com/\" rel=\"nofollow\" class=\"userecho-private\">Contact us</a></li>\n                    </ul>\n                </div>\n                <div class=\"col-4 col-md-2\">\n                    <ul class=\"footer-list footer-list-iconic footer-list-right\">\n                                                    <li><a href=\"https://www.facebook.com/refactoring.guru\"><i class=\"fa fa-facebook-official\"></i></a></li>\n                                                <li><a href=\"/sendy/form\" rel=\"nofollow\"><i class=\"fa fa-envelope\" aria-hidden=\"true\"></i></a></li>\n                        <li><a href=\"https://github.com/RefactoringGuru\"><i class=\"fa fa-github-circled\"></i></a></li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"footer-second\">\n        <div class=\"footer-container center-content-container\">\n            <div class=\"footer-inner container-fluid\">\n                <div class=\"row\">\n                    <div class=\"col-12 col-sm-6\">\n                        <i class=\"fa fa-fw fa-copyright\"></i> 2014-2025 <a href=\"/\">Refactoring.Guru</a>. <span style=\"white-space: nowrap\">All rights reserved.</span><br>\n                        <i class=\"fa fa-fw fa-image\"></i> Illustrations by <a href=\"http://zhart.us/\" rel=\"nofollow\"><span style=\"white-space: nowrap\">Dmitry Zhart</span></a>\n                    </div>\n                    <div class=\"footer-links-right col-12 col-sm-6 mt-4 mt-sm-0\">\n                        <ul class=\"footer-list footer-list-horizontal footer-list-right\">\n                            <li><a href=\"/terms\"><span>Terms &amp; Conditions</span></a>\n                            </li>\n                            <li><a href=\"/privacy-policy\"><span>Privacy Policy</span></a>\n                            </li>\n                            <li><a href=\"/content-usage-policy\"><span>Content Usage Policy</span></a>\n                            </li>\n                            <li><a href=\"/site-about\"><span>About us</span></a>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n                                    <div class=\"row\">\n                        <div class=\"col-12 col-sm-4\">\n                            <div class=\"mt-4\">\n                                                                    <b>Ukrainian office:</b><br>\n                                    <object class=\"fa-fw\" style=\"height: 0.8rem; filter: invert(50%);\"  type=\"image/svg+xml\" data=\"/images/content-public/icons/fa-building.svg?id=afddb5806968b0a9acfc1df75a181234\">\n                                        <img class=\"fa-fw\" style=\"height: 0.8rem;\" src=\"/images/content-public/icons/fa-building.svg?id=afddb5806968b0a9acfc1df75a181234\" alt=\"Organization address\"/>\n                                    </object> FOP Olga Skobeleva<br>\n                                    <svg style=\"width: 16px; height: 16px; margin-right: 1px; fill: currentColor;\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\"><path d=\"M352 192c0-88.4-71.6-160-160-160S32 103.6 32 192c0 15.6 5.4 37 16.6 63.4c10.9 25.9 26.2 54 43.6 82.1c34.1 55.3 74.4 108.2 99.9 140c25.4-31.8 65.8-84.7 99.9-140c17.3-28.1 32.7-56.3 43.6-82.1C346.6 229 352 207.6 352 192zm32 0c0 87.4-117 243-168.3 307.2c-12.3 15.3-35.1 15.3-47.4 0C117 435 0 279.4 0 192C0 86 86 0 192 0S384 86 384 192zm-240 0a48 48 0 1 0 96 0 48 48 0 1 0 -96 0zm48 80a80 80 0 1 1 0-160 80 80 0 1 1 0 160z\"/></svg> Abolmasova 7<br>\n                                    <span style=\"margin-left: 21px;\">Kyiv, Ukraine, 02002</span><br>\n                                    <i class=\"fa fa-fw fa-envelope\"></i>  Email: support@refactoring.guru\n                                \n                            </div>\n                        </div>\n                        <div class=\"col-12 col-sm-4\">\n                            <div class=\"mt-4\">\n                                <b>Spanish office:</b><br>\n                                <object class=\"fa-fw\" style=\"height: 0.8rem; filter: invert(50%);\"  type=\"image/svg+xml\" data=\"/images/content-public/icons/fa-building.svg?id=afddb5806968b0a9acfc1df75a181234\">\n                                    <img class=\"fa-fw\" style=\"height: 0.8rem;\" src=\"/images/content-public/icons/fa-building.svg?id=afddb5806968b0a9acfc1df75a181234\" alt=\"Organization address\"/>\n                                </object> Oleksandr Shvets<br>\n                                <svg style=\"width: 16px; height: 16px; margin-right: 1px; fill: currentColor;\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\"><path d=\"M352 192c0-88.4-71.6-160-160-160S32 103.6 32 192c0 15.6 5.4 37 16.6 63.4c10.9 25.9 26.2 54 43.6 82.1c34.1 55.3 74.4 108.2 99.9 140c25.4-31.8 65.8-84.7 99.9-140c17.3-28.1 32.7-56.3 43.6-82.1C346.6 229 352 207.6 352 192zm32 0c0 87.4-117 243-168.3 307.2c-12.3 15.3-35.1 15.3-47.4 0C117 435 0 279.4 0 192C0 86 86 0 192 0S384 86 384 192zm-240 0a48 48 0 1 0 96 0 48 48 0 1 0 -96 0zm48 80a80 80 0 1 1 0-160 80 80 0 1 1 0 160z\"/></svg> Avda Pamplona 64<br>\n                                <span style=\"margin-left: 21px;\">Pamplona, Spain, 31009</span><br>\n                                <i class=\"fa fa-fw fa-envelope\"></i>  Email: support@refactoring.guru\n                            </div>\n                        </div>\n                    </div>\n                            </div>\n        </div>\n    </div>\n</footer>\n\n</div>\n\n\n    <script defer>\n    var CodeMirrorScripts = [\"/js/codemirror.min.js?id=f7ae4adf14bd00338caf8e95da733cc9\"];\n</script>\n\n\n\n    <script>window.loadContent = true;window.loadCart = true;</script>\n</body>\n</html>\n"},
{"title": null, "url": "https://refactoring.guru/design-patterns/state", "raw_html": "<!DOCTYPE html>\n<html lang=\"en\" dir=\"ltr\">\n<head prefix=\"og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# website: http://ogp.me/ns/website#\">\n    <meta charset=\"utf-8\">\n    <title>State</title>\n\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n    <meta name=\"theme-color\" content=\"#A2E2FD\" />\n\n            <style>\n        .buy-widget-excl-local-taxes {\n            display: none;\n        }\n    </style>\n    \n    <link rel=\"preload\" href=\"/fonts/PTSans/ptsans-regular_en.woff2?1\" as=\"font\" type=\"font/woff2\" crossorigin>\n    <link rel=\"preload\" href=\"/fonts/PTSans/ptsans-bold_en.woff2?1\" as=\"font\" type=\"font/woff2\" crossorigin>\n        <link rel=\"preload\" href=\"/fonts/fontello/fontawesome.woff2?15843843\" as=\"font\" type=\"font/woff2\" crossorigin>\n    <link rel=\"preload\" href=\"/fonts/FiraCode/woff2/FiraCode-Regular_latin.woff2\" as=\"font\" type=\"font/woff2\" crossorigin>\n        <link rel=\"preconnect dns-prefetch\" href=\"https://cdn.paddle.com\">\n    <link rel=\"preconnect dns-prefetch\" href=\"https://www.googletagmanager.com\">\n\n    <link rel=\"alternate\" href=\"https://refactoring.guru/design-patterns/state\" hreflang=\"x-default\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/es/design-patterns/state\" hreflang=\"es\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/fr/design-patterns/state\" hreflang=\"fr\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/ja/design-patterns/state\" hreflang=\"ja\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/ko/design-patterns/state\" hreflang=\"ko\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/pl/design-patterns/state\" hreflang=\"pl\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/pt-br/design-patterns/state\" hreflang=\"pt-br\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/ru/design-patterns/state\" hreflang=\"ru\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/uk/design-patterns/state\" hreflang=\"uk\"/>\n    <link rel=\"alternate\" href=\"https://refactoringguru.cn/design-patterns/state\" hreflang=\"zh\"/>\n\n    <meta name=\"description\" content=\"State is a behavioral design pattern that lets an object alter its behavior when its internal state changes. It appears as if the object changed its class.\">\n\n    <link rel=\"canonical\" href=\"https://refactoring.guru/design-patterns/state\"/>\n\n    <link rel=\"icon\" type=\"image/x-icon\" href=\"/favicon.png\"/>\n\n        <meta property=\"fb:app_id\" content=\"666819623386327\"/>\n        <meta property=\"og:type\" content=\"website\"/>\n        <meta property=\"og:image\" content=\"https://refactoring.guru/images/refactoring/social/facebook-share-preview.png?id=dbf9e98269595be86eb668f365be6868\"/>\n    \n                    <link rel=\"stylesheet\" href=\"/css/public-packed.min.css?id=aaefab4da343b914b8dda9973604a9e8\">\n        <style type=\"text/css\">\n                    @font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_cyrillic-ext.woff2?1) format(\"woff2\");unicode-range:U+0460-052F,U+1C80-1C88,U+20B4,U+2DE0-2DFF,U+A640-A69F,U+FE2E-FE2F}@font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_cyrillic.woff2?1) format(\"woff2\");unicode-range:U+0400-045F,U+0490-0491,U+04B0-04B1,U+2116}@font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_latin-ext.woff2?1) format(\"woff2\");unicode-range:U+0100-024F,U+0259,U+1E00-1EFF,U+2020,U+20A0-20AB,U+20AD-20CF,U+2113,U+2C60-2C7F,U+A720-A7FF}@font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_latin.woff2?1) format(\"woff2\");unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}@font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_en.woff2?1) format(\"woff2\");unicode-range:U+0-FF,U+131,U+142,U+152,U+153,U+2BB,U+2BC,U+2C6,U+2DA,U+2DC,U+420,U+423,U+430,U+438-43A,U+43D,U+440,U+441,U+443,U+44C,U+457,U+2000-206F,U+2074,U+20AA-20AC,U+20B4,U+20B9,U+20BA,U+20BD,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_cyrillic-ext.woff2?1) format(\"woff2\");unicode-range:U+0460-052F,U+1C80-1C88,U+20B4,U+2DE0-2DFF,U+A640-A69F,U+FE2E-FE2F}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_cyrillic.woff2?1) format(\"woff2\");unicode-range:U+0400-045F,U+0490-0491,U+04B0-04B1,U+2116}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_latin-ext.woff2?1) format(\"woff2\");unicode-range:U+0100-024F,U+0259,U+1E00-1EFF,U+2020,U+20A0-20AB,U+20AD-20CF,U+2113,U+2C60-2C7F,U+A720-A7FF}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_latin.woff2?1) format(\"woff2\");unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_en.woff2?1) format(\"woff2\");unicode-range:U+0-FF,U+131,U+142,U+152,U+153,U+2BB,U+2BC,U+2C6,U+2DA,U+2DC,U+420,U+423,U+430,U+438-43A,U+43D,U+440,U+441,U+443,U+44C,U+457,U+2000-206F,U+2074,U+20AA-20AC,U+20B4,U+20B9,U+20BA,U+20BD,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}\n            </style>\n\n    \n            <script defer src=\"/js/public.min.js?id=1f19fe18ffe0fc844ede8a0f2ee64202\"></script>\n        <script defer src=\"/js/checkout.min.js?id=b4da9c5bd8b1cf504447c07ae8b7cd44\"></script>\n            <script defer src=\"https://cdn.paddle.com/paddle/v2/paddle.js\"></script>\n    <script async src=\"https://www.googletagmanager.com/gtag/js?id=G-SR8Y3GYQYC\"></script>\n\n    <script type=\"application/ld+json\">\n        {\"@context\": \"http://schema.org\", \"@graph\": [{\"@type\":\"Person\",\"@id\":\"https://refactoring.guru/#founder\",\"name\":\"Alexander Shvets\"},{\"@type\":\"Organization\",\"@id\":\"https://refactoring.guru/#organization\",\"name\":\"Refactoring.Guru\",\"description\":\"Refactoring.Guru makes it easy for you to discover everything you need to know about refactoring, design patterns, SOLID principles, and other smart programming topics.\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https://refactoring.guru/#organizationlogo\",\"url\":\"https://refactoring.guru/images/content-public/logos/logo-plain.png\",\"caption\":\"Refactoring.Guru\"},\"logo\":{\"@id\":\"https://refactoring.guru/#organizationlogo\"},\"founder\":{\"@id\":\"https://refactoring.guru/#founder\"},\"sameAs\":[\"https://www.facebook.com/refactoring.guru\",\"https://twitter.com/RefactoringGuru\",\"https://github.com/RefactoringGuru\"]},{\"@type\":\"WebSite\",\"@id\":\"https://refactoring.guru/#website\",\"url\":\"https://refactoring.guru/\",\"name\":\"Refactoring.Guru\",\"description\":\"Refactoring.Guru makes it easy for you to discover everything you need to know about refactoring, design patterns, SOLID principles, and other smart programming topics.\",\"author\":{\"@id\":\"https://refactoring.guru/#founder\"},\"publisher\":{\"@id\":\"https://refactoring.guru/#organization\"},\"copyrightYear\":2014},{\"@type\":\"WebPage\",\"@id\":\"https://refactoring.guru/design-patterns/state#webpage\",\"url\":\"https://refactoring.guru/design-patterns/state\",\"inLanguage\":\"en\",\"name\":\"State\",\"description\":\"State is a behavioral design pattern that lets an object alter its behavior when its internal state changes. It appears as if the object changed its class.\",\"isPartOf\":{\"@id\":\"https://refactoring.guru#website\"},\"breadcrumb\":{\"@id\":\"https://refactoring.guru/design-patterns/state#breadcrumb\"},\"primaryImageOfPage\":{\"@id\":\"https://refactoring.guru/design-patterns/state#primaryimage\"},\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https://refactoring.guru/design-patterns/state#primaryimage\",\"url\":\"https://refactoring.guru/images/patterns/content/state/state-en-3x.png\",\"width\":1920,\"height\":1200}},{\"@type\":\"Article\",\"@id\":\"https://refactoring.guru/design-patterns/state#article\",\"isPartOf\":{\"@id\":\"https://refactoring.guru/design-patterns/state#webpage\"},\"mainEntityOfPage\":{\"@id\":\"https://refactoring.guru/design-patterns/state#webpage\"},\"author\":{\"@id\":\"https://refactoring.guru#founder\"},\"publisher\":{\"@id\":\"https://refactoring.guru#organization\"},\"headline\":\"State\",\"datePublished\":\"2024-01-01\",\"dateModified\":\"2025-01-01\",\"articleSection\":\"Design Patterns\",\"image\":{\"@id\":\"https://refactoring.guru/design-patterns/state#primaryimage\"}},{\"@type\":\"BreadcrumbList\",\"@id\":\"https://refactoring.guru/design-patterns/state#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https://refactoring.guru\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Design Patterns\",\"item\":\"https://refactoring.guru/design-patterns\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"Behavioral Patterns\",\"item\":\"https://refactoring.guru/design-patterns/behavioral-patterns\"}]}] }\n    </script>\n\n    <script>\nfunction extend(){var extended={};var deep=false;var i=0;var length=arguments[\"length\"];if(Object[\"prototype\"][\"toString\"][\"call\"](arguments[0])=== '[object Boolean]'){deep= arguments[0];i++};var merge=function(obj){for(var prop in obj){if(Object[\"prototype\"][\"hasOwnProperty\"][\"call\"](obj,prop)){if(deep&& Object[\"prototype\"][\"toString\"][\"call\"](obj[prop])=== '[object Object]'){extended[prop]= extend(true,extended[prop],obj[prop])}else {extended[prop]= obj[prop]}}}};for(;i< length;i++){var obj=arguments[i];merge(obj)};return extended}\nfunction defer(method) {if (window.jQuery) {method();} else {setTimeout(function() { defer(method) }, 50);}}\n</script>\n<script>\n+function(sd){sd = (typeof sd === \"string\") ? JSON.parse(atob(sd)) : sd;for(var property in sd){if(window[property]!== null&&  typeof window[property]=== 'object'){window[property]= extend(true,window[property],sd[property])}else {window[property]= sd[property]}}}(\"eyJsb2NhbGUiOiJlbiIsImxvY2FsZV9wcmVmaXgiOiIiLCJsb2NhbGl6ZWRfdXJsX3ByZWZpeCI6Imh0dHBzOlwvXC9yZWZhY3RvcmluZy5ndXJ1XC8iLCJ1cmxfcHJlZml4IjoiaHR0cHM6XC9cL3JlZmFjdG9yaW5nLmd1cnVcLyIsImxvY2FsaXplZF91cmxfcHJlZml4X20iOiJodHRwczpcL1wvcmVmYWN0b3JpbmcuZ3VydVwvIiwidXJsX3ByZWZpeF9tIjoiaHR0cHM6XC9cL3JlZmFjdG9yaW5nLmd1cnVcLyIsInVzZXJfZWNob19hbGlhcyI6InJlZmFjdG9yaW5nIiwidXNlcl9lY2hvX2hvc3QiOiJmZWVkYmFjay5yZWZhY3RvcmluZy5ndXJ1IiwidXNlcl9lY2hvX3ByaXZhdGVfZm9ydW0iOiIyIiwidXNlcl9lY2hvX2xvY2FsZSI6ImVuIiwidXNlcl9lY2hvX3B1YmxpY19mb3J1bSI6IjMiLCJ1c2VyX2VjaG9fcHVibGljX2ZvcnVtX3VybCI6Imh0dHBzOlwvXC9mZWVkYmFjay5yZWZhY3RvcmluZy5ndXJ1XC8iLCJ1c2VyX2VjaG9fc3NvX3Rva2VuIjoiIn0=\");\n</script>\n\n<script>\n    window.dataLayer = window.dataLayer || [];\n    function gtag(){dataLayer.push(arguments);}\n    gtag('js', new Date());\n            gtag('set', 'linker', {'domains': [\"refactoring.guru,refactoringguru.cn\"]});\n        gtag('config', 'G-SR8Y3GYQYC', {\n        // Disable default page view, because we're going to report them on our own.\n        // This is done to report traffic on localized domains as part of the main website traffic\n        // See the Chinese overrides below.\n        send_page_view: false,\n    });\n</script>\n\n<script>\n    (() => {\n        // On first page view after returning from social network, we need to send the social login event.\n        (function detectSocialLogin() {\n            let getCookie = function (name) {\n                var nameEQ = name + \"=\";\n                var ca = document.cookie.split(';');\n                for (var i = 0; i < ca.length; i++) {\n                    var c = ca[i];\n                    while (c.charAt(0) == ' ') c = c.substring(1, c.length);\n                    if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);\n                }\n                return null;\n            };\n            window.social_login_provider = window.social_login_provider || getCookie('social_login_provider');\n            if (window.social_login_provider) {\n                gtag('set', {referrer: null});\n                gtag('event', 'login', {\"method\": window.social_login_provider});\n                // Delete cookie.\n                document.cookie = 'social_login_provider=; Path=/; Max-Age=-99999999;';\n            }\n        })();\n\n        function trackPageView(location, title) {\n            location = location || document.location.href;\n            title = title || document.title;\n\n            // This is show on https://refactoringguru.cn/ and alike.\n            if (typeof window.analytics_path_prefix === 'string') {\n                if (/^(https?:\\/\\/[^\\/]+?)\\/$/.test(location)) {\n                    location = location.replace(/(https?:\\/\\/[^\\/]+?)\\//, '$1' + window.analytics_path_prefix);\n                } else {\n                    location = location.replace(/(https?:\\/\\/[^\\/]+?)\\//, '$1' + window.analytics_path_prefix + '/');\n                }\n                gtag('set', {\n                    'page_location': location\n                });\n            }\n\n            // This is show on https://refactoring.guru/zh/login and alike.\n            if (typeof window.analytics_location_prefix === 'string') {\n                location = location.replace(/(https?:\\/\\/[^\\/]+?)\\//, window.analytics_location_prefix);\n                gtag('set', {\n                    'page_location': location\n                });\n            }\n\n            gtag('event', 'page_view', {\n                page_location: location,\n                page_title: title,\n                locale: window.locale ?? 'en'\n            });\n        }\n\n        if (window.loadContent) {\n            window.onPageLoad = window.onPageLoad || [];\n            window.onPageLoad.push({\n                func: function (context) {\n                    trackPageView(window.location.origin + context.canonicalPath, context.title);\n                },\n                afterAll: true,\n            });\n        }\n        else {\n            trackPageView();\n        }\n    })();\n</script>\n\n\n</head>\n<body class=\"locale-en   announcement   state\" data-body_class=\"state\">\n\n<div class=\"body-holder\">\n\n            <div class=\"announcement-block announcement-block-summer prom\" data-id=\"DIDP-announcement\" data-creative-id=\"en\" data-position=\"top\">\n        <span class=\"beach-and-sea\">\n            <span class=\"a1\"></span>\n            <span class=\"a2\"><span class=\"wave\"></span></span>\n            <span class=\"yacht\"></span>\n        </span>\n        <a href=\"/store\">\n            <img src=\"/images/content-public/ann/summer/sunbed.svg?id=b1e7314a63715a13870a6bd1a43613f7\" loading=\"lazy\" style=\"width: 32px; height:32px;vertical-align: middle; scale: -1 1 1;\">\n            <span class=\"announcement-link-text\">Summer SALE</span>\n            <img src=\"/images/content-public/ann/summer/reading-book.svg?id=36006ea720df8c171968cf613e8ea164\" loading=\"lazy\" style=\"width: 32px; height:32px;vertical-align: middle;\">\n        </a>\n    </div>\n\n    \n    <div class=\"cart-placeholder\">\n    <div class=\"cart-block-container\" style=\"display:none\">\n        <div class=\"cart-block btn-group\">\n            <a href=\"#checkout\" class=\"btn cart open-checkout\">\n                <span class=\"cart-text\"></span>&nbsp;<strong class=\"cart-total font-money\"></strong>\n            </a><a href=\"#checkout\" class=\"btn btn-secondary checkout open-checkout\"><i class=\"fa fa-shopping-cart\" aria-hidden=\"true\"></i> <span class=\"btn-text-span d-none d-sm-inline-block d-lg-none d-hg-inline-block\"></span></a>\n        </div>\n    </div>\n</div>\n    <main role=\"main\" class=\"main-content top-content center-content \" data-page_class=\"\">\n        <div class=\"main-content-container center-content-container\">\n                        <div class=\"pattern page text\">\n<article>\n    <div class=\"breadcrumb\">\n                                    <a class=\"home\" href=\"/\"><i class=\"fa fa-home\" aria-hidden=\"true\"></i></a>\n                                                / <a class=\"type\" href=\"/design-patterns\">Design Patterns</a>\n                                                / <a class=\"type\" href=\"/design-patterns/behavioral-patterns\">Behavioral Patterns</a>\n                        </div>\n    <h1 class=\"title\">State</h1>\n\n    <script type=\"text/javascript\">\n        // Shorten examples titles for users.\n        var h1 = document.getElementsByTagName(\"H1\")[0];\n        if (h1.offsetHeight > 160) {\n            h1.className += ' smaller';\n        }\n\n        // Small beautification for pattern examples.\n        var title = h1.innerHTML;\n        title = title.replace(/^(Java|C\\+\\+|C#|PHP|Python|Ruby|Delphi): (.*)$/, '<strong>$1:</strong> $2');\n        h1.innerHTML = title;\n    </script>\n\n    \n    \n\n    <div class=\"section intent\">\n<h2 id=\"intent\"><i class=\"fa fa-flip-horizontal fa-comment-alt-dots\" aria-hidden=\"true\"></i> Intent</h2>\n<p><strong>State</strong> is a behavioral design pattern that lets an object alter its behavior when its internal state changes. It appears as if the object changed its class.</p>\n<figure class=\"image\"><img src=\"/images/patterns/content/state/state-en.png?id=c323fb8c54e2d57bebf4806c087afb07\" alt=\"State Design Pattern\" srcset=\"/images/patterns/content/state/state-en.png?id=c323fb8c54e2d57bebf4806c087afb07 640w,/images/patterns/content/state/state-en-1.5x.png?id=35e85880bc501216ca374fe53eefeb1d 960w,/images/patterns/content/state/state-en-2x.png?id=dfd427a938223ae880291c2850f3e34a 1280w\" sizes=\"(max-width: 720px) 100vw, 640px\" width=\"640\" style=\"aspect-ratio: 1.6;\" fetchpriority=\"high\" /></figure>\n</div>\n<div class=\"section problem\">\n<h2 id=\"problem\"><i class=\"fa fa-frown\" aria-hidden=\"true\"></i> Problem</h2>\n<p>The State pattern is closely related to the concept of a <em>Finite-State Machine</em>&nbsp;<button class=\"pop\"><span class=\"pop-i\"><i class=\"fa fa-info-circle\" aria-hidden=\"true\"></i></span><span class=\"pop-content\">Finite-State Machine: <a href=\"https://refactoring.guru/fsm\">https://refactoring.guru/fsm</a></span></button>.</p>\n<figure class=\"image\"><img src=\"/images/patterns/diagrams/state/problem1.png?id=503968745461a0970d1fbb4362dc186f\" alt=\"Finite-State Machine\" srcset=\"/images/patterns/diagrams/state/problem1.png?id=503968745461a0970d1fbb4362dc186f 320w,/images/patterns/diagrams/state/problem1-1.5x.png?id=47c7ca068eceaa9896d320690e6f3368 480w,/images/patterns/diagrams/state/problem1-2x.png?id=ae03c2233939eace11d44925ddeb912d 640w\" sizes=\"(max-width: 720px) 100vw, 320px\" width=\"320\" style=\"aspect-ratio: 1.45;\" loading=\"lazy\" /><figcaption>\n<p>Finite-State Machine.</p>\n</figcaption></figure>\n<p>The main idea is that, at any given moment, there’s a <em>finite</em> number of <em>states</em> which a program can be in. Within any unique state, the program behaves differently, and the program can be switched from one state to another instantaneously. However, depending on a current state, the program may or may not switch to certain other states. These switching rules, called <em>transitions</em>, are also finite and predetermined.</p>\n<p>You can also apply this approach to objects. Imagine that we have a <code>Document</code> class. A document can be in one of three states: <code>Draft</code>, <code>Moderation</code> and <code>Published</code>. The <code>publish</code> method of the document works a little bit differently in each state:</p>\n<ul>\n<li>In <code>Draft</code>, it moves the document to moderation.</li>\n<li>In <code>Moderation</code>, it makes the document public, but only if the current user is an administrator.</li>\n<li>In <code>Published</code>, it doesn’t do anything at all.</li>\n</ul>\n<figure class=\"image\"><img src=\"/images/patterns/diagrams/state/problem2-en.png?id=8a3cb79b309a9d83276278244cdcb610\" alt=\"Possible states of a document object\" srcset=\"/images/patterns/diagrams/state/problem2-en.png?id=8a3cb79b309a9d83276278244cdcb610 560w,/images/patterns/diagrams/state/problem2-en-1.5x.png?id=b434789130221879f4320d60fc0ceba8 840w,/images/patterns/diagrams/state/problem2-en-2x.png?id=916d1d80335d02b94bec972db93fd94b 1120w\" sizes=\"(max-width: 720px) 100vw, 560px\" width=\"560\" style=\"aspect-ratio: 1.27;\" loading=\"lazy\" /><figcaption>\n<p>Possible states and transitions of a document object.</p>\n</figcaption></figure>\n<p>State machines are usually implemented with lots of conditional statements (<code>if</code> or <code>switch</code>) that select the appropriate behavior depending on the current state of the object. Usually, this “state” is just a set of values of the object’s fields. Even if you’ve never heard about finite-state machines before, you’ve probably implemented a state at least once. Does the following code structure ring a bell?</p>\n<figure class=\"code\">\n<pre class=\"code\" lang=\"pseudocode\">class Document is\n    field state: string\n    // ...\n    method publish() is\n        switch (state)\n            &quot;draft&quot;:\n                state = &quot;moderation&quot;\n                break\n            &quot;moderation&quot;:\n                if (currentUser.role == &quot;admin&quot;)\n                    state = &quot;published&quot;\n                break\n            &quot;published&quot;:\n                // Do nothing.\n                break\n    // ...\n</pre>\n</figure>\n<p>The biggest weakness of a state machine based on conditionals reveals itself once we start adding more and more states and state-dependent behaviors to the <code>Document</code> class. Most methods will contain monstrous conditionals that pick the proper behavior of a method according to the current state. Code like this is very difficult to maintain because any change to the transition logic may require changing state conditionals in every method.</p>\n<p>The problem tends to get bigger as a project evolves. It’s quite difficult to predict all possible states and transitions at the design stage. Hence, a lean state machine built with a limited set of conditionals can grow into a bloated mess over time.</p>\n</div>\n<div class=\"section solution\">\n<h2 id=\"solution\"><i class=\"fa fa-smile-beam\" aria-hidden=\"true\"></i> Solution</h2>\n<p>The State pattern suggests that you create new classes for all possible states of an object and extract all state-specific behaviors into these classes.</p>\n<p>Instead of implementing all behaviors on its own, the original object, called <em>context</em>, stores a reference to one of the state objects that represents its current state, and delegates all the state-related work to that object.</p>\n<figure class=\"image\"><img src=\"/images/patterns/diagrams/state/solution-en.png?id=2db312e603c026421063dddef065b170\" alt=\"Document delegates the work to a state object\" srcset=\"/images/patterns/diagrams/state/solution-en.png?id=2db312e603c026421063dddef065b170 490w,/images/patterns/diagrams/state/solution-en-1.5x.png?id=8e41b0084588290f2768775c21258680 735w,/images/patterns/diagrams/state/solution-en-2x.png?id=73ae9e51f65b2ee61d4abe481dcfc430 980w\" sizes=\"(max-width: 720px) 100vw, 490px\" width=\"490\" style=\"aspect-ratio: 1.53;\" loading=\"lazy\" /><figcaption>\n<p>Document delegates the work to a state object.</p>\n</figcaption></figure>\n<p>To transition the context into another state, replace the active state object with another object that represents that new state. This is possible only if all state classes follow the same interface and the context itself works with these objects through that interface.</p>\n<p>This structure may look similar to the <a href=\"/design-patterns/strategy\">Strategy</a> pattern, but there’s one key difference. In the State pattern, the particular states may be aware of each other and initiate transitions from one state to another, whereas strategies almost never know about each other.</p>\n</div>\n<div class=\"section analogy\">\n<h2 id=\"analogy\"><i class=\"fa fa-car-side\" aria-hidden=\"true\"></i> Real-World Analogy</h2>\n<p>The buttons and switches in your smartphone behave differently depending on the current state of the device:</p>\n<ul>\n<li>When the phone is unlocked, pressing buttons leads to executing various functions.</li>\n<li>When the phone is locked, pressing any button leads to the unlock screen.</li>\n<li>When the phone’s charge is low, pressing any button shows the charging screen.</li>\n</ul>\n</div>\n<div class=\"section structure-container\">\n<h2 id=\"structure\"><i class=\"fa fa-sitemap\" aria-hidden=\"true\"></i> Structure</h2>\n<div class=\"structure\">\n<div class=\"struct-image1 struct-image\">\n<figure class=\"image\"><img class=\"structure-img-non-indexed d-none d-xl-block\" src=\"/images/patterns/diagrams/state/structure-en.png?id=38c5cc3a610a201e5bc26a441c63d327\" alt=\"Structure of the State design pattern\" srcset=\"/images/patterns/diagrams/state/structure-en.png?id=38c5cc3a610a201e5bc26a441c63d327 540w,/images/patterns/diagrams/state/structure-en-1.5x.png?id=921e29000461174f83c90ba03100f09f 810w,/images/patterns/diagrams/state/structure-en-2x.png?id=69d9c6da31574e2aeafcf39abdd6b74d 1080w\" sizes=\"(max-width: 720px) 100vw, 540px\" width=\"540\" style=\"aspect-ratio: 1.32;\" loading=\"lazy\" /><img class=\"structure-img-indexed d-xl-none\" src=\"/images/patterns/diagrams/state/structure-en-indexed.png?id=303874f78151b9aebdc585080e98d773\" alt=\"Structure of the State design pattern\" srcset=\"/images/patterns/diagrams/state/structure-en-indexed.png?id=303874f78151b9aebdc585080e98d773 540w,/images/patterns/diagrams/state/structure-en-indexed-1.5x.png?id=06f3aec92ab2ba08682230003ba3fd9f 810w,/images/patterns/diagrams/state/structure-en-indexed-2x.png?id=d9b987cad93ddb1dfa48e1abe85b0971 1080w\" sizes=\"(max-width: 720px) 100vw, 540px\" width=\"540\" style=\"aspect-ratio: 1.26;\" loading=\"lazy\" /></figure>\n</div>\n<ol><li class=\"struct-li1\">\n<p><strong>Context</strong> stores a reference to one of the concrete state objects and delegates to it all state-specific work. The context communicates with the state object via the state interface. The context exposes a setter for passing it a new state object.</p>\n</li>\n<li class=\"struct-li2\">\n<p>The <strong>State</strong> interface declares the state-specific methods. These methods should make sense for all concrete states because you don’t want some of your states to have useless methods that will never be called.</p>\n</li>\n<li class=\"struct-li3\">\n<p><strong>Concrete States</strong> provide their own implementations for the state-specific methods. To avoid duplication of similar code across multiple states, you may provide intermediate abstract classes that encapsulate some common behavior.</p>\n<p>State objects may store a backreference to the context object. Through this reference, the state can fetch any required info from the context object, as well as initiate state transitions.</p>\n</li>\n<li class=\"struct-li4\">\n<p>Both context and concrete states can set the next state of the context and perform the actual state transition by replacing the state object linked to the context.</p>\n</li></ol>\n<style structure type=\"text/css\" >\n@media (min-width: 1200px) {\n.structure {\nmargin: 0;\nwidth: auto;\nheight: 560px;\n}\n\n.struct-image1 {\nleft: 60px;\ntop: 160px;\n}\n\n.struct-li1 {\nleft: 0px;\ntop: 0px;\nwidth: 310px;\n}\n\n.struct-li2 {\nleft: 340px;\ntop: 0px;\nwidth: 260px;\n}\n\n.struct-li3 {\nleft: 620px;\ntop: 80px;\nwidth: 240px;\n}\n\n.struct-li4 {\nleft: 620px;\ntop: 430px;\nwidth: 240px;\n}\n}\n\n</style>\n</div></div>\n<div class=\"section pseudocode\">\n<h2 id=\"pseudocode\"><i class=\"fa fa-hashtag\" aria-hidden=\"true\"></i> Pseudocode</h2>\n<p>In this example, the <strong>State</strong> pattern lets the same controls of the media player behave differently, depending on the current playback state.</p>\n<figure class=\"image\"><img src=\"/images/patterns/diagrams/state/example.png?id=1ffdb109b3ebb85d223b9d1651d2034c\" alt=\"Structure of the State pattern example\" srcset=\"/images/patterns/diagrams/state/example.png?id=1ffdb109b3ebb85d223b9d1651d2034c 590w,/images/patterns/diagrams/state/example-1.5x.png?id=a9ff56d0a139530fa103d496513dfa06 885w,/images/patterns/diagrams/state/example-2x.png?id=cd81e3ffb8aba5883983a59c111b805f 1180w\" sizes=\"(max-width: 720px) 100vw, 590px\" width=\"590\" style=\"aspect-ratio: 1.64;\" loading=\"lazy\" /><figcaption>\n<p>Example of changing object behavior with state objects.</p>\n</figcaption></figure>\n<p>The main object of the player is always linked to a state object that performs most of the work for the player. Some actions replace the current state object of the player with another, which changes the way the player reacts to user interactions.</p>\n<figure class=\"code\">\n<pre class=\"code\" lang=\"pseudocode\">// The AudioPlayer class acts as a context. It also maintains a\n// reference to an instance of one of the state classes that\n// represents the current state of the audio player.\nclass AudioPlayer is\n    field state: State\n    field UI, volume, playlist, currentSong\n\n    constructor AudioPlayer() is\n        this.state = new ReadyState(this)\n\n        // Context delegates handling user input to a state\n        // object. Naturally, the outcome depends on what state\n        // is currently active, since each state can handle the\n        // input differently.\n        UI = new UserInterface()\n        UI.lockButton.onClick(this.clickLock)\n        UI.playButton.onClick(this.clickPlay)\n        UI.nextButton.onClick(this.clickNext)\n        UI.prevButton.onClick(this.clickPrevious)\n\n    // Other objects must be able to switch the audio player's\n    // active state.\n    method changeState(state: State) is\n        this.state = state\n\n    // UI methods delegate execution to the active state.\n    method clickLock() is\n        state.clickLock()\n    method clickPlay() is\n        state.clickPlay()\n    method clickNext() is\n        state.clickNext()\n    method clickPrevious() is\n        state.clickPrevious()\n\n    // A state may call some service methods on the context.\n    method startPlayback() is\n        // ...\n    method stopPlayback() is\n        // ...\n    method nextSong() is\n        // ...\n    method previousSong() is\n        // ...\n    method fastForward(time) is\n        // ...\n    method rewind(time) is\n        // ...\n\n\n// The base state class declares methods that all concrete\n// states should implement and also provides a backreference to\n// the context object associated with the state. States can use\n// the backreference to transition the context to another state.\nabstract class State is\n    protected field player: AudioPlayer\n\n    // Context passes itself through the state constructor. This\n    // may help a state fetch some useful context data if it's\n    // needed.\n    constructor State(player) is\n        this.player = player\n\n    abstract method clickLock()\n    abstract method clickPlay()\n    abstract method clickNext()\n    abstract method clickPrevious()\n\n\n// Concrete states implement various behaviors associated with a\n// state of the context.\nclass LockedState extends State is\n\n    // When you unlock a locked player, it may assume one of two\n    // states.\n    method clickLock() is\n        if (player.playing)\n            player.changeState(new PlayingState(player))\n        else\n            player.changeState(new ReadyState(player))\n\n    method clickPlay() is\n        // Locked, so do nothing.\n\n    method clickNext() is\n        // Locked, so do nothing.\n\n    method clickPrevious() is\n        // Locked, so do nothing.\n\n\n// They can also trigger state transitions in the context.\nclass ReadyState extends State is\n    method clickLock() is\n        player.changeState(new LockedState(player))\n\n    method clickPlay() is\n        player.startPlayback()\n        player.changeState(new PlayingState(player))\n\n    method clickNext() is\n        player.nextSong()\n\n    method clickPrevious() is\n        player.previousSong()\n\n\nclass PlayingState extends State is\n    method clickLock() is\n        player.changeState(new LockedState(player))\n\n    method clickPlay() is\n        player.stopPlayback()\n        player.changeState(new ReadyState(player))\n\n    method clickNext() is\n        if (event.doubleclick)\n            player.nextSong()\n        else\n            player.fastForward(5)\n\n    method clickPrevious() is\n        if (event.doubleclick)\n            player.previous()\n        else\n            player.rewind(5)\n</pre>\n</figure>\n</div>\n<div class=\"section applicability-container\">\n<h2 id=\"applicability\"><i class=\"fa fa-lightbulb-on\" aria-hidden=\"true\"></i> Applicability</h2>\n<div class=\"applicability\">\n<div class=\"applicability-problem\">\n<p><i class=\"fa fa-fw fa-bug\" aria-hidden=\"true\"></i> Use the State pattern when you have an object that behaves differently depending on its current state, the number of states is enormous, and the state-specific code changes frequently.</p>\n</div><div class=\"applicability-solution\">\n<p><i class=\"fa fa-fw fa-bolt\" aria-hidden=\"true\"></i> The pattern suggests that you extract all state-specific code into a set of distinct classes. As a result, you can add new states or change existing ones independently of each other, reducing the maintenance cost.</p>\n</div>\n<div class=\"applicability-problem\">\n<p><i class=\"fa fa-fw fa-bug\" aria-hidden=\"true\"></i> Use the pattern when you have a class polluted with massive conditionals that alter how the class behaves according to the current values of the class’s fields.</p>\n</div><div class=\"applicability-solution\">\n<p><i class=\"fa fa-fw fa-bolt\" aria-hidden=\"true\"></i> The State pattern lets you extract branches of these conditionals into methods of corresponding state classes. While doing so, you can also clean temporary fields and helper methods involved in state-specific code out of your main class.</p>\n</div>\n<div class=\"applicability-problem\">\n<p><i class=\"fa fa-fw fa-bug\" aria-hidden=\"true\"></i> Use State when you have a lot of duplicate code across similar states and transitions of a condition-based state machine.</p>\n</div><div class=\"applicability-solution\">\n<p><i class=\"fa fa-fw fa-bolt\" aria-hidden=\"true\"></i> The State pattern lets you compose hierarchies of state classes and reduce duplication by extracting common code into abstract base classes.</p>\n</div>\n</div></div>\n<div class=\"section checklist\">\n<h2 id=\"checklist\"><i class=\"fa fa-clipboard-list-check\" aria-hidden=\"true\"></i> How to Implement</h2>\n<ol>\n<li>\n<p>Decide what class will act as the context. It could be an existing class which already has the state-dependent code; or a new class, if the state-specific code is distributed across multiple classes.</p>\n</li>\n<li>\n<p>Declare the state interface. Although it may mirror all the methods declared in the context, aim only for those that may contain state-specific behavior.</p>\n</li>\n<li>\n<p>For every actual state, create a class that derives from the state interface. Then go over the methods of the context and extract all code related to that state into your newly created class.</p>\n<p>While moving the code to the state class, you might discover that it depends on private members of the context. There are several workarounds:</p>\n<ul>\n<li>Make these fields or methods public.</li>\n<li>Turn the behavior you’re extracting into a public method in the context and call it from the state class. This way is ugly but quick, and you can always fix it later.</li>\n<li>Nest the state classes into the context class, but only if your programming language supports nesting classes.</li>\n</ul>\n</li>\n<li>\n<p>In the context class, add a reference field of the state interface type and a public setter that allows overriding the value of that field.</p>\n</li>\n<li>\n<p>Go over the method of the context again and replace empty state conditionals with calls to corresponding methods of the state object.</p>\n</li>\n<li>\n<p>To switch the state of the context, create an instance of one of the state classes and pass it to the context. You can do this within the context itself, or in various states, or in the client. Wherever this is done, the class becomes dependent on the concrete state class that it instantiates.</p>\n</li>\n</ol>\n</div>\n<div class=\"section pros-cons\">\n<h2 id=\"pros-cons\"><i class=\"fa fa-balance-scale\" aria-hidden=\"true\"></i> Pros and Cons</h2>\n<div class=\"row\"><div class=\"col-sm-6\">\n<ul>\n<li><i class=\"fa fa-fw fa-check\" aria-hidden=\"true\"></i> <em>Single Responsibility Principle</em>. Organize the code related to particular states into separate classes.</li>\n<li><i class=\"fa fa-fw fa-check\" aria-hidden=\"true\"></i> <em>Open/Closed Principle</em>. Introduce new states without changing existing state classes or the context.</li>\n<li><i class=\"fa fa-fw fa-check\" aria-hidden=\"true\"></i> Simplify the code of the context by eliminating bulky state machine conditionals.</li>\n</ul>\n</div><div class=\"col-sm-6\">\n<ul>\n<li><i class=\"fa fa-fw fa-times\" aria-hidden=\"true\"></i> Applying the pattern can be overkill if a state machine has only a few states or rarely changes.</li>\n</ul>\n</div></div></div>\n<div class=\"section relations\">\n<h2 id=\"relations\"><i class=\"fa fa-exchange-alt\" aria-hidden=\"true\"></i> Relations with Other Patterns</h2>\n<ul>\n<li>\n<p><a href=\"/design-patterns/bridge\">Bridge</a>, <a href=\"/design-patterns/state\">State</a>, <a href=\"/design-patterns/strategy\">Strategy</a> (and to some degree <a href=\"/design-patterns/adapter\">Adapter</a>) have very similar structures. Indeed, all of these patterns are based on composition, which is delegating work to other objects. However, they all solve different problems. A pattern isn’t just a recipe for structuring your code in a specific way. It can also communicate to other developers the problem the pattern solves.</p>\n</li>\n<li>\n<p><a href=\"/design-patterns/state\">State</a> can be considered as an extension of <a href=\"/design-patterns/strategy\">Strategy</a>. Both patterns are based on composition: they change the behavior of the context by delegating some work to helper objects. <em>Strategy</em> makes these objects completely independent and unaware of each other. However, <em>State</em> doesn’t restrict dependencies between concrete states, letting them alter the state of the context at will.</p>\n</li>\n</ul>\n</div>\n<div class=\"section implementations\">\n<h2 id=\"implementations\"><i class=\"fa fa-code\" aria-hidden=\"true\"></i> Code Examples</h2>\n<p><a href=\"/design-patterns/state/csharp/example\" title=\"State in C#\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/csharp.svg?id=da64592defc6e86d57c39c66e9de3e58\" alt=\"State in C#\" /></a>\n<a href=\"/design-patterns/state/cpp/example\" title=\"State in C++\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/cpp.svg?id=f7782ed8b8666246bfcc3f8fefc3b858\" alt=\"State in C++\" /></a>\n<a href=\"/design-patterns/state/go/example\" title=\"State in Go\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/go.svg?id=1a89927eb99b1ea3fde7701d97970aca\" alt=\"State in Go\" /></a>\n<a href=\"/design-patterns/state/java/example\" title=\"State in Java\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/java.svg?id=e6d87e2dca08c953fe3acd1275ed4f4e\" alt=\"State in Java\" /></a>\n<a href=\"/design-patterns/state/php/example\" title=\"State in PHP\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/php.svg?id=be1906eb26b71ec1d3b93720d6156618\" alt=\"State in PHP\" /></a>\n<a href=\"/design-patterns/state/python/example\" title=\"State in Python\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/python.svg?id=6d815d43c0f7050a1151b43e51569c9f\" alt=\"State in Python\" /></a>\n<a href=\"/design-patterns/state/ruby/example\" title=\"State in Ruby\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/ruby.svg?id=b065b718c914bf8e960ef731600be1eb\" alt=\"State in Ruby\" /></a>\n<a href=\"/design-patterns/state/rust/example\" title=\"State in Rust\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/rust.svg?id=1f5698a4b5ae23fe79413511747e4a87\" alt=\"State in Rust\" /></a>\n<a href=\"/design-patterns/state/swift/example\" title=\"State in Swift\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/swift.svg?id=0b716c2d52ec3a48fbe91ac031070c1d\" alt=\"State in Swift\" /></a>\n<a href=\"/design-patterns/state/typescript/example\" title=\"State in TypeScript\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/typescript.svg?id=2239d0f16cb703540c205dd8cb0c0cb7\" alt=\"State in TypeScript\" /></a></p>\n</div>\n\n\n    <div class=\"banner-set2\" id=\"book-promo\">\n            <div class=\"prom banner-content banner-bg banner-striped banner-with-image\" data-id=\"DP: 1: Support our free website and own the eBook!\" data-creative-id=\"standard-en\" data-position=\"content_bottom\">\n                <div class=\"banner-image\">\n                    <a href=\"/design-patterns/book\">\n                        <img width=\"200\" height=\"200\" loading=\"lazy\" src=\"/images/patterns/banners/patterns-book-banner-3.png?id=7d445df13c80287beaab234b4f3b698c\" srcset=\"/images/patterns/banners/patterns-book-banner-3-2x.png?id=0cc3f77ab421d1a5c02ee46488231c3a 2x\">\n                    </a>\n                </div>\n\n                <div class=\"banner-text\">\n                    <h3 class=\"title\">Support our free website and own the eBook!</h3>\n                    <ul style=\"font-size: 14px;\">\n                        <li style=\"margin: 0;\">22 design patterns and 8 principles explained in depth.</li>\n                        <li style=\"margin: 0;\">409 well-structured, easy to read, jargon-free pages.</li>\n                        <li style=\"margin: 0;\">225 clear and helpful illustrations and diagrams.</li>\n                        <li style=\"margin: 0;\">An archive with code examples in 11 languages.</li>\n                        <li style=\"margin: 0;\">All devices supported: PDF/EPUB/MOBI/KFX formats.</li>\n                    </ul>\n                    <a class=\"btn btn-secondary\" href=\"/design-patterns/book\"><i class=\"fa fa-book\" aria-hidden=\"true\"></i> Learn more…</a>\n                </div>\n            </div>\n        </div>\n\n    </article>\n\n<nav class=\"prev-next\">\n                    <div class=\"next\">\n                <h4>Read next</h4>\n                <a rel=\"next\" href=\"/design-patterns/strategy\" class=\"btn btn-primary\">Strategy&nbsp;<span class=\"fa fa-arrow-right\"></span></a>\n            </div>\n                            <div class=\"prev\">\n                <h4>Return</h4>\n                <a rel=\"prev\" href=\"/design-patterns/observer\" class=\"btn btn-default\"><span class=\"fa fa-arrow-left\"></span>&nbsp;Observer </a>\n            </div>\n            </nav>\n</div>\n\n<aside class=\"feature content-secondary\">\n    <div class=\"prom banner-sidebar banner-removable banner-removable-patterns\" data-id=\"DP: Sidebar\" data-creative-id=\"standard-sidebar-en\" data-position=\"sidebar\">\n        <div class=\"banner-inner\">\n            <div class=\"image3d-book-right\">\n                <div class=\"image3d-cover\" style=\"background: #0b3752;\">\n                    <a href=\"/design-patterns/book\">\n                        <img width=\"250\" height=\"375\" loading=\"lazy\" src=\"/images/patterns/book/web-cover-en.png?id=328861769fd11617674e3b8a7e2dd9e7\" srcset=\"/images/patterns/book/web-cover-en-2x.png?id=02940141c5652ed5a426d87390b16366 2x\">\n                    </a>\n                </div>\n            </div>\n            <div style=\"margin-top: 1rem\">\n                <p class=\"text-center\" >This article is a part of our eBook<br/><strong>Dive Into Design Patterns</strong>.</p>\n                <a href=\"/design-patterns/book\" class=\"btn btn-secondary btn-block\"><i class=\"fa fa-book\" aria-hidden=\"true\"></i> Learn more…</a>\n            </div>\n        </div>\n    </div>\n\n\n</aside>\n                    </div>\n    </main>\n\n    <aside class=\"sidebar main-menu\">\n    <div class=\"main-menu-controls\">\n        <button class=\"navigation-toggle\"><i class=\"fa fa-fw fa-times\"></i></button>\n    </div>\n    <div class=\"main-menu-list-wrapper nano\">\n        <div class=\"main-menu-list nano-content\">\n            <a class=\"menu-brand\" href=\"/\">\n                                    <img width=200 height=241 loading=\"lazy\" alt=\"Refactoring.Guru\" src=\"/images/content-public/logos/logo-new.png?id=97d554614702483f31e38b32e82d8e34\" srcset=\"/images/content-public/logos/logo-new-2x.png?id=3bc33294e095bab1d6fe9ae421d07837 2x\">\n                            </a>\n\n            <div class=\"menu-container\" style=\"position: relative\">\n                                <ul class=\"menu-list trail\">\n                            <li class=\"featured\">\n            <a href=\"/store\">\n                <i class=\"fa fa-fw fa-star\" aria-hidden=\"true\"></i> Premium Content\n            </a>\n    \n            <ul >\n                            <li class=\"featured menu-fs15\">\n            <a href=\"/design-patterns/book\">\n                <i class=\"fa fa-fw fa-book\" aria-hidden=\"true\"></i> Design Patterns eBook\n            </a>\n    \n    \n            </li>\n                                <li class=\"featured menu-fs15\">\n            <a href=\"/refactoring/course\">\n                <i class=\"fa fa-fw fa-graduation-cap\" aria-hidden=\"true\"></i> Refactoring Course\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring\">\n                <i class=\"fa fa-fw fa-scissors\" aria-hidden=\"true\"></i> Refactoring\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/refactoring/what-is-refactoring\">\n                What is Refactoring\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/refactoring/what-is-refactoring\">\n                Clean code\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/technical-debt\">\n                Technical debt\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/when\">\n                When to refactor\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/how-to\">\n                How to refactor\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/catalog\">\n                Catalog\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells\">\n                Code Smells\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/refactoring/smells/bloaters\">\n                Bloaters\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/long-method\">\n                Long Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/large-class\">\n                Large Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/primitive-obsession\">\n                Primitive Obsession\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/long-parameter-list\">\n                Long Parameter List\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/data-clumps\">\n                Data Clumps\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/oo-abusers\">\n                Object-Orientation Abusers\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/switch-statements\">\n                Switch Statements\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/temporary-field\">\n                Temporary Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/refused-bequest\">\n                Refused Bequest\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/alternative-classes-with-different-interfaces\">\n                Alternative Classes with Different Interfaces\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/change-preventers\">\n                Change Preventers\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/divergent-change\">\n                Divergent Change\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/shotgun-surgery\">\n                Shotgun Surgery\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/parallel-inheritance-hierarchies\">\n                Parallel Inheritance Hierarchies\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/dispensables\">\n                Dispensables\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/comments\">\n                Comments\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/duplicate-code\">\n                Duplicate Code\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/lazy-class\">\n                Lazy Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/data-class\">\n                Data Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/dead-code\">\n                Dead Code\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/speculative-generality\">\n                Speculative Generality\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/couplers\">\n                Couplers\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/feature-envy\">\n                Feature Envy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/inappropriate-intimacy\">\n                Inappropriate Intimacy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/message-chains\">\n                Message Chains\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/middle-man\">\n                Middle Man\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/other\">\n                Other Smells\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/incomplete-library-class\">\n                Incomplete Library Class\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques\">\n                Refactorings\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/refactoring/techniques/composing-methods\">\n                Composing Methods\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/extract-method\">\n                Extract Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/inline-method\">\n                Inline Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-variable\">\n                Extract Variable\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/inline-temp\">\n                Inline Temp\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-temp-with-query\">\n                Replace Temp with Query\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/split-temporary-variable\">\n                Split Temporary Variable\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-assignments-to-parameters\">\n                Remove Assignments to Parameters\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-method-with-method-object\">\n                Replace Method with Method Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/substitute-algorithm\">\n                Substitute Algorithm\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/moving-features-between-objects\">\n                Moving Features between Objects\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/move-method\">\n                Move Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/move-field\">\n                Move Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-class\">\n                Extract Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/inline-class\">\n                Inline Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/hide-delegate\">\n                Hide Delegate\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-middle-man\">\n                Remove Middle Man\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-foreign-method\">\n                Introduce Foreign Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-local-extension\">\n                Introduce Local Extension\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/organizing-data\">\n                Organizing Data\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/self-encapsulate-field\">\n                Self Encapsulate Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-data-value-with-object\">\n                Replace Data Value with Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/change-value-to-reference\">\n                Change Value to Reference\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/change-reference-to-value\">\n                Change Reference to Value\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-array-with-object\">\n                Replace Array with Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/duplicate-observed-data\">\n                Duplicate Observed Data\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/change-unidirectional-association-to-bidirectional\">\n                Change Unidirectional Association to Bidirectional\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/change-bidirectional-association-to-unidirectional\">\n                Change Bidirectional Association to Unidirectional\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-magic-number-with-symbolic-constant\">\n                Replace Magic Number with Symbolic Constant\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/encapsulate-field\">\n                Encapsulate Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/encapsulate-collection\">\n                Encapsulate Collection\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-type-code-with-class\">\n                Replace Type Code with Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-type-code-with-subclasses\">\n                Replace Type Code with Subclasses\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-type-code-with-state-strategy\">\n                Replace Type Code with State/Strategy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-subclass-with-fields\">\n                Replace Subclass with Fields\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/simplifying-conditional-expressions\">\n                Simplifying Conditional Expressions\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/decompose-conditional\">\n                Decompose Conditional\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/consolidate-conditional-expression\">\n                Consolidate Conditional Expression\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/consolidate-duplicate-conditional-fragments\">\n                Consolidate Duplicate Conditional Fragments\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-control-flag\">\n                Remove Control Flag\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-nested-conditional-with-guard-clauses\">\n                Replace Nested Conditional with Guard Clauses\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-conditional-with-polymorphism\">\n                Replace Conditional with Polymorphism\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-null-object\">\n                Introduce Null Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-assertion\">\n                Introduce Assertion\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/simplifying-method-calls\">\n                Simplifying Method Calls\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/rename-method\">\n                Rename Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/add-parameter\">\n                Add Parameter\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-parameter\">\n                Remove Parameter\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/separate-query-from-modifier\">\n                Separate Query from Modifier\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/parameterize-method\">\n                Parameterize Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-parameter-with-explicit-methods\">\n                Replace Parameter with Explicit Methods\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/preserve-whole-object\">\n                Preserve Whole Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-parameter-with-method-call\">\n                Replace Parameter with Method Call\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-parameter-object\">\n                Introduce Parameter Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-setting-method\">\n                Remove Setting Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/hide-method\">\n                Hide Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-constructor-with-factory-method\">\n                Replace Constructor with Factory Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-error-code-with-exception\">\n                Replace Error Code with Exception\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-exception-with-test\">\n                Replace Exception with Test\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/dealing-with-generalization\">\n                Dealing with Generalization\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/pull-up-field\">\n                Pull Up Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/pull-up-method\">\n                Pull Up Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/pull-up-constructor-body\">\n                Pull Up Constructor Body\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/push-down-method\">\n                Push Down Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/push-down-field\">\n                Push Down Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-subclass\">\n                Extract Subclass\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-superclass\">\n                Extract Superclass\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-interface\">\n                Extract Interface\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/collapse-hierarchy\">\n                Collapse Hierarchy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/form-template-method\">\n                Form Template Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-inheritance-with-delegation\">\n                Replace Inheritance with Delegation\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-delegation-with-inheritance\">\n                Replace Delegation with Inheritance\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"trail\">\n            <a href=\"/design-patterns\">\n                <i class=\"fa fa-fw fa-puzzle-piece\" aria-hidden=\"true\"></i> Design Patterns\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/what-is-pattern\">\n                What is a Pattern\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/what-is-pattern\">\n                What's a design pattern?\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/history\">\n                History of patterns\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/why-learn-patterns\">\n                Why should I learn patterns?\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/criticism\">\n                Criticism of patterns\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/classification\">\n                Classification of patterns\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/catalog\">\n                Catalog\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-third-level\">\n            <a href=\"/design-patterns/creational-patterns\">\n                Creational Patterns\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/factory-method\">\n                Factory Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/abstract-factory\">\n                Abstract Factory\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/builder\">\n                Builder\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/prototype\">\n                Prototype\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/singleton\">\n                Singleton\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"menu-third-level\">\n            <a href=\"/design-patterns/structural-patterns\">\n                Structural Patterns\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/adapter\">\n                Adapter\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/bridge\">\n                Bridge\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/composite\">\n                Composite\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/decorator\">\n                Decorator\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/facade\">\n                Facade\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/flyweight\">\n                Flyweight\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/proxy\">\n                Proxy\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"menu-third-level trail\">\n            <a href=\"/design-patterns/behavioral-patterns\">\n                Behavioral Patterns\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/chain-of-responsibility\">\n                Chain of Responsibility\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/command\">\n                Command\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/iterator\">\n                Iterator\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/mediator\">\n                Mediator\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/memento\">\n                Memento\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/observer\">\n                Observer\n            </a>\n    \n    \n            </li>\n                                <li class=\"trail active\">\n            <a href=\"/design-patterns/state\">\n                State\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/strategy\">\n                Strategy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/template-method\">\n                Template Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/visitor\">\n                Visitor\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"menu-code-examples\">\n            <a href=\"/design-patterns/examples\">\n                Code Examples\n            </a>\n    \n            <ul >\n                            <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/csharp\">\n                C#\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/cpp\">\n                C++\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/go\">\n                Go\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/java\">\n                Java\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/php\">\n                PHP\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/python\">\n                Python\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/ruby\">\n                Ruby\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/rust\">\n                Rust\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/swift\">\n                Swift\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/typescript\">\n                TypeScript\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n                </div>\n\n            <div class=\"main-menu-aux-controls\">\n                <a href=\"https://refactoring.guru/login\" title=\"Sign in\" style=\" display: inline-flex; align-items: center; gap: 6px; \"><svg style=\"width: 16px; height: 16px; filter:drop-shadow(0 1px 1px #74261e)\" class=\"inline-block mx-0\"  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\"opacity=\"0.4\" d=\"M352.7 222.4c3.2 1 6.5 1.6 10 1.6l21.3 0c17.7 0 32 14.3 32 32s-14.3 32-32 32l-21.3 0c-.8 0-1.7 0-2.5 0c-.9 0-1.7-.1-2.5-.1c-1.7-.1-3.4-.2-5-.4C357.4 414 391.1 512 432 512c44.2 0 80-114.6 80-256S476.2 0 432 0c-40.6 0-74.2 96.9-79.3 222.4z\"/><path fill=\"currentColor\"class=\"fa-primary\" d=\"M320 48a48 48 0 1 0 -96 0 48 48 0 1 0 96 0zM125.7 175.5c9.9-9.9 23.4-15.5 37.5-15.5c1.9 0 3.8 .1 5.6 .3L137.6 254c-9.3 28 1.7 58.8 26.8 74.5l86.2 53.9-25.4 88.8c-4.9 17 5 34.7 22 39.6s34.7-5 39.6-22l28.7-100.4c5.9-20.6-2.6-42.6-20.7-53.9L238 299l30.9-82.4 5.1 12.3C289 264.7 323.9 288 362.7 288l21.3 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-21.3 0c-12.9 0-24.6-7.8-29.5-19.7l-6.3-15c-14.6-35.1-44.1-61.9-80.5-73.1l-48.7-15c-11.1-3.4-22.7-5.2-34.4-5.2c-31 0-60.8 12.3-82.7 34.3L57.4 153.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l23.1-23.1zM91.2 352L32 352c-17.7 0-32 14.3-32 32s14.3 32 32 32l69.6 0c19 0 36.2-11.2 43.9-28.5L157 361.6l-9.5-6c-17.5-10.9-30.5-26.8-37.9-44.9L91.2 352z\"/></svg> Sign in</a>\n                <a href=\"https://feedback.refactoring.guru/\" class=\"userecho-public\" rel=\"nofollow\" title=\"Contact us\"><i class=\"fa fa-fw fa-fw fa-envelope\" aria-hidden=\"true\"></i> Contact us</a>\n            </div>\n        </div>\n    </div>\n</aside>\n\n    <nav class=\"navigation\" role=\"navigation\">\n    <div class=\"navigation-container\">\n        <a class=\"navigation-brand\" href=\"/\">\n            <img alt=\"Refactoring.Guru\"\n                 src=\"/images/content-public/logos/logo-new-mobile.png?id=ea18aa9b032eaa92835ed6d472b03b4a\"\n                 srcset=\"/images/content-public/logos/logo-new-mobile-2x.png?id=7ad5648bfd86ae2e8524147a72877c64 2x\">\n        </a>\n\n        <div class=\"shop-link d-none d-lg-block\" style=\"display: none !important;\">\n            <a class=\"btn btn-md btn-primary btn-featured\" href=\"/store\"><svg style=\"width: 28px; height: 28px; fill: currentColor; display: inline-block; margin-top: -14px;\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><!--! Font Awesome Pro 6.3.0 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2023 Fonticons, Inc. --><path d=\"M356 60l60 20-60 20-20 60-20-60L256 80l60-20L336 0l20 60zM464 208l48 16-48 16-16 48-16-48-48-16 48-16 16-48 16 48zm-243.8-9.8l33 66.9 73.8 10.7 59.8 8.7-43.3 42.2-53.4 52.1 12.6 73.5L313 512l-53.5-28.1-66-34.7-66 34.7L73.9 512l10.2-59.6 12.6-73.5L43.3 326.8 0 284.6l59.8-8.7 73.8-10.7 33-66.9L193.5 144l26.8 54.2zm26.1 114.4l-25-3.6-11.2-22.6-16.7-33.9-16.7 33.9L165.6 309l-25 3.6-37.4 5.4 27.1 26.4 18.1 17.6L144 387l-6.4 37.3 33.5-17.6 22.3-11.7 22.3 11.7 33.5 17.6L242.9 387l-4.3-24.9 18.1-17.6 27.1-26.4-37.4-5.4z\"/></svg>\n                Shop Now!</a>\n        </div>\n\n        <ul class=\"navigation-menu\">\n                            <li class=\"nav-locale dropdown dropdown-locales\">\n                    <button class=\"dropdown-toggle\" id=\"dropdownLanguage\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                        <i class=\"fa fa-fw fa-globe\" aria-hidden=\"true\"></i> <span class=\"caption d-none d-lg-inline-block\">English</span>\n                    </button>\n                    <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownLanguage\">\n                                                                                                                        <a href=\"https://refactoring.guru/design-patterns/state\" class=\"dropdown-item locale-link active\" data-locale=\"en\" title=\"English\">English</a>\n                                                                                                                                <a href=\"https://refactoring.guru/es/design-patterns/state\" class=\"dropdown-item locale-link \" data-locale=\"es\" title=\"Español\">Español</a>\n                                                                                                                                <a href=\"https://refactoring.guru/fr/design-patterns/state\" class=\"dropdown-item locale-link \" data-locale=\"fr\" title=\"Français\">Français</a>\n                                                                                                                                <a href=\"https://refactoring.guru/ja/design-patterns/state\" class=\"dropdown-item locale-link \" data-locale=\"ja\" title=\"日本語\">日本語</a>\n                                                                                                                                <a href=\"https://refactoring.guru/ko/design-patterns/state\" class=\"dropdown-item locale-link \" data-locale=\"ko\" title=\"한국어\">한국어</a>\n                                                                                                                                <a href=\"https://refactoring.guru/pl/design-patterns/state\" class=\"dropdown-item locale-link \" data-locale=\"pl\" title=\"Polski\">Polski</a>\n                                                                                                                                <a href=\"https://refactoring.guru/pt-br/design-patterns/state\" class=\"dropdown-item locale-link \" data-locale=\"pt-br\" title=\"Português Brasileiro\">Português Brasileiro</a>\n                                                                                                                                <a href=\"https://refactoring.guru/ru/design-patterns/state\" class=\"dropdown-item locale-link \" data-locale=\"ru\" title=\"Русский\">Русский</a>\n                                                                                                                                <a href=\"https://refactoring.guru/uk/design-patterns/state\" class=\"dropdown-item locale-link \" data-locale=\"uk\" title=\"Українська\">Українська</a>\n                                                                                                                                <a href=\"https://refactoringguru.cn/design-patterns/state\" class=\"dropdown-item locale-link \" data-locale=\"zh\" title=\"中文\">中文</a>\ndiv>\n                </li>\n                        <li class=\"nav-contacts\">\n                <a class=\"userecho-private\" href=\"https://feedback.refactoring.guru/?show_feedback_form_private=true\" rel=\"nofollow\" title=\"Contact us\">\n                    <i class=\"fa fa-fw fa-envelope\" aria-hidden=\"true\"></i> <span class=\"caption d-none d-xl-inline-block\">Contact us</span>\n                </a>\n            </li>\n                            <li class=\"nav-user\">\n                    <a href=\"https://refactoring.guru/login\" title=\"Sign in\"><span class=\"sign-in-icon\"><svg style=\"width: 24px; height: 24px; \" class=\"inline-block \"  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\"opacity=\"0.4\" d=\"M352.7 222.4c3.2 1 6.5 1.6 10 1.6l21.3 0c17.7 0 32 14.3 32 32s-14.3 32-32 32l-21.3 0c-.8 0-1.7 0-2.5 0c-.9 0-1.7-.1-2.5-.1c-1.7-.1-3.4-.2-5-.4C357.4 414 391.1 512 432 512c44.2 0 80-114.6 80-256S476.2 0 432 0c-40.6 0-74.2 96.9-79.3 222.4z\"/><path fill=\"currentColor\"class=\"fa-primary\" d=\"M320 48a48 48 0 1 0 -96 0 48 48 0 1 0 96 0zM125.7 175.5c9.9-9.9 23.4-15.5 37.5-15.5c1.9 0 3.8 .1 5.6 .3L137.6 254c-9.3 28 1.7 58.8 26.8 74.5l86.2 53.9-25.4 88.8c-4.9 17 5 34.7 22 39.6s34.7-5 39.6-22l28.7-100.4c5.9-20.6-2.6-42.6-20.7-53.9L238 299l30.9-82.4 5.1 12.3C289 264.7 323.9 288 362.7 288l21.3 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-21.3 0c-12.9 0-24.6-7.8-29.5-19.7l-6.3-15c-14.6-35.1-44.1-61.9-80.5-73.1l-48.7-15c-11.1-3.4-22.7-5.2-34.4-5.2c-31 0-60.8 12.3-82.7 34.3L57.4 153.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l23.1-23.1zM91.2 352L32 352c-17.7 0-32 14.3-32 32s14.3 32 32 32l69.6 0c19 0 36.2-11.2 43.9-28.5L157 361.6l-9.5-6c-17.5-10.9-30.5-26.8-37.9-44.9L91.2 352z\"/></svg></span> <span class=\"account-icon\" style=\"display:none\"><svg style=\"width: 24px; height: 24px; \" class=\"inline-block \"  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 576 512\"><path fill=\"currentColor\"opacity=\"0.4\" d=\"M64 270.5l224-196c74.7 65.4 149.4 130.7 224.1 196.1l.4 177.3c.1 35.4-28.6 64.1-64 64.1l-320.4 0c-35.3 0-64-28.6-64-64L64 270.5zM176.1 433.6c.1 .5 .1 1.1 .2 1.6c.2 1 .5 2 .9 3c.8 1.9 2 3.6 3.4 5.1c2.9 2.9 6.9 4.7 11.3 4.7l192 0c8.8 0 16-7.2 16-16c0-44.2-35.8-80-80-80l-64 0c-22.1 0-42.1 9-56.6 23.4c-7.2 7.2-13.1 15.9-17.1 25.4c-2 4.8-3.6 9.8-4.7 15c-.5 2.6-.9 5.3-1.2 7.9c-.1 1.3-.2 2.7-.3 4.1c-.1 1.4-.1 2.7-.1 4.1c0 .6 0 1.1 .1 1.6zm48.2-184.2c-.1 1.1-.2 2.2-.2 3.2c-.1 1.1-.1 2.2-.1 3.3s0 2.2 .1 3.3c.1 1.1 .1 2.2 .2 3.2c.2 2.1 .5 4.3 1 6.4c.9 4.2 2.1 8.2 3.7 12c3.2 7.7 7.9 14.6 13.7 20.3C254.3 312.8 270.3 320 288 320c35.3 0 64-28.7 64-64s-28.7-64-64-64c-17.7 0-33.7 7.2-45.3 18.7c-5.8 5.8-10.5 12.7-13.7 20.3c-1.6 3.8-2.9 7.8-3.7 12c-.4 2.1-.8 4.2-1 6.4z\"/><path fill=\"currentColor\"class=\"fa-primary\" d=\"M309.1 7.9C297-2.6 279-2.6 266.9 7.9l-256 224c-13.3 11.6-14.6 31.9-3 45.2s31.9 14.6 45.2 3L288 74.5 522.9 280.1c13.3 11.6 33.5 10.3 45.2-3s10.3-33.5-3-45.2L512 185.5 512 64c0-17.7-14.3-32-32-32l-32 0c-17.7 0-32 14.3-32 32l0 37.5L309.1 7.9zM352 256a64 64 0 1 0 -128 0 64 64 0 1 0 128 0zm-96 96c-44.2 0-80 35.8-80 80c0 8.8 7.2 16 16 16l192 0c8.8 0 16-7.2 16-16c0-44.2-35.8-80-80-80l-64 0z\"/></svg></span> <span class=\"sign-out-icon\" style=\"display:none\"><svg style=\"width: 24px; height: 24px; \" class=\"inline-block \"  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\"opacity=\"0.4\" d=\"M0 256C0 397.4 35.8 512 80 512c25.3 0 47.8-37.5 62.5-96L128 416c-.5 0-1.1 0-1.6 0c-.6 0-1.1-.1-1.6-.1c-1.1-.1-2.1-.3-3.2-.5c-2.1-.4-4.1-1.1-6-1.9c-3.8-1.6-7.3-4-10.2-6.9s-5.2-6.3-6.9-10.2c-.8-1.9-1.4-3.9-1.9-6c-.2-1.1-.4-2.3-.5-3.5c0-.3 0-.6-.1-.8c0-.2 0-.4 0-.7c0-.4 0-.7 0-.7c0-.5 0-.7 0-.9c0-.3 0-.6 0-.9c0 0 0-.3 0-.7c0-.2 0-.4 0-.7c0-.2 0-.4 .1-.8c0-.3 .1-.6 .1-.9c0-.2 .1-.4 .1-.7c.1-.8 .2-1.2 .3-1.7c.5-2.2 1.1-4.2 1.9-6.1c1.6-3.8 4-7.3 6.9-10.2c5.8-5.8 13.8-9.4 22.6-9.4l26.2 0c3.8-29.6 5.8-62.1 5.8-96c0-18.3-.6-36.1-1.7-53.4c-1.7-1.2-3.4-2.5-4.9-4c-.8-.8-1.6-1.6-2.2-2.5s-1.3-1.7-1.9-2.6c-1.2-1.8-2.1-3.6-2.9-5.5s-1.4-3.9-1.8-5.9c-.2-1-.3-2-.4-3s-.1-2-.2-3c0-8.3 3.1-16.5 9.4-22.8C141 63.1 112.8 0 80 0C35.8 0 0 114.6 0 256z\"/><path fill=\"currentColor\"class=\"fa-primary\" d=\"M416 48a48 48 0 1 0 -96 0 48 48 0 1 0 96 0zM221.7 175.5c9.9-9.9 23.4-15.5 37.5-15.5c1.9 0 3.8 .1 5.6 .3L233.6 254c-9.3 28 1.7 58.8 26.8 74.5l86.2 53.9-25.4 88.8c-4.9 17 5 34.7 22 39.6s34.7-5 39.6-22l28.7-100.4c5.9-20.6-2.6-42.6-20.7-53.9L334 299l30.9-82.4 5.1 12.3C385 264.7 419.9 288 458.7 288l21.3 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-21.3 0c-12.9 0-24.6-7.8-29.5-19.7l-6.3-15c-14.6-35.1-44.1-61.9-80.5-73.1l-48.7-15c-11.1-3.4-22.7-5.2-34.4-5.2c-31 0-60.8 12.3-82.7 34.3l-23.1 23.1c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l23.1-23.1zM187.2 352L128 352c-17.7 0-32 14.3-32 32s14.3 32 32 32l69.6 0c19 0 36.2-11.2 43.9-28.5L253 361.6l-9.5-6c-17.5-10.9-30.5-26.8-37.9-44.9L187.2 352z\"/></svg></span> <span class=\"caption d-none d-xl-inline-block\">Sign in</span></a>\n                </li>\n                        <li class=\"nav-menu\">\n                <button class=\"navigation-toggle\"><i class=\"fa fa-fw fa-bars\" aria-hidden=\"true\"></i></button>\n            </li>\n        </ul>\n    </div>\n</nav>\n\n    <footer class=\"footer center-content\">\n    <div class=\"footer-container center-content-container\">\n        <div class=\"footer-inner container-fluid\">\n            <div class=\"row\">\n                <div class=\"col-8 col-md-10\">\n                    <ul class=\"footer-list footer-list-horizontal\">\n                        <li><a href=\"/\">Home</a></li>\n                        <li><a href=\"/refactoring\">Refactoring</a></li>\n                        <li><a href=\"/design-patterns\">Design Patterns</a></li>\n                        <li><a href=\"/store\">Premium Content</a></li>\n                        <li><a href=\"https://gitbybit.com/\">Git Course</a></li>\n                        <li><a href=\"https://refactoring.userecho.com/\" rel=\"nofollow\" class=\"userecho-public\">Forum</a></li>\n                        <li><a href=\"https://refactoring.userecho.com/\" rel=\"nofollow\" class=\"userecho-private\">Contact us</a></li>\n                    </ul>\n                </div>\n                <div class=\"col-4 col-md-2\">\n                    <ul class=\"footer-list footer-list-iconic footer-list-right\">\n                                                    <li><a href=\"https://www.facebook.com/refactoring.guru\"><i class=\"fa fa-facebook-official\"></i></a></li>\n                                                <li><a href=\"/sendy/form\" rel=\"nofollow\"><i class=\"fa fa-envelope\" aria-hidden=\"true\"></i></a></li>\n                        <li><a href=\"https://github.com/RefactoringGuru\"><i class=\"fa fa-github-circled\"></i></a></li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"footer-second\">\n        <div class=\"footer-container center-content-container\">\n            <div class=\"footer-inner container-fluid\">\n                <div class=\"row\">\n                    <div class=\"col-12 col-sm-6\">\n                        <i class=\"fa fa-fw fa-copyright\"></i> 2014-2025 <a href=\"/\">Refactoring.Guru</a>. <span style=\"white-space: nowrap\">All rights reserved.</span><br>\n                        <i class=\"fa fa-fw fa-image\"></i> Illustrations by <a href=\"http://zhart.us/\" rel=\"nofollow\"><span style=\"white-space: nowrap\">Dmitry Zhart</span></a>\n                    </div>\n                    <div class=\"footer-links-right col-12 col-sm-6 mt-4 mt-sm-0\">\n                        <ul class=\"footer-list footer-list-horizontal footer-list-right\">\n                            <li><a href=\"/terms\"><span>Terms &amp; Conditions</span></a>\n                            </li>\n                            <li><a href=\"/privacy-policy\"><span>Privacy Policy</span></a>\n                            </li>\n                            <li><a href=\"/content-usage-policy\"><span>Content Usage Policy</span></a>\n                            </li>\n                            <li><a href=\"/site-about\"><span>About us</span></a>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n                                    <div class=\"row\">\n                        <div class=\"col-12 col-sm-4\">\n                            <div class=\"mt-4\">\n                                                                    <b>Ukrainian office:</b><br>\n                                    <object class=\"fa-fw\" style=\"height: 0.8rem; filter: invert(50%);\"  type=\"image/svg+xml\" data=\"/images/content-public/icons/fa-building.svg?id=afddb5806968b0a9acfc1df75a181234\">\n                                        <img class=\"fa-fw\" style=\"height: 0.8rem;\" src=\"/images/content-public/icons/fa-building.svg?id=afddb5806968b0a9acfc1df75a181234\" alt=\"Organization address\"/>\n                                    </object> FOP Olga Skobeleva<br>\n                                    <svg style=\"width: 16px; height: 16px; margin-right: 1px; fill: currentColor;\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\"><path d=\"M352 192c0-88.4-71.6-160-160-160S32 103.6 32 192c0 15.6 5.4 37 16.6 63.4c10.9 25.9 26.2 54 43.6 82.1c34.1 55.3 74.4 108.2 99.9 140c25.4-31.8 65.8-84.7 99.9-140c17.3-28.1 32.7-56.3 43.6-82.1C346.6 229 352 207.6 352 192zm32 0c0 87.4-117 243-168.3 307.2c-12.3 15.3-35.1 15.3-47.4 0C117 435 0 279.4 0 192C0 86 86 0 192 0S384 86 384 192zm-240 0a48 48 0 1 0 96 0 48 48 0 1 0 -96 0zm48 80a80 80 0 1 1 0-160 80 80 0 1 1 0 160z\"/></svg> Abolmasova 7<br>\n                                    <span style=\"margin-left: 21px;\">Kyiv, Ukraine, 02002</span><br>\n                                    <i class=\"fa fa-fw fa-envelope\"></i>  Email: support@refactoring.guru\n                                \n                            </div>\n                        </div>\n                        <div class=\"col-12 col-sm-4\">\n                            <div class=\"mt-4\">\n                                <b>Spanish office:</b><br>\n                                <object class=\"fa-fw\" style=\"height: 0.8rem; filter: invert(50%);\"  type=\"image/svg+xml\" data=\"/images/content-public/icons/fa-building.svg?id=afddb5806968b0a9acfc1df75a181234\">\n                                    <img class=\"fa-fw\" style=\"height: 0.8rem;\" src=\"/images/content-public/icons/fa-building.svg?id=afddb5806968b0a9acfc1df75a181234\" alt=\"Organization address\"/>\n                                </object> Oleksandr Shvets<br>\n                                <svg style=\"width: 16px; height: 16px; margin-right: 1px; fill: currentColor;\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\"><path d=\"M352 192c0-88.4-71.6-160-160-160S32 103.6 32 192c0 15.6 5.4 37 16.6 63.4c10.9 25.9 26.2 54 43.6 82.1c34.1 55.3 74.4 108.2 99.9 140c25.4-31.8 65.8-84.7 99.9-140c17.3-28.1 32.7-56.3 43.6-82.1C346.6 229 352 207.6 352 192zm32 0c0 87.4-117 243-168.3 307.2c-12.3 15.3-35.1 15.3-47.4 0C117 435 0 279.4 0 192C0 86 86 0 192 0S384 86 384 192zm-240 0a48 48 0 1 0 96 0 48 48 0 1 0 -96 0zm48 80a80 80 0 1 1 0-160 80 80 0 1 1 0 160z\"/></svg> Avda Pamplona 64<br>\n                                <span style=\"margin-left: 21px;\">Pamplona, Spain, 31009</span><br>\n                                <i class=\"fa fa-fw fa-envelope\"></i>  Email: support@refactoring.guru\n                            </div>\n                        </div>\n                    </div>\n                            </div>\n        </div>\n    </div>\n</footer>\n\n</div>\n\n\n    <script defer>\n    var CodeMirrorScripts = [\"/js/codemirror.min.js?id=f7ae4adf14bd00338caf8e95da733cc9\"];\n</script>\n\n\n\n    <script>window.loadContent = true;window.loadCart = true;</script>\n</body>\n</html>\n"},
{"title": null, "url": "https://refactoring.guru/design-patterns/observer", "raw_html": "<!DOCTYPE html>\n<html lang=\"en\" dir=\"ltr\">\n<head prefix=\"og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# website: http://ogp.me/ns/website#\">\n    <meta charset=\"utf-8\">\n    <title>Observer</title>\n\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n    <meta name=\"theme-color\" content=\"#A2E2FD\" />\n\n            <style>\n        .buy-widget-excl-local-taxes {\n            display: none;\n        }\n    </style>\n    \n    <link rel=\"preload\" href=\"/fonts/PTSans/ptsans-regular_en.woff2?1\" as=\"font\" type=\"font/woff2\" crossorigin>\n    <link rel=\"preload\" href=\"/fonts/PTSans/ptsans-bold_en.woff2?1\" as=\"font\" type=\"font/woff2\" crossorigin>\n        <link rel=\"preload\" href=\"/fonts/fontello/fontawesome.woff2?15843843\" as=\"font\" type=\"font/woff2\" crossorigin>\n    <link rel=\"preload\" href=\"/fonts/FiraCode/woff2/FiraCode-Regular_latin.woff2\" as=\"font\" type=\"font/woff2\" crossorigin>\n        <link rel=\"preconnect dns-prefetch\" href=\"https://cdn.paddle.com\">\n    <link rel=\"preconnect dns-prefetch\" href=\"https://www.googletagmanager.com\">\n\n    <link rel=\"alternate\" href=\"https://refactoring.guru/design-patterns/observer\" hreflang=\"x-default\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/es/design-patterns/observer\" hreflang=\"es\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/fr/design-patterns/observer\" hreflang=\"fr\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/ja/design-patterns/observer\" hreflang=\"ja\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/ko/design-patterns/observer\" hreflang=\"ko\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/pl/design-patterns/observer\" hreflang=\"pl\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/pt-br/design-patterns/observer\" hreflang=\"pt-br\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/ru/design-patterns/observer\" hreflang=\"ru\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/uk/design-patterns/observer\" hreflang=\"uk\"/>\n    <link rel=\"alternate\" href=\"https://refactoringguru.cn/design-patterns/observer\" hreflang=\"zh\"/>\n\n    <meta name=\"description\" content=\"Observer is a behavioral design pattern that lets you define a subscription mechanism to notify multiple objects about any events that happen to the object they&#039;re observing.\">\n\n    <link rel=\"canonical\" href=\"https://refactoring.guru/design-patterns/observer\"/>\n\n    <link rel=\"icon\" type=\"image/x-icon\" href=\"/favicon.png\"/>\n\n        <meta property=\"fb:app_id\" content=\"666819623386327\"/>\n        <meta property=\"og:type\" content=\"website\"/>\n        <meta property=\"og:image\" content=\"https://refactoring.guru/images/refactoring/social/facebook-share-preview.png?id=dbf9e98269595be86eb668f365be6868\"/>\n    \n                    <link rel=\"stylesheet\" href=\"/css/public-packed.min.css?id=aaefab4da343b914b8dda9973604a9e8\">\n        <style type=\"text/css\">\n                    @font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_cyrillic-ext.woff2?1) format(\"woff2\");unicode-range:U+0460-052F,U+1C80-1C88,U+20B4,U+2DE0-2DFF,U+A640-A69F,U+FE2E-FE2F}@font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_cyrillic.woff2?1) format(\"woff2\");unicode-range:U+0400-045F,U+0490-0491,U+04B0-04B1,U+2116}@font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_latin-ext.woff2?1) format(\"woff2\");unicode-range:U+0100-024F,U+0259,U+1E00-1EFF,U+2020,U+20A0-20AB,U+20AD-20CF,U+2113,U+2C60-2C7F,U+A720-A7FF}@font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_latin.woff2?1) format(\"woff2\");unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}@font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_en.woff2?1) format(\"woff2\");unicode-range:U+0-FF,U+131,U+142,U+152,U+153,U+2BB,U+2BC,U+2C6,U+2DA,U+2DC,U+420,U+423,U+430,U+438-43A,U+43D,U+440,U+441,U+443,U+44C,U+457,U+2000-206F,U+2074,U+20AA-20AC,U+20B4,U+20B9,U+20BA,U+20BD,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_cyrillic-ext.woff2?1) format(\"woff2\");unicode-range:U+0460-052F,U+1C80-1C88,U+20B4,U+2DE0-2DFF,U+A640-A69F,U+FE2E-FE2F}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_cyrillic.woff2?1) format(\"woff2\");unicode-range:U+0400-045F,U+0490-0491,U+04B0-04B1,U+2116}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_latin-ext.woff2?1) format(\"woff2\");unicode-range:U+0100-024F,U+0259,U+1E00-1EFF,U+2020,U+20A0-20AB,U+20AD-20CF,U+2113,U+2C60-2C7F,U+A720-A7FF}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_latin.woff2?1) format(\"woff2\");unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_en.woff2?1) format(\"woff2\");unicode-range:U+0-FF,U+131,U+142,U+152,U+153,U+2BB,U+2BC,U+2C6,U+2DA,U+2DC,U+420,U+423,U+430,U+438-43A,U+43D,U+440,U+441,U+443,U+44C,U+457,U+2000-206F,U+2074,U+20AA-20AC,U+20B4,U+20B9,U+20BA,U+20BD,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}\n            </style>\n\n    \n            <script defer src=\"/js/public.min.js?id=1f19fe18ffe0fc844ede8a0f2ee64202\"></script>\n        <script defer src=\"/js/checkout.min.js?id=b4da9c5bd8b1cf504447c07ae8b7cd44\"></script>\n            <script defer src=\"https://cdn.paddle.com/paddle/v2/paddle.js\"></script>\n    <script async src=\"https://www.googletagmanager.com/gtag/js?id=G-SR8Y3GYQYC\"></script>\n\n    <script type=\"application/ld+json\">\n        {\"@context\": \"http://schema.org\", \"@graph\": [{\"@type\":\"Person\",\"@id\":\"https://refactoring.guru/#founder\",\"name\":\"Alexander Shvets\"},{\"@type\":\"Organization\",\"@id\":\"https://refactoring.guru/#organization\",\"name\":\"Refactoring.Guru\",\"description\":\"Refactoring.Guru makes it easy for you to discover everything you need to know about refactoring, design patterns, SOLID principles, and other smart programming topics.\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https://refactoring.guru/#organizationlogo\",\"url\":\"https://refactoring.guru/images/content-public/logos/logo-plain.png\",\"caption\":\"Refactoring.Guru\"},\"logo\":{\"@id\":\"https://refactoring.guru/#organizationlogo\"},\"founder\":{\"@id\":\"https://refactoring.guru/#founder\"},\"sameAs\":[\"https://www.facebook.com/refactoring.guru\",\"https://twitter.com/RefactoringGuru\",\"https://github.com/RefactoringGuru\"]},{\"@type\":\"WebSite\",\"@id\":\"https://refactoring.guru/#website\",\"url\":\"https://refactoring.guru/\",\"name\":\"Refactoring.Guru\",\"description\":\"Refactoring.Guru makes it easy for you to discover everything you need to know about refactoring, design patterns, SOLID principles, and other smart programming topics.\",\"author\":{\"@id\":\"https://refactoring.guru/#founder\"},\"publisher\":{\"@id\":\"https://refactoring.guru/#organization\"},\"copyrightYear\":2014},{\"@type\":\"WebPage\",\"@id\":\"https://refactoring.guru/design-patterns/observer#webpage\",\"url\":\"https://refactoring.guru/design-patterns/observer\",\"inLanguage\":\"en\",\"name\":\"Observer\",\"description\":\"Observer is a behavioral design pattern that lets you define a subscription mechanism to notify multiple objects about any events that happen to the object they're observing.\",\"isPartOf\":{\"@id\":\"https://refactoring.guru#website\"},\"breadcrumb\":{\"@id\":\"https://refactoring.guru/design-patterns/observer#breadcrumb\"},\"primaryImageOfPage\":{\"@id\":\"https://refactoring.guru/design-patterns/observer#primaryimage\"},\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https://refactoring.guru/design-patterns/observer#primaryimage\",\"url\":\"https://refactoring.guru/images/patterns/content/observer/observer-3x.png\",\"width\":1920,\"height\":1200}},{\"@type\":\"Article\",\"@id\":\"https://refactoring.guru/design-patterns/observer#article\",\"isPartOf\":{\"@id\":\"https://refactoring.guru/design-patterns/observer#webpage\"},\"mainEntityOfPage\":{\"@id\":\"https://refactoring.guru/design-patterns/observer#webpage\"},\"author\":{\"@id\":\"https://refactoring.guru#founder\"},\"publisher\":{\"@id\":\"https://refactoring.guru#organization\"},\"headline\":\"Observer\",\"datePublished\":\"2024-01-01\",\"dateModified\":\"2025-01-01\",\"articleSection\":\"Design Patterns\",\"image\":{\"@id\":\"https://refactoring.guru/design-patterns/observer#primaryimage\"}},{\"@type\":\"BreadcrumbList\",\"@id\":\"https://refactoring.guru/design-patterns/observer#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https://refactoring.guru\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Design Patterns\",\"item\":\"https://refactoring.guru/design-patterns\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"Behavioral Patterns\",\"item\":\"https://refactoring.guru/design-patterns/behavioral-patterns\"}]}] }\n    </script>\n\n    <script>\nfunction extend(){var extended={};var deep=false;var i=0;var length=arguments[\"length\"];if(Object[\"prototype\"][\"toString\"][\"call\"](arguments[0])=== '[object Boolean]'){deep= arguments[0];i++};var merge=function(obj){for(var prop in obj){if(Object[\"prototype\"][\"hasOwnProperty\"][\"call\"](obj,prop)){if(deep&& Object[\"prototype\"][\"toString\"][\"call\"](obj[prop])=== '[object Object]'){extended[prop]= extend(true,extended[prop],obj[prop])}else {extended[prop]= obj[prop]}}}};for(;i< length;i++){var obj=arguments[i];merge(obj)};return extended}\nfunction defer(method) {if (window.jQuery) {method();} else {setTimeout(function() { defer(method) }, 50);}}\n</script>\n<script>\n+function(sd){sd = (typeof sd === \"string\") ? JSON.parse(atob(sd)) : sd;for(var property in sd){if(window[property]!== null&&  typeof window[property]=== 'object'){window[property]= extend(true,window[property],sd[property])}else {window[property]= sd[property]}}}(\"eyJsb2NhbGUiOiJlbiIsImxvY2FsZV9wcmVmaXgiOiIiLCJsb2NhbGl6ZWRfdXJsX3ByZWZpeCI6Imh0dHBzOlwvXC9yZWZhY3RvcmluZy5ndXJ1XC8iLCJ1cmxfcHJlZml4IjoiaHR0cHM6XC9cL3JlZmFjdG9yaW5nLmd1cnVcLyIsImxvY2FsaXplZF91cmxfcHJlZml4X20iOiJodHRwczpcL1wvcmVmYWN0b3JpbmcuZ3VydVwvIiwidXJsX3ByZWZpeF9tIjoiaHR0cHM6XC9cL3JlZmFjdG9yaW5nLmd1cnVcLyIsInVzZXJfZWNob19hbGlhcyI6InJlZmFjdG9yaW5nIiwidXNlcl9lY2hvX2hvc3QiOiJmZWVkYmFjay5yZWZhY3RvcmluZy5ndXJ1IiwidXNlcl9lY2hvX3ByaXZhdGVfZm9ydW0iOiIyIiwidXNlcl9lY2hvX2xvY2FsZSI6ImVuIiwidXNlcl9lY2hvX3B1YmxpY19mb3J1bSI6IjMiLCJ1c2VyX2VjaG9fcHVibGljX2ZvcnVtX3VybCI6Imh0dHBzOlwvXC9mZWVkYmFjay5yZWZhY3RvcmluZy5ndXJ1XC8iLCJ1c2VyX2VjaG9fc3NvX3Rva2VuIjoiIn0=\");\n</script>\n\n<script>\n    window.dataLayer = window.dataLayer || [];\n    function gtag(){dataLayer.push(arguments);}\n    gtag('js', new Date());\n            gtag('set', 'linker', {'domains': [\"refactoring.guru,refactoringguru.cn\"]});\n        gtag('config', 'G-SR8Y3GYQYC', {\n        // Disable default page view, because we're going to report them on our own.\n        // This is done to report traffic on localized domains as part of the main website traffic\n        // See the Chinese overrides below.\n        send_page_view: false,\n    });\n</script>\n\n<script>\n    (() => {\n        // On first page view after returning from social network, we need to send the social login event.\n        (function detectSocialLogin() {\n            let getCookie = function (name) {\n                var nameEQ = name + \"=\";\n                var ca = document.cookie.split(';');\n                for (var i = 0; i < ca.length; i++) {\n                    var c = ca[i];\n                    while (c.charAt(0) == ' ') c = c.substring(1, c.length);\n                    if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);\n                }\n                return null;\n            };\n            window.social_login_provider = window.social_login_provider || getCookie('social_login_provider');\n            if (window.social_login_provider) {\n                gtag('set', {referrer: null});\n                gtag('event', 'login', {\"method\": window.social_login_provider});\n                // Delete cookie.\n                document.cookie = 'social_login_provider=; Path=/; Max-Age=-99999999;';\n            }\n        })();\n\n        function trackPageView(location, title) {\n            location = location || document.location.href;\n            title = title || document.title;\n\n            // This is show on https://refactoringguru.cn/ and alike.\n            if (typeof window.analytics_path_prefix === 'string') {\n                if (/^(https?:\\/\\/[^\\/]+?)\\/$/.test(location)) {\n                    location = location.replace(/(https?:\\/\\/[^\\/]+?)\\//, '$1' + window.analytics_path_prefix);\n                } else {\n                    location = location.replace(/(https?:\\/\\/[^\\/]+?)\\//, '$1' + window.analytics_path_prefix + '/');\n                }\n                gtag('set', {\n                    'page_location': location\n                });\n            }\n\n            // This is show on https://refactoring.guru/zh/login and alike.\n            if (typeof window.analytics_location_prefix === 'string') {\n                location = location.replace(/(https?:\\/\\/[^\\/]+?)\\//, window.analytics_location_prefix);\n                gtag('set', {\n                    'page_location': location\n                });\n            }\n\n            gtag('event', 'page_view', {\n                page_location: location,\n                page_title: title,\n                locale: window.locale ?? 'en'\n            });\n        }\n\n        if (window.loadContent) {\n            window.onPageLoad = window.onPageLoad || [];\n            window.onPageLoad.push({\n                func: function (context) {\n                    trackPageView(window.location.origin + context.canonicalPath, context.title);\n                },\n                afterAll: true,\n            });\n        }\n        else {\n            trackPageView();\n        }\n    })();\n</script>\n\n\n</head>\n<body class=\"locale-en   announcement   observer\" data-body_class=\"observer\">\n\n<div class=\"body-holder\">\n\n            <div class=\"announcement-block announcement-block-summer prom\" data-id=\"DIDP-announcement\" data-creative-id=\"en\" data-position=\"top\">\n        <span class=\"beach-and-sea\">\n            <span class=\"a1\"></span>\n            <span class=\"a2\"><span class=\"wave\"></span></span>\n            <span class=\"yacht\"></span>\n        </span>\n        <a href=\"/store\">\n            <img src=\"/images/content-public/ann/summer/sunbed.svg?id=b1e7314a63715a13870a6bd1a43613f7\" loading=\"lazy\" style=\"width: 32px; height:32px;vertical-align: middle; scale: -1 1 1;\">\n            <span class=\"announcement-link-text\">Summer SALE</span>\n            <img src=\"/images/content-public/ann/summer/reading-book.svg?id=36006ea720df8c171968cf613e8ea164\" loading=\"lazy\" style=\"width: 32px; height:32px;vertical-align: middle;\">\n        </a>\n    </div>\n\n    \n    <div class=\"cart-placeholder\">\n    <div class=\"cart-block-container\" style=\"display:none\">\n        <div class=\"cart-block btn-group\">\n            <a href=\"#checkout\" class=\"btn cart open-checkout\">\n                <span class=\"cart-text\"></span>&nbsp;<strong class=\"cart-total font-money\"></strong>\n            </a><a href=\"#checkout\" class=\"btn btn-secondary checkout open-checkout\"><i class=\"fa fa-shopping-cart\" aria-hidden=\"true\"></i> <span class=\"btn-text-span d-none d-sm-inline-block d-lg-none d-hg-inline-block\"></span></a>\n        </div>\n    </div>\n</div>\n    <main role=\"main\" class=\"main-content top-content center-content \" data-page_class=\"\">\n        <div class=\"main-content-container center-content-container\">\n                        <div class=\"pattern page text\">\n<article>\n    <div class=\"breadcrumb\">\n                                    <a class=\"home\" href=\"/\"><i class=\"fa fa-home\" aria-hidden=\"true\"></i></a>\n                                                / <a class=\"type\" href=\"/design-patterns\">Design Patterns</a>\n                                                / <a class=\"type\" href=\"/design-patterns/behavioral-patterns\">Behavioral Patterns</a>\n                        </div>\n    <h1 class=\"title\">Observer</h1>\n\n    <script type=\"text/javascript\">\n        // Shorten examples titles for users.\n        var h1 = document.getElementsByTagName(\"H1\")[0];\n        if (h1.offsetHeight > 160) {\n            h1.className += ' smaller';\n        }\n\n        // Small beautification for pattern examples.\n        var title = h1.innerHTML;\n        title = title.replace(/^(Java|C\\+\\+|C#|PHP|Python|Ruby|Delphi): (.*)$/, '<strong>$1:</strong> $2');\n        h1.innerHTML = title;\n    </script>\n\n            <div class=\"aka\">\n            Also known as: <span style=\"display:inline-block\">Event-Subscriber,&nbsp;</span><span style=\"display:inline-block\">Listener</span>\n        </div>\n    \n    \n\n    <div class=\"section intent\">\n<h2 id=\"intent\"><i class=\"fa fa-flip-horizontal fa-comment-alt-dots\" aria-hidden=\"true\"></i> Intent</h2>\n<p><strong>Observer</strong> is a behavioral design pattern that lets you define a subscription mechanism to notify multiple objects about any events that happen to the object they’re observing.</p>\n<figure class=\"image\"><img src=\"/images/patterns/content/observer/observer.png?id=6088e31e1b0d4a417506a66614dcf065\" alt=\"Observer Design Pattern\" srcset=\"/images/patterns/content/observer/observer.png?id=6088e31e1b0d4a417506a66614dcf065 640w,/images/patterns/content/observer/observer-1.5x.png?id=aa64f9f336354462b57bbff5c09d8269 960w,/images/patterns/content/observer/observer-2x.png?id=d5a83e115528e9fd633f04ad2650f1db 1280w\" sizes=\"(max-width: 720px) 100vw, 640px\" width=\"640\" style=\"aspect-ratio: 1.6;\" fetchpriority=\"high\" /></figure>\n</div>\n<div class=\"section problem\">\n<h2 id=\"problem\"><i class=\"fa fa-frown\" aria-hidden=\"true\"></i> Problem</h2>\n<p>Imagine that you have two types of objects: a <code>Customer</code> and a <code>Store</code>. The customer is very interested in a particular brand of product (say, it’s a new model of the iPhone) which should become available in the store very soon.</p>\n<p>The customer could visit the store every day and check product availability. But while the product is still en route, most of these trips would be pointless.</p>\n<figure class=\"image\"><img src=\"/images/patterns/content/observer/observer-comic-1-en.png?id=1ec8571b22ea8fd2ed537f06cc763152\" alt=\"Visiting store vs. sending spam\" srcset=\"/images/patterns/content/observer/observer-comic-1-en.png?id=1ec8571b22ea8fd2ed537f06cc763152 600w,/images/patterns/content/observer/observer-comic-1-en-1.5x.png?id=4be5e56d6fa2a3ebbed9a16c109c3a4a 900w,/images/patterns/content/observer/observer-comic-1-en-2x.png?id=8e89674eb83b01e82203987e600ba59e 1200w\" sizes=\"(max-width: 720px) 100vw, 600px\" width=\"600\" style=\"aspect-ratio: 2;\" loading=\"lazy\" /><figcaption>\n<p>Visiting the store vs. sending spam</p>\n</figcaption></figure>\n<p>On the other hand, the store could send tons of emails (which might be considered spam) to all customers each time a new product becomes available. This would save some customers from endless trips to the store. At the same time, it’d upset other customers who aren’t interested in new products.</p>\n<p>It looks like we’ve got a conflict. Either the customer wastes time checking product availability or the store wastes resources notifying the wrong customers.</p>\n</div>\n<div class=\"section solution\">\n<h2 id=\"solution\"><i class=\"fa fa-smile-beam\" aria-hidden=\"true\"></i> Solution</h2>\n<p>The object that has some interesting state is often called <em>subject</em>, but since it’s also going to notify other objects about the changes to its state, we’ll call it <em>publisher</em>. All other objects that want to track changes to the publisher’s state are called <em>subscribers</em>.</p>\n<p>The Observer pattern suggests that you add a subscription mechanism to the publisher class so individual objects can subscribe to or unsubscribe from a stream of events coming from that publisher. Fear not! Everything isn’t as complicated as it sounds. In reality, this mechanism consists of 1) an array field for storing a list of references to subscriber objects and 2) several public methods which allow adding subscribers to and removing them from that list.</p>\n<figure class=\"image\"><img src=\"/images/patterns/diagrams/observer/solution1-en.png?id=60fb9a2822649dec1c68b78733479c57\" alt=\"Subscription mechanism\" srcset=\"/images/patterns/diagrams/observer/solution1-en.png?id=60fb9a2822649dec1c68b78733479c57 470w,/images/patterns/diagrams/observer/solution1-en-1.5x.png?id=dee761b815f7ca11febafb78cb7ab157 705w,/images/patterns/diagrams/observer/solution1-en-2x.png?id=a6bc643488b8fbc8bbb309539139c316 940w\" sizes=\"(max-width: 720px) 100vw, 470px\" width=\"470\" style=\"aspect-ratio: 2.61;\" loading=\"lazy\" /><figcaption>\n<p>A subscription mechanism lets individual objects subscribe to event notifications.</p>\n</figcaption></figure>\n<p>Now, whenever an important event happens to the publisher, it goes over its subscribers and calls the specific notification method on their objects.</p>\n<p>Real apps might have dozens of different subscriber classes that are interested in tracking events of the same publisher class. You wouldn’t want to couple the publisher to all of those classes. Besides, you might not even know about some of them beforehand if your publisher class is supposed to be used by other people.</p>\n<p>That’s why it’s crucial that all subscribers implement the same interface and that the publisher communicates with them only via that interface. This interface should declare the notification method along with a set of parameters that the publisher can use to pass some contextual data along with the notification.</p>\n<figure class=\"image\"><img src=\"/images/patterns/diagrams/observer/solution2-en.png?id=fcea7791ac77b6ecb6fea2c2b4128d4a\" alt=\"Notification methods\" srcset=\"/images/patterns/diagrams/observer/solution2-en.png?id=fcea7791ac77b6ecb6fea2c2b4128d4a 460w,/images/patterns/diagrams/observer/solution2-en-1.5x.png?id=829bd5830aa52fbbd6ab31d64193b667 690w,/images/patterns/diagrams/observer/solution2-en-2x.png?id=630cfb84753c258aa4e8500e189c0b65 920w\" sizes=\"(max-width: 720px) 100vw, 460px\" width=\"460\" style=\"aspect-ratio: 1.24;\" loading=\"lazy\" /><figcaption>\n<p>Publisher notifies subscribers by calling the specific notification method on their objects.</p>\n</figcaption></figure>\n<p>If your app has several different types of publishers and you want to make your subscribers compatible with all of them, you can go even further and make all publishers follow the same interface. This interface would only need to describe a few subscription methods. The interface would allow subscribers to observe publishers’ states without coupling to their concrete classes.</p>\n</div>\n<div class=\"section analogy\">\n<h2 id=\"analogy\"><i class=\"fa fa-car-side\" aria-hidden=\"true\"></i> Real-World Analogy</h2>\n<figure class=\"image\"><img src=\"/images/patterns/content/observer/observer-comic-2-en.png?id=a9be31ab5f90e47b0f250fe9821c34c5\" alt=\"Magazine and newspaper subscriptions\" srcset=\"/images/patterns/content/observer/observer-comic-2-en.png?id=a9be31ab5f90e47b0f250fe9821c34c5 600w,/images/patterns/content/observer/observer-comic-2-en-1.5x.png?id=62681e0ee15ef2c1a55dc900e3b3f844 900w,/images/patterns/content/observer/observer-comic-2-en-2x.png?id=2147046fb16c427533db8ed85e8cce4c 1200w\" sizes=\"(max-width: 720px) 100vw, 600px\" width=\"600\" style=\"aspect-ratio: 2;\" loading=\"lazy\" /><figcaption>\n<p>Magazine and newspaper subscriptions.</p>\n</figcaption></figure>\n<p>If you subscribe to a newspaper or magazine, you no longer need to go to the store to check if the next issue is available. Instead, the publisher sends new issues directly to your mailbox right after publication or even in advance.</p>\n<p>The publisher maintains a list of subscribers and knows which magazines they’re interested in. Subscribers can leave the list at any time when they wish to stop the publisher sending new magazine issues to them.</p>\n</div>\n<div class=\"section structure-container\">\n<h2 id=\"structure\"><i class=\"fa fa-sitemap\" aria-hidden=\"true\"></i> Structure</h2>\n<div class=\"structure\">\n<div class=\"struct-image1 struct-image\">\n<figure class=\"image\"><img class=\"structure-img-non-indexed d-none d-xl-block\" src=\"/images/patterns/diagrams/observer/structure.png?id=365b7e2b8fbecc8948f34b9f8f16f33c\" alt=\"Structure of the Observer design pattern\" srcset=\"/images/patterns/diagrams/observer/structure.png?id=365b7e2b8fbecc8948f34b9f8f16f33c 610w,/images/patterns/diagrams/observer/structure-1.5x.png?id=7f23a48c9a2d789844f912d3a0f289e6 915w,/images/patterns/diagrams/observer/structure-2x.png?id=228af9bded4d6ee6daf43a0e23cca9ff 1220w\" sizes=\"(max-width: 720px) 100vw, 610px\" width=\"610\" style=\"aspect-ratio: 1.97;\" loading=\"lazy\" /><img class=\"structure-img-indexed d-xl-none\" src=\"/images/patterns/diagrams/observer/structure-indexed.png?id=2ca2c123503ede860740af2a22bc4b4d\" alt=\"Structure of the Observer design pattern\" srcset=\"/images/patterns/diagrams/observer/structure-indexed.png?id=2ca2c123503ede860740af2a22bc4b4d 620w,/images/patterns/diagrams/observer/structure-indexed-1.5x.png?id=20b9e7765e83ca75514c202968d9e9fa 930w,/images/patterns/diagrams/observer/structure-indexed-2x.png?id=910eec855bc41f05199e510494078926 1240w\" sizes=\"(max-width: 720px) 100vw, 620px\" width=\"620\" style=\"aspect-ratio: 1.88;\" loading=\"lazy\" /></figure>\n</div>\n<ol><li class=\"struct-li1\">\n<p>The <strong>Publisher</strong> issues events of interest to other objects. These events occur when the publisher changes its state or executes some behaviors. Publishers contain a subscription infrastructure that lets new subscribers join and current subscribers leave the list.</p>\n</li>\n<li class=\"struct-li2\">\n<p>When a new event happens, the publisher goes over the subscription list and calls the notification method declared in the subscriber interface on each subscriber object.</p>\n</li>\n<li class=\"struct-li3\">\n<p>The <strong>Subscriber</strong> interface declares the notification interface. In most cases, it consists of a single <code>update</code> method. The method may have several parameters that let the publisher pass some event details along with the update.</p>\n</li>\n<li class=\"struct-li4\">\n<p><strong>Concrete Subscribers</strong> perform some actions in response to notifications issued by the publisher. All of these classes must implement the same interface so the publisher isn’t coupled to concrete classes.</p>\n</li>\n<li class=\"struct-li5\">\n<p>Usually, subscribers need some contextual information to handle the update correctly. For this reason, publishers often pass some context data as arguments of the notification method. The publisher can pass itself as an argument, letting subscriber fetch any required data directly.</p>\n</li>\n<li class=\"struct-li6\">\n<p>The <strong>Client</strong> creates publisher and subscriber objects separately and then registers subscribers for publisher updates.</p>\n</li></ol>\n<style structure type=\"text/css\" >\n@media (min-width: 1200px) {\n.structure {\nmargin: 0;\nwidth: auto;\nheight: 570px;\n}\n\n.struct-image1 {\nleft: 0px;\ntop: 180px;\n}\n\n.struct-li1 {\nleft: 10px;\ntop: 10px;\nwidth: 320px;\n}\n\n.struct-li2 {\nleft: 360px;\ntop: 10px;\nwidth: 210px;\n}\n\n.struct-li3 {\nleft: 620px;\ntop: 110px;\nwidth: 280px;\n}\n\n.struct-li4 {\nleft: 620px;\ntop: 290px;\nwidth: 280px;\n}\n\n.struct-li5 {\nleft: 400px;\ntop: 470px;\nwidth: 490px;\n}\n\n.struct-li6 {\nleft: 10px;\ntop: 390px;\nwidth: 160px;\n}\n\n}\n\n</style>\n</div></div>\n<div class=\"section pseudocode\">\n<h2 id=\"pseudocode\"><i class=\"fa fa-hashtag\" aria-hidden=\"true\"></i> Pseudocode</h2>\n<p>In this example, the <strong>Observer</strong> pattern lets the text editor object notify other service objects about changes in its state.</p>\n<figure class=\"image\"><img src=\"/images/patterns/diagrams/observer/example.png?id=6d0603ab5a00e4463b81d9639cd746a2\" alt=\"Structure of the Observer pattern example\" srcset=\"/images/patterns/diagrams/observer/example.png?id=6d0603ab5a00e4463b81d9639cd746a2 510w,/images/patterns/diagrams/observer/example-1.5x.png?id=67adccd1030a38dd263bfa09867f8dbe 765w,/images/patterns/diagrams/observer/example-2x.png?id=e2838e1562325e485fc7c2828a8ca445 1020w\" sizes=\"(max-width: 720px) 100vw, 510px\" width=\"510\" style=\"aspect-ratio: 1.19;\" loading=\"lazy\" /><figcaption>\n<p>Notifying objects about events that happen to other objects.</p>\n</figcaption></figure>\n<p>The list of subscribers is compiled dynamically: objects can start or stop listening to notifications at runtime, depending on the desired behavior of your app.</p>\n<p>In this implementation, the editor class doesn’t maintain the subscription list by itself. It delegates this job to the special helper object devoted to just that. You could upgrade that object to serve as a centralized event dispatcher, letting any object act as a publisher.</p>\n<p>Adding new subscribers to the program doesn’t require changes to existing publisher classes, as long as they work with all subscribers through the same interface.</p>\n<figure class=\"code\">\n<pre class=\"code\" lang=\"pseudocode\">// The base publisher class includes subscription management\n// code and notification methods.\nclass EventManager is\n    private field listeners: hash map of event types and listeners\n\n    method subscribe(eventType, listener) is\n        listeners.add(eventType, listener)\n\n    method unsubscribe(eventType, listener) is\n        listeners.remove(eventType, listener)\n\n    method notify(eventType, data) is\n        foreach (listener in listeners.of(eventType)) do\n            listener.update(data)\n\n// The concrete publisher contains real business logic that's\n// interesting for some subscribers. We could derive this class\n// from the base publisher, but that isn't always possible in\n// real life because the concrete publisher might already be a\n// subclass. In this case, you can patch the subscription logic\n// in with composition, as we did here.\nclass Editor is\n    public field events: EventManager\n    private field file: File\n\n    constructor Editor() is\n        events = new EventManager()\n\n    // Methods of business logic can notify subscribers about\n    // changes.\n    method openFile(path) is\n        this.file = new File(path)\n        events.notify(&quot;open&quot;, file.name)\n\n    method saveFile() is\n        file.write()\n        events.notify(&quot;save&quot;, file.name)\n\n    // ...\n\n\n// Here's the subscriber interface. If your programming language\n// supports functional types, you can replace the whole\n// subscriber hierarchy with a set of functions.\ninterface EventListener is\n    method update(filename)\n\n// Concrete subscribers react to updates issued by the publisher\n// they are attached to.\nclass LoggingListener implements EventListener is\n    private field log: File\n    private field message: string\n\n    constructor LoggingListener(log_filename, message) is\n        this.log = new File(log_filename)\n        this.message = message\n\n    method update(filename) is\n        log.write(replace('%s',filename,message))\n\nclass EmailAlertsListener implements EventListener is\n    private field email: string\n    private field message: string\n\n    constructor EmailAlertsListener(email, message) is\n        this.email = email\n        this.message = message\n\n    method update(filename) is\n        system.email(email, replace('%s',filename,message))\n\n\n// An application can configure publishers and subscribers at\n// runtime.\nclass Application is\n    method config() is\n        editor = new Editor()\n\n        logger = new LoggingListener(\n            &quot;/path/to/log.txt&quot;,\n            &quot;Someone has opened the file: %s&quot;)\n        editor.events.subscribe(&quot;open&quot;, logger)\n\n        emailAlerts = new EmailAlertsListener(\n            &quot;admin@example.com&quot;,\n            &quot;Someone has changed the file: %s&quot;)\n        editor.events.subscribe(&quot;save&quot;, emailAlerts)\n</pre>\n</figure>\n</div>\n<div class=\"section applicability-container\">\n<h2 id=\"applicability\"><i class=\"fa fa-lightbulb-on\" aria-hidden=\"true\"></i> Applicability</h2>\n<div class=\"applicability\">\n<div class=\"applicability-problem\">\n<p><i class=\"fa fa-fw fa-bug\" aria-hidden=\"true\"></i> Use the Observer pattern when changes to the state of one object may require changing other objects, and the actual set of objects is unknown beforehand or changes dynamically.</p>\n</div><div class=\"applicability-solution\">\n<p><i class=\"fa fa-fw fa-bolt\" aria-hidden=\"true\"></i> You can often experience this problem when working with classes of the graphical user interface. For example, you created custom button classes, and you want to let the clients hook some custom code to your buttons so that it fires whenever a user presses a button.</p>\n<p>The Observer pattern lets any object that implements the subscriber interface subscribe for event notifications in publisher objects. You can add the subscription mechanism to your buttons, letting the clients hook up their custom code via custom subscriber classes.</p>\n</div>\n<div class=\"applicability-problem\">\n<p><i class=\"fa fa-fw fa-bug\" aria-hidden=\"true\"></i> Use the pattern when some objects in your app must observe others, but only for a limited time or in specific cases.</p>\n</div><div class=\"applicability-solution\">\n<p><i class=\"fa fa-fw fa-bolt\" aria-hidden=\"true\"></i> The subscription list is dynamic, so subscribers can join or leave the list whenever they need to.</p>\n</div>\n</div></div>\n<div class=\"section checklist\">\n<h2 id=\"checklist\"><i class=\"fa fa-clipboard-list-check\" aria-hidden=\"true\"></i> How to Implement</h2>\n<ol>\n<li>\n<p>Look over your business logic and try to break it down into two parts: the core functionality, independent from other code, will act as the publisher; the rest will turn into a set of subscriber classes.</p>\n</li>\n<li>\n<p>Declare the subscriber interface. At a bare minimum, it should declare a single <code>update</code> method.</p>\n</li>\n<li>\n<p>Declare the publisher interface and describe a pair of methods for adding a subscriber object to and removing it from the list. Remember that publishers must work with subscribers only via the subscriber interface.</p>\n</li>\n<li>\n<p>Decide where to put the actual subscription list and the implementation of subscription methods. Usually, this code looks the same for all types of publishers, so the obvious place to put it is in an abstract class derived directly from the publisher interface. Concrete publishers extend that class, inheriting the subscription behavior.</p>\n<p>However, if you’re applying the pattern to an existing class hierarchy, consider an approach based on composition: put the subscription logic into a separate object, and make all real publishers use it.</p>\n</li>\n<li>\n<p>Create concrete publisher classes. Each time something important happens inside a publisher, it must notify all its subscribers.</p>\n</li>\n<li>\n<p>Implement the update notification methods in concrete subscriber classes. Most subscribers would need some context data about the event. It can be passed as an argument of the notification method.</p>\n<p>But there’s another option. Upon receiving a notification, the subscriber can fetch any data directly from the notification. In this case, the publisher must pass itself via the update method. The less flexible option is to link a publisher to the subscriber permanently via the constructor.</p>\n</li>\n<li>\n<p>The client must create all necessary subscribers and register them with proper publishers.</p>\n</li>\n</ol>\n</div>\n<div class=\"section pros-cons\">\n<h2 id=\"pros-cons\"><i class=\"fa fa-balance-scale\" aria-hidden=\"true\"></i> Pros and Cons</h2>\n<div class=\"row\"><div class=\"col-sm-6\">\n<ul>\n<li><i class=\"fa fa-fw fa-check\" aria-hidden=\"true\"></i> <em>Open/Closed Principle</em>. You can introduce new subscriber classes without having to change the publisher’s code (and vice versa if there’s a publisher interface).</li>\n<li><i class=\"fa fa-fw fa-check\" aria-hidden=\"true\"></i> You can establish relations between objects at runtime.</li>\n</ul>\n</div><div class=\"col-sm-6\">\n<ul>\n<li><i class=\"fa fa-fw fa-times\" aria-hidden=\"true\"></i> Subscribers are notified in random order.</li>\n</ul>\n</div></div></div>\n<div class=\"section relations\">\n<h2 id=\"relations\"><i class=\"fa fa-exchange-alt\" aria-hidden=\"true\"></i> Relations with Other Patterns</h2>\n<ul>\n<li>\n<p><a href=\"/design-patterns/chain-of-responsibility\">Chain of Responsibility</a>, <a href=\"/design-patterns/command\">Command</a>, <a href=\"/design-patterns/mediator\">Mediator</a> and <a href=\"/design-patterns/observer\">Observer</a> address various ways of connecting senders and receivers of requests:</p>\n<ul>\n<li><em>Chain of Responsibility</em> passes a request sequentially along a dynamic chain of potential receivers until one of them handles it.</li>\n<li><em>Command</em> establishes unidirectional connections between senders and receivers.</li>\n<li><em>Mediator</em> eliminates direct connections between senders and receivers, forcing them to communicate indirectly via a mediator object.</li>\n<li><em>Observer</em> lets receivers dynamically subscribe to and unsubscribe from receiving requests.</li>\n</ul>\n</li>\n<li>\n<p>The difference between <a href=\"/design-patterns/mediator\">Mediator</a> and <a href=\"/design-patterns/observer\">Observer</a> is often elusive. In most cases, you can implement either of these patterns; but sometimes you can apply both simultaneously. Let’s see how we can do that.</p>\n<p>The primary goal of <em>Mediator</em> is to eliminate mutual dependencies among a set of system components. Instead, these components become dependent on a single mediator object. The goal of <em>Observer</em> is to establish dynamic one-way connections between objects, where some objects act as subordinates of others.</p>\n<p>There’s a popular implementation of the <em>Mediator</em> pattern that relies on <em>Observer</em>. The mediator object plays the role of publisher, and the components act as subscribers which subscribe to and unsubscribe from the mediator’s events. When <em>Mediator</em> is implemented this way, it may look very similar to <em>Observer</em>.</p>\n<p>When you’re confused, remember that you can implement the Mediator pattern in other ways. For example, you can permanently link all the components to the same mediator object. This implementation won’t resemble <em>Observer</em> but will still be an instance of the Mediator pattern.</p>\n<p>Now imagine a program where all components have become publishers, allowing dynamic connections between each other. There won’t be a centralized mediator object, only a distributed set of observers.</p>\n</li>\n</ul>\n</div>\n<div class=\"section implementations\">\n<h2 id=\"implementations\"><i class=\"fa fa-code\" aria-hidden=\"true\"></i> Code Examples</h2>\n<p><a href=\"/design-patterns/observer/csharp/example\" title=\"Observer in C#\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/csharp.svg?id=da64592defc6e86d57c39c66e9de3e58\" alt=\"Observer in C#\" /></a>\n<a href=\"/design-patterns/observer/cpp/example\" title=\"Observer in C++\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/cpp.svg?id=f7782ed8b8666246bfcc3f8fefc3b858\" alt=\"Observer in C++\" /></a>\n<a href=\"/design-patterns/observer/go/example\" title=\"Observer in Go\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/go.svg?id=1a89927eb99b1ea3fde7701d97970aca\" alt=\"Observer in Go\" /></a>\n<a href=\"/design-patterns/observer/java/example\" title=\"Observer in Java\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/java.svg?id=e6d87e2dca08c953fe3acd1275ed4f4e\" alt=\"Observer in Java\" /></a>\n<a href=\"/design-patterns/observer/php/example\" title=\"Observer in PHP\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/php.svg?id=be1906eb26b71ec1d3b93720d6156618\" alt=\"Observer in PHP\" /></a>\n<a href=\"/design-patterns/observer/python/example\" title=\"Observer in Python\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/python.svg?id=6d815d43c0f7050a1151b43e51569c9f\" alt=\"Observer in Python\" /></a>\n<a href=\"/design-patterns/observer/ruby/example\" title=\"Observer in Ruby\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/ruby.svg?id=b065b718c914bf8e960ef731600be1eb\" alt=\"Observer in Ruby\" /></a>\n<a href=\"/design-patterns/observer/rust/example\" title=\"Observer in Rust\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/rust.svg?id=1f5698a4b5ae23fe79413511747e4a87\" alt=\"Observer in Rust\" /></a>\n<a href=\"/design-patterns/observer/swift/example\" title=\"Observer in Swift\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/swift.svg?id=0b716c2d52ec3a48fbe91ac031070c1d\" alt=\"Observer in Swift\" /></a>\n<a href=\"/design-patterns/observer/typescript/example\" title=\"Observer in TypeScript\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/typescript.svg?id=2239d0f16cb703540c205dd8cb0c0cb7\" alt=\"Observer in TypeScript\" /></a></p>\n</div>\n\n\n    <div class=\"banner-set2\" id=\"book-promo\">\n            <div class=\"prom banner-content banner-bg banner-striped banner-with-image\" data-id=\"DP: 1: Support our free website and own the eBook!\" data-creative-id=\"standard-en\" data-position=\"content_bottom\">\n                <div class=\"banner-image\">\n                    <a href=\"/design-patterns/book\">\n                        <img width=\"200\" height=\"200\" loading=\"lazy\" src=\"/images/patterns/banners/patterns-book-banner-3.png?id=7d445df13c80287beaab234b4f3b698c\" srcset=\"/images/patterns/banners/patterns-book-banner-3-2x.png?id=0cc3f77ab421d1a5c02ee46488231c3a 2x\">\n                    </a>\n                </div>\n\n                <div class=\"banner-text\">\n                    <h3 class=\"title\">Support our free website and own the eBook!</h3>\n                    <ul style=\"font-size: 14px;\">\n                        <li style=\"margin: 0;\">22 design patterns and 8 principles explained in depth.</li>\n                        <li style=\"margin: 0;\">409 well-structured, easy to read, jargon-free pages.</li>\n                        <li style=\"margin: 0;\">225 clear and helpful illustrations and diagrams.</li>\n                        <li style=\"margin: 0;\">An archive with code examples in 11 languages.</li>\n                        <li style=\"margin: 0;\">All devices supported: PDF/EPUB/MOBI/KFX formats.</li>\n                    </ul>\n                    <a class=\"btn btn-secondary\" href=\"/design-patterns/book\"><i class=\"fa fa-book\" aria-hidden=\"true\"></i> Learn more…</a>\n                </div>\n            </div>\n        </div>\n\n    </article>\n\n<nav class=\"prev-next\">\n                    <div class=\"next\">\n                <h4>Read next</h4>\n                <a rel=\"next\" href=\"/design-patterns/state\" class=\"btn btn-primary\">State&nbsp;<span class=\"fa fa-arrow-right\"></span></a>\n            </div>\n                            <div class=\"prev\">\n                <h4>Return</h4>\n                <a rel=\"prev\" href=\"/design-patterns/memento\" class=\"btn btn-default\"><span class=\"fa fa-arrow-left\"></span>&nbsp;Memento </a>\n            </div>\n            </nav>\n</div>\n\n<aside class=\"feature content-secondary\">\n    <div class=\"prom banner-sidebar banner-removable banner-removable-patterns\" data-id=\"DP: Sidebar\" data-creative-id=\"standard-sidebar-en\" data-position=\"sidebar\">\n        <div class=\"banner-inner\">\n            <div class=\"image3d-book-right\">\n                <div class=\"image3d-cover\" style=\"background: #0b3752;\">\n                    <a href=\"/design-patterns/book\">\n                        <img width=\"250\" height=\"375\" loading=\"lazy\" src=\"/images/patterns/book/web-cover-en.png?id=328861769fd11617674e3b8a7e2dd9e7\" srcset=\"/images/patterns/book/web-cover-en-2x.png?id=02940141c5652ed5a426d87390b16366 2x\">\n                    </a>\n                </div>\n            </div>\n            <div style=\"margin-top: 1rem\">\n                <p class=\"text-center\" >This article is a part of our eBook<br/><strong>Dive Into Design Patterns</strong>.</p>\n                <a href=\"/design-patterns/book\" class=\"btn btn-secondary btn-block\"><i class=\"fa fa-book\" aria-hidden=\"true\"></i> Learn more…</a>\n            </div>\n        </div>\n    </div>\n\n\n</aside>\n                    </div>\n    </main>\n\n    <aside class=\"sidebar main-menu\">\n    <div class=\"main-menu-controls\">\n        <button class=\"navigation-toggle\"><i class=\"fa fa-fw fa-times\"></i></button>\n    </div>\n    <div class=\"main-menu-list-wrapper nano\">\n        <div class=\"main-menu-list nano-content\">\n            <a class=\"menu-brand\" href=\"/\">\n                                    <img width=200 height=241 loading=\"lazy\" alt=\"Refactoring.Guru\" src=\"/images/content-public/logos/logo-new.png?id=97d554614702483f31e38b32e82d8e34\" srcset=\"/images/content-public/logos/logo-new-2x.png?id=3bc33294e095bab1d6fe9ae421d07837 2x\">\n                            </a>\n\n            <div class=\"menu-container\" style=\"position: relative\">\n                                <ul class=\"menu-list trail\">\n                            <li class=\"featured\">\n            <a href=\"/store\">\n                <i class=\"fa fa-fw fa-star\" aria-hidden=\"true\"></i> Premium Content\n            </a>\n    \n            <ul >\n                            <li class=\"featured menu-fs15\">\n            <a href=\"/design-patterns/book\">\n                <i class=\"fa fa-fw fa-book\" aria-hidden=\"true\"></i> Design Patterns eBook\n            </a>\n    \n    \n            </li>\n                                <li class=\"featured menu-fs15\">\n            <a href=\"/refactoring/course\">\n                <i class=\"fa fa-fw fa-graduation-cap\" aria-hidden=\"true\"></i> Refactoring Course\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring\">\n                <i class=\"fa fa-fw fa-scissors\" aria-hidden=\"true\"></i> Refactoring\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/refactoring/what-is-refactoring\">\n                What is Refactoring\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/refactoring/what-is-refactoring\">\n                Clean code\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/technical-debt\">\n                Technical debt\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/when\">\n                When to refactor\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/how-to\">\n                How to refactor\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/catalog\">\n                Catalog\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells\">\n                Code Smells\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/refactoring/smells/bloaters\">\n                Bloaters\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/long-method\">\n                Long Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/large-class\">\n                Large Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/primitive-obsession\">\n                Primitive Obsession\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/long-parameter-list\">\n                Long Parameter List\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/data-clumps\">\n                Data Clumps\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/oo-abusers\">\n                Object-Orientation Abusers\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/switch-statements\">\n                Switch Statements\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/temporary-field\">\n                Temporary Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/refused-bequest\">\n                Refused Bequest\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/alternative-classes-with-different-interfaces\">\n                Alternative Classes with Different Interfaces\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/change-preventers\">\n                Change Preventers\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/divergent-change\">\n                Divergent Change\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/shotgun-surgery\">\n                Shotgun Surgery\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/parallel-inheritance-hierarchies\">\n                Parallel Inheritance Hierarchies\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/dispensables\">\n                Dispensables\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/comments\">\n                Comments\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/duplicate-code\">\n                Duplicate Code\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/lazy-class\">\n                Lazy Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/data-class\">\n                Data Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/dead-code\">\n                Dead Code\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/speculative-generality\">\n                Speculative Generality\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/couplers\">\n                Couplers\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/feature-envy\">\n                Feature Envy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/inappropriate-intimacy\">\n                Inappropriate Intimacy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/message-chains\">\n                Message Chains\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/middle-man\">\n                Middle Man\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/other\">\n                Other Smells\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/incomplete-library-class\">\n                Incomplete Library Class\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques\">\n                Refactorings\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/refactoring/techniques/composing-methods\">\n                Composing Methods\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/extract-method\">\n                Extract Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/inline-method\">\n                Inline Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-variable\">\n                Extract Variable\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/inline-temp\">\n                Inline Temp\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-temp-with-query\">\n                Replace Temp with Query\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/split-temporary-variable\">\n                Split Temporary Variable\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-assignments-to-parameters\">\n                Remove Assignments to Parameters\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-method-with-method-object\">\n                Replace Method with Method Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/substitute-algorithm\">\n                Substitute Algorithm\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/moving-features-between-objects\">\n                Moving Features between Objects\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/move-method\">\n                Move Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/move-field\">\n                Move Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-class\">\n                Extract Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/inline-class\">\n                Inline Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/hide-delegate\">\n                Hide Delegate\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-middle-man\">\n                Remove Middle Man\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-foreign-method\">\n                Introduce Foreign Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-local-extension\">\n                Introduce Local Extension\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/organizing-data\">\n                Organizing Data\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/self-encapsulate-field\">\n                Self Encapsulate Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-data-value-with-object\">\n                Replace Data Value with Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/change-value-to-reference\">\n                Change Value to Reference\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/change-reference-to-value\">\n                Change Reference to Value\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-array-with-object\">\n                Replace Array with Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/duplicate-observed-data\">\n                Duplicate Observed Data\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/change-unidirectional-association-to-bidirectional\">\n                Change Unidirectional Association to Bidirectional\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/change-bidirectional-association-to-unidirectional\">\n                Change Bidirectional Association to Unidirectional\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-magic-number-with-symbolic-constant\">\n                Replace Magic Number with Symbolic Constant\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/encapsulate-field\">\n                Encapsulate Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/encapsulate-collection\">\n                Encapsulate Collection\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-type-code-with-class\">\n                Replace Type Code with Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-type-code-with-subclasses\">\n                Replace Type Code with Subclasses\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-type-code-with-state-strategy\">\n                Replace Type Code with State/Strategy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-subclass-with-fields\">\n                Replace Subclass with Fields\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/simplifying-conditional-expressions\">\n                Simplifying Conditional Expressions\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/decompose-conditional\">\n                Decompose Conditional\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/consolidate-conditional-expression\">\n                Consolidate Conditional Expression\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/consolidate-duplicate-conditional-fragments\">\n                Consolidate Duplicate Conditional Fragments\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-control-flag\">\n                Remove Control Flag\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-nested-conditional-with-guard-clauses\">\n                Replace Nested Conditional with Guard Clauses\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-conditional-with-polymorphism\">\n                Replace Conditional with Polymorphism\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-null-object\">\n                Introduce Null Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-assertion\">\n                Introduce Assertion\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/simplifying-method-calls\">\n                Simplifying Method Calls\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/rename-method\">\n                Rename Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/add-parameter\">\n                Add Parameter\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-parameter\">\n                Remove Parameter\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/separate-query-from-modifier\">\n                Separate Query from Modifier\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/parameterize-method\">\n                Parameterize Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-parameter-with-explicit-methods\">\n                Replace Parameter with Explicit Methods\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/preserve-whole-object\">\n                Preserve Whole Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-parameter-with-method-call\">\n                Replace Parameter with Method Call\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-parameter-object\">\n                Introduce Parameter Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-setting-method\">\n                Remove Setting Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/hide-method\">\n                Hide Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-constructor-with-factory-method\">\n                Replace Constructor with Factory Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-error-code-with-exception\">\n                Replace Error Code with Exception\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-exception-with-test\">\n                Replace Exception with Test\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/dealing-with-generalization\">\n                Dealing with Generalization\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/pull-up-field\">\n                Pull Up Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/pull-up-method\">\n                Pull Up Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/pull-up-constructor-body\">\n                Pull Up Constructor Body\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/push-down-method\">\n                Push Down Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/push-down-field\">\n                Push Down Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-subclass\">\n                Extract Subclass\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-superclass\">\n                Extract Superclass\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-interface\">\n                Extract Interface\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/collapse-hierarchy\">\n                Collapse Hierarchy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/form-template-method\">\n                Form Template Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-inheritance-with-delegation\">\n                Replace Inheritance with Delegation\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-delegation-with-inheritance\">\n                Replace Delegation with Inheritance\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"trail\">\n            <a href=\"/design-patterns\">\n                <i class=\"fa fa-fw fa-puzzle-piece\" aria-hidden=\"true\"></i> Design Patterns\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/what-is-pattern\">\n                What is a Pattern\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/what-is-pattern\">\n                What's a design pattern?\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/history\">\n                History of patterns\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/why-learn-patterns\">\n                Why should I learn patterns?\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/criticism\">\n                Criticism of patterns\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/classification\">\n                Classification of patterns\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/catalog\">\n                Catalog\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-third-level\">\n            <a href=\"/design-patterns/creational-patterns\">\n                Creational Patterns\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/factory-method\">\n                Factory Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/abstract-factory\">\n                Abstract Factory\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/builder\">\n                Builder\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/prototype\">\n                Prototype\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/singleton\">\n                Singleton\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"menu-third-level\">\n            <a href=\"/design-patterns/structural-patterns\">\n                Structural Patterns\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/adapter\">\n                Adapter\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/bridge\">\n                Bridge\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/composite\">\n                Composite\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/decorator\">\n                Decorator\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/facade\">\n                Facade\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/flyweight\">\n                Flyweight\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/proxy\">\n                Proxy\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"menu-third-level trail\">\n            <a href=\"/design-patterns/behavioral-patterns\">\n                Behavioral Patterns\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/chain-of-responsibility\">\n                Chain of Responsibility\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/command\">\n                Command\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/iterator\">\n                Iterator\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/mediator\">\n                Mediator\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/memento\">\n                Memento\n            </a>\n    \n    \n            </li>\n                                <li class=\"trail active\">\n            <a href=\"/design-patterns/observer\">\n                Observer\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/state\">\n                State\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/strategy\">\n                Strategy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/template-method\">\n                Template Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/visitor\">\n                Visitor\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"menu-code-examples\">\n            <a href=\"/design-patterns/examples\">\n                Code Examples\n            </a>\n    \n            <ul >\n                            <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/csharp\">\n                C#\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/cpp\">\n                C++\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/go\">\n                Go\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/java\">\n                Java\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/php\">\n                PHP\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/python\">\n                Python\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/ruby\">\n                Ruby\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/rust\">\n                Rust\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/swift\">\n                Swift\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/typescript\">\n                TypeScript\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n                </div>\n\n            <div class=\"main-menu-aux-controls\">\n                <a href=\"https://refactoring.guru/login\" title=\"Sign in\" style=\" display: inline-flex; align-items: center; gap: 6px; \"><svg style=\"width: 16px; height: 16px; filter:drop-shadow(0 1px 1px #74261e)\" class=\"inline-block mx-0\"  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\"opacity=\"0.4\" d=\"M352.7 222.4c3.2 1 6.5 1.6 10 1.6l21.3 0c17.7 0 32 14.3 32 32s-14.3 32-32 32l-21.3 0c-.8 0-1.7 0-2.5 0c-.9 0-1.7-.1-2.5-.1c-1.7-.1-3.4-.2-5-.4C357.4 414 391.1 512 432 512c44.2 0 80-114.6 80-256S476.2 0 432 0c-40.6 0-74.2 96.9-79.3 222.4z\"/><path fill=\"currentColor\"class=\"fa-primary\" d=\"M320 48a48 48 0 1 0 -96 0 48 48 0 1 0 96 0zM125.7 175.5c9.9-9.9 23.4-15.5 37.5-15.5c1.9 0 3.8 .1 5.6 .3L137.6 254c-9.3 28 1.7 58.8 26.8 74.5l86.2 53.9-25.4 88.8c-4.9 17 5 34.7 22 39.6s34.7-5 39.6-22l28.7-100.4c5.9-20.6-2.6-42.6-20.7-53.9L238 299l30.9-82.4 5.1 12.3C289 264.7 323.9 288 362.7 288l21.3 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-21.3 0c-12.9 0-24.6-7.8-29.5-19.7l-6.3-15c-14.6-35.1-44.1-61.9-80.5-73.1l-48.7-15c-11.1-3.4-22.7-5.2-34.4-5.2c-31 0-60.8 12.3-82.7 34.3L57.4 153.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l23.1-23.1zM91.2 352L32 352c-17.7 0-32 14.3-32 32s14.3 32 32 32l69.6 0c19 0 36.2-11.2 43.9-28.5L157 361.6l-9.5-6c-17.5-10.9-30.5-26.8-37.9-44.9L91.2 352z\"/></svg> Sign in</a>\n                <a href=\"https://feedback.refactoring.guru/\" class=\"userecho-public\" rel=\"nofollow\" title=\"Contact us\"><i class=\"fa fa-fw fa-fw fa-envelope\" aria-hidden=\"true\"></i> Contact us</a>\n            </div>\n        </div>\n    </div>\n</aside>\n\n    <nav class=\"navigation\" role=\"navigation\">\n    <div class=\"navigation-container\">\n        <a class=\"navigation-brand\" href=\"/\">\n            <img alt=\"Refactoring.Guru\"\n                 src=\"/images/content-public/logos/logo-new-mobile.png?id=ea18aa9b032eaa92835ed6d472b03b4a\"\n                 srcset=\"/images/content-public/logos/logo-new-mobile-2x.png?id=7ad5648bfd86ae2e8524147a72877c64 2x\">\n        </a>\n\n        <div class=\"shop-link d-none d-lg-block\" style=\"display: none !important;\">\n            <a class=\"btn btn-md btn-primary btn-featured\" href=\"/store\"><svg style=\"width: 28px; height: 28px; fill: currentColor; display: inline-block; margin-top: -14px;\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><!--! Font Awesome Pro 6.3.0 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2023 Fonticons, Inc. --><path d=\"M356 60l60 20-60 20-20 60-20-60L256 80l60-20L336 0l20 60zM464 208l48 16-48 16-16 48-16-48-48-16 48-16 16-48 16 48zm-243.8-9.8l33 66.9 73.8 10.7 59.8 8.7-43.3 42.2-53.4 52.1 12.6 73.5L313 512l-53.5-28.1-66-34.7-66 34.7L73.9 512l10.2-59.6 12.6-73.5L43.3 326.8 0 284.6l59.8-8.7 73.8-10.7 33-66.9L193.5 144l26.8 54.2zm26.1 114.4l-25-3.6-11.2-22.6-16.7-33.9-16.7 33.9L165.6 309l-25 3.6-37.4 5.4 27.1 26.4 18.1 17.6L144 387l-6.4 37.3 33.5-17.6 22.3-11.7 22.3 11.7 33.5 17.6L242.9 387l-4.3-24.9 18.1-17.6 27.1-26.4-37.4-5.4z\"/></svg>\n                Shop Now!</a>\n        </div>\n\n        <ul class=\"navigation-menu\">\n                            <li class=\"nav-locale dropdown dropdown-locales\">\n                    <button class=\"dropdown-toggle\" id=\"dropdownLanguage\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                        <i class=\"fa fa-fw fa-globe\" aria-hidden=\"true\"></i> <span class=\"caption d-none d-lg-inline-block\">English</span>\n                    </button>\n                    <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownLanguage\">\n                                                                                                                        <a href=\"https://refactoring.guru/design-patterns/observer\" class=\"dropdown-item locale-link active\" data-locale=\"en\" title=\"English\">English</a>\n                                                                                                                                <a href=\"https://refactoring.guru/es/design-patterns/observer\" class=\"dropdown-item locale-link \" data-locale=\"es\" title=\"Español\">Español</a>\n                                                                                                                                <a href=\"https://refactoring.guru/fr/design-patterns/observer\" class=\"dropdown-item locale-link \" data-locale=\"fr\" title=\"Français\">Français</a>\n                                                                                                                                <a href=\"https://refactoring.guru/ja/design-patterns/observer\" class=\"dropdown-item locale-link \" data-locale=\"ja\" title=\"日本語\">日本語</a>\n                                                                                                                                <a href=\"https://refactoring.guru/ko/design-patterns/observer\" class=\"dropdown-item locale-link \" data-locale=\"ko\" title=\"한국어\">한국어</a>\n                                                                                                                                <a href=\"https://refactoring.guru/pl/design-patterns/observer\" class=\"dropdown-item locale-link \" data-locale=\"pl\" title=\"Polski\">Polski</a>\n                                                                                                                                <a href=\"https://refactoring.guru/pt-br/design-patterns/observer\" class=\"dropdown-item locale-link \" data-locale=\"pt-br\" title=\"Português Brasileiro\">Português Brasileiro</a>\n                                                                                                                                <a href=\"https://refactoring.guru/ru/design-patterns/observer\" class=\"dropdown-item locale-link \" data-locale=\"ru\" title=\"Русский\">Русский</a>\n                                                                                                                                <a href=\"https://refactoring.guru/uk/design-patterns/observer\" class=\"dropdown-item locale-link \" data-locale=\"uk\" title=\"Українська\">Українська</a>\n                                                                                                                                <a href=\"https://refactoringguru.cn/design-patterns/observer\" class=\"dropdown-item locale-link \" data-locale=\"zh\" title=\"中文\">中文</a>\ndiv>\n                </li>\n                        <li class=\"nav-contacts\">\n                <a class=\"userecho-private\" href=\"https://feedback.refactoring.guru/?show_feedback_form_private=true\" rel=\"nofollow\" title=\"Contact us\">\n                    <i class=\"fa fa-fw fa-envelope\" aria-hidden=\"true\"></i> <span class=\"caption d-none d-xl-inline-block\">Contact us</span>\n                </a>\n            </li>\n                            <li class=\"nav-user\">\n                    <a href=\"https://refactoring.guru/login\" title=\"Sign in\"><span class=\"sign-in-icon\"><svg style=\"width: 24px; height: 24px; \" class=\"inline-block \"  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\"opacity=\"0.4\" d=\"M352.7 222.4c3.2 1 6.5 1.6 10 1.6l21.3 0c17.7 0 32 14.3 32 32s-14.3 32-32 32l-21.3 0c-.8 0-1.7 0-2.5 0c-.9 0-1.7-.1-2.5-.1c-1.7-.1-3.4-.2-5-.4C357.4 414 391.1 512 432 512c44.2 0 80-114.6 80-256S476.2 0 432 0c-40.6 0-74.2 96.9-79.3 222.4z\"/><path fill=\"currentColor\"class=\"fa-primary\" d=\"M320 48a48 48 0 1 0 -96 0 48 48 0 1 0 96 0zM125.7 175.5c9.9-9.9 23.4-15.5 37.5-15.5c1.9 0 3.8 .1 5.6 .3L137.6 254c-9.3 28 1.7 58.8 26.8 74.5l86.2 53.9-25.4 88.8c-4.9 17 5 34.7 22 39.6s34.7-5 39.6-22l28.7-100.4c5.9-20.6-2.6-42.6-20.7-53.9L238 299l30.9-82.4 5.1 12.3C289 264.7 323.9 288 362.7 288l21.3 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-21.3 0c-12.9 0-24.6-7.8-29.5-19.7l-6.3-15c-14.6-35.1-44.1-61.9-80.5-73.1l-48.7-15c-11.1-3.4-22.7-5.2-34.4-5.2c-31 0-60.8 12.3-82.7 34.3L57.4 153.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l23.1-23.1zM91.2 352L32 352c-17.7 0-32 14.3-32 32s14.3 32 32 32l69.6 0c19 0 36.2-11.2 43.9-28.5L157 361.6l-9.5-6c-17.5-10.9-30.5-26.8-37.9-44.9L91.2 352z\"/></svg></span> <span class=\"account-icon\" style=\"display:none\"><svg style=\"width: 24px; height: 24px; \" class=\"inline-block \"  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 576 512\"><path fill=\"currentColor\"opacity=\"0.4\" d=\"M64 270.5l224-196c74.7 65.4 149.4 130.7 224.1 196.1l.4 177.3c.1 35.4-28.6 64.1-64 64.1l-320.4 0c-35.3 0-64-28.6-64-64L64 270.5zM176.1 433.6c.1 .5 .1 1.1 .2 1.6c.2 1 .5 2 .9 3c.8 1.9 2 3.6 3.4 5.1c2.9 2.9 6.9 4.7 11.3 4.7l192 0c8.8 0 16-7.2 16-16c0-44.2-35.8-80-80-80l-64 0c-22.1 0-42.1 9-56.6 23.4c-7.2 7.2-13.1 15.9-17.1 25.4c-2 4.8-3.6 9.8-4.7 15c-.5 2.6-.9 5.3-1.2 7.9c-.1 1.3-.2 2.7-.3 4.1c-.1 1.4-.1 2.7-.1 4.1c0 .6 0 1.1 .1 1.6zm48.2-184.2c-.1 1.1-.2 2.2-.2 3.2c-.1 1.1-.1 2.2-.1 3.3s0 2.2 .1 3.3c.1 1.1 .1 2.2 .2 3.2c.2 2.1 .5 4.3 1 6.4c.9 4.2 2.1 8.2 3.7 12c3.2 7.7 7.9 14.6 13.7 20.3C254.3 312.8 270.3 320 288 320c35.3 0 64-28.7 64-64s-28.7-64-64-64c-17.7 0-33.7 7.2-45.3 18.7c-5.8 5.8-10.5 12.7-13.7 20.3c-1.6 3.8-2.9 7.8-3.7 12c-.4 2.1-.8 4.2-1 6.4z\"/><path fill=\"currentColor\"class=\"fa-primary\" d=\"M309.1 7.9C297-2.6 279-2.6 266.9 7.9l-256 224c-13.3 11.6-14.6 31.9-3 45.2s31.9 14.6 45.2 3L288 74.5 522.9 280.1c13.3 11.6 33.5 10.3 45.2-3s10.3-33.5-3-45.2L512 185.5 512 64c0-17.7-14.3-32-32-32l-32 0c-17.7 0-32 14.3-32 32l0 37.5L309.1 7.9zM352 256a64 64 0 1 0 -128 0 64 64 0 1 0 128 0zm-96 96c-44.2 0-80 35.8-80 80c0 8.8 7.2 16 16 16l192 0c8.8 0 16-7.2 16-16c0-44.2-35.8-80-80-80l-64 0z\"/></svg></span> <span class=\"sign-out-icon\" style=\"display:none\"><svg style=\"width: 24px; height: 24px; \" class=\"inline-block \"  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\"opacity=\"0.4\" d=\"M0 256C0 397.4 35.8 512 80 512c25.3 0 47.8-37.5 62.5-96L128 416c-.5 0-1.1 0-1.6 0c-.6 0-1.1-.1-1.6-.1c-1.1-.1-2.1-.3-3.2-.5c-2.1-.4-4.1-1.1-6-1.9c-3.8-1.6-7.3-4-10.2-6.9s-5.2-6.3-6.9-10.2c-.8-1.9-1.4-3.9-1.9-6c-.2-1.1-.4-2.3-.5-3.5c0-.3 0-.6-.1-.8c0-.2 0-.4 0-.7c0-.4 0-.7 0-.7c0-.5 0-.7 0-.9c0-.3 0-.6 0-.9c0 0 0-.3 0-.7c0-.2 0-.4 0-.7c0-.2 0-.4 .1-.8c0-.3 .1-.6 .1-.9c0-.2 .1-.4 .1-.7c.1-.8 .2-1.2 .3-1.7c.5-2.2 1.1-4.2 1.9-6.1c1.6-3.8 4-7.3 6.9-10.2c5.8-5.8 13.8-9.4 22.6-9.4l26.2 0c3.8-29.6 5.8-62.1 5.8-96c0-18.3-.6-36.1-1.7-53.4c-1.7-1.2-3.4-2.5-4.9-4c-.8-.8-1.6-1.6-2.2-2.5s-1.3-1.7-1.9-2.6c-1.2-1.8-2.1-3.6-2.9-5.5s-1.4-3.9-1.8-5.9c-.2-1-.3-2-.4-3s-.1-2-.2-3c0-8.3 3.1-16.5 9.4-22.8C141 63.1 112.8 0 80 0C35.8 0 0 114.6 0 256z\"/><path fill=\"currentColor\"class=\"fa-primary\" d=\"M416 48a48 48 0 1 0 -96 0 48 48 0 1 0 96 0zM221.7 175.5c9.9-9.9 23.4-15.5 37.5-15.5c1.9 0 3.8 .1 5.6 .3L233.6 254c-9.3 28 1.7 58.8 26.8 74.5l86.2 53.9-25.4 88.8c-4.9 17 5 34.7 22 39.6s34.7-5 39.6-22l28.7-100.4c5.9-20.6-2.6-42.6-20.7-53.9L334 299l30.9-82.4 5.1 12.3C385 264.7 419.9 288 458.7 288l21.3 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-21.3 0c-12.9 0-24.6-7.8-29.5-19.7l-6.3-15c-14.6-35.1-44.1-61.9-80.5-73.1l-48.7-15c-11.1-3.4-22.7-5.2-34.4-5.2c-31 0-60.8 12.3-82.7 34.3l-23.1 23.1c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l23.1-23.1zM187.2 352L128 352c-17.7 0-32 14.3-32 32s14.3 32 32 32l69.6 0c19 0 36.2-11.2 43.9-28.5L253 361.6l-9.5-6c-17.5-10.9-30.5-26.8-37.9-44.9L187.2 352z\"/></svg></span> <span class=\"caption d-none d-xl-inline-block\">Sign in</span></a>\n                </li>\n                        <li class=\"nav-menu\">\n                <button class=\"navigation-toggle\"><i class=\"fa fa-fw fa-bars\" aria-hidden=\"true\"></i></button>\n            </li>\n        </ul>\n    </div>\n</nav>\n\n    <footer class=\"footer center-content\">\n    <div class=\"footer-container center-content-container\">\n        <div class=\"footer-inner container-fluid\">\n            <div class=\"row\">\n                <div class=\"col-8 col-md-10\">\n                    <ul class=\"footer-list footer-list-horizontal\">\n                        <li><a href=\"/\">Home</a></li>\n                        <li><a href=\"/refactoring\">Refactoring</a></li>\n                        <li><a href=\"/design-patterns\">Design Patterns</a></li>\n                        <li><a href=\"/store\">Premium Content</a></li>\n                        <li><a href=\"https://gitbybit.com/\">Git Course</a></li>\n                        <li><a href=\"https://refactoring.userecho.com/\" rel=\"nofollow\" class=\"userecho-public\">Forum</a></li>\n                        <li><a href=\"https://refactoring.userecho.com/\" rel=\"nofollow\" class=\"userecho-private\">Contact us</a></li>\n                    </ul>\n                </div>\n                <div class=\"col-4 col-md-2\">\n                    <ul class=\"footer-list footer-list-iconic footer-list-right\">\n                                                    <li><a href=\"https://www.facebook.com/refactoring.guru\"><i class=\"fa fa-facebook-official\"></i></a></li>\n                                                <li><a href=\"/sendy/form\" rel=\"nofollow\"><i class=\"fa fa-envelope\" aria-hidden=\"true\"></i></a></li>\n                        <li><a href=\"https://github.com/RefactoringGuru\"><i class=\"fa fa-github-circled\"></i></a></li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"footer-second\">\n        <div class=\"footer-container center-content-container\">\n            <div class=\"footer-inner container-fluid\">\n                <div class=\"row\">\n                    <div class=\"col-12 col-sm-6\">\n                        <i class=\"fa fa-fw fa-copyright\"></i> 2014-2025 <a href=\"/\">Refactoring.Guru</a>. <span style=\"white-space: nowrap\">All rights reserved.</span><br>\n                        <i class=\"fa fa-fw fa-image\"></i> Illustrations by <a href=\"http://zhart.us/\" rel=\"nofollow\"><span style=\"white-space: nowrap\">Dmitry Zhart</span></a>\n                    </div>\n                    <div class=\"footer-links-right col-12 col-sm-6 mt-4 mt-sm-0\">\n                        <ul class=\"footer-list footer-list-horizontal footer-list-right\">\n                            <li><a href=\"/terms\"><span>Terms &amp; Conditions</span></a>\n                            </li>\n                            <li><a href=\"/privacy-policy\"><span>Privacy Policy</span></a>\n                            </li>\n                            <li><a href=\"/content-usage-policy\"><span>Content Usage Policy</span></a>\n                            </li>\n                            <li><a href=\"/site-about\"><span>About us</span></a>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n                                    <div class=\"row\">\n                        <div class=\"col-12 col-sm-4\">\n                            <div class=\"mt-4\">\n                                                                    <b>Ukrainian office:</b><br>\n                                    <object class=\"fa-fw\" style=\"height: 0.8rem; filter: invert(50%);\"  type=\"image/svg+xml\" data=\"/images/content-public/icons/fa-building.svg?id=afddb5806968b0a9acfc1df75a181234\">\n                                        <img class=\"fa-fw\" style=\"height: 0.8rem;\" src=\"/images/content-public/icons/fa-building.svg?id=afddb5806968b0a9acfc1df75a181234\" alt=\"Organization address\"/>\n                                    </object> FOP Olga Skobeleva<br>\n                                    <svg style=\"width: 16px; height: 16px; margin-right: 1px; fill: currentColor;\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\"><path d=\"M352 192c0-88.4-71.6-160-160-160S32 103.6 32 192c0 15.6 5.4 37 16.6 63.4c10.9 25.9 26.2 54 43.6 82.1c34.1 55.3 74.4 108.2 99.9 140c25.4-31.8 65.8-84.7 99.9-140c17.3-28.1 32.7-56.3 43.6-82.1C346.6 229 352 207.6 352 192zm32 0c0 87.4-117 243-168.3 307.2c-12.3 15.3-35.1 15.3-47.4 0C117 435 0 279.4 0 192C0 86 86 0 192 0S384 86 384 192zm-240 0a48 48 0 1 0 96 0 48 48 0 1 0 -96 0zm48 80a80 80 0 1 1 0-160 80 80 0 1 1 0 160z\"/></svg> Abolmasova 7<br>\n                                    <span style=\"margin-left: 21px;\">Kyiv, Ukraine, 02002</span><br>\n                                    <i class=\"fa fa-fw fa-envelope\"></i>  Email: support@refactoring.guru\n                                \n                            </div>\n                        </div>\n                        <div class=\"col-12 col-sm-4\">\n                            <div class=\"mt-4\">\n                                <b>Spanish office:</b><br>\n                                <object class=\"fa-fw\" style=\"height: 0.8rem; filter: invert(50%);\"  type=\"image/svg+xml\" data=\"/images/content-public/icons/fa-building.svg?id=afddb5806968b0a9acfc1df75a181234\">\n                                    <img class=\"fa-fw\" style=\"height: 0.8rem;\" src=\"/images/content-public/icons/fa-building.svg?id=afddb5806968b0a9acfc1df75a181234\" alt=\"Organization address\"/>\n                                </object> Oleksandr Shvets<br>\n                                <svg style=\"width: 16px; height: 16px; margin-right: 1px; fill: currentColor;\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\"><path d=\"M352 192c0-88.4-71.6-160-160-160S32 103.6 32 192c0 15.6 5.4 37 16.6 63.4c10.9 25.9 26.2 54 43.6 82.1c34.1 55.3 74.4 108.2 99.9 140c25.4-31.8 65.8-84.7 99.9-140c17.3-28.1 32.7-56.3 43.6-82.1C346.6 229 352 207.6 352 192zm32 0c0 87.4-117 243-168.3 307.2c-12.3 15.3-35.1 15.3-47.4 0C117 435 0 279.4 0 192C0 86 86 0 192 0S384 86 384 192zm-240 0a48 48 0 1 0 96 0 48 48 0 1 0 -96 0zm48 80a80 80 0 1 1 0-160 80 80 0 1 1 0 160z\"/></svg> Avda Pamplona 64<br>\n                                <span style=\"margin-left: 21px;\">Pamplona, Spain, 31009</span><br>\n                                <i class=\"fa fa-fw fa-envelope\"></i>  Email: support@refactoring.guru\n                            </div>\n                        </div>\n                    </div>\n                            </div>\n        </div>\n    </div>\n</footer>\n\n</div>\n\n\n    <script defer>\n    var CodeMirrorScripts = [\"/js/codemirror.min.js?id=f7ae4adf14bd00338caf8e95da733cc9\"];\n</script>\n\n\n\n    <script>window.loadContent = true;window.loadCart = true;</script>\n</body>\n</html>\n"},
{"title": null, "url": "https://refactoring.guru/design-patterns/memento", "raw_html": "<!DOCTYPE html>\n<html lang=\"en\" dir=\"ltr\">\n<head prefix=\"og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# website: http://ogp.me/ns/website#\">\n    <meta charset=\"utf-8\">\n    <title>Memento</title>\n\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n    <meta name=\"theme-color\" content=\"#A2E2FD\" />\n\n            <style>\n        .buy-widget-excl-local-taxes {\n            display: none;\n        }\n    </style>\n    \n    <link rel=\"preload\" href=\"/fonts/PTSans/ptsans-regular_en.woff2?1\" as=\"font\" type=\"font/woff2\" crossorigin>\n    <link rel=\"preload\" href=\"/fonts/PTSans/ptsans-bold_en.woff2?1\" as=\"font\" type=\"font/woff2\" crossorigin>\n        <link rel=\"preload\" href=\"/fonts/fontello/fontawesome.woff2?15843843\" as=\"font\" type=\"font/woff2\" crossorigin>\n    <link rel=\"preload\" href=\"/fonts/FiraCode/woff2/FiraCode-Regular_latin.woff2\" as=\"font\" type=\"font/woff2\" crossorigin>\n        <link rel=\"preconnect dns-prefetch\" href=\"https://cdn.paddle.com\">\n    <link rel=\"preconnect dns-prefetch\" href=\"https://www.googletagmanager.com\">\n\n    <link rel=\"alternate\" href=\"https://refactoring.guru/design-patterns/memento\" hreflang=\"x-default\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/es/design-patterns/memento\" hreflang=\"es\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/fr/design-patterns/memento\" hreflang=\"fr\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/ja/design-patterns/memento\" hreflang=\"ja\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/ko/design-patterns/memento\" hreflang=\"ko\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/pl/design-patterns/memento\" hreflang=\"pl\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/pt-br/design-patterns/memento\" hreflang=\"pt-br\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/ru/design-patterns/memento\" hreflang=\"ru\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/uk/design-patterns/memento\" hreflang=\"uk\"/>\n    <link rel=\"alternate\" href=\"https://refactoringguru.cn/design-patterns/memento\" hreflang=\"zh\"/>\n\n    <meta name=\"description\" content=\"Memento is a behavioral design pattern that lets you save and restore the previous state of an object without revealing the details of its implementation.\">\n\n    <link rel=\"canonical\" href=\"https://refactoring.guru/design-patterns/memento\"/>\n\n    <link rel=\"icon\" type=\"image/x-icon\" href=\"/favicon.png\"/>\n\n        <meta property=\"fb:app_id\" content=\"666819623386327\"/>\n        <meta property=\"og:type\" content=\"website\"/>\n        <meta property=\"og:image\" content=\"https://refactoring.guru/images/refactoring/social/facebook-share-preview.png?id=dbf9e98269595be86eb668f365be6868\"/>\n    \n                    <link rel=\"stylesheet\" href=\"/css/public-packed.min.css?id=aaefab4da343b914b8dda9973604a9e8\">\n        <style type=\"text/css\">\n                    @font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_cyrillic-ext.woff2?1) format(\"woff2\");unicode-range:U+0460-052F,U+1C80-1C88,U+20B4,U+2DE0-2DFF,U+A640-A69F,U+FE2E-FE2F}@font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_cyrillic.woff2?1) format(\"woff2\");unicode-range:U+0400-045F,U+0490-0491,U+04B0-04B1,U+2116}@font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_latin-ext.woff2?1) format(\"woff2\");unicode-range:U+0100-024F,U+0259,U+1E00-1EFF,U+2020,U+20A0-20AB,U+20AD-20CF,U+2113,U+2C60-2C7F,U+A720-A7FF}@font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_latin.woff2?1) format(\"woff2\");unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}@font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_en.woff2?1) format(\"woff2\");unicode-range:U+0-FF,U+131,U+142,U+152,U+153,U+2BB,U+2BC,U+2C6,U+2DA,U+2DC,U+420,U+423,U+430,U+438-43A,U+43D,U+440,U+441,U+443,U+44C,U+457,U+2000-206F,U+2074,U+20AA-20AC,U+20B4,U+20B9,U+20BA,U+20BD,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_cyrillic-ext.woff2?1) format(\"woff2\");unicode-range:U+0460-052F,U+1C80-1C88,U+20B4,U+2DE0-2DFF,U+A640-A69F,U+FE2E-FE2F}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_cyrillic.woff2?1) format(\"woff2\");unicode-range:U+0400-045F,U+0490-0491,U+04B0-04B1,U+2116}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_latin-ext.woff2?1) format(\"woff2\");unicode-range:U+0100-024F,U+0259,U+1E00-1EFF,U+2020,U+20A0-20AB,U+20AD-20CF,U+2113,U+2C60-2C7F,U+A720-A7FF}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_latin.woff2?1) format(\"woff2\");unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_en.woff2?1) format(\"woff2\");unicode-range:U+0-FF,U+131,U+142,U+152,U+153,U+2BB,U+2BC,U+2C6,U+2DA,U+2DC,U+420,U+423,U+430,U+438-43A,U+43D,U+440,U+441,U+443,U+44C,U+457,U+2000-206F,U+2074,U+20AA-20AC,U+20B4,U+20B9,U+20BA,U+20BD,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}\n            </style>\n\n    \n            <script defer src=\"/js/public.min.js?id=1f19fe18ffe0fc844ede8a0f2ee64202\"></script>\n        <script defer src=\"/js/checkout.min.js?id=b4da9c5bd8b1cf504447c07ae8b7cd44\"></script>\n            <script defer src=\"https://cdn.paddle.com/paddle/v2/paddle.js\"></script>\n    <script async src=\"https://www.googletagmanager.com/gtag/js?id=G-SR8Y3GYQYC\"></script>\n\n    <script type=\"application/ld+json\">\n        {\"@context\": \"http://schema.org\", \"@graph\": [{\"@type\":\"Person\",\"@id\":\"https://refactoring.guru/#founder\",\"name\":\"Alexander Shvets\"},{\"@type\":\"Organization\",\"@id\":\"https://refactoring.guru/#organization\",\"name\":\"Refactoring.Guru\",\"description\":\"Refactoring.Guru makes it easy for you to discover everything you need to know about refactoring, design patterns, SOLID principles, and other smart programming topics.\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https://refactoring.guru/#organizationlogo\",\"url\":\"https://refactoring.guru/images/content-public/logos/logo-plain.png\",\"caption\":\"Refactoring.Guru\"},\"logo\":{\"@id\":\"https://refactoring.guru/#organizationlogo\"},\"founder\":{\"@id\":\"https://refactoring.guru/#founder\"},\"sameAs\":[\"https://www.facebook.com/refactoring.guru\",\"https://twitter.com/RefactoringGuru\",\"https://github.com/RefactoringGuru\"]},{\"@type\":\"WebSite\",\"@id\":\"https://refactoring.guru/#website\",\"url\":\"https://refactoring.guru/\",\"name\":\"Refactoring.Guru\",\"description\":\"Refactoring.Guru makes it easy for you to discover everything you need to know about refactoring, design patterns, SOLID principles, and other smart programming topics.\",\"author\":{\"@id\":\"https://refactoring.guru/#founder\"},\"publisher\":{\"@id\":\"https://refactoring.guru/#organization\"},\"copyrightYear\":2014},{\"@type\":\"WebPage\",\"@id\":\"https://refactoring.guru/design-patterns/memento#webpage\",\"url\":\"https://refactoring.guru/design-patterns/memento\",\"inLanguage\":\"en\",\"name\":\"Memento\",\"description\":\"Memento is a behavioral design pattern that lets you save and restore the previous state of an object without revealing the details of its implementation.\",\"isPartOf\":{\"@id\":\"https://refactoring.guru#website\"},\"breadcrumb\":{\"@id\":\"https://refactoring.guru/design-patterns/memento#breadcrumb\"},\"primaryImageOfPage\":{\"@id\":\"https://refactoring.guru/design-patterns/memento#primaryimage\"},\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https://refactoring.guru/design-patterns/memento#primaryimage\",\"url\":\"https://refactoring.guru/images/patterns/content/memento/memento-en-3x.png\",\"width\":1920,\"height\":1200}},{\"@type\":\"Article\",\"@id\":\"https://refactoring.guru/design-patterns/memento#article\",\"isPartOf\":{\"@id\":\"https://refactoring.guru/design-patterns/memento#webpage\"},\"mainEntityOfPage\":{\"@id\":\"https://refactoring.guru/design-patterns/memento#webpage\"},\"author\":{\"@id\":\"https://refactoring.guru#founder\"},\"publisher\":{\"@id\":\"https://refactoring.guru#organization\"},\"headline\":\"Memento\",\"datePublished\":\"2024-01-01\",\"dateModified\":\"2025-01-01\",\"articleSection\":\"Design Patterns\",\"image\":{\"@id\":\"https://refactoring.guru/design-patterns/memento#primaryimage\"}},{\"@type\":\"BreadcrumbList\",\"@id\":\"https://refactoring.guru/design-patterns/memento#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https://refactoring.guru\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Design Patterns\",\"item\":\"https://refactoring.guru/design-patterns\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"Behavioral Patterns\",\"item\":\"https://refactoring.guru/design-patterns/behavioral-patterns\"}]}] }\n    </script>\n\n    <script>\nfunction extend(){var extended={};var deep=false;var i=0;var length=arguments[\"length\"];if(Object[\"prototype\"][\"toString\"][\"call\"](arguments[0])=== '[object Boolean]'){deep= arguments[0];i++};var merge=function(obj){for(var prop in obj){if(Object[\"prototype\"][\"hasOwnProperty\"][\"call\"](obj,prop)){if(deep&& Object[\"prototype\"][\"toString\"][\"call\"](obj[prop])=== '[object Object]'){extended[prop]= extend(true,extended[prop],obj[prop])}else {extended[prop]= obj[prop]}}}};for(;i< length;i++){var obj=arguments[i];merge(obj)};return extended}\nfunction defer(method) {if (window.jQuery) {method();} else {setTimeout(function() { defer(method) }, 50);}}\n</script>\n<script>\n+function(sd){sd = (typeof sd === \"string\") ? JSON.parse(atob(sd)) : sd;for(var property in sd){if(window[property]!== null&&  typeof window[property]=== 'object'){window[property]= extend(true,window[property],sd[property])}else {window[property]= sd[property]}}}(\"eyJsb2NhbGUiOiJlbiIsImxvY2FsZV9wcmVmaXgiOiIiLCJsb2NhbGl6ZWRfdXJsX3ByZWZpeCI6Imh0dHBzOlwvXC9yZWZhY3RvcmluZy5ndXJ1XC8iLCJ1cmxfcHJlZml4IjoiaHR0cHM6XC9cL3JlZmFjdG9yaW5nLmd1cnVcLyIsImxvY2FsaXplZF91cmxfcHJlZml4X20iOiJodHRwczpcL1wvcmVmYWN0b3JpbmcuZ3VydVwvIiwidXJsX3ByZWZpeF9tIjoiaHR0cHM6XC9cL3JlZmFjdG9yaW5nLmd1cnVcLyIsInVzZXJfZWNob19hbGlhcyI6InJlZmFjdG9yaW5nIiwidXNlcl9lY2hvX2hvc3QiOiJmZWVkYmFjay5yZWZhY3RvcmluZy5ndXJ1IiwidXNlcl9lY2hvX3ByaXZhdGVfZm9ydW0iOiIyIiwidXNlcl9lY2hvX2xvY2FsZSI6ImVuIiwidXNlcl9lY2hvX3B1YmxpY19mb3J1bSI6IjMiLCJ1c2VyX2VjaG9fcHVibGljX2ZvcnVtX3VybCI6Imh0dHBzOlwvXC9mZWVkYmFjay5yZWZhY3RvcmluZy5ndXJ1XC8iLCJ1c2VyX2VjaG9fc3NvX3Rva2VuIjoiIn0=\");\n</script>\n\n<script>\n    window.dataLayer = window.dataLayer || [];\n    function gtag(){dataLayer.push(arguments);}\n    gtag('js', new Date());\n            gtag('set', 'linker', {'domains': [\"refactoring.guru,refactoringguru.cn\"]});\n        gtag('config', 'G-SR8Y3GYQYC', {\n        // Disable default page view, because we're going to report them on our own.\n        // This is done to report traffic on localized domains as part of the main website traffic\n        // See the Chinese overrides below.\n        send_page_view: false,\n    });\n</script>\n\n<script>\n    (() => {\n        // On first page view after returning from social network, we need to send the social login event.\n        (function detectSocialLogin() {\n            let getCookie = function (name) {\n                var nameEQ = name + \"=\";\n                var ca = document.cookie.split(';');\n                for (var i = 0; i < ca.length; i++) {\n                    var c = ca[i];\n                    while (c.charAt(0) == ' ') c = c.substring(1, c.length);\n                    if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);\n                }\n                return null;\n            };\n            window.social_login_provider = window.social_login_provider || getCookie('social_login_provider');\n            if (window.social_login_provider) {\n                gtag('set', {referrer: null});\n                gtag('event', 'login', {\"method\": window.social_login_provider});\n                // Delete cookie.\n                document.cookie = 'social_login_provider=; Path=/; Max-Age=-99999999;';\n            }\n        })();\n\n        function trackPageView(location, title) {\n            location = location || document.location.href;\n            title = title || document.title;\n\n            // This is show on https://refactoringguru.cn/ and alike.\n            if (typeof window.analytics_path_prefix === 'string') {\n                if (/^(https?:\\/\\/[^\\/]+?)\\/$/.test(location)) {\n                    location = location.replace(/(https?:\\/\\/[^\\/]+?)\\//, '$1' + window.analytics_path_prefix);\n                } else {\n                    location = location.replace(/(https?:\\/\\/[^\\/]+?)\\//, '$1' + window.analytics_path_prefix + '/');\n                }\n                gtag('set', {\n                    'page_location': location\n                });\n            }\n\n            // This is show on https://refactoring.guru/zh/login and alike.\n            if (typeof window.analytics_location_prefix === 'string') {\n                location = location.replace(/(https?:\\/\\/[^\\/]+?)\\//, window.analytics_location_prefix);\n                gtag('set', {\n                    'page_location': location\n                });\n            }\n\n            gtag('event', 'page_view', {\n                page_location: location,\n                page_title: title,\n                locale: window.locale ?? 'en'\n            });\n        }\n\n        if (window.loadContent) {\n            window.onPageLoad = window.onPageLoad || [];\n            window.onPageLoad.push({\n                func: function (context) {\n                    trackPageView(window.location.origin + context.canonicalPath, context.title);\n                },\n                afterAll: true,\n            });\n        }\n        else {\n            trackPageView();\n        }\n    })();\n</script>\n\n\n</head>\n<body class=\"locale-en   announcement   memento\" data-body_class=\"memento\">\n\n<div class=\"body-holder\">\n\n            <div class=\"announcement-block announcement-block-summer prom\" data-id=\"DIDP-announcement\" data-creative-id=\"en\" data-position=\"top\">\n        <span class=\"beach-and-sea\">\n            <span class=\"a1\"></span>\n            <span class=\"a2\"><span class=\"wave\"></span></span>\n            <span class=\"yacht\"></span>\n        </span>\n        <a href=\"/store\">\n            <img src=\"/images/content-public/ann/summer/sunbed.svg?id=b1e7314a63715a13870a6bd1a43613f7\" loading=\"lazy\" style=\"width: 32px; height:32px;vertical-align: middle; scale: -1 1 1;\">\n            <span class=\"announcement-link-text\">Summer SALE</span>\n            <img src=\"/images/content-public/ann/summer/reading-book.svg?id=36006ea720df8c171968cf613e8ea164\" loading=\"lazy\" style=\"width: 32px; height:32px;vertical-align: middle;\">\n        </a>\n    </div>\n\n    \n    <div class=\"cart-placeholder\">\n    <div class=\"cart-block-container\" style=\"display:none\">\n        <div class=\"cart-block btn-group\">\n            <a href=\"#checkout\" class=\"btn cart open-checkout\">\n                <span class=\"cart-text\"></span>&nbsp;<strong class=\"cart-total font-money\"></strong>\n            </a><a href=\"#checkout\" class=\"btn btn-secondary checkout open-checkout\"><i class=\"fa fa-shopping-cart\" aria-hidden=\"true\"></i> <span class=\"btn-text-span d-none d-sm-inline-block d-lg-none d-hg-inline-block\"></span></a>\n        </div>\n    </div>\n</div>\n    <main role=\"main\" class=\"main-content top-content center-content \" data-page_class=\"\">\n        <div class=\"main-content-container center-content-container\">\n                        <div class=\"pattern page text\">\n<article>\n    <div class=\"breadcrumb\">\n                                    <a class=\"home\" href=\"/\"><i class=\"fa fa-home\" aria-hidden=\"true\"></i></a>\n                                                / <a class=\"type\" href=\"/design-patterns\">Design Patterns</a>\n                                                / <a class=\"type\" href=\"/design-patterns/behavioral-patterns\">Behavioral Patterns</a>\n                        </div>\n    <h1 class=\"title\">Memento</h1>\n\n    <script type=\"text/javascript\">\n        // Shorten examples titles for users.\n        var h1 = document.getElementsByTagName(\"H1\")[0];\n        if (h1.offsetHeight > 160) {\n            h1.className += ' smaller';\n        }\n\n        // Small beautification for pattern examples.\n        var title = h1.innerHTML;\n        title = title.replace(/^(Java|C\\+\\+|C#|PHP|Python|Ruby|Delphi): (.*)$/, '<strong>$1:</strong> $2');\n        h1.innerHTML = title;\n    </script>\n\n            <div class=\"aka\">\n            Also known as: <span style=\"display:inline-block\">Snapshot</span>\n        </div>\n    \n    \n\n    <div class=\"section intent\">\n<h2 id=\"intent\"><i class=\"fa fa-flip-horizontal fa-comment-alt-dots\" aria-hidden=\"true\"></i> Intent</h2>\n<p><strong>Memento</strong> is a behavioral design pattern that lets you save and restore the previous state of an object without revealing the details of its implementation.</p>\n<figure class=\"image\"><img src=\"/images/patterns/content/memento/memento-en.png?id=e51abf6a98a5b1f91e0f3a000f113e1a\" alt=\"Memento design pattern\" srcset=\"/images/patterns/content/memento/memento-en.png?id=e51abf6a98a5b1f91e0f3a000f113e1a 640w,/images/patterns/content/memento/memento-en-1.5x.png?id=d3bfbeb3e1e04874273c05d4b04334b9 960w,/images/patterns/content/memento/memento-en-2x.png?id=6782c5bbd8e036321dfd86558b540dda 1280w\" sizes=\"(max-width: 720px) 100vw, 640px\" width=\"640\" style=\"aspect-ratio: 1.6;\" fetchpriority=\"high\" /></figure>\n</div>\n<div class=\"section problem\">\n<h2 id=\"problem\"><i class=\"fa fa-frown\" aria-hidden=\"true\"></i> Problem</h2>\n<p>Imagine that you’re creating a text editor app. In addition to simple text editing, your editor can format text, insert inline images, etc.</p>\n<p>At some point, you decided to let users undo any operations carried out on the text. This feature has become so common over the years that nowadays people expect every app to have it. For the implementation, you chose to take the direct approach. Before performing any operation, the app records the state of all objects and saves it in some storage. Later, when a user decides to revert an action, the app fetches the latest snapshot from the history and uses it to restore the state of all objects.</p>\n<figure class=\"image\"><img src=\"/images/patterns/diagrams/memento/problem1-en.png?id=e0d795264bcc87b62a27e41d89d54899\" alt=\"Reverting operations in the editor\" srcset=\"/images/patterns/diagrams/memento/problem1-en.png?id=e0d795264bcc87b62a27e41d89d54899 470w,/images/patterns/diagrams/memento/problem1-en-1.5x.png?id=1d6ba45c84e02ceea3aa855e875ea98f 705w,/images/patterns/diagrams/memento/problem1-en-2x.png?id=566e033ea5d3ab01e47fc4fc8697f994 940w\" sizes=\"(max-width: 720px) 100vw, 470px\" width=\"470\" style=\"aspect-ratio: 2.61;\" loading=\"lazy\" /><figcaption>\n<p>Before executing an operation, the app saves a snapshot of the objects’ state, which can later be used to restore objects to their previous state.</p>\n</figcaption></figure>\n<p>Let’s think about those state snapshots. How exactly would you produce one? You’d probably need to go over all the fields in an object and copy their values into storage. However, this would only work if the object had quite relaxed access restrictions to its contents. Unfortunately, most real objects won’t let others peek inside them that easily, hiding all significant data in private fields.</p>\n<p>Ignore that problem for now and let’s assume that our objects behave like hippies: preferring open relations and keeping their state public. While this approach would solve the immediate problem and let you produce snapshots of objects’ states at will, it still has some serious issues. In the future, you might decide to refactor some of the editor classes, or add or remove some of the fields. Sounds easy, but this would also require changing the classes responsible for copying the state of the affected objects.</p>\n<figure class=\"image\"><img src=\"/images/patterns/diagrams/memento/problem2-en.png?id=a1c8258832f35d27f1a566322b34bf78\" alt=\"How to make a copy of the object&#039;s private state?\" srcset=\"/images/patterns/diagrams/memento/problem2-en.png?id=a1c8258832f35d27f1a566322b34bf78 300w,/images/patterns/diagrams/memento/problem2-en-1.5x.png?id=9776088e19f7bd740210d9349184adb2 450w,/images/patterns/diagrams/memento/problem2-en-2x.png?id=0fa1afcb7eaf54093e64722a2f187f8c 600w\" sizes=\"(max-width: 720px) 100vw, 300px\" width=\"300\" style=\"aspect-ratio: 1.43;\" loading=\"lazy\" /><figcaption>\n<p>How to make a copy of the object’s private state?</p>\n</figcaption></figure>\n<p>But there’s more. Let’s consider the actual “snapshots” of the editor’s state. What data does it contain? At a bare minimum, it must contain the actual text, cursor coordinates, current scroll position, etc. To make a snapshot, you’d need to collect these values and put them into some kind of container.</p>\n<p>Most likely, you’re going to store lots of these container objects inside some list that would represent the history. Therefore the containers would probably end up being objects of one class. The class would have almost no methods, but lots of fields that mirror the editor’s state. To allow other objects to write and read data to and from a snapshot, you’d probably need to make its fields public. That would expose all the editor’s states, private or not. Other classes would become dependent on every little change to the snapshot class, which would otherwise happen within private fields and methods without affecting outer classes.</p>\n<p>It looks like we’ve reached a dead end: you either expose all internal details of classes, making them too fragile, or restrict access to their state, making it impossible to produce snapshots. Is there any other way to implement the &quot;undo&quot;?</p>\n</div>\n<div class=\"section solution\">\n<h2 id=\"solution\"><i class=\"fa fa-smile-beam\" aria-hidden=\"true\"></i> Solution</h2>\n<p>All problems that we’ve just experienced are caused by broken encapsulation. Some objects try to do more than they are supposed to. To collect the data required to perform some action, they invade the private space of other objects instead of letting these objects perform the actual action.</p>\n<p>The Memento pattern delegates creating the state snapshots to the actual owner of that state, the <em>originator</em> object. Hence, instead of other objects trying to copy the editor’s state from the “outside,” the editor class itself can make the snapshot since it has full access to its own state.</p>\n<p>The pattern suggests storing the copy of the object’s state in a special object called <em>memento</em>. The contents of the memento aren’t accessible to any other object except the one that produced it. Other objects must communicate with mementos using a limited interface which may allow fetching the snapshot’s metadata (creation time, the name of the performed operation, etc.), but not the original object’s state contained in the snapshot.</p>\n<figure class=\"image\"><img src=\"/images/patterns/diagrams/memento/solution-en.png?id=b8adab0fc6d22cf8d630e560b9a8fafd\" alt=\"The originator has full access to the memento, whereas the caretaker can only access the metadata\" srcset=\"/images/patterns/diagrams/memento/solution-en.png?id=b8adab0fc6d22cf8d630e560b9a8fafd 610w,/images/patterns/diagrams/memento/solution-en-1.5x.png?id=e4f138c0113407c6e41e2ece6dd149a9 915w,/images/patterns/diagrams/memento/solution-en-2x.png?id=cfba1b6b9f65659c29178f7399e30b49 1220w\" sizes=\"(max-width: 720px) 100vw, 610px\" width=\"610\" style=\"aspect-ratio: 1.36;\" loading=\"lazy\" /><figcaption>\n<p>The originator has full access to the memento, whereas the caretaker can only access the metadata.</p>\n</figcaption></figure>\n<p>Such a restrictive policy lets you store mementos inside other objects, usually called <em>caretakers</em>. Since the caretaker works with the memento only via the limited interface, it’s not able to tamper with the state stored inside the memento. At the same time, the originator has access to all fields inside the memento, allowing it to restore its previous state at will.</p>\n<p>In our text editor example, we can create a separate history class to act as the caretaker. A stack of mementos stored inside the caretaker will grow each time the editor is about to execute an operation. You could even render this stack within the app’s UI, displaying the history of previously performed operations to a user.</p>\n<p>When a user triggers the undo, the history grabs the most recent memento from the stack and passes it back to the editor, requesting a roll-back. Since the editor has full access to the memento, it changes its own state with the values taken from the memento.</p>\n</div>\n<div class=\"section structure-container\">\n<h2 id=\"structure\"><i class=\"fa fa-sitemap\" aria-hidden=\"true\"></i> Structure</h2>\n<div class=\"structure\">\n<h4>Implementation based on nested classes</h4>\n<p>The classic implementation of the pattern relies on support for nested classes, available in many popular programming languages (such as C++, C#, and Java).</p>\n<div class=\"memento-classic\">\n<div class=\"struct-image1 struct-image\">\n<figure class=\"image\"><img class=\"structure-img-non-indexed d-none d-xl-block\" src=\"/images/patterns/diagrams/memento/structure1.png?id=4b4a42363a005b617d4df06689787385\" alt=\"Memento based on nested classes\" srcset=\"/images/patterns/diagrams/memento/structure1.png?id=4b4a42363a005b617d4df06689787385 580w,/images/patterns/diagrams/memento/structure1-1.5x.png?id=82cf757f153840c85d27bd63f3f3e133 870w,/images/patterns/diagrams/memento/structure1-2x.png?id=d4e77295e51c2417f22b7abb396d5977 1160w\" sizes=\"(max-width: 720px) 100vw, 580px\" width=\"580\" style=\"aspect-ratio: 1.87;\" loading=\"lazy\" /><img class=\"structure-img-indexed d-xl-none\" src=\"/images/patterns/diagrams/memento/structure1-indexed.png?id=f79a8356b087ae6b004aec42b787ae2e\" alt=\"Memento based on nested classes\" srcset=\"/images/patterns/diagrams/memento/structure1-indexed.png?id=f79a8356b087ae6b004aec42b787ae2e 580w,/images/patterns/diagrams/memento/structure1-indexed-1.5x.png?id=0687dc84dd4c98b4591a70ebd05c4d8e 870w,/images/patterns/diagrams/memento/structure1-indexed-2x.png?id=62fea7bdbc96420568869ea3bd25f6ad 1160w\" sizes=\"(max-width: 720px) 100vw, 580px\" width=\"580\" style=\"aspect-ratio: 1.87;\" loading=\"lazy\" /></figure>\n</div>\n</div>\n<ol><li class=\"struct-li1\">\n<p>The <strong>Originator</strong> class can produce snapshots of its own state, as well as restore its state from snapshots when needed.</p>\n</li>\n<li class=\"struct-li2\">\n<p>The <strong>Memento</strong> is a value object that acts as a snapshot of the originator’s state. It’s a common practice to make the memento immutable and pass it the data only once, via the constructor.</p>\n</li>\n<li class=\"struct-li3\">\n<p>The <strong>Caretaker</strong> knows not only “when” and “why” to capture the originator’s state, but also when the state should be restored.</p>\n<p>A caretaker can keep track of the originator’s history by storing a stack of mementos. When the originator has to travel back in history, the caretaker fetches the topmost memento from the stack and passes it to the originator’s restoration method.</p>\n</li>\n<li class=\"struct-li4\">\n<p>In this implementation, the memento class is nested inside the originator. This lets the originator access the fields and methods of the memento, even though they’re declared private. On the other hand, the caretaker has very limited access to the memento’s fields and methods, which lets it store mementos in a stack but not tamper with their state.</p>\n</li></ol>\n<h4>Implementation based on an intermediate interface</h4>\n<p>There’s an alternative implementation, suitable for programming languages that don’t support nested classes (yeah, PHP, I’m talking about you).</p>\n<div class=\"memento-empty-interface\">\n<div class=\"struct-image2 struct-image\">\n<figure class=\"image\"><img class=\"structure-img-non-indexed d-none d-xl-block\" src=\"/images/patterns/diagrams/memento/structure2.png?id=fcff71cb648389be2e302fbe55e2f847\" alt=\"Memento without nested classes\" srcset=\"/images/patterns/diagrams/memento/structure2.png?id=fcff71cb648389be2e302fbe55e2f847 560w,/images/patterns/diagrams/memento/structure2-1.5x.png?id=5c05495a7ca6545fcc57f70ea7ee904a 840w,/images/patterns/diagrams/memento/structure2-2x.png?id=aa7fb5d0f622d4344a2cb590f437f8c8 1120w\" sizes=\"(max-width: 720px) 100vw, 560px\" width=\"560\" style=\"aspect-ratio: 1.6;\" loading=\"lazy\" /><img class=\"structure-img-indexed d-xl-none\" src=\"/images/patterns/diagrams/memento/structure2-indexed.png?id=2c98b4f64b03f2a30e159de31ca9f718\" alt=\"Memento without nested classes\" srcset=\"/images/patterns/diagrams/memento/structure2-indexed.png?id=2c98b4f64b03f2a30e159de31ca9f718 560w,/images/patterns/diagrams/memento/structure2-indexed-1.5x.png?id=1ba6e0f22bb613f3f1dcf86850c3b604 840w,/images/patterns/diagrams/memento/structure2-indexed-2x.png?id=2fb637daef1110dfa89f15b2d4627894 1120w\" sizes=\"(max-width: 720px) 100vw, 560px\" width=\"560\" style=\"aspect-ratio: 1.6;\" loading=\"lazy\" /></figure>\n</div>\n</div>\n<ol><li class=\"struct-li5\">\n<p>In the absence of nested classes, you can restrict access to the memento’s fields by establishing a convention that caretakers can work with a memento only through an explicitly declared intermediary interface, which would only declare methods related to the memento’s metadata.</p>\n</li>\n<li class=\"struct-li6\">\n<p>On the other hand, originators can work with a memento object directly, accessing fields and methods declared in the memento class. The downside of this approach is that you need to declare all members of the memento public.</p>\n</li></ol>\n<h4>Implementation with even stricter encapsulation</h4>\n<p>There’s another implementation which is useful when you don’t want to leave even the slightest chance of other classes accessing the state of the originator through the memento.</p>\n<div class=\"memento-safe\">\n<div class=\"struct-image3 struct-image\">\n<figure class=\"image\"><img class=\"structure-img-non-indexed d-none d-xl-block\" src=\"/images/patterns/diagrams/memento/structure3.png?id=6c3ef6a916be8c8ec6d6659d19a6a79f\" alt=\"Memento with strict encapsulation\" srcset=\"/images/patterns/diagrams/memento/structure3.png?id=6c3ef6a916be8c8ec6d6659d19a6a79f 590w,/images/patterns/diagrams/memento/structure3-1.5x.png?id=9bb6d9dd5567bc71d9e93efc9183ef3a 885w,/images/patterns/diagrams/memento/structure3-2x.png?id=988c37f92059457153d26ba3458d371e 1180w\" sizes=\"(max-width: 720px) 100vw, 590px\" width=\"590\" style=\"aspect-ratio: 1.74;\" loading=\"lazy\" /><img class=\"structure-img-indexed d-xl-none\" src=\"/images/patterns/diagrams/memento/structure3-indexed.png?id=17e84b0ef89a41bb3fb844c8d7a445ad\" alt=\"Memento with strict encapsulation\" srcset=\"/images/patterns/diagrams/memento/structure3-indexed.png?id=17e84b0ef89a41bb3fb844c8d7a445ad 590w,/images/patterns/diagrams/memento/structure3-indexed-1.5x.png?id=c121c75333433b70b9a67b75e536214c 885w,/images/patterns/diagrams/memento/structure3-indexed-2x.png?id=fef9ae2a0151c105976075aafb8939dd 1180w\" sizes=\"(max-width: 720px) 100vw, 590px\" width=\"590\" style=\"aspect-ratio: 1.74;\" loading=\"lazy\" /></figure>\n</div>\n</div>\n<ol><li class=\"struct-li7\">\n<p>This implementation allows having multiple types of originators and mementos. Each originator works with a corresponding memento class. Neither originators nor mementos expose their state to anyone.</p>\n</li>\n<li class=\"struct-li8\">\n<p>Caretakers are now explicitly restricted from changing the state stored in mementos. Moreover, the caretaker class becomes independent from the originator because the restoration method is now defined in the memento class.</p>\n</li>\n<li class=\"struct-li9\">\n<p>Each memento becomes linked to the originator that produced it. The originator passes itself to the memento’s constructor, along with the values of its state. Thanks to the close relationship between these classes, a memento can restore the state of its originator, given that the latter has defined the appropriate setters.</p>\n</li></ol>\n<style structure type=\"text/css\" >\n@media (min-width: 1200px) {\n.structure {\nmargin: 0;\nwidth: auto;\nheight: 1780px;\n}\n\n.memento-classic {\nheight: 440px;\n}\n\n.memento-empty-interface {\nheight: 350px;\n}\n\n.memento-safe {\nheight: 370px;\n}\n\n.struct-image1 {\nleft: 40px;\ntop: 290px;\n}\n\n.struct-li1 {\nleft: 0px;\ntop: 160px;\nwidth: 230px;\n}\n\n.struct-li2 {\nleft: 270px;\ntop: 160px;\nwidth: 340px;\n}\n\n.struct-li3 {\nleft: 640px;\ntop: 260px;\nwidth: 210px;\n}\n\n.struct-li4 {\nleft: 10px;\ntop: 450px;\nwidth: 400px;\n}\n\n.struct-image2 {\nleft: 120px;\ntop: 780px;\nwidth: 560px;\nheight: 350px;\n}\n\n.struct-li5 {\nleft: 0px;\ntop: 770px;\nwidth: 330px;\n}\n\n.struct-li6 {\nleft: 550px;\ntop: 930px;\nwidth: 250px;\n}\n\n.struct-image3 {\nleft: 10px;\ntop: 1440px;\nwidth: 590px;\nheight: 340px;\n}\n\n.struct-li7 {\nleft: 0px;\ntop: 1320px;\nwidth: 370px;\n}\n\n.struct-li8 {\nleft: 440px;\ntop: 1320px;\nwidth: 380px;\n}\n\n.struct-li9 {\nleft: 510px;\ntop: 1590px;\nwidth: 330px;\n}\n\n}\n\n</style>\n</div></div>\n<div class=\"section pseudocode\">\n<h2 id=\"pseudocode\"><i class=\"fa fa-hashtag\" aria-hidden=\"true\"></i> Pseudocode</h2>\n<p>This example uses the Memento pattern alongside the <a href=\"/design-patterns/command\">Command</a> pattern for storing snapshots of the complex text editor’s state and restoring an earlier state from these snapshots when needed.</p>\n<figure class=\"image\"><img src=\"/images/patterns/diagrams/memento/example.png?id=fb2196b065f374a1c2a64a0943463760\" alt=\"Structure of the Memento example\" srcset=\"/images/patterns/diagrams/memento/example.png?id=fb2196b065f374a1c2a64a0943463760 600w,/images/patterns/diagrams/memento/example-1.5x.png?id=174b686f918a2c49e2545d5573c52d42 900w,/images/patterns/diagrams/memento/example-2x.png?id=41a73f3cc22bc3dd180f53e6968974d4 1200w\" sizes=\"(max-width: 720px) 100vw, 600px\" width=\"600\" style=\"aspect-ratio: 4.29;\" loading=\"lazy\" /><figcaption>\n<p>Saving snapshots of the text editor’s state.</p>\n</figcaption></figure>\n<p>The command objects act as caretakers. They fetch the editor’s memento before executing operations related to commands. When a user attempts to undo the most recent command, the editor can use the memento stored in that command to revert itself to the previous state.</p>\n<p>The memento class doesn’t declare any public fields, getters or setters. Therefore no object can alter its contents. Mementos are linked to the editor object that created them. This lets a memento restore the linked editor’s state by passing the data via setters on the editor object. Since mementos are linked to specific editor objects, you can make your app support several independent editor windows with a centralized undo stack.</p>\n<figure class=\"code\">\n<pre class=\"code\" lang=\"pseudocode\">// The originator holds some important data that may change over\n// time. It also defines a method for saving its state inside a\n// memento and another method for restoring the state from it.\nclass Editor is\n    private field text, curX, curY, selectionWidth\n\n    method setText(text) is\n        this.text = text\n\n    method setCursor(x, y) is\n        this.curX = x\n        this.curY = y\n\n    method setSelectionWidth(width) is\n        this.selectionWidth = width\n\n    // Saves the current state inside a memento.\n    method createSnapshot():Snapshot is\n        // Memento is an immutable object; that's why the\n        // originator passes its state to the memento's\n        // constructor parameters.\n        return new Snapshot(this, text, curX, curY, selectionWidth)\n\n// The memento class stores the past state of the editor.\nclass Snapshot is\n    private field editor: Editor\n    private field text, curX, curY, selectionWidth\n\n    constructor Snapshot(editor, text, curX, curY, selectionWidth) is\n        this.editor = editor\n        this.text = text\n        this.curX = x\n        this.curY = y\n        this.selectionWidth = selectionWidth\n\n    // At some point, a previous state of the editor can be\n    // restored using a memento object.\n    method restore() is\n        editor.setText(text)\n        editor.setCursor(curX, curY)\n        editor.setSelectionWidth(selectionWidth)\n\n// A command object can act as a caretaker. In that case, the\n// command gets a memento just before it changes the\n// originator's state. When undo is requested, it restores the\n// originator's state from a memento.\nclass Command is\n    private field backup: Snapshot\n\n    method makeBackup() is\n        backup = editor.createSnapshot()\n\n    method undo() is\n        if (backup != null)\n            backup.restore()\n    // ...\n</pre>\n</figure>\n</div>\n<div class=\"section applicability-container\">\n<h2 id=\"applicability\"><i class=\"fa fa-lightbulb-on\" aria-hidden=\"true\"></i> Applicability</h2>\n<div class=\"applicability\">\n<div class=\"applicability-problem\">\n<p><i class=\"fa fa-fw fa-bug\" aria-hidden=\"true\"></i> Use the Memento pattern when you want to produce snapshots of the object’s state to be able to restore a previous state of the object.</p>\n</div><div class=\"applicability-solution\">\n<p><i class=\"fa fa-fw fa-bolt\" aria-hidden=\"true\"></i> The Memento pattern lets you make full copies of an object’s state, including private fields, and store them separately from the object. While most people remember this pattern thanks to the “undo” use case, it’s also indispensable when dealing with transactions (i.e., if you need to roll back an operation on error).</p>\n</div>\n<div class=\"applicability-problem\">\n<p><i class=\"fa fa-fw fa-bug\" aria-hidden=\"true\"></i> Use the pattern when direct access to the object’s fields/getters/setters violates its encapsulation.</p>\n</div><div class=\"applicability-solution\">\n<p><i class=\"fa fa-fw fa-bolt\" aria-hidden=\"true\"></i> The Memento makes the object itself responsible for creating a snapshot of its state. No other object can read the snapshot, making the original object’s state data safe and secure.</p>\n</div>\n</div></div>\n<div class=\"section checklist\">\n<h2 id=\"checklist\"><i class=\"fa fa-clipboard-list-check\" aria-hidden=\"true\"></i> How to Implement</h2>\n<ol>\n<li>\n<p>Determine what class will play the role of the originator. It’s important to know whether the program uses one central object of this type or multiple smaller ones.</p>\n</li>\n<li>\n<p>Create the memento class. One by one, declare a set of fields that mirror the fields declared inside the originator class.</p>\n</li>\n<li>\n<p>Make the memento class immutable. A memento should accept the data just once, via the constructor. The class should have no setters.</p>\n</li>\n<li>\n<p>If your programming language supports nested classes, nest the memento inside the originator. If not, extract a blank interface from the memento class and make all other objects use it to refer to the memento. You may add some metadata operations to the interface, but nothing that exposes the originator’s state.</p>\n</li>\n<li>\n<p>Add a method for producing mementos to the originator class. The originator should pass its state to the memento via one or multiple arguments of the memento’s constructor.</p>\n<p>The return type of the method should be of the interface you extracted in the previous step (assuming that you extracted it at all). Under the hood, the memento-producing method should work directly with the memento class.</p>\n</li>\n<li>\n<p>Add a method for restoring the originator’s state to its class. It should accept a memento object as an argument. If you extracted an interface in the previous step, make it the type of the parameter. In this case, you need to typecast the incoming object to the memento class, since the originator needs full access to that object.</p>\n</li>\n<li>\n<p>The caretaker, whether it represents a command object, a history, or something entirely different, should know when to request new mementos from the originator, how to store them and when to restore the originator with a particular memento.</p>\n</li>\n<li>\n<p>The link between caretakers and originators may be moved into the memento class. In this case, each memento must be connected to the originator that had created it. The restoration method would also move to the memento class. However, this would all make sense only if the memento class is nested into originator or the originator class provides sufficient setters for overriding its state.</p>\n</li>\n</ol>\n</div>\n<div class=\"section pros-cons\">\n<h2 id=\"pros-cons\"><i class=\"fa fa-balance-scale\" aria-hidden=\"true\"></i> Pros and Cons</h2>\n<div class=\"row\"><div class=\"col-sm-6\">\n<ul>\n<li><i class=\"fa fa-fw fa-check\" aria-hidden=\"true\"></i> You can produce snapshots of the object’s state without violating its encapsulation.</li>\n<li><i class=\"fa fa-fw fa-check\" aria-hidden=\"true\"></i> You can simplify the originator’s code by letting the caretaker maintain the history of the originator’s state.</li>\n</ul>\n</div><div class=\"col-sm-6\">\n<ul>\n<li><i class=\"fa fa-fw fa-times\" aria-hidden=\"true\"></i> The app might consume lots of RAM if clients create mementos too often.</li>\n<li><i class=\"fa fa-fw fa-times\" aria-hidden=\"true\"></i> Caretakers should track the originator’s lifecycle to be able to destroy obsolete mementos.</li>\n<li><i class=\"fa fa-fw fa-times\" aria-hidden=\"true\"></i> Most dynamic programming languages, such as PHP, Python and JavaScript, can’t guarantee that the state within the memento stays untouched.</li>\n</ul>\n</div></div></div>\n<div class=\"section relations\">\n<h2 id=\"relations\"><i class=\"fa fa-exchange-alt\" aria-hidden=\"true\"></i> Relations with Other Patterns</h2>\n<ul>\n<li>\n<p>You can use <a href=\"/design-patterns/command\">Command</a> and <a href=\"/design-patterns/memento\">Memento</a> together when implementing “undo”. In this case, commands are responsible for performing various operations over a target object, while mementos save the state of that object just before a command gets executed.</p>\n</li>\n<li>\n<p>You can use <a href=\"/design-patterns/memento\">Memento</a> along with <a href=\"/design-patterns/iterator\">Iterator</a> to capture the current iteration state and roll it back if necessary.</p>\n</li>\n<li>\n<p>Sometimes <a href=\"/design-patterns/prototype\">Prototype</a> can be a simpler alternative to <a href=\"/design-patterns/memento\">Memento</a>. This works if the object, the state of which you want to store in the history, is fairly straightforward and doesn’t have links to external resources, or the links are easy to re-establish.</p>\n</li>\n</ul>\n</div>\n<div class=\"section implementations\">\n<h2 id=\"implementations\"><i class=\"fa fa-code\" aria-hidden=\"true\"></i> Code Examples</h2>\n<p><a href=\"/design-patterns/memento/csharp/example\" title=\"Memento in C#\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/csharp.svg?id=da64592defc6e86d57c39c66e9de3e58\" alt=\"Memento in C#\" /></a>\n<a href=\"/design-patterns/memento/cpp/example\" title=\"Memento in C++\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/cpp.svg?id=f7782ed8b8666246bfcc3f8fefc3b858\" alt=\"Memento in C++\" /></a>\n<a href=\"/design-patterns/memento/go/example\" title=\"Memento in Go\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/go.svg?id=1a89927eb99b1ea3fde7701d97970aca\" alt=\"Memento in Go\" /></a>\n<a href=\"/design-patterns/memento/java/example\" title=\"Memento in Java\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/java.svg?id=e6d87e2dca08c953fe3acd1275ed4f4e\" alt=\"Memento in Java\" /></a>\n<a href=\"/design-patterns/memento/php/example\" title=\"Memento in PHP\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/php.svg?id=be1906eb26b71ec1d3b93720d6156618\" alt=\"Memento in PHP\" /></a>\n<a href=\"/design-patterns/memento/python/example\" title=\"Memento in Python\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/python.svg?id=6d815d43c0f7050a1151b43e51569c9f\" alt=\"Memento in Python\" /></a>\n<a href=\"/design-patterns/memento/ruby/example\" title=\"Memento in Ruby\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/ruby.svg?id=b065b718c914bf8e960ef731600be1eb\" alt=\"Memento in Ruby\" /></a>\n<a href=\"/design-patterns/memento/rust/example\" title=\"Memento in Rust\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/rust.svg?id=1f5698a4b5ae23fe79413511747e4a87\" alt=\"Memento in Rust\" /></a>\n<a href=\"/design-patterns/memento/swift/example\" title=\"Memento in Swift\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/swift.svg?id=0b716c2d52ec3a48fbe91ac031070c1d\" alt=\"Memento in Swift\" /></a>\n<a href=\"/design-patterns/memento/typescript/example\" title=\"Memento in TypeScript\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/typescript.svg?id=2239d0f16cb703540c205dd8cb0c0cb7\" alt=\"Memento in TypeScript\" /></a></p>\n</div>\n\n\n    <div class=\"banner-set2\" id=\"book-promo\">\n            <div class=\"prom banner-content banner-bg banner-striped banner-with-image\" data-id=\"DP: 1: Support our free website and own the eBook!\" data-creative-id=\"standard-en\" data-position=\"content_bottom\">\n                <div class=\"banner-image\">\n                    <a href=\"/design-patterns/book\">\n                        <img width=\"200\" height=\"200\" loading=\"lazy\" src=\"/images/patterns/banners/patterns-book-banner-3.png?id=7d445df13c80287beaab234b4f3b698c\" srcset=\"/images/patterns/banners/patterns-book-banner-3-2x.png?id=0cc3f77ab421d1a5c02ee46488231c3a 2x\">\n                    </a>\n                </div>\n\n                <div class=\"banner-text\">\n                    <h3 class=\"title\">Support our free website and own the eBook!</h3>\n                    <ul style=\"font-size: 14px;\">\n                        <li style=\"margin: 0;\">22 design patterns and 8 principles explained in depth.</li>\n                        <li style=\"margin: 0;\">409 well-structured, easy to read, jargon-free pages.</li>\n                        <li style=\"margin: 0;\">225 clear and helpful illustrations and diagrams.</li>\n                        <li style=\"margin: 0;\">An archive with code examples in 11 languages.</li>\n                        <li style=\"margin: 0;\">All devices supported: PDF/EPUB/MOBI/KFX formats.</li>\n                    </ul>\n                    <a class=\"btn btn-secondary\" href=\"/design-patterns/book\"><i class=\"fa fa-book\" aria-hidden=\"true\"></i> Learn more…</a>\n                </div>\n            </div>\n        </div>\n\n    </article>\n\n<nav class=\"prev-next\">\n                    <div class=\"next\">\n                <h4>Read next</h4>\n                <a rel=\"next\" href=\"/design-patterns/observer\" class=\"btn btn-primary\">Observer&nbsp;<span class=\"fa fa-arrow-right\"></span></a>\n            </div>\n                            <div class=\"prev\">\n                <h4>Return</h4>\n                <a rel=\"prev\" href=\"/design-patterns/mediator\" class=\"btn btn-default\"><span class=\"fa fa-arrow-left\"></span>&nbsp;Mediator </a>\n            </div>\n            </nav>\n</div>\n\n<aside class=\"feature content-secondary\">\n    <div class=\"prom banner-sidebar banner-removable banner-removable-patterns\" data-id=\"DP: Sidebar\" data-creative-id=\"standard-sidebar-en\" data-position=\"sidebar\">\n        <div class=\"banner-inner\">\n            <div class=\"image3d-book-right\">\n                <div class=\"image3d-cover\" style=\"background: #0b3752;\">\n                    <a href=\"/design-patterns/book\">\n                        <img width=\"250\" height=\"375\" loading=\"lazy\" src=\"/images/patterns/book/web-cover-en.png?id=328861769fd11617674e3b8a7e2dd9e7\" srcset=\"/images/patterns/book/web-cover-en-2x.png?id=02940141c5652ed5a426d87390b16366 2x\">\n                    </a>\n                </div>\n            </div>\n            <div style=\"margin-top: 1rem\">\n                <p class=\"text-center\" >This article is a part of our eBook<br/><strong>Dive Into Design Patterns</strong>.</p>\n                <a href=\"/design-patterns/book\" class=\"btn btn-secondary btn-block\"><i class=\"fa fa-book\" aria-hidden=\"true\"></i> Learn more…</a>\n            </div>\n        </div>\n    </div>\n\n\n</aside>\n                    </div>\n    </main>\n\n    <aside class=\"sidebar main-menu\">\n    <div class=\"main-menu-controls\">\n        <button class=\"navigation-toggle\"><i class=\"fa fa-fw fa-times\"></i></button>\n    </div>\n    <div class=\"main-menu-list-wrapper nano\">\n        <div class=\"main-menu-list nano-content\">\n            <a class=\"menu-brand\" href=\"/\">\n                                    <img width=200 height=241 loading=\"lazy\" alt=\"Refactoring.Guru\" src=\"/images/content-public/logos/logo-new.png?id=97d554614702483f31e38b32e82d8e34\" srcset=\"/images/content-public/logos/logo-new-2x.png?id=3bc33294e095bab1d6fe9ae421d07837 2x\">\n                            </a>\n\n            <div class=\"menu-container\" style=\"position: relative\">\n                                <ul class=\"menu-list trail\">\n                            <li class=\"featured\">\n            <a href=\"/store\">\n                <i class=\"fa fa-fw fa-star\" aria-hidden=\"true\"></i> Premium Content\n            </a>\n    \n            <ul >\n                            <li class=\"featured menu-fs15\">\n            <a href=\"/design-patterns/book\">\n                <i class=\"fa fa-fw fa-book\" aria-hidden=\"true\"></i> Design Patterns eBook\n            </a>\n    \n    \n            </li>\n                                <li class=\"featured menu-fs15\">\n            <a href=\"/refactoring/course\">\n                <i class=\"fa fa-fw fa-graduation-cap\" aria-hidden=\"true\"></i> Refactoring Course\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring\">\n                <i class=\"fa fa-fw fa-scissors\" aria-hidden=\"true\"></i> Refactoring\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/refactoring/what-is-refactoring\">\n                What is Refactoring\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/refactoring/what-is-refactoring\">\n                Clean code\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/technical-debt\">\n                Technical debt\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/when\">\n                When to refactor\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/how-to\">\n                How to refactor\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/catalog\">\n                Catalog\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells\">\n                Code Smells\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/refactoring/smells/bloaters\">\n                Bloaters\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/long-method\">\n                Long Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/large-class\">\n                Large Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/primitive-obsession\">\n                Primitive Obsession\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/long-parameter-list\">\n                Long Parameter List\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/data-clumps\">\n                Data Clumps\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/oo-abusers\">\n                Object-Orientation Abusers\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/switch-statements\">\n                Switch Statements\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/temporary-field\">\n                Temporary Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/refused-bequest\">\n                Refused Bequest\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/alternative-classes-with-different-interfaces\">\n                Alternative Classes with Different Interfaces\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/change-preventers\">\n                Change Preventers\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/divergent-change\">\n                Divergent Change\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/shotgun-surgery\">\n                Shotgun Surgery\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/parallel-inheritance-hierarchies\">\n                Parallel Inheritance Hierarchies\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/dispensables\">\n                Dispensables\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/comments\">\n                Comments\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/duplicate-code\">\n                Duplicate Code\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/lazy-class\">\n                Lazy Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/data-class\">\n                Data Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/dead-code\">\n                Dead Code\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/speculative-generality\">\n                Speculative Generality\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/couplers\">\n                Couplers\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/feature-envy\">\n                Feature Envy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/inappropriate-intimacy\">\n                Inappropriate Intimacy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/message-chains\">\n                Message Chains\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/middle-man\">\n                Middle Man\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/other\">\n                Other Smells\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/incomplete-library-class\">\n                Incomplete Library Class\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques\">\n                Refactorings\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/refactoring/techniques/composing-methods\">\n                Composing Methods\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/extract-method\">\n                Extract Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/inline-method\">\n                Inline Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-variable\">\n                Extract Variable\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/inline-temp\">\n                Inline Temp\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-temp-with-query\">\n                Replace Temp with Query\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/split-temporary-variable\">\n                Split Temporary Variable\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-assignments-to-parameters\">\n                Remove Assignments to Parameters\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-method-with-method-object\">\n                Replace Method with Method Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/substitute-algorithm\">\n                Substitute Algorithm\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/moving-features-between-objects\">\n                Moving Features between Objects\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/move-method\">\n                Move Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/move-field\">\n                Move Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-class\">\n                Extract Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/inline-class\">\n                Inline Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/hide-delegate\">\n                Hide Delegate\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-middle-man\">\n                Remove Middle Man\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-foreign-method\">\n                Introduce Foreign Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-local-extension\">\n                Introduce Local Extension\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/organizing-data\">\n                Organizing Data\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/self-encapsulate-field\">\n                Self Encapsulate Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-data-value-with-object\">\n                Replace Data Value with Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/change-value-to-reference\">\n                Change Value to Reference\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/change-reference-to-value\">\n                Change Reference to Value\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-array-with-object\">\n                Replace Array with Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/duplicate-observed-data\">\n                Duplicate Observed Data\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/change-unidirectional-association-to-bidirectional\">\n                Change Unidirectional Association to Bidirectional\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/change-bidirectional-association-to-unidirectional\">\n                Change Bidirectional Association to Unidirectional\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-magic-number-with-symbolic-constant\">\n                Replace Magic Number with Symbolic Constant\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/encapsulate-field\">\n                Encapsulate Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/encapsulate-collection\">\n                Encapsulate Collection\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-type-code-with-class\">\n                Replace Type Code with Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-type-code-with-subclasses\">\n                Replace Type Code with Subclasses\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-type-code-with-state-strategy\">\n                Replace Type Code with State/Strategy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-subclass-with-fields\">\n                Replace Subclass with Fields\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/simplifying-conditional-expressions\">\n                Simplifying Conditional Expressions\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/decompose-conditional\">\n                Decompose Conditional\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/consolidate-conditional-expression\">\n                Consolidate Conditional Expression\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/consolidate-duplicate-conditional-fragments\">\n                Consolidate Duplicate Conditional Fragments\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-control-flag\">\n                Remove Control Flag\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-nested-conditional-with-guard-clauses\">\n                Replace Nested Conditional with Guard Clauses\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-conditional-with-polymorphism\">\n                Replace Conditional with Polymorphism\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-null-object\">\n                Introduce Null Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-assertion\">\n                Introduce Assertion\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/simplifying-method-calls\">\n                Simplifying Method Calls\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/rename-method\">\n                Rename Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/add-parameter\">\n                Add Parameter\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-parameter\">\n                Remove Parameter\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/separate-query-from-modifier\">\n                Separate Query from Modifier\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/parameterize-method\">\n                Parameterize Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-parameter-with-explicit-methods\">\n                Replace Parameter with Explicit Methods\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/preserve-whole-object\">\n                Preserve Whole Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-parameter-with-method-call\">\n                Replace Parameter with Method Call\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-parameter-object\">\n                Introduce Parameter Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-setting-method\">\n                Remove Setting Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/hide-method\">\n                Hide Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-constructor-with-factory-method\">\n                Replace Constructor with Factory Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-error-code-with-exception\">\n                Replace Error Code with Exception\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-exception-with-test\">\n                Replace Exception with Test\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/dealing-with-generalization\">\n                Dealing with Generalization\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/pull-up-field\">\n                Pull Up Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/pull-up-method\">\n                Pull Up Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/pull-up-constructor-body\">\n                Pull Up Constructor Body\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/push-down-method\">\n                Push Down Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/push-down-field\">\n                Push Down Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-subclass\">\n                Extract Subclass\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-superclass\">\n                Extract Superclass\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-interface\">\n                Extract Interface\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/collapse-hierarchy\">\n                Collapse Hierarchy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/form-template-method\">\n                Form Template Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-inheritance-with-delegation\">\n                Replace Inheritance with Delegation\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-delegation-with-inheritance\">\n                Replace Delegation with Inheritance\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"trail\">\n            <a href=\"/design-patterns\">\n                <i class=\"fa fa-fw fa-puzzle-piece\" aria-hidden=\"true\"></i> Design Patterns\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/what-is-pattern\">\n                What is a Pattern\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/what-is-pattern\">\n                What's a design pattern?\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/history\">\n                History of patterns\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/why-learn-patterns\">\n                Why should I learn patterns?\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/criticism\">\n                Criticism of patterns\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/classification\">\n                Classification of patterns\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/catalog\">\n                Catalog\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-third-level\">\n            <a href=\"/design-patterns/creational-patterns\">\n                Creational Patterns\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/factory-method\">\n                Factory Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/abstract-factory\">\n                Abstract Factory\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/builder\">\n                Builder\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/prototype\">\n                Prototype\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/singleton\">\n                Singleton\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"menu-third-level\">\n            <a href=\"/design-patterns/structural-patterns\">\n                Structural Patterns\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/adapter\">\n                Adapter\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/bridge\">\n                Bridge\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/composite\">\n                Composite\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/decorator\">\n                Decorator\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/facade\">\n                Facade\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/flyweight\">\n                Flyweight\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/proxy\">\n                Proxy\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"menu-third-level trail\">\n            <a href=\"/design-patterns/behavioral-patterns\">\n                Behavioral Patterns\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/chain-of-responsibility\">\n                Chain of Responsibility\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/command\">\n                Command\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/iterator\">\n                Iterator\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/mediator\">\n                Mediator\n            </a>\n    \n    \n            </li>\n                                <li class=\"trail active\">\n            <a href=\"/design-patterns/memento\">\n                Memento\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/observer\">\n                Observer\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/state\">\n                State\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/strategy\">\n                Strategy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/template-method\">\n                Template Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/visitor\">\n                Visitor\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"menu-code-examples\">\n            <a href=\"/design-patterns/examples\">\n                Code Examples\n            </a>\n    \n            <ul >\n                            <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/csharp\">\n                C#\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/cpp\">\n                C++\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/go\">\n                Go\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/java\">\n                Java\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/php\">\n                PHP\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/python\">\n                Python\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/ruby\">\n                Ruby\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/rust\">\n                Rust\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/swift\">\n                Swift\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/typescript\">\n                TypeScript\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n                </div>\n\n            <div class=\"main-menu-aux-controls\">\n                <a href=\"https://refactoring.guru/login\" title=\"Sign in\" style=\" display: inline-flex; align-items: center; gap: 6px; \"><svg style=\"width: 16px; height: 16px; filter:drop-shadow(0 1px 1px #74261e)\" class=\"inline-block mx-0\"  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\"opacity=\"0.4\" d=\"M352.7 222.4c3.2 1 6.5 1.6 10 1.6l21.3 0c17.7 0 32 14.3 32 32s-14.3 32-32 32l-21.3 0c-.8 0-1.7 0-2.5 0c-.9 0-1.7-.1-2.5-.1c-1.7-.1-3.4-.2-5-.4C357.4 414 391.1 512 432 512c44.2 0 80-114.6 80-256S476.2 0 432 0c-40.6 0-74.2 96.9-79.3 222.4z\"/><path fill=\"currentColor\"class=\"fa-primary\" d=\"M320 48a48 48 0 1 0 -96 0 48 48 0 1 0 96 0zM125.7 175.5c9.9-9.9 23.4-15.5 37.5-15.5c1.9 0 3.8 .1 5.6 .3L137.6 254c-9.3 28 1.7 58.8 26.8 74.5l86.2 53.9-25.4 88.8c-4.9 17 5 34.7 22 39.6s34.7-5 39.6-22l28.7-100.4c5.9-20.6-2.6-42.6-20.7-53.9L238 299l30.9-82.4 5.1 12.3C289 264.7 323.9 288 362.7 288l21.3 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-21.3 0c-12.9 0-24.6-7.8-29.5-19.7l-6.3-15c-14.6-35.1-44.1-61.9-80.5-73.1l-48.7-15c-11.1-3.4-22.7-5.2-34.4-5.2c-31 0-60.8 12.3-82.7 34.3L57.4 153.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l23.1-23.1zM91.2 352L32 352c-17.7 0-32 14.3-32 32s14.3 32 32 32l69.6 0c19 0 36.2-11.2 43.9-28.5L157 361.6l-9.5-6c-17.5-10.9-30.5-26.8-37.9-44.9L91.2 352z\"/></svg> Sign in</a>\n                <a href=\"https://feedback.refactoring.guru/\" class=\"userecho-public\" rel=\"nofollow\" title=\"Contact us\"><i class=\"fa fa-fw fa-fw fa-envelope\" aria-hidden=\"true\"></i> Contact us</a>\n            </div>\n        </div>\n    </div>\n</aside>\n\n    <nav class=\"navigation\" role=\"navigation\">\n    <div class=\"navigation-container\">\n        <a class=\"navigation-brand\" href=\"/\">\n            <img alt=\"Refactoring.Guru\"\n                 src=\"/images/content-public/logos/logo-new-mobile.png?id=ea18aa9b032eaa92835ed6d472b03b4a\"\n                 srcset=\"/images/content-public/logos/logo-new-mobile-2x.png?id=7ad5648bfd86ae2e8524147a72877c64 2x\">\n        </a>\n\n        <div class=\"shop-link d-none d-lg-block\" style=\"display: none !important;\">\n            <a class=\"btn btn-md btn-primary btn-featured\" href=\"/store\"><svg style=\"width: 28px; height: 28px; fill: currentColor; display: inline-block; margin-top: -14px;\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><!--! Font Awesome Pro 6.3.0 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2023 Fonticons, Inc. --><path d=\"M356 60l60 20-60 20-20 60-20-60L256 80l60-20L336 0l20 60zM464 208l48 16-48 16-16 48-16-48-48-16 48-16 16-48 16 48zm-243.8-9.8l33 66.9 73.8 10.7 59.8 8.7-43.3 42.2-53.4 52.1 12.6 73.5L313 512l-53.5-28.1-66-34.7-66 34.7L73.9 512l10.2-59.6 12.6-73.5L43.3 326.8 0 284.6l59.8-8.7 73.8-10.7 33-66.9L193.5 144l26.8 54.2zm26.1 114.4l-25-3.6-11.2-22.6-16.7-33.9-16.7 33.9L165.6 309l-25 3.6-37.4 5.4 27.1 26.4 18.1 17.6L144 387l-6.4 37.3 33.5-17.6 22.3-11.7 22.3 11.7 33.5 17.6L242.9 387l-4.3-24.9 18.1-17.6 27.1-26.4-37.4-5.4z\"/></svg>\n                Shop Now!</a>\n        </div>\n\n        <ul class=\"navigation-menu\">\n                            <li class=\"nav-locale dropdown dropdown-locales\">\n                    <button class=\"dropdown-toggle\" id=\"dropdownLanguage\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                        <i class=\"fa fa-fw fa-globe\" aria-hidden=\"true\"></i> <span class=\"caption d-none d-lg-inline-block\">English</span>\n                    </button>\n                    <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownLanguage\">\n                                                                                                                        <a href=\"https://refactoring.guru/design-patterns/memento\" class=\"dropdown-item locale-link active\" data-locale=\"en\" title=\"English\">English</a>\n                                                                                                                                <a href=\"https://refactoring.guru/es/design-patterns/memento\" class=\"dropdown-item locale-link \" data-locale=\"es\" title=\"Español\">Español</a>\n                                                                                                                                <a href=\"https://refactoring.guru/fr/design-patterns/memento\" class=\"dropdown-item locale-link \" data-locale=\"fr\" title=\"Français\">Français</a>\n                                                                                                                                <a href=\"https://refactoring.guru/ja/design-patterns/memento\" class=\"dropdown-item locale-link \" data-locale=\"ja\" title=\"日本語\">日本語</a>\n                                                                                                                                <a href=\"https://refactoring.guru/ko/design-patterns/memento\" class=\"dropdown-item locale-link \" data-locale=\"ko\" title=\"한국어\">한국어</a>\n                                                                                                                                <a href=\"https://refactoring.guru/pl/design-patterns/memento\" class=\"dropdown-item locale-link \" data-locale=\"pl\" title=\"Polski\">Polski</a>\n                                                                                                                                <a href=\"https://refactoring.guru/pt-br/design-patterns/memento\" class=\"dropdown-item locale-link \" data-locale=\"pt-br\" title=\"Português Brasileiro\">Português Brasileiro</a>\n                                                                                                                                <a href=\"https://refactoring.guru/ru/design-patterns/memento\" class=\"dropdown-item locale-link \" data-locale=\"ru\" title=\"Русский\">Русский</a>\n                                                                                                                                <a href=\"https://refactoring.guru/uk/design-patterns/memento\" class=\"dropdown-item locale-link \" data-locale=\"uk\" title=\"Українська\">Українська</a>\n                                                                                                                                <a href=\"https://refactoringguru.cn/design-patterns/memento\" class=\"dropdown-item locale-link \" data-locale=\"zh\" title=\"中文\">中文</a>\ndiv>\n                </li>\n                        <li class=\"nav-contacts\">\n                <a class=\"userecho-private\" href=\"https://feedback.refactoring.guru/?show_feedback_form_private=true\" rel=\"nofollow\" title=\"Contact us\">\n                    <i class=\"fa fa-fw fa-envelope\" aria-hidden=\"true\"></i> <span class=\"caption d-none d-xl-inline-block\">Contact us</span>\n                </a>\n            </li>\n                            <li class=\"nav-user\">\n                    <a href=\"https://refactoring.guru/login\" title=\"Sign in\"><span class=\"sign-in-icon\"><svg style=\"width: 24px; height: 24px; \" class=\"inline-block \"  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\"opacity=\"0.4\" d=\"M352.7 222.4c3.2 1 6.5 1.6 10 1.6l21.3 0c17.7 0 32 14.3 32 32s-14.3 32-32 32l-21.3 0c-.8 0-1.7 0-2.5 0c-.9 0-1.7-.1-2.5-.1c-1.7-.1-3.4-.2-5-.4C357.4 414 391.1 512 432 512c44.2 0 80-114.6 80-256S476.2 0 432 0c-40.6 0-74.2 96.9-79.3 222.4z\"/><path fill=\"currentColor\"class=\"fa-primary\" d=\"M320 48a48 48 0 1 0 -96 0 48 48 0 1 0 96 0zM125.7 175.5c9.9-9.9 23.4-15.5 37.5-15.5c1.9 0 3.8 .1 5.6 .3L137.6 254c-9.3 28 1.7 58.8 26.8 74.5l86.2 53.9-25.4 88.8c-4.9 17 5 34.7 22 39.6s34.7-5 39.6-22l28.7-100.4c5.9-20.6-2.6-42.6-20.7-53.9L238 299l30.9-82.4 5.1 12.3C289 264.7 323.9 288 362.7 288l21.3 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-21.3 0c-12.9 0-24.6-7.8-29.5-19.7l-6.3-15c-14.6-35.1-44.1-61.9-80.5-73.1l-48.7-15c-11.1-3.4-22.7-5.2-34.4-5.2c-31 0-60.8 12.3-82.7 34.3L57.4 153.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l23.1-23.1zM91.2 352L32 352c-17.7 0-32 14.3-32 32s14.3 32 32 32l69.6 0c19 0 36.2-11.2 43.9-28.5L157 361.6l-9.5-6c-17.5-10.9-30.5-26.8-37.9-44.9L91.2 352z\"/></svg></span> <span class=\"account-icon\" style=\"display:none\"><svg style=\"width: 24px; height: 24px; \" class=\"inline-block \"  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 576 512\"><path fill=\"currentColor\"opacity=\"0.4\" d=\"M64 270.5l224-196c74.7 65.4 149.4 130.7 224.1 196.1l.4 177.3c.1 35.4-28.6 64.1-64 64.1l-320.4 0c-35.3 0-64-28.6-64-64L64 270.5zM176.1 433.6c.1 .5 .1 1.1 .2 1.6c.2 1 .5 2 .9 3c.8 1.9 2 3.6 3.4 5.1c2.9 2.9 6.9 4.7 11.3 4.7l192 0c8.8 0 16-7.2 16-16c0-44.2-35.8-80-80-80l-64 0c-22.1 0-42.1 9-56.6 23.4c-7.2 7.2-13.1 15.9-17.1 25.4c-2 4.8-3.6 9.8-4.7 15c-.5 2.6-.9 5.3-1.2 7.9c-.1 1.3-.2 2.7-.3 4.1c-.1 1.4-.1 2.7-.1 4.1c0 .6 0 1.1 .1 1.6zm48.2-184.2c-.1 1.1-.2 2.2-.2 3.2c-.1 1.1-.1 2.2-.1 3.3s0 2.2 .1 3.3c.1 1.1 .1 2.2 .2 3.2c.2 2.1 .5 4.3 1 6.4c.9 4.2 2.1 8.2 3.7 12c3.2 7.7 7.9 14.6 13.7 20.3C254.3 312.8 270.3 320 288 320c35.3 0 64-28.7 64-64s-28.7-64-64-64c-17.7 0-33.7 7.2-45.3 18.7c-5.8 5.8-10.5 12.7-13.7 20.3c-1.6 3.8-2.9 7.8-3.7 12c-.4 2.1-.8 4.2-1 6.4z\"/><path fill=\"currentColor\"class=\"fa-primary\" d=\"M309.1 7.9C297-2.6 279-2.6 266.9 7.9l-256 224c-13.3 11.6-14.6 31.9-3 45.2s31.9 14.6 45.2 3L288 74.5 522.9 280.1c13.3 11.6 33.5 10.3 45.2-3s10.3-33.5-3-45.2L512 185.5 512 64c0-17.7-14.3-32-32-32l-32 0c-17.7 0-32 14.3-32 32l0 37.5L309.1 7.9zM352 256a64 64 0 1 0 -128 0 64 64 0 1 0 128 0zm-96 96c-44.2 0-80 35.8-80 80c0 8.8 7.2 16 16 16l192 0c8.8 0 16-7.2 16-16c0-44.2-35.8-80-80-80l-64 0z\"/></svg></span> <span class=\"sign-out-icon\" style=\"display:none\"><svg style=\"width: 24px; height: 24px; \" class=\"inline-block \"  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\"opacity=\"0.4\" d=\"M0 256C0 397.4 35.8 512 80 512c25.3 0 47.8-37.5 62.5-96L128 416c-.5 0-1.1 0-1.6 0c-.6 0-1.1-.1-1.6-.1c-1.1-.1-2.1-.3-3.2-.5c-2.1-.4-4.1-1.1-6-1.9c-3.8-1.6-7.3-4-10.2-6.9s-5.2-6.3-6.9-10.2c-.8-1.9-1.4-3.9-1.9-6c-.2-1.1-.4-2.3-.5-3.5c0-.3 0-.6-.1-.8c0-.2 0-.4 0-.7c0-.4 0-.7 0-.7c0-.5 0-.7 0-.9c0-.3 0-.6 0-.9c0 0 0-.3 0-.7c0-.2 0-.4 0-.7c0-.2 0-.4 .1-.8c0-.3 .1-.6 .1-.9c0-.2 .1-.4 .1-.7c.1-.8 .2-1.2 .3-1.7c.5-2.2 1.1-4.2 1.9-6.1c1.6-3.8 4-7.3 6.9-10.2c5.8-5.8 13.8-9.4 22.6-9.4l26.2 0c3.8-29.6 5.8-62.1 5.8-96c0-18.3-.6-36.1-1.7-53.4c-1.7-1.2-3.4-2.5-4.9-4c-.8-.8-1.6-1.6-2.2-2.5s-1.3-1.7-1.9-2.6c-1.2-1.8-2.1-3.6-2.9-5.5s-1.4-3.9-1.8-5.9c-.2-1-.3-2-.4-3s-.1-2-.2-3c0-8.3 3.1-16.5 9.4-22.8C141 63.1 112.8 0 80 0C35.8 0 0 114.6 0 256z\"/><path fill=\"currentColor\"class=\"fa-primary\" d=\"M416 48a48 48 0 1 0 -96 0 48 48 0 1 0 96 0zM221.7 175.5c9.9-9.9 23.4-15.5 37.5-15.5c1.9 0 3.8 .1 5.6 .3L233.6 254c-9.3 28 1.7 58.8 26.8 74.5l86.2 53.9-25.4 88.8c-4.9 17 5 34.7 22 39.6s34.7-5 39.6-22l28.7-100.4c5.9-20.6-2.6-42.6-20.7-53.9L334 299l30.9-82.4 5.1 12.3C385 264.7 419.9 288 458.7 288l21.3 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-21.3 0c-12.9 0-24.6-7.8-29.5-19.7l-6.3-15c-14.6-35.1-44.1-61.9-80.5-73.1l-48.7-15c-11.1-3.4-22.7-5.2-34.4-5.2c-31 0-60.8 12.3-82.7 34.3l-23.1 23.1c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l23.1-23.1zM187.2 352L128 352c-17.7 0-32 14.3-32 32s14.3 32 32 32l69.6 0c19 0 36.2-11.2 43.9-28.5L253 361.6l-9.5-6c-17.5-10.9-30.5-26.8-37.9-44.9L187.2 352z\"/></svg></span> <span class=\"caption d-none d-xl-inline-block\">Sign in</span></a>\n                </li>\n                        <li class=\"nav-menu\">\n                <button class=\"navigation-toggle\"><i class=\"fa fa-fw fa-bars\" aria-hidden=\"true\"></i></button>\n            </li>\n        </ul>\n    </div>\n</nav>\n\n    <footer class=\"footer center-content\">\n    <div class=\"footer-container center-content-container\">\n        <div class=\"footer-inner container-fluid\">\n            <div class=\"row\">\n                <div class=\"col-8 col-md-10\">\n                    <ul class=\"footer-list footer-list-horizontal\">\n                        <li><a href=\"/\">Home</a></li>\n                        <li><a href=\"/refactoring\">Refactoring</a></li>\n                        <li><a href=\"/design-patterns\">Design Patterns</a></li>\n                        <li><a href=\"/store\">Premium Content</a></li>\n                        <li><a href=\"https://gitbybit.com/\">Git Course</a></li>\n                        <li><a href=\"https://refactoring.userecho.com/\" rel=\"nofollow\" class=\"userecho-public\">Forum</a></li>\n                        <li><a href=\"https://refactoring.userecho.com/\" rel=\"nofollow\" class=\"userecho-private\">Contact us</a></li>\n                    </ul>\n                </div>\n                <div class=\"col-4 col-md-2\">\n                    <ul class=\"footer-list footer-list-iconic footer-list-right\">\n                                                    <li><a href=\"https://www.facebook.com/refactoring.guru\"><i class=\"fa fa-facebook-official\"></i></a></li>\n                                                <li><a href=\"/sendy/form\" rel=\"nofollow\"><i class=\"fa fa-envelope\" aria-hidden=\"true\"></i></a></li>\n                        <li><a href=\"https://github.com/RefactoringGuru\"><i class=\"fa fa-github-circled\"></i></a></li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"footer-second\">\n        <div class=\"footer-container center-content-container\">\n            <div class=\"footer-inner container-fluid\">\n                <div class=\"row\">\n                    <div class=\"col-12 col-sm-6\">\n                        <i class=\"fa fa-fw fa-copyright\"></i> 2014-2025 <a href=\"/\">Refactoring.Guru</a>. <span style=\"white-space: nowrap\">All rights reserved.</span><br>\n                        <i class=\"fa fa-fw fa-image\"></i> Illustrations by <a href=\"http://zhart.us/\" rel=\"nofollow\"><span style=\"white-space: nowrap\">Dmitry Zhart</span></a>\n                    </div>\n                    <div class=\"footer-links-right col-12 col-sm-6 mt-4 mt-sm-0\">\n                        <ul class=\"footer-list footer-list-horizontal footer-list-right\">\n                            <li><a href=\"/terms\"><span>Terms &amp; Conditions</span></a>\n                            </li>\n                            <li><a href=\"/privacy-policy\"><span>Privacy Policy</span></a>\n                            </li>\n                            <li><a href=\"/content-usage-policy\"><span>Content Usage Policy</span></a>\n                            </li>\n                            <li><a href=\"/site-about\"><span>About us</span></a>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n                                    <div class=\"row\">\n                        <div class=\"col-12 col-sm-4\">\n                            <div class=\"mt-4\">\n                                                                    <b>Ukrainian office:</b><br>\n                                    <object class=\"fa-fw\" style=\"height: 0.8rem; filter: invert(50%);\"  type=\"image/svg+xml\" data=\"/images/content-public/icons/fa-building.svg?id=afddb5806968b0a9acfc1df75a181234\">\n                                        <img class=\"fa-fw\" style=\"height: 0.8rem;\" src=\"/images/content-public/icons/fa-building.svg?id=afddb5806968b0a9acfc1df75a181234\" alt=\"Organization address\"/>\n                                    </object> FOP Olga Skobeleva<br>\n                                    <svg style=\"width: 16px; height: 16px; margin-right: 1px; fill: currentColor;\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\"><path d=\"M352 192c0-88.4-71.6-160-160-160S32 103.6 32 192c0 15.6 5.4 37 16.6 63.4c10.9 25.9 26.2 54 43.6 82.1c34.1 55.3 74.4 108.2 99.9 140c25.4-31.8 65.8-84.7 99.9-140c17.3-28.1 32.7-56.3 43.6-82.1C346.6 229 352 207.6 352 192zm32 0c0 87.4-117 243-168.3 307.2c-12.3 15.3-35.1 15.3-47.4 0C117 435 0 279.4 0 192C0 86 86 0 192 0S384 86 384 192zm-240 0a48 48 0 1 0 96 0 48 48 0 1 0 -96 0zm48 80a80 80 0 1 1 0-160 80 80 0 1 1 0 160z\"/></svg> Abolmasova 7<br>\n                                    <span style=\"margin-left: 21px;\">Kyiv, Ukraine, 02002</span><br>\n                                    <i class=\"fa fa-fw fa-envelope\"></i>  Email: support@refactoring.guru\n                                \n                            </div>\n                        </div>\n                        <div class=\"col-12 col-sm-4\">\n                            <div class=\"mt-4\">\n                                <b>Spanish office:</b><br>\n                                <object class=\"fa-fw\" style=\"height: 0.8rem; filter: invert(50%);\"  type=\"image/svg+xml\" data=\"/images/content-public/icons/fa-building.svg?id=afddb5806968b0a9acfc1df75a181234\">\n                                    <img class=\"fa-fw\" style=\"height: 0.8rem;\" src=\"/images/content-public/icons/fa-building.svg?id=afddb5806968b0a9acfc1df75a181234\" alt=\"Organization address\"/>\n                                </object> Oleksandr Shvets<br>\n                                <svg style=\"width: 16px; height: 16px; margin-right: 1px; fill: currentColor;\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\"><path d=\"M352 192c0-88.4-71.6-160-160-160S32 103.6 32 192c0 15.6 5.4 37 16.6 63.4c10.9 25.9 26.2 54 43.6 82.1c34.1 55.3 74.4 108.2 99.9 140c25.4-31.8 65.8-84.7 99.9-140c17.3-28.1 32.7-56.3 43.6-82.1C346.6 229 352 207.6 352 192zm32 0c0 87.4-117 243-168.3 307.2c-12.3 15.3-35.1 15.3-47.4 0C117 435 0 279.4 0 192C0 86 86 0 192 0S384 86 384 192zm-240 0a48 48 0 1 0 96 0 48 48 0 1 0 -96 0zm48 80a80 80 0 1 1 0-160 80 80 0 1 1 0 160z\"/></svg> Avda Pamplona 64<br>\n                                <span style=\"margin-left: 21px;\">Pamplona, Spain, 31009</span><br>\n                                <i class=\"fa fa-fw fa-envelope\"></i>  Email: support@refactoring.guru\n                            </div>\n                        </div>\n                    </div>\n                            </div>\n        </div>\n    </div>\n</footer>\n\n</div>\n\n\n    <script defer>\n    var CodeMirrorScripts = [\"/js/codemirror.min.js?id=f7ae4adf14bd00338caf8e95da733cc9\"];\n</script>\n\n\n\n    <script>window.loadContent = true;window.loadCart = true;</script>\n</body>\n</html>\n"},
{"title": null, "url": "https://refactoring.guru/design-patterns/mediator", "raw_html": "<!DOCTYPE html>\n<html lang=\"en\" dir=\"ltr\">\n<head prefix=\"og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# website: http://ogp.me/ns/website#\">\n    <meta charset=\"utf-8\">\n    <title>Mediator</title>\n\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n    <meta name=\"theme-color\" content=\"#A2E2FD\" />\n\n            <style>\n        .buy-widget-excl-local-taxes {\n            display: none;\n        }\n    </style>\n    \n    <link rel=\"preload\" href=\"/fonts/PTSans/ptsans-regular_en.woff2?1\" as=\"font\" type=\"font/woff2\" crossorigin>\n    <link rel=\"preload\" href=\"/fonts/PTSans/ptsans-bold_en.woff2?1\" as=\"font\" type=\"font/woff2\" crossorigin>\n        <link rel=\"preload\" href=\"/fonts/fontello/fontawesome.woff2?15843843\" as=\"font\" type=\"font/woff2\" crossorigin>\n    <link rel=\"preload\" href=\"/fonts/FiraCode/woff2/FiraCode-Regular_latin.woff2\" as=\"font\" type=\"font/woff2\" crossorigin>\n        <link rel=\"preconnect dns-prefetch\" href=\"https://cdn.paddle.com\">\n    <link rel=\"preconnect dns-prefetch\" href=\"https://www.googletagmanager.com\">\n\n    <link rel=\"alternate\" href=\"https://refactoring.guru/design-patterns/mediator\" hreflang=\"x-default\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/es/design-patterns/mediator\" hreflang=\"es\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/fr/design-patterns/mediator\" hreflang=\"fr\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/ja/design-patterns/mediator\" hreflang=\"ja\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/ko/design-patterns/mediator\" hreflang=\"ko\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/pl/design-patterns/mediator\" hreflang=\"pl\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/pt-br/design-patterns/mediator\" hreflang=\"pt-br\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/ru/design-patterns/mediator\" hreflang=\"ru\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/uk/design-patterns/mediator\" hreflang=\"uk\"/>\n    <link rel=\"alternate\" href=\"https://refactoringguru.cn/design-patterns/mediator\" hreflang=\"zh\"/>\n\n    <meta name=\"description\" content=\"Mediator is a behavioral design pattern that lets you reduce chaotic dependencies between objects. The pattern restricts direct communications between the objects and forces them to collaborate only via a mediator object.\">\n\n    <link rel=\"canonical\" href=\"https://refactoring.guru/design-patterns/mediator\"/>\n\n    <link rel=\"icon\" type=\"image/x-icon\" href=\"/favicon.png\"/>\n\n        <meta property=\"fb:app_id\" content=\"666819623386327\"/>\n        <meta property=\"og:type\" content=\"website\"/>\n        <meta property=\"og:image\" content=\"https://refactoring.guru/images/refactoring/social/facebook-share-preview.png?id=dbf9e98269595be86eb668f365be6868\"/>\n    \n                    <link rel=\"stylesheet\" href=\"/css/public-packed.min.css?id=aaefab4da343b914b8dda9973604a9e8\">\n        <style type=\"text/css\">\n                    @font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_cyrillic-ext.woff2?1) format(\"woff2\");unicode-range:U+0460-052F,U+1C80-1C88,U+20B4,U+2DE0-2DFF,U+A640-A69F,U+FE2E-FE2F}@font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_cyrillic.woff2?1) format(\"woff2\");unicode-range:U+0400-045F,U+0490-0491,U+04B0-04B1,U+2116}@font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_latin-ext.woff2?1) format(\"woff2\");unicode-range:U+0100-024F,U+0259,U+1E00-1EFF,U+2020,U+20A0-20AB,U+20AD-20CF,U+2113,U+2C60-2C7F,U+A720-A7FF}@font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_latin.woff2?1) format(\"woff2\");unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}@font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_en.woff2?1) format(\"woff2\");unicode-range:U+0-FF,U+131,U+142,U+152,U+153,U+2BB,U+2BC,U+2C6,U+2DA,U+2DC,U+420,U+423,U+430,U+438-43A,U+43D,U+440,U+441,U+443,U+44C,U+457,U+2000-206F,U+2074,U+20AA-20AC,U+20B4,U+20B9,U+20BA,U+20BD,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_cyrillic-ext.woff2?1) format(\"woff2\");unicode-range:U+0460-052F,U+1C80-1C88,U+20B4,U+2DE0-2DFF,U+A640-A69F,U+FE2E-FE2F}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_cyrillic.woff2?1) format(\"woff2\");unicode-range:U+0400-045F,U+0490-0491,U+04B0-04B1,U+2116}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_latin-ext.woff2?1) format(\"woff2\");unicode-range:U+0100-024F,U+0259,U+1E00-1EFF,U+2020,U+20A0-20AB,U+20AD-20CF,U+2113,U+2C60-2C7F,U+A720-A7FF}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_latin.woff2?1) format(\"woff2\");unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_en.woff2?1) format(\"woff2\");unicode-range:U+0-FF,U+131,U+142,U+152,U+153,U+2BB,U+2BC,U+2C6,U+2DA,U+2DC,U+420,U+423,U+430,U+438-43A,U+43D,U+440,U+441,U+443,U+44C,U+457,U+2000-206F,U+2074,U+20AA-20AC,U+20B4,U+20B9,U+20BA,U+20BD,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}\n            </style>\n\n    \n            <script defer src=\"/js/public.min.js?id=1f19fe18ffe0fc844ede8a0f2ee64202\"></script>\n        <script defer src=\"/js/checkout.min.js?id=b4da9c5bd8b1cf504447c07ae8b7cd44\"></script>\n            <script defer src=\"https://cdn.paddle.com/paddle/v2/paddle.js\"></script>\n    <script async src=\"https://www.googletagmanager.com/gtag/js?id=G-SR8Y3GYQYC\"></script>\n\n    <script type=\"application/ld+json\">\n        {\"@context\": \"http://schema.org\", \"@graph\": [{\"@type\":\"Person\",\"@id\":\"https://refactoring.guru/#founder\",\"name\":\"Alexander Shvets\"},{\"@type\":\"Organization\",\"@id\":\"https://refactoring.guru/#organization\",\"name\":\"Refactoring.Guru\",\"description\":\"Refactoring.Guru makes it easy for you to discover everything you need to know about refactoring, design patterns, SOLID principles, and other smart programming topics.\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https://refactoring.guru/#organizationlogo\",\"url\":\"https://refactoring.guru/images/content-public/logos/logo-plain.png\",\"caption\":\"Refactoring.Guru\"},\"logo\":{\"@id\":\"https://refactoring.guru/#organizationlogo\"},\"founder\":{\"@id\":\"https://refactoring.guru/#founder\"},\"sameAs\":[\"https://www.facebook.com/refactoring.guru\",\"https://twitter.com/RefactoringGuru\",\"https://github.com/RefactoringGuru\"]},{\"@type\":\"WebSite\",\"@id\":\"https://refactoring.guru/#website\",\"url\":\"https://refactoring.guru/\",\"name\":\"Refactoring.Guru\",\"description\":\"Refactoring.Guru makes it easy for you to discover everything you need to know about refactoring, design patterns, SOLID principles, and other smart programming topics.\",\"author\":{\"@id\":\"https://refactoring.guru/#founder\"},\"publisher\":{\"@id\":\"https://refactoring.guru/#organization\"},\"copyrightYear\":2014},{\"@type\":\"WebPage\",\"@id\":\"https://refactoring.guru/design-patterns/mediator#webpage\",\"url\":\"https://refactoring.guru/design-patterns/mediator\",\"inLanguage\":\"en\",\"name\":\"Mediator\",\"description\":\"Mediator is a behavioral design pattern that lets you reduce chaotic dependencies between objects. The pattern restricts direct communications between the objects and forces them to collaborate only via a mediator object.\",\"isPartOf\":{\"@id\":\"https://refactoring.guru#website\"},\"breadcrumb\":{\"@id\":\"https://refactoring.guru/design-patterns/mediator#breadcrumb\"},\"primaryImageOfPage\":{\"@id\":\"https://refactoring.guru/design-patterns/mediator#primaryimage\"},\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https://refactoring.guru/design-patterns/mediator#primaryimage\",\"url\":\"https://refactoring.guru/images/patterns/content/mediator/mediator-3x.png\",\"width\":1920,\"height\":1200}},{\"@type\":\"Article\",\"@id\":\"https://refactoring.guru/design-patterns/mediator#article\",\"isPartOf\":{\"@id\":\"https://refactoring.guru/design-patterns/mediator#webpage\"},\"mainEntityOfPage\":{\"@id\":\"https://refactoring.guru/design-patterns/mediator#webpage\"},\"author\":{\"@id\":\"https://refactoring.guru#founder\"},\"publisher\":{\"@id\":\"https://refactoring.guru#organization\"},\"headline\":\"Mediator\",\"datePublished\":\"2024-01-01\",\"dateModified\":\"2025-01-01\",\"articleSection\":\"Design Patterns\",\"image\":{\"@id\":\"https://refactoring.guru/design-patterns/mediator#primaryimage\"}},{\"@type\":\"BreadcrumbList\",\"@id\":\"https://refactoring.guru/design-patterns/mediator#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https://refactoring.guru\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Design Patterns\",\"item\":\"https://refactoring.guru/design-patterns\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"Behavioral Patterns\",\"item\":\"https://refactoring.guru/design-patterns/behavioral-patterns\"}]}] }\n    </script>\n\n    <script>\nfunction extend(){var extended={};var deep=false;var i=0;var length=arguments[\"length\"];if(Object[\"prototype\"][\"toString\"][\"call\"](arguments[0])=== '[object Boolean]'){deep= arguments[0];i++};var merge=function(obj){for(var prop in obj){if(Object[\"prototype\"][\"hasOwnProperty\"][\"call\"](obj,prop)){if(deep&& Object[\"prototype\"][\"toString\"][\"call\"](obj[prop])=== '[object Object]'){extended[prop]= extend(true,extended[prop],obj[prop])}else {extended[prop]= obj[prop]}}}};for(;i< length;i++){var obj=arguments[i];merge(obj)};return extended}\nfunction defer(method) {if (window.jQuery) {method();} else {setTimeout(function() { defer(method) }, 50);}}\n</script>\n<script>\n+function(sd){sd = (typeof sd === \"string\") ? JSON.parse(atob(sd)) : sd;for(var property in sd){if(window[property]!== null&&  typeof window[property]=== 'object'){window[property]= extend(true,window[property],sd[property])}else {window[property]= sd[property]}}}(\"eyJsb2NhbGUiOiJlbiIsImxvY2FsZV9wcmVmaXgiOiIiLCJsb2NhbGl6ZWRfdXJsX3ByZWZpeCI6Imh0dHBzOlwvXC9yZWZhY3RvcmluZy5ndXJ1XC8iLCJ1cmxfcHJlZml4IjoiaHR0cHM6XC9cL3JlZmFjdG9yaW5nLmd1cnVcLyIsImxvY2FsaXplZF91cmxfcHJlZml4X20iOiJodHRwczpcL1wvcmVmYWN0b3JpbmcuZ3VydVwvIiwidXJsX3ByZWZpeF9tIjoiaHR0cHM6XC9cL3JlZmFjdG9yaW5nLmd1cnVcLyIsInVzZXJfZWNob19hbGlhcyI6InJlZmFjdG9yaW5nIiwidXNlcl9lY2hvX2hvc3QiOiJmZWVkYmFjay5yZWZhY3RvcmluZy5ndXJ1IiwidXNlcl9lY2hvX3ByaXZhdGVfZm9ydW0iOiIyIiwidXNlcl9lY2hvX2xvY2FsZSI6ImVuIiwidXNlcl9lY2hvX3B1YmxpY19mb3J1bSI6IjMiLCJ1c2VyX2VjaG9fcHVibGljX2ZvcnVtX3VybCI6Imh0dHBzOlwvXC9mZWVkYmFjay5yZWZhY3RvcmluZy5ndXJ1XC8iLCJ1c2VyX2VjaG9fc3NvX3Rva2VuIjoiIn0=\");\n</script>\n\n<script>\n    window.dataLayer = window.dataLayer || [];\n    function gtag(){dataLayer.push(arguments);}\n    gtag('js', new Date());\n            gtag('set', 'linker', {'domains': [\"refactoring.guru,refactoringguru.cn\"]});\n        gtag('config', 'G-SR8Y3GYQYC', {\n        // Disable default page view, because we're going to report them on our own.\n        // This is done to report traffic on localized domains as part of the main website traffic\n        // See the Chinese overrides below.\n        send_page_view: false,\n    });\n</script>\n\n<script>\n    (() => {\n        // On first page view after returning from social network, we need to send the social login event.\n        (function detectSocialLogin() {\n            let getCookie = function (name) {\n                var nameEQ = name + \"=\";\n                var ca = document.cookie.split(';');\n                for (var i = 0; i < ca.length; i++) {\n                    var c = ca[i];\n                    while (c.charAt(0) == ' ') c = c.substring(1, c.length);\n                    if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);\n                }\n                return null;\n            };\n            window.social_login_provider = window.social_login_provider || getCookie('social_login_provider');\n            if (window.social_login_provider) {\n                gtag('set', {referrer: null});\n                gtag('event', 'login', {\"method\": window.social_login_provider});\n                // Delete cookie.\n                document.cookie = 'social_login_provider=; Path=/; Max-Age=-99999999;';\n            }\n        })();\n\n        function trackPageView(location, title) {\n            location = location || document.location.href;\n            title = title || document.title;\n\n            // This is show on https://refactoringguru.cn/ and alike.\n            if (typeof window.analytics_path_prefix === 'string') {\n                if (/^(https?:\\/\\/[^\\/]+?)\\/$/.test(location)) {\n                    location = location.replace(/(https?:\\/\\/[^\\/]+?)\\//, '$1' + window.analytics_path_prefix);\n                } else {\n                    location = location.replace(/(https?:\\/\\/[^\\/]+?)\\//, '$1' + window.analytics_path_prefix + '/');\n                }\n                gtag('set', {\n                    'page_location': location\n                });\n            }\n\n            // This is show on https://refactoring.guru/zh/login and alike.\n            if (typeof window.analytics_location_prefix === 'string') {\n                location = location.replace(/(https?:\\/\\/[^\\/]+?)\\//, window.analytics_location_prefix);\n                gtag('set', {\n                    'page_location': location\n                });\n            }\n\n            gtag('event', 'page_view', {\n                page_location: location,\n                page_title: title,\n                locale: window.locale ?? 'en'\n            });\n        }\n\n        if (window.loadContent) {\n            window.onPageLoad = window.onPageLoad || [];\n            window.onPageLoad.push({\n                func: function (context) {\n                    trackPageView(window.location.origin + context.canonicalPath, context.title);\n                },\n                afterAll: true,\n            });\n        }\n        else {\n            trackPageView();\n        }\n    })();\n</script>\n\n\n</head>\n<body class=\"locale-en   announcement   mediator\" data-body_class=\"mediator\">\n\n<div class=\"body-holder\">\n\n            <div class=\"announcement-block announcement-block-summer prom\" data-id=\"DIDP-announcement\" data-creative-id=\"en\" data-position=\"top\">\n        <span class=\"beach-and-sea\">\n            <span class=\"a1\"></span>\n            <span class=\"a2\"><span class=\"wave\"></span></span>\n            <span class=\"yacht\"></span>\n        </span>\n        <a href=\"/store\">\n            <img src=\"/images/content-public/ann/summer/sunbed.svg?id=b1e7314a63715a13870a6bd1a43613f7\" loading=\"lazy\" style=\"width: 32px; height:32px;vertical-align: middle; scale: -1 1 1;\">\n            <span class=\"announcement-link-text\">Summer SALE</span>\n            <img src=\"/images/content-public/ann/summer/reading-book.svg?id=36006ea720df8c171968cf613e8ea164\" loading=\"lazy\" style=\"width: 32px; height:32px;vertical-align: middle;\">\n        </a>\n    </div>\n\n    \n    <div class=\"cart-placeholder\">\n    <div class=\"cart-block-container\" style=\"display:none\">\n        <div class=\"cart-block btn-group\">\n            <a href=\"#checkout\" class=\"btn cart open-checkout\">\n                <span class=\"cart-text\"></span>&nbsp;<strong class=\"cart-total font-money\"></strong>\n            </a><a href=\"#checkout\" class=\"btn btn-secondary checkout open-checkout\"><i class=\"fa fa-shopping-cart\" aria-hidden=\"true\"></i> <span class=\"btn-text-span d-none d-sm-inline-block d-lg-none d-hg-inline-block\"></span></a>\n        </div>\n    </div>\n</div>\n    <main role=\"main\" class=\"main-content top-content center-content \" data-page_class=\"\">\n        <div class=\"main-content-container center-content-container\">\n                        <div class=\"pattern page text\">\n<article>\n    <div class=\"breadcrumb\">\n                                    <a class=\"home\" href=\"/\"><i class=\"fa fa-home\" aria-hidden=\"true\"></i></a>\n                                                / <a class=\"type\" href=\"/design-patterns\">Design Patterns</a>\n                                                / <a class=\"type\" href=\"/design-patterns/behavioral-patterns\">Behavioral Patterns</a>\n                        </div>\n    <h1 class=\"title\">Mediator</h1>\n\n    <script type=\"text/javascript\">\n        // Shorten examples titles for users.\n        var h1 = document.getElementsByTagName(\"H1\")[0];\n        if (h1.offsetHeight > 160) {\n            h1.className += ' smaller';\n        }\n\n        // Small beautification for pattern examples.\n        var title = h1.innerHTML;\n        title = title.replace(/^(Java|C\\+\\+|C#|PHP|Python|Ruby|Delphi): (.*)$/, '<strong>$1:</strong> $2');\n        h1.innerHTML = title;\n    </script>\n\n            <div class=\"aka\">\n            Also known as: <span style=\"display:inline-block\">Intermediary,&nbsp;</span><span style=\"display:inline-block\">Controller</span>\n        </div>\n    \n    \n\n    <div class=\"section intent\">\n<h2 id=\"intent\"><i class=\"fa fa-flip-horizontal fa-comment-alt-dots\" aria-hidden=\"true\"></i> Intent</h2>\n<p><strong>Mediator</strong> is a behavioral design pattern that lets you reduce chaotic dependencies between objects. The pattern restricts direct communications between the objects and forces them to collaborate only via a mediator object.</p>\n<figure class=\"image\"><img src=\"/images/patterns/content/mediator/mediator.png?id=0264bd857a231b6ea2d0c537c092e698\" alt=\"Mediator design pattern\" srcset=\"/images/patterns/content/mediator/mediator.png?id=0264bd857a231b6ea2d0c537c092e698 640w,/images/patterns/content/mediator/mediator-1.5x.png?id=b3d5df41892274b5c84282bae8737441 960w,/images/patterns/content/mediator/mediator-2x.png?id=250c2bf72ca1fdee2e6d97ed5a4765f2 1280w\" sizes=\"(max-width: 720px) 100vw, 640px\" width=\"640\" style=\"aspect-ratio: 1.6;\" fetchpriority=\"high\" /></figure>\n</div>\n<div class=\"section problem\">\n<h2 id=\"problem\"><i class=\"fa fa-frown\" aria-hidden=\"true\"></i> Problem</h2>\n<p>Say you have a dialog for creating and editing customer profiles. It consists of various form controls such as text fields, checkboxes, buttons, etc.</p>\n<figure class=\"image\"><img src=\"/images/patterns/diagrams/mediator/problem1-en.png?id=86f99055b3e60bb8834dcc7222922bdf\" alt=\"Chaotic relations between elements of the user interface\" srcset=\"/images/patterns/diagrams/mediator/problem1-en.png?id=86f99055b3e60bb8834dcc7222922bdf 600w,/images/patterns/diagrams/mediator/problem1-en-1.5x.png?id=947efe07eb2f81f770af58673f621623 900w,/images/patterns/diagrams/mediator/problem1-en-2x.png?id=e868165bd04a9438857d6ad41528024c 1200w\" sizes=\"(max-width: 720px) 100vw, 600px\" width=\"600\" style=\"aspect-ratio: 2.22;\" loading=\"lazy\" /><figcaption>\n<p>Relations between elements of the user interface can become chaotic as the application evolves.</p>\n</figcaption></figure>\n<p>Some of the form elements may interact with others. For instance, selecting the “I have a dog” checkbox may reveal a hidden text field for entering the dog’s name. Another example is the submit button that has to validate values of all fields before saving the data.</p>\n<figure class=\"image\"><img src=\"/images/patterns/diagrams/mediator/problem2.png?id=072c51eee4dd90c0972866440c87c1c3\" alt=\"Elements of the UI are interdependent\" srcset=\"/images/patterns/diagrams/mediator/problem2.png?id=072c51eee4dd90c0972866440c87c1c3 360w,/images/patterns/diagrams/mediator/problem2-1.5x.png?id=b805abc211e60fa567fb114192e24608 540w,/images/patterns/diagrams/mediator/problem2-2x.png?id=d298ec82a47fa2938ed6cf64b7da78c1 720w\" sizes=\"(max-width: 720px) 100vw, 360px\" width=\"360\" style=\"aspect-ratio: 3.27;\" loading=\"lazy\" /><figcaption>\n<p>Elements can have lots of relations with other elements. Hence, changes to some elements may affect the others.</p>\n</figcaption></figure>\n<p>By having this logic implemented directly inside the code of the form elements you make these elements’ classes much harder to reuse in other forms of the app. For example, you won’t be able to use that checkbox class inside another form, because it’s coupled to the dog’s text field. You can use either all the classes involved in rendering the profile form, or none at all.</p>\n</div>\n<div class=\"section solution\">\n<h2 id=\"solution\"><i class=\"fa fa-smile-beam\" aria-hidden=\"true\"></i> Solution</h2>\n<p>The Mediator pattern suggests that you should cease all direct communication between the components which you want to make independent of each other. Instead, these components must collaborate indirectly, by calling a special mediator object that redirects the calls to appropriate components. As a result, the components depend only on a single mediator class instead of being coupled to dozens of their colleagues.</p>\n<p>In our example with the profile editing form, the dialog class itself may act as the mediator. Most likely, the dialog class is already aware of all of its sub-elements, so you won’t even need to introduce new dependencies into this class.</p>\n<figure class=\"image\"><img src=\"/images/patterns/diagrams/mediator/solution1-en.png?id=dd991a5b7830de8d43f82b084e021713\" alt=\"UI elements should communicate via the mediator.\" srcset=\"/images/patterns/diagrams/mediator/solution1-en.png?id=dd991a5b7830de8d43f82b084e021713 600w,/images/patterns/diagrams/mediator/solution1-en-1.5x.png?id=07dec16a26fdec8fb83dd4eee914cd70 900w,/images/patterns/diagrams/mediator/solution1-en-2x.png?id=0a1280789a5d7b1567c9d98e5fcd1125 1200w\" sizes=\"(max-width: 720px) 100vw, 600px\" width=\"600\" style=\"aspect-ratio: 2.22;\" loading=\"lazy\" /><figcaption>\n<p>UI elements should communicate indirectly, via the mediator object.</p>\n</figcaption></figure>\n<p>The most significant change happens to the actual form elements. Let’s consider the submit button. Previously, each time a user clicked the button, it had to validate the values of all individual form elements. Now its single job is to notify the dialog about the click. Upon receiving this notification, the dialog itself performs the validations or passes the task to the individual elements. Thus, instead of being tied to a dozen form elements, the button is only dependent on the dialog class.</p>\n<p>You can go further and make the dependency even looser by extracting the common interface for all types of dialogs. The interface would declare the notification method which all form elements can use to notify the dialog about events happening to those elements. Thus, our submit button should now be able to work with any dialog that implements that interface.</p>\n<p>This way, the Mediator pattern lets you encapsulate a complex web of relations between various objects inside a single mediator object. The fewer dependencies a class has, the easier it becomes to modify, extend or reuse that class.</p>\n</div>\n<div class=\"section analogy\">\n<h2 id=\"analogy\"><i class=\"fa fa-car-side\" aria-hidden=\"true\"></i> Real-World Analogy</h2>\n<figure class=\"image\"><img src=\"/images/patterns/diagrams/mediator/live-example.png?id=aa1de3cb7b63aa623e63578a1e43399a\" alt=\"Air traffic control tower\" srcset=\"/images/patterns/diagrams/mediator/live-example.png?id=aa1de3cb7b63aa623e63578a1e43399a 370w,/images/patterns/diagrams/mediator/live-example-1.5x.png?id=315109aa1099cc6e7c06057fa139881c 555w,/images/patterns/diagrams/mediator/live-example-2x.png?id=fd55a9f9d8cf49effa223555c7369504 740w\" sizes=\"(max-width: 720px) 100vw, 370px\" width=\"370\" style=\"aspect-ratio: 1.85;\" loading=\"lazy\" /><figcaption>\n<p>Aircraft pilots don’t talk to each other directly when deciding who gets to land their plane next. All communication goes through the control tower.</p>\n</figcaption></figure>\n<p>Pilots of aircraft that approach or depart the airport control area don’t communicate directly with each other. Instead, they speak to an air traffic controller, who sits in a tall tower somewhere near the airstrip. Without the air traffic controller, pilots would need to be aware of every plane in the vicinity of the airport, discussing landing priorities with a committee of dozens of other pilots. That would probably skyrocket the airplane crash statistics.</p>\n<p>The tower doesn’t need to control the whole flight. It exists only to enforce constraints in the terminal area because the number of involved actors there might be overwhelming to a pilot.</p>\n</div>\n<div class=\"section structure-container\">\n<h2 id=\"structure\"><i class=\"fa fa-sitemap\" aria-hidden=\"true\"></i> Structure</h2>\n<div class=\"structure\">\n<div class=\"struct-image1 struct-image\">\n<figure class=\"image\"><img class=\"structure-img-non-indexed d-none d-xl-block\" src=\"/images/patterns/diagrams/mediator/structure.png?id=1f2accc7820ecfe9665b6d30cbc0bc61\" alt=\"Structure of the Mediator design pattern\" srcset=\"/images/patterns/diagrams/mediator/structure.png?id=1f2accc7820ecfe9665b6d30cbc0bc61 520w,/images/patterns/diagrams/mediator/structure-1.5x.png?id=958b373815bf6a56cd9b38763ed01dce 780w,/images/patterns/diagrams/mediator/structure-2x.png?id=5191daa1c9d4caa36e38af3c5b7d1522 1040w\" sizes=\"(max-width: 720px) 100vw, 520px\" width=\"520\" style=\"aspect-ratio: 1.21;\" loading=\"lazy\" /><img class=\"structure-img-indexed d-xl-none\" src=\"/images/patterns/diagrams/mediator/structure-indexed.png?id=a82d4cf1b92a4f72af32f231ffd21131\" alt=\"Structure of the Mediator design pattern\" srcset=\"/images/patterns/diagrams/mediator/structure-indexed.png?id=a82d4cf1b92a4f72af32f231ffd21131 520w,/images/patterns/diagrams/mediator/structure-indexed-1.5x.png?id=81d4f842ae5157a3cb09f8f3c05159dd 780w,/images/patterns/diagrams/mediator/structure-indexed-2x.png?id=88722da01a5c82b0452078c9339ca497 1040w\" sizes=\"(max-width: 720px) 100vw, 520px\" width=\"520\" style=\"aspect-ratio: 1.21;\" loading=\"lazy\" /></figure>\n</div>\n<ol><li class=\"struct-li1\">\n<p><strong>Components</strong> are various classes that contain some business logic. Each component has a reference to a mediator, declared with the type of the mediator interface. The component isn’t aware of the actual class of the mediator, so you can reuse the component in other programs by linking it to a different mediator.</p>\n</li>\n<li class=\"struct-li2\">\n<p>The <strong>Mediator</strong> interface declares methods of communication with components, which usually include just a single notification method. Components may pass any context as arguments of this method, including their own objects, but only in such a way that no coupling occurs between a receiving component and the sender’s class.</p>\n</li>\n<li class=\"struct-li3\">\n<p><strong>Concrete Mediators</strong> encapsulate relations between various components. Concrete mediators often keep references to all components they manage and sometimes even manage their lifecycle.</p>\n</li>\n<li class=\"struct-li4\">\n<p>Components must not be aware of other components. If something important happens within or to a component, it must only notify the mediator. When the mediator receives the notification, it can easily identify the sender, which might be just enough to decide what component should be triggered in return.</p>\n<p>From a component’s perspective, it all looks like a total black box. The sender doesn’t know who’ll end up handling its request, and the receiver doesn’t know who sent the request in the first place.</p>\n</li></ol>\n<style structure type=\"text/css\" >\n@media (min-width: 1200px) {\n.structure {\nmargin: 0;\nwidth: auto;\nheight: 620px;\n}\n\n.struct-image1 {\nleft: 280px;\ntop: 170px;\n}\n\n.struct-li1 {\nleft: 0px;\ntop: 20px;\nwidth: 270px;\n}\n\n.struct-li2 {\nleft: 300px;\ntop: 20px;\nwidth: 480px;\n}\n\n.struct-li3 {\nleft: 640px;\ntop: 480px;\nwidth: 220px;\n}\n\n.struct-li4 {\nleft: 0px;\ntop: 260px;\nwidth: 270px;\n}\n}\n\n</style>\n</div></div>\n<div class=\"section pseudocode\">\n<h2 id=\"pseudocode\"><i class=\"fa fa-hashtag\" aria-hidden=\"true\"></i> Pseudocode</h2>\n<p>In this example, the <strong>Mediator</strong> pattern helps you eliminate mutual dependencies between various UI classes: buttons, checkboxes and text labels.</p>\n<figure class=\"image\"><img src=\"/images/patterns/diagrams/mediator/example.png?id=3151c153533e816e226be0ef977211e8\" alt=\"Structure of the Mediator pattern example\" srcset=\"/images/patterns/diagrams/mediator/example.png?id=3151c153533e816e226be0ef977211e8 560w,/images/patterns/diagrams/mediator/example-1.5x.png?id=cf441780d96f3306ac54d6809f85b87d 840w,/images/patterns/diagrams/mediator/example-2x.png?id=02064e5a7c4f065f806747e1b04ac1b0 1120w\" sizes=\"(max-width: 720px) 100vw, 560px\" width=\"560\" style=\"aspect-ratio: 1.24;\" loading=\"lazy\" /><figcaption>\n<p>Structure of the UI dialog classes.</p>\n</figcaption></figure>\n<p>An element, triggered by a user, doesn’t communicate with other elements directly, even if it looks like it’s supposed to. Instead, the element only needs to let its mediator know about the event, passing any contextual info along with that notification.</p>\n<p>In this example, the whole authentication dialog acts as the mediator. It knows how concrete elements are supposed to collaborate and facilitates their indirect communication. Upon receiving a notification about an event, the dialog decides what element should address the event and redirects the call accordingly.</p>\n<figure class=\"code\">\n<pre class=\"code\" lang=\"pseudocode\">// The mediator interface declares a method used by components\n// to notify the mediator about various events. The mediator may\n// react to these events and pass the execution to other\n// components.\ninterface Mediator is\n    method notify(sender: Component, event: string)\n\n\n// The concrete mediator class. The intertwined web of\n// connections between individual components has been untangled\n// and moved into the mediator.\nclass AuthenticationDialog implements Mediator is\n    private field title: string\n    private field loginOrRegisterChkBx: Checkbox\n    private field loginUsername, loginPassword: Textbox\n    private field registrationUsername, registrationPassword,\n                  registrationEmail: Textbox\n    private field okBtn, cancelBtn: Button\n\n    constructor AuthenticationDialog() is\n        // Create all component objects by passing the current\n        // mediator into their constructors to establish links.\n\n    // When something happens with a component, it notifies the\n    // mediator. Upon receiving a notification, the mediator may\n    // do something on its own or pass the request to another\n    // component.\n    method notify(sender, event) is\n        if (sender == loginOrRegisterChkBx and event == &quot;check&quot;)\n            if (loginOrRegisterChkBx.checked)\n                title = &quot;Log in&quot;\n                // 1. Show login form components.\n                // 2. Hide registration form components.\n            else\n                title = &quot;Register&quot;\n                // 1. Show registration form components.\n                // 2. Hide login form components\n\n        if (sender == okBtn &amp;&amp; event == &quot;click&quot;)\n            if (loginOrRegister.checked)\n                // Try to find a user using login credentials.\n                if (!found)\n                    // Show an error message above the login\n                    // field.\n            else\n                // 1. Create a user account using data from the\n                // registration fields.\n                // 2. Log that user in.\n                // ...\n\n\n// Components communicate with a mediator using the mediator\n// interface. Thanks to that, you can use the same components in\n// other contexts by linking them with different mediator\n// objects.\nclass Component is\n    field dialog: Mediator\n\n    constructor Component(dialog) is\n        this.dialog = dialog\n\n    method click() is\n        dialog.notify(this, &quot;click&quot;)\n\n    method keypress() is\n        dialog.notify(this, &quot;keypress&quot;)\n\n// Concrete components don't talk to each other. They have only\n// one communication channel, which is sending notifications to\n// the mediator.\nclass Button extends Component is\n    // ...\n\nclass Textbox extends Component is\n    // ...\n\nclass Checkbox extends Component is\n    method check() is\n        dialog.notify(this, &quot;check&quot;)\n    // ...\n</pre>\n</figure>\n</div>\n<div class=\"section applicability-container\">\n<h2 id=\"applicability\"><i class=\"fa fa-lightbulb-on\" aria-hidden=\"true\"></i> Applicability</h2>\n<div class=\"applicability\">\n<div class=\"applicability-problem\">\n<p><i class=\"fa fa-fw fa-bug\" aria-hidden=\"true\"></i> Use the Mediator pattern when it’s hard to change some of the classes because they are tightly coupled to a bunch of other classes.</p>\n</div><div class=\"applicability-solution\">\n<p><i class=\"fa fa-fw fa-bolt\" aria-hidden=\"true\"></i> The pattern lets you extract all the relationships between classes into a separate class, isolating any changes to a specific component from the rest of the components.</p>\n</div>\n<div class=\"applicability-problem\">\n<p><i class=\"fa fa-fw fa-bug\" aria-hidden=\"true\"></i> Use the pattern when you can’t reuse a component in a different program because it’s too dependent on other components.</p>\n</div><div class=\"applicability-solution\">\n<p><i class=\"fa fa-fw fa-bolt\" aria-hidden=\"true\"></i> After you apply the Mediator, individual components become unaware of the other components. They could still communicate with each other, albeit indirectly, through a mediator object. To reuse a component in a different app, you need to provide it with a new mediator class.</p>\n</div>\n<div class=\"applicability-problem\">\n<p><i class=\"fa fa-fw fa-bug\" aria-hidden=\"true\"></i> Use the Mediator when you find yourself creating tons of component subclasses just to reuse some basic behavior in various contexts.</p>\n</div><div class=\"applicability-solution\">\n<p><i class=\"fa fa-fw fa-bolt\" aria-hidden=\"true\"></i> Since all relations between components are contained within the mediator, it’s easy to define entirely new ways for these components to collaborate by introducing new mediator classes, without having to change the components themselves.</p>\n</div>\n</div></div>\n<div class=\"section checklist\">\n<h2 id=\"checklist\"><i class=\"fa fa-clipboard-list-check\" aria-hidden=\"true\"></i> How to Implement</h2>\n<ol>\n<li>\n<p>Identify a group of tightly coupled classes which would benefit from being more independent (e.g., for easier maintenance or simpler reuse of these classes).</p>\n</li>\n<li>\n<p>Declare the mediator interface and describe the desired communication protocol between mediators and various components. In most cases, a single method for receiving notifications from components is sufficient.</p>\n<p>This interface is crucial when you want to reuse component classes in different contexts. As long as the component works with its mediator via the generic interface, you can link the component with a different implementation of the mediator.</p>\n</li>\n<li>\n<p>Implement the concrete mediator class. Consider storing references to all components inside the mediator. This way, you could call any component from the mediator’s methods.</p>\n</li>\n<li>\n<p>You can go even further and make the mediator responsible for the creation and destruction of component objects. After this, the mediator may resemble a <a href=\"/design-patterns/abstract-factory\">factory</a> or a <a href=\"/design-patterns/facade\">facade</a>.</p>\n</li>\n<li>\n<p>Components should store a reference to the mediator object. The connection is usually established in the component’s constructor, where a mediator object is passed as an argument.</p>\n</li>\n<li>\n<p>Change the components’ code so that they call the mediator’s notification method instead of methods on other components. Extract the code that involves calling other components into the mediator class. Execute this code whenever the mediator receives notifications from that component.</p>\n</li>\n</ol>\n</div>\n<div class=\"section pros-cons\">\n<h2 id=\"pros-cons\"><i class=\"fa fa-balance-scale\" aria-hidden=\"true\"></i> Pros and Cons</h2>\n<div class=\"row\"><div class=\"col-sm-6\">\n<ul>\n<li><i class=\"fa fa-fw fa-check\" aria-hidden=\"true\"></i> <em>Single Responsibility Principle</em>. You can extract the communications between various components into a single place, making it easier to comprehend and maintain.</li>\n<li><i class=\"fa fa-fw fa-check\" aria-hidden=\"true\"></i> <em>Open/Closed Principle</em>. You can introduce new mediators without having to change the actual components.</li>\n<li><i class=\"fa fa-fw fa-check\" aria-hidden=\"true\"></i> You can reduce coupling between various components of a program.</li>\n<li><i class=\"fa fa-fw fa-check\" aria-hidden=\"true\"></i> You can reuse individual components more easily.</li>\n</ul>\n</div><div class=\"col-sm-6\">\n<ul>\n<li><i class=\"fa fa-fw fa-times\" aria-hidden=\"true\"></i> Over time a mediator can evolve into a <a href=\"/antipatterns/god-object\">God Object</a>.</li>\n</ul>\n</div></div></div>\n<div class=\"section relations\">\n<h2 id=\"relations\"><i class=\"fa fa-exchange-alt\" aria-hidden=\"true\"></i> Relations with Other Patterns</h2>\n<ul>\n<li>\n<p><a href=\"/design-patterns/chain-of-responsibility\">Chain of Responsibility</a>, <a href=\"/design-patterns/command\">Command</a>, <a href=\"/design-patterns/mediator\">Mediator</a> and <a href=\"/design-patterns/observer\">Observer</a> address various ways of connecting senders and receivers of requests:</p>\n<ul>\n<li><em>Chain of Responsibility</em> passes a request sequentially along a dynamic chain of potential receivers until one of them handles it.</li>\n<li><em>Command</em> establishes unidirectional connections between senders and receivers.</li>\n<li><em>Mediator</em> eliminates direct connections between senders and receivers, forcing them to communicate indirectly via a mediator object.</li>\n<li><em>Observer</em> lets receivers dynamically subscribe to and unsubscribe from receiving requests.</li>\n</ul>\n</li>\n<li>\n<p><a href=\"/design-patterns/facade\">Facade</a> and <a href=\"/design-patterns/mediator\">Mediator</a> have similar jobs: they try to organize collaboration between lots of tightly coupled classes.</p>\n<ul>\n<li><em>Facade</em> defines a simplified interface to a subsystem of objects, but it doesn’t introduce any new functionality. The subsystem itself is unaware of the facade. Objects within the subsystem can communicate directly.</li>\n<li><em>Mediator</em> centralizes communication between components of the system. The components only know about the mediator object and don’t communicate directly.</li>\n</ul>\n</li>\n<li>\n<p>The difference between <a href=\"/design-patterns/mediator\">Mediator</a> and <a href=\"/design-patterns/observer\">Observer</a> is often elusive. In most cases, you can implement either of these patterns; but sometimes you can apply both simultaneously. Let’s see how we can do that.</p>\n<p>The primary goal of <em>Mediator</em> is to eliminate mutual dependencies among a set of system components. Instead, these components become dependent on a single mediator object. The goal of <em>Observer</em> is to establish dynamic one-way connections between objects, where some objects act as subordinates of others.</p>\n<p>There’s a popular implementation of the <em>Mediator</em> pattern that relies on <em>Observer</em>. The mediator object plays the role of publisher, and the components act as subscribers which subscribe to and unsubscribe from the mediator’s events. When <em>Mediator</em> is implemented this way, it may look very similar to <em>Observer</em>.</p>\n<p>When you’re confused, remember that you can implement the Mediator pattern in other ways. For example, you can permanently link all the components to the same mediator object. This implementation won’t resemble <em>Observer</em> but will still be an instance of the Mediator pattern.</p>\n<p>Now imagine a program where all components have become publishers, allowing dynamic connections between each other. There won’t be a centralized mediator object, only a distributed set of observers.</p>\n</li>\n</ul>\n</div>\n<div class=\"section implementations\">\n<h2 id=\"implementations\"><i class=\"fa fa-code\" aria-hidden=\"true\"></i> Code Examples</h2>\n<p><a href=\"/design-patterns/mediator/csharp/example\" title=\"Mediator in C#\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/csharp.svg?id=da64592defc6e86d57c39c66e9de3e58\" alt=\"Mediator in C#\" /></a>\n<a href=\"/design-patterns/mediator/cpp/example\" title=\"Mediator in C++\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/cpp.svg?id=f7782ed8b8666246bfcc3f8fefc3b858\" alt=\"Mediator in C++\" /></a>\n<a href=\"/design-patterns/mediator/go/example\" title=\"Mediator in Go\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/go.svg?id=1a89927eb99b1ea3fde7701d97970aca\" alt=\"Mediator in Go\" /></a>\n<a href=\"/design-patterns/mediator/java/example\" title=\"Mediator in Java\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/java.svg?id=e6d87e2dca08c953fe3acd1275ed4f4e\" alt=\"Mediator in Java\" /></a>\n<a href=\"/design-patterns/mediator/php/example\" title=\"Mediator in PHP\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/php.svg?id=be1906eb26b71ec1d3b93720d6156618\" alt=\"Mediator in PHP\" /></a>\n<a href=\"/design-patterns/mediator/python/example\" title=\"Mediator in Python\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/python.svg?id=6d815d43c0f7050a1151b43e51569c9f\" alt=\"Mediator in Python\" /></a>\n<a href=\"/design-patterns/mediator/ruby/example\" title=\"Mediator in Ruby\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/ruby.svg?id=b065b718c914bf8e960ef731600be1eb\" alt=\"Mediator in Ruby\" /></a>\n<a href=\"/design-patterns/mediator/rust/example\" title=\"Mediator in Rust\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/rust.svg?id=1f5698a4b5ae23fe79413511747e4a87\" alt=\"Mediator in Rust\" /></a>\n<a href=\"/design-patterns/mediator/swift/example\" title=\"Mediator in Swift\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/swift.svg?id=0b716c2d52ec3a48fbe91ac031070c1d\" alt=\"Mediator in Swift\" /></a>\n<a href=\"/design-patterns/mediator/typescript/example\" title=\"Mediator in TypeScript\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/typescript.svg?id=2239d0f16cb703540c205dd8cb0c0cb7\" alt=\"Mediator in TypeScript\" /></a></p>\n</div>\n\n\n    <div class=\"banner-set2\" id=\"book-promo\">\n            <div class=\"prom banner-content banner-bg banner-striped banner-with-image\" data-id=\"DP: 1: Support our free website and own the eBook!\" data-creative-id=\"standard-en\" data-position=\"content_bottom\">\n                <div class=\"banner-image\">\n                    <a href=\"/design-patterns/book\">\n                        <img width=\"200\" height=\"200\" loading=\"lazy\" src=\"/images/patterns/banners/patterns-book-banner-3.png?id=7d445df13c80287beaab234b4f3b698c\" srcset=\"/images/patterns/banners/patterns-book-banner-3-2x.png?id=0cc3f77ab421d1a5c02ee46488231c3a 2x\">\n                    </a>\n                </div>\n\n                <div class=\"banner-text\">\n                    <h3 class=\"title\">Support our free website and own the eBook!</h3>\n                    <ul style=\"font-size: 14px;\">\n                        <li style=\"margin: 0;\">22 design patterns and 8 principles explained in depth.</li>\n                        <li style=\"margin: 0;\">409 well-structured, easy to read, jargon-free pages.</li>\n                        <li style=\"margin: 0;\">225 clear and helpful illustrations and diagrams.</li>\n                        <li style=\"margin: 0;\">An archive with code examples in 11 languages.</li>\n                        <li style=\"margin: 0;\">All devices supported: PDF/EPUB/MOBI/KFX formats.</li>\n                    </ul>\n                    <a class=\"btn btn-secondary\" href=\"/design-patterns/book\"><i class=\"fa fa-book\" aria-hidden=\"true\"></i> Learn more…</a>\n                </div>\n            </div>\n        </div>\n\n    </article>\n\n<nav class=\"prev-next\">\n                    <div class=\"next\">\n                <h4>Read next</h4>\n                <a rel=\"next\" href=\"/design-patterns/memento\" class=\"btn btn-primary\">Memento&nbsp;<span class=\"fa fa-arrow-right\"></span></a>\n            </div>\n                            <div class=\"prev\">\n                <h4>Return</h4>\n                <a rel=\"prev\" href=\"/design-patterns/iterator\" class=\"btn btn-default\"><span class=\"fa fa-arrow-left\"></span>&nbsp;Iterator </a>\n            </div>\n            </nav>\n</div>\n\n<aside class=\"feature content-secondary\">\n    <div class=\"prom banner-sidebar banner-removable banner-removable-patterns\" data-id=\"DP: Sidebar\" data-creative-id=\"standard-sidebar-en\" data-position=\"sidebar\">\n        <div class=\"banner-inner\">\n            <div class=\"image3d-book-right\">\n                <div class=\"image3d-cover\" style=\"background: #0b3752;\">\n                    <a href=\"/design-patterns/book\">\n                        <img width=\"250\" height=\"375\" loading=\"lazy\" src=\"/images/patterns/book/web-cover-en.png?id=328861769fd11617674e3b8a7e2dd9e7\" srcset=\"/images/patterns/book/web-cover-en-2x.png?id=02940141c5652ed5a426d87390b16366 2x\">\n                    </a>\n                </div>\n            </div>\n            <div style=\"margin-top: 1rem\">\n                <p class=\"text-center\" >This article is a part of our eBook<br/><strong>Dive Into Design Patterns</strong>.</p>\n                <a href=\"/design-patterns/book\" class=\"btn btn-secondary btn-block\"><i class=\"fa fa-book\" aria-hidden=\"true\"></i> Learn more…</a>\n            </div>\n        </div>\n    </div>\n\n\n</aside>\n                    </div>\n    </main>\n\n    <aside class=\"sidebar main-menu\">\n    <div class=\"main-menu-controls\">\n        <button class=\"navigation-toggle\"><i class=\"fa fa-fw fa-times\"></i></button>\n    </div>\n    <div class=\"main-menu-list-wrapper nano\">\n        <div class=\"main-menu-list nano-content\">\n            <a class=\"menu-brand\" href=\"/\">\n                                    <img width=200 height=241 loading=\"lazy\" alt=\"Refactoring.Guru\" src=\"/images/content-public/logos/logo-new.png?id=97d554614702483f31e38b32e82d8e34\" srcset=\"/images/content-public/logos/logo-new-2x.png?id=3bc33294e095bab1d6fe9ae421d07837 2x\">\n                            </a>\n\n            <div class=\"menu-container\" style=\"position: relative\">\n                                <ul class=\"menu-list trail\">\n                            <li class=\"featured\">\n            <a href=\"/store\">\n                <i class=\"fa fa-fw fa-star\" aria-hidden=\"true\"></i> Premium Content\n            </a>\n    \n            <ul >\n                            <li class=\"featured menu-fs15\">\n            <a href=\"/design-patterns/book\">\n                <i class=\"fa fa-fw fa-book\" aria-hidden=\"true\"></i> Design Patterns eBook\n            </a>\n    \n    \n            </li>\n                                <li class=\"featured menu-fs15\">\n            <a href=\"/refactoring/course\">\n                <i class=\"fa fa-fw fa-graduation-cap\" aria-hidden=\"true\"></i> Refactoring Course\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring\">\n                <i class=\"fa fa-fw fa-scissors\" aria-hidden=\"true\"></i> Refactoring\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/refactoring/what-is-refactoring\">\n                What is Refactoring\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/refactoring/what-is-refactoring\">\n                Clean code\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/technical-debt\">\n                Technical debt\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/when\">\n                When to refactor\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/how-to\">\n                How to refactor\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/catalog\">\n                Catalog\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells\">\n                Code Smells\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/refactoring/smells/bloaters\">\n                Bloaters\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/long-method\">\n                Long Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/large-class\">\n                Large Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/primitive-obsession\">\n                Primitive Obsession\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/long-parameter-list\">\n                Long Parameter List\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/data-clumps\">\n                Data Clumps\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/oo-abusers\">\n                Object-Orientation Abusers\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/switch-statements\">\n                Switch Statements\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/temporary-field\">\n                Temporary Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/refused-bequest\">\n                Refused Bequest\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/alternative-classes-with-different-interfaces\">\n                Alternative Classes with Different Interfaces\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/change-preventers\">\n                Change Preventers\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/divergent-change\">\n                Divergent Change\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/shotgun-surgery\">\n                Shotgun Surgery\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/parallel-inheritance-hierarchies\">\n                Parallel Inheritance Hierarchies\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/dispensables\">\n                Dispensables\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/comments\">\n                Comments\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/duplicate-code\">\n                Duplicate Code\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/lazy-class\">\n                Lazy Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/data-class\">\n                Data Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/dead-code\">\n                Dead Code\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/speculative-generality\">\n                Speculative Generality\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/couplers\">\n                Couplers\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/feature-envy\">\n                Feature Envy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/inappropriate-intimacy\">\n                Inappropriate Intimacy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/message-chains\">\n                Message Chains\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/middle-man\">\n                Middle Man\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/other\">\n                Other Smells\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/incomplete-library-class\">\n                Incomplete Library Class\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques\">\n                Refactorings\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/refactoring/techniques/composing-methods\">\n                Composing Methods\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/extract-method\">\n                Extract Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/inline-method\">\n                Inline Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-variable\">\n                Extract Variable\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/inline-temp\">\n                Inline Temp\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-temp-with-query\">\n                Replace Temp with Query\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/split-temporary-variable\">\n                Split Temporary Variable\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-assignments-to-parameters\">\n                Remove Assignments to Parameters\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-method-with-method-object\">\n                Replace Method with Method Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/substitute-algorithm\">\n                Substitute Algorithm\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/moving-features-between-objects\">\n                Moving Features between Objects\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/move-method\">\n                Move Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/move-field\">\n                Move Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-class\">\n                Extract Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/inline-class\">\n                Inline Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/hide-delegate\">\n                Hide Delegate\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-middle-man\">\n                Remove Middle Man\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-foreign-method\">\n                Introduce Foreign Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-local-extension\">\n                Introduce Local Extension\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/organizing-data\">\n                Organizing Data\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/self-encapsulate-field\">\n                Self Encapsulate Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-data-value-with-object\">\n                Replace Data Value with Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/change-value-to-reference\">\n                Change Value to Reference\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/change-reference-to-value\">\n                Change Reference to Value\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-array-with-object\">\n                Replace Array with Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/duplicate-observed-data\">\n                Duplicate Observed Data\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/change-unidirectional-association-to-bidirectional\">\n                Change Unidirectional Association to Bidirectional\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/change-bidirectional-association-to-unidirectional\">\n                Change Bidirectional Association to Unidirectional\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-magic-number-with-symbolic-constant\">\n                Replace Magic Number with Symbolic Constant\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/encapsulate-field\">\n                Encapsulate Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/encapsulate-collection\">\n                Encapsulate Collection\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-type-code-with-class\">\n                Replace Type Code with Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-type-code-with-subclasses\">\n                Replace Type Code with Subclasses\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-type-code-with-state-strategy\">\n                Replace Type Code with State/Strategy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-subclass-with-fields\">\n                Replace Subclass with Fields\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/simplifying-conditional-expressions\">\n                Simplifying Conditional Expressions\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/decompose-conditional\">\n                Decompose Conditional\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/consolidate-conditional-expression\">\n                Consolidate Conditional Expression\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/consolidate-duplicate-conditional-fragments\">\n                Consolidate Duplicate Conditional Fragments\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-control-flag\">\n                Remove Control Flag\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-nested-conditional-with-guard-clauses\">\n                Replace Nested Conditional with Guard Clauses\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-conditional-with-polymorphism\">\n                Replace Conditional with Polymorphism\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-null-object\">\n                Introduce Null Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-assertion\">\n                Introduce Assertion\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/simplifying-method-calls\">\n                Simplifying Method Calls\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/rename-method\">\n                Rename Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/add-parameter\">\n                Add Parameter\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-parameter\">\n                Remove Parameter\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/separate-query-from-modifier\">\n                Separate Query from Modifier\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/parameterize-method\">\n                Parameterize Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-parameter-with-explicit-methods\">\n                Replace Parameter with Explicit Methods\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/preserve-whole-object\">\n                Preserve Whole Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-parameter-with-method-call\">\n                Replace Parameter with Method Call\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-parameter-object\">\n                Introduce Parameter Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-setting-method\">\n                Remove Setting Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/hide-method\">\n                Hide Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-constructor-with-factory-method\">\n                Replace Constructor with Factory Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-error-code-with-exception\">\n                Replace Error Code with Exception\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-exception-with-test\">\n                Replace Exception with Test\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/dealing-with-generalization\">\n                Dealing with Generalization\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/pull-up-field\">\n                Pull Up Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/pull-up-method\">\n                Pull Up Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/pull-up-constructor-body\">\n                Pull Up Constructor Body\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/push-down-method\">\n                Push Down Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/push-down-field\">\n                Push Down Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-subclass\">\n                Extract Subclass\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-superclass\">\n                Extract Superclass\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-interface\">\n                Extract Interface\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/collapse-hierarchy\">\n                Collapse Hierarchy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/form-template-method\">\n                Form Template Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-inheritance-with-delegation\">\n                Replace Inheritance with Delegation\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-delegation-with-inheritance\">\n                Replace Delegation with Inheritance\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"trail\">\n            <a href=\"/design-patterns\">\n                <i class=\"fa fa-fw fa-puzzle-piece\" aria-hidden=\"true\"></i> Design Patterns\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/what-is-pattern\">\n                What is a Pattern\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/what-is-pattern\">\n                What's a design pattern?\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/history\">\n                History of patterns\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/why-learn-patterns\">\n                Why should I learn patterns?\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/criticism\">\n                Criticism of patterns\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/classification\">\n                Classification of patterns\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/catalog\">\n                Catalog\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-third-level\">\n            <a href=\"/design-patterns/creational-patterns\">\n                Creational Patterns\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/factory-method\">\n                Factory Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/abstract-factory\">\n                Abstract Factory\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/builder\">\n                Builder\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/prototype\">\n                Prototype\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/singleton\">\n                Singleton\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"menu-third-level\">\n            <a href=\"/design-patterns/structural-patterns\">\n                Structural Patterns\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/adapter\">\n                Adapter\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/bridge\">\n                Bridge\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/composite\">\n                Composite\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/decorator\">\n                Decorator\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/facade\">\n                Facade\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/flyweight\">\n                Flyweight\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/proxy\">\n                Proxy\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"menu-third-level trail\">\n            <a href=\"/design-patterns/behavioral-patterns\">\n                Behavioral Patterns\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/chain-of-responsibility\">\n                Chain of Responsibility\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/command\">\n                Command\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/iterator\">\n                Iterator\n            </a>\n    \n    \n            </li>\n                                <li class=\"trail active\">\n            <a href=\"/design-patterns/mediator\">\n                Mediator\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/memento\">\n                Memento\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/observer\">\n                Observer\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/state\">\n                State\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/strategy\">\n                Strategy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/template-method\">\n                Template Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/visitor\">\n                Visitor\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"menu-code-examples\">\n            <a href=\"/design-patterns/examples\">\n                Code Examples\n            </a>\n    \n            <ul >\n                            <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/csharp\">\n                C#\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/cpp\">\n                C++\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/go\">\n                Go\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/java\">\n                Java\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/php\">\n                PHP\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/python\">\n                Python\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/ruby\">\n                Ruby\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/rust\">\n                Rust\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/swift\">\n                Swift\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/typescript\">\n                TypeScript\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n                </div>\n\n            <div class=\"main-menu-aux-controls\">\n                <a href=\"https://refactoring.guru/login\" title=\"Sign in\" style=\" display: inline-flex; align-items: center; gap: 6px; \"><svg style=\"width: 16px; height: 16px; filter:drop-shadow(0 1px 1px #74261e)\" class=\"inline-block mx-0\"  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\"opacity=\"0.4\" d=\"M352.7 222.4c3.2 1 6.5 1.6 10 1.6l21.3 0c17.7 0 32 14.3 32 32s-14.3 32-32 32l-21.3 0c-.8 0-1.7 0-2.5 0c-.9 0-1.7-.1-2.5-.1c-1.7-.1-3.4-.2-5-.4C357.4 414 391.1 512 432 512c44.2 0 80-114.6 80-256S476.2 0 432 0c-40.6 0-74.2 96.9-79.3 222.4z\"/><path fill=\"currentColor\"class=\"fa-primary\" d=\"M320 48a48 48 0 1 0 -96 0 48 48 0 1 0 96 0zM125.7 175.5c9.9-9.9 23.4-15.5 37.5-15.5c1.9 0 3.8 .1 5.6 .3L137.6 254c-9.3 28 1.7 58.8 26.8 74.5l86.2 53.9-25.4 88.8c-4.9 17 5 34.7 22 39.6s34.7-5 39.6-22l28.7-100.4c5.9-20.6-2.6-42.6-20.7-53.9L238 299l30.9-82.4 5.1 12.3C289 264.7 323.9 288 362.7 288l21.3 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-21.3 0c-12.9 0-24.6-7.8-29.5-19.7l-6.3-15c-14.6-35.1-44.1-61.9-80.5-73.1l-48.7-15c-11.1-3.4-22.7-5.2-34.4-5.2c-31 0-60.8 12.3-82.7 34.3L57.4 153.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l23.1-23.1zM91.2 352L32 352c-17.7 0-32 14.3-32 32s14.3 32 32 32l69.6 0c19 0 36.2-11.2 43.9-28.5L157 361.6l-9.5-6c-17.5-10.9-30.5-26.8-37.9-44.9L91.2 352z\"/></svg> Sign in</a>\n                <a href=\"https://feedback.refactoring.guru/\" class=\"userecho-public\" rel=\"nofollow\" title=\"Contact us\"><i class=\"fa fa-fw fa-fw fa-envelope\" aria-hidden=\"true\"></i> Contact us</a>\n            </div>\n        </div>\n    </div>\n</aside>\n\n    <nav class=\"navigation\" role=\"navigation\">\n    <div class=\"navigation-container\">\n        <a class=\"navigation-brand\" href=\"/\">\n            <img alt=\"Refactoring.Guru\"\n                 src=\"/images/content-public/logos/logo-new-mobile.png?id=ea18aa9b032eaa92835ed6d472b03b4a\"\n                 srcset=\"/images/content-public/logos/logo-new-mobile-2x.png?id=7ad5648bfd86ae2e8524147a72877c64 2x\">\n        </a>\n\n        <div class=\"shop-link d-none d-lg-block\" style=\"display: none !important;\">\n            <a class=\"btn btn-md btn-primary btn-featured\" href=\"/store\"><svg style=\"width: 28px; height: 28px; fill: currentColor; display: inline-block; margin-top: -14px;\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><!--! Font Awesome Pro 6.3.0 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2023 Fonticons, Inc. --><path d=\"M356 60l60 20-60 20-20 60-20-60L256 80l60-20L336 0l20 60zM464 208l48 16-48 16-16 48-16-48-48-16 48-16 16-48 16 48zm-243.8-9.8l33 66.9 73.8 10.7 59.8 8.7-43.3 42.2-53.4 52.1 12.6 73.5L313 512l-53.5-28.1-66-34.7-66 34.7L73.9 512l10.2-59.6 12.6-73.5L43.3 326.8 0 284.6l59.8-8.7 73.8-10.7 33-66.9L193.5 144l26.8 54.2zm26.1 114.4l-25-3.6-11.2-22.6-16.7-33.9-16.7 33.9L165.6 309l-25 3.6-37.4 5.4 27.1 26.4 18.1 17.6L144 387l-6.4 37.3 33.5-17.6 22.3-11.7 22.3 11.7 33.5 17.6L242.9 387l-4.3-24.9 18.1-17.6 27.1-26.4-37.4-5.4z\"/></svg>\n                Shop Now!</a>\n        </div>\n\n        <ul class=\"navigation-menu\">\n                            <li class=\"nav-locale dropdown dropdown-locales\">\n                    <button class=\"dropdown-toggle\" id=\"dropdownLanguage\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                        <i class=\"fa fa-fw fa-globe\" aria-hidden=\"true\"></i> <span class=\"caption d-none d-lg-inline-block\">English</span>\n                    </button>\n                    <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownLanguage\">\n                                                                                                                        <a href=\"https://refactoring.guru/design-patterns/mediator\" class=\"dropdown-item locale-link active\" data-locale=\"en\" title=\"English\">English</a>\n                                                                                                                                <a href=\"https://refactoring.guru/es/design-patterns/mediator\" class=\"dropdown-item locale-link \" data-locale=\"es\" title=\"Español\">Español</a>\n                                                                                                                                <a href=\"https://refactoring.guru/fr/design-patterns/mediator\" class=\"dropdown-item locale-link \" data-locale=\"fr\" title=\"Français\">Français</a>\n                                                                                                                                <a href=\"https://refactoring.guru/ja/design-patterns/mediator\" class=\"dropdown-item locale-link \" data-locale=\"ja\" title=\"日本語\">日本語</a>\n                                                                                                                                <a href=\"https://refactoring.guru/ko/design-patterns/mediator\" class=\"dropdown-item locale-link \" data-locale=\"ko\" title=\"한국어\">한국어</a>\n                                                                                                                                <a href=\"https://refactoring.guru/pl/design-patterns/mediator\" class=\"dropdown-item locale-link \" data-locale=\"pl\" title=\"Polski\">Polski</a>\n                                                                                                                                <a href=\"https://refactoring.guru/pt-br/design-patterns/mediator\" class=\"dropdown-item locale-link \" data-locale=\"pt-br\" title=\"Português Brasileiro\">Português Brasileiro</a>\n                                                                                                                                <a href=\"https://refactoring.guru/ru/design-patterns/mediator\" class=\"dropdown-item locale-link \" data-locale=\"ru\" title=\"Русский\">Русский</a>\n                                                                                                                                <a href=\"https://refactoring.guru/uk/design-patterns/mediator\" class=\"dropdown-item locale-link \" data-locale=\"uk\" title=\"Українська\">Українська</a>\n                                                                                                                                <a href=\"https://refactoringguru.cn/design-patterns/mediator\" class=\"dropdown-item locale-link \" data-locale=\"zh\" title=\"中文\">中文</a>\ndiv>\n                </li>\n                        <li class=\"nav-contacts\">\n                <a class=\"userecho-private\" href=\"https://feedback.refactoring.guru/?show_feedback_form_private=true\" rel=\"nofollow\" title=\"Contact us\">\n                    <i class=\"fa fa-fw fa-envelope\" aria-hidden=\"true\"></i> <span class=\"caption d-none d-xl-inline-block\">Contact us</span>\n                </a>\n            </li>\n                            <li class=\"nav-user\">\n                    <a href=\"https://refactoring.guru/login\" title=\"Sign in\"><span class=\"sign-in-icon\"><svg style=\"width: 24px; height: 24px; \" class=\"inline-block \"  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\"opacity=\"0.4\" d=\"M352.7 222.4c3.2 1 6.5 1.6 10 1.6l21.3 0c17.7 0 32 14.3 32 32s-14.3 32-32 32l-21.3 0c-.8 0-1.7 0-2.5 0c-.9 0-1.7-.1-2.5-.1c-1.7-.1-3.4-.2-5-.4C357.4 414 391.1 512 432 512c44.2 0 80-114.6 80-256S476.2 0 432 0c-40.6 0-74.2 96.9-79.3 222.4z\"/><path fill=\"currentColor\"class=\"fa-primary\" d=\"M320 48a48 48 0 1 0 -96 0 48 48 0 1 0 96 0zM125.7 175.5c9.9-9.9 23.4-15.5 37.5-15.5c1.9 0 3.8 .1 5.6 .3L137.6 254c-9.3 28 1.7 58.8 26.8 74.5l86.2 53.9-25.4 88.8c-4.9 17 5 34.7 22 39.6s34.7-5 39.6-22l28.7-100.4c5.9-20.6-2.6-42.6-20.7-53.9L238 299l30.9-82.4 5.1 12.3C289 264.7 323.9 288 362.7 288l21.3 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-21.3 0c-12.9 0-24.6-7.8-29.5-19.7l-6.3-15c-14.6-35.1-44.1-61.9-80.5-73.1l-48.7-15c-11.1-3.4-22.7-5.2-34.4-5.2c-31 0-60.8 12.3-82.7 34.3L57.4 153.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l23.1-23.1zM91.2 352L32 352c-17.7 0-32 14.3-32 32s14.3 32 32 32l69.6 0c19 0 36.2-11.2 43.9-28.5L157 361.6l-9.5-6c-17.5-10.9-30.5-26.8-37.9-44.9L91.2 352z\"/></svg></span> <span class=\"account-icon\" style=\"display:none\"><svg style=\"width: 24px; height: 24px; \" class=\"inline-block \"  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 576 512\"><path fill=\"currentColor\"opacity=\"0.4\" d=\"M64 270.5l224-196c74.7 65.4 149.4 130.7 224.1 196.1l.4 177.3c.1 35.4-28.6 64.1-64 64.1l-320.4 0c-35.3 0-64-28.6-64-64L64 270.5zM176.1 433.6c.1 .5 .1 1.1 .2 1.6c.2 1 .5 2 .9 3c.8 1.9 2 3.6 3.4 5.1c2.9 2.9 6.9 4.7 11.3 4.7l192 0c8.8 0 16-7.2 16-16c0-44.2-35.8-80-80-80l-64 0c-22.1 0-42.1 9-56.6 23.4c-7.2 7.2-13.1 15.9-17.1 25.4c-2 4.8-3.6 9.8-4.7 15c-.5 2.6-.9 5.3-1.2 7.9c-.1 1.3-.2 2.7-.3 4.1c-.1 1.4-.1 2.7-.1 4.1c0 .6 0 1.1 .1 1.6zm48.2-184.2c-.1 1.1-.2 2.2-.2 3.2c-.1 1.1-.1 2.2-.1 3.3s0 2.2 .1 3.3c.1 1.1 .1 2.2 .2 3.2c.2 2.1 .5 4.3 1 6.4c.9 4.2 2.1 8.2 3.7 12c3.2 7.7 7.9 14.6 13.7 20.3C254.3 312.8 270.3 320 288 320c35.3 0 64-28.7 64-64s-28.7-64-64-64c-17.7 0-33.7 7.2-45.3 18.7c-5.8 5.8-10.5 12.7-13.7 20.3c-1.6 3.8-2.9 7.8-3.7 12c-.4 2.1-.8 4.2-1 6.4z\"/><path fill=\"currentColor\"class=\"fa-primary\" d=\"M309.1 7.9C297-2.6 279-2.6 266.9 7.9l-256 224c-13.3 11.6-14.6 31.9-3 45.2s31.9 14.6 45.2 3L288 74.5 522.9 280.1c13.3 11.6 33.5 10.3 45.2-3s10.3-33.5-3-45.2L512 185.5 512 64c0-17.7-14.3-32-32-32l-32 0c-17.7 0-32 14.3-32 32l0 37.5L309.1 7.9zM352 256a64 64 0 1 0 -128 0 64 64 0 1 0 128 0zm-96 96c-44.2 0-80 35.8-80 80c0 8.8 7.2 16 16 16l192 0c8.8 0 16-7.2 16-16c0-44.2-35.8-80-80-80l-64 0z\"/></svg></span> <span class=\"sign-out-icon\" style=\"display:none\"><svg style=\"width: 24px; height: 24px; \" class=\"inline-block \"  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\"opacity=\"0.4\" d=\"M0 256C0 397.4 35.8 512 80 512c25.3 0 47.8-37.5 62.5-96L128 416c-.5 0-1.1 0-1.6 0c-.6 0-1.1-.1-1.6-.1c-1.1-.1-2.1-.3-3.2-.5c-2.1-.4-4.1-1.1-6-1.9c-3.8-1.6-7.3-4-10.2-6.9s-5.2-6.3-6.9-10.2c-.8-1.9-1.4-3.9-1.9-6c-.2-1.1-.4-2.3-.5-3.5c0-.3 0-.6-.1-.8c0-.2 0-.4 0-.7c0-.4 0-.7 0-.7c0-.5 0-.7 0-.9c0-.3 0-.6 0-.9c0 0 0-.3 0-.7c0-.2 0-.4 0-.7c0-.2 0-.4 .1-.8c0-.3 .1-.6 .1-.9c0-.2 .1-.4 .1-.7c.1-.8 .2-1.2 .3-1.7c.5-2.2 1.1-4.2 1.9-6.1c1.6-3.8 4-7.3 6.9-10.2c5.8-5.8 13.8-9.4 22.6-9.4l26.2 0c3.8-29.6 5.8-62.1 5.8-96c0-18.3-.6-36.1-1.7-53.4c-1.7-1.2-3.4-2.5-4.9-4c-.8-.8-1.6-1.6-2.2-2.5s-1.3-1.7-1.9-2.6c-1.2-1.8-2.1-3.6-2.9-5.5s-1.4-3.9-1.8-5.9c-.2-1-.3-2-.4-3s-.1-2-.2-3c0-8.3 3.1-16.5 9.4-22.8C141 63.1 112.8 0 80 0C35.8 0 0 114.6 0 256z\"/><path fill=\"currentColor\"class=\"fa-primary\" d=\"M416 48a48 48 0 1 0 -96 0 48 48 0 1 0 96 0zM221.7 175.5c9.9-9.9 23.4-15.5 37.5-15.5c1.9 0 3.8 .1 5.6 .3L233.6 254c-9.3 28 1.7 58.8 26.8 74.5l86.2 53.9-25.4 88.8c-4.9 17 5 34.7 22 39.6s34.7-5 39.6-22l28.7-100.4c5.9-20.6-2.6-42.6-20.7-53.9L334 299l30.9-82.4 5.1 12.3C385 264.7 419.9 288 458.7 288l21.3 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-21.3 0c-12.9 0-24.6-7.8-29.5-19.7l-6.3-15c-14.6-35.1-44.1-61.9-80.5-73.1l-48.7-15c-11.1-3.4-22.7-5.2-34.4-5.2c-31 0-60.8 12.3-82.7 34.3l-23.1 23.1c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l23.1-23.1zM187.2 352L128 352c-17.7 0-32 14.3-32 32s14.3 32 32 32l69.6 0c19 0 36.2-11.2 43.9-28.5L253 361.6l-9.5-6c-17.5-10.9-30.5-26.8-37.9-44.9L187.2 352z\"/></svg></span> <span class=\"caption d-none d-xl-inline-block\">Sign in</span></a>\n                </li>\n                        <li class=\"nav-menu\">\n                <button class=\"navigation-toggle\"><i class=\"fa fa-fw fa-bars\" aria-hidden=\"true\"></i></button>\n            </li>\n        </ul>\n    </div>\n</nav>\n\n    <footer class=\"footer center-content\">\n    <div class=\"footer-container center-content-container\">\n        <div class=\"footer-inner container-fluid\">\n            <div class=\"row\">\n                <div class=\"col-8 col-md-10\">\n                    <ul class=\"footer-list footer-list-horizontal\">\n                        <li><a href=\"/\">Home</a></li>\n                        <li><a href=\"/refactoring\">Refactoring</a></li>\n                        <li><a href=\"/design-patterns\">Design Patterns</a></li>\n                        <li><a href=\"/store\">Premium Content</a></li>\n                        <li><a href=\"https://gitbybit.com/\">Git Course</a></li>\n                        <li><a href=\"https://refactoring.userecho.com/\" rel=\"nofollow\" class=\"userecho-public\">Forum</a></li>\n                        <li><a href=\"https://refactoring.userecho.com/\" rel=\"nofollow\" class=\"userecho-private\">Contact us</a></li>\n                    </ul>\n                </div>\n                <div class=\"col-4 col-md-2\">\n                    <ul class=\"footer-list footer-list-iconic footer-list-right\">\n                                                    <li><a href=\"https://www.facebook.com/refactoring.guru\"><i class=\"fa fa-facebook-official\"></i></a></li>\n                                                <li><a href=\"/sendy/form\" rel=\"nofollow\"><i class=\"fa fa-envelope\" aria-hidden=\"true\"></i></a></li>\n                        <li><a href=\"https://github.com/RefactoringGuru\"><i class=\"fa fa-github-circled\"></i></a></li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"footer-second\">\n        <div class=\"footer-container center-content-container\">\n            <div class=\"footer-inner container-fluid\">\n                <div class=\"row\">\n                    <div class=\"col-12 col-sm-6\">\n                        <i class=\"fa fa-fw fa-copyright\"></i> 2014-2025 <a href=\"/\">Refactoring.Guru</a>. <span style=\"white-space: nowrap\">All rights reserved.</span><br>\n                        <i class=\"fa fa-fw fa-image\"></i> Illustrations by <a href=\"http://zhart.us/\" rel=\"nofollow\"><span style=\"white-space: nowrap\">Dmitry Zhart</span></a>\n                    </div>\n                    <div class=\"footer-links-right col-12 col-sm-6 mt-4 mt-sm-0\">\n                        <ul class=\"footer-list footer-list-horizontal footer-list-right\">\n                            <li><a href=\"/terms\"><span>Terms &amp; Conditions</span></a>\n                            </li>\n                            <li><a href=\"/privacy-policy\"><span>Privacy Policy</span></a>\n                            </li>\n                            <li><a href=\"/content-usage-policy\"><span>Content Usage Policy</span></a>\n                            </li>\n                            <li><a href=\"/site-about\"><span>About us</span></a>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n                                    <div class=\"row\">\n                        <div class=\"col-12 col-sm-4\">\n                            <div class=\"mt-4\">\n                                                                    <b>Ukrainian office:</b><br>\n                                    <object class=\"fa-fw\" style=\"height: 0.8rem; filter: invert(50%);\"  type=\"image/svg+xml\" data=\"/images/content-public/icons/fa-building.svg?id=afddb5806968b0a9acfc1df75a181234\">\n                                        <img class=\"fa-fw\" style=\"height: 0.8rem;\" src=\"/images/content-public/icons/fa-building.svg?id=afddb5806968b0a9acfc1df75a181234\" alt=\"Organization address\"/>\n                                    </object> FOP Olga Skobeleva<br>\n                                    <svg style=\"width: 16px; height: 16px; margin-right: 1px; fill: currentColor;\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\"><path d=\"M352 192c0-88.4-71.6-160-160-160S32 103.6 32 192c0 15.6 5.4 37 16.6 63.4c10.9 25.9 26.2 54 43.6 82.1c34.1 55.3 74.4 108.2 99.9 140c25.4-31.8 65.8-84.7 99.9-140c17.3-28.1 32.7-56.3 43.6-82.1C346.6 229 352 207.6 352 192zm32 0c0 87.4-117 243-168.3 307.2c-12.3 15.3-35.1 15.3-47.4 0C117 435 0 279.4 0 192C0 86 86 0 192 0S384 86 384 192zm-240 0a48 48 0 1 0 96 0 48 48 0 1 0 -96 0zm48 80a80 80 0 1 1 0-160 80 80 0 1 1 0 160z\"/></svg> Abolmasova 7<br>\n                                    <span style=\"margin-left: 21px;\">Kyiv, Ukraine, 02002</span><br>\n                                    <i class=\"fa fa-fw fa-envelope\"></i>  Email: support@refactoring.guru\n                                \n                            </div>\n                        </div>\n                        <div class=\"col-12 col-sm-4\">\n                            <div class=\"mt-4\">\n                                <b>Spanish office:</b><br>\n                                <object class=\"fa-fw\" style=\"height: 0.8rem; filter: invert(50%);\"  type=\"image/svg+xml\" data=\"/images/content-public/icons/fa-building.svg?id=afddb5806968b0a9acfc1df75a181234\">\n                                    <img class=\"fa-fw\" style=\"height: 0.8rem;\" src=\"/images/content-public/icons/fa-building.svg?id=afddb5806968b0a9acfc1df75a181234\" alt=\"Organization address\"/>\n                                </object> Oleksandr Shvets<br>\n                                <svg style=\"width: 16px; height: 16px; margin-right: 1px; fill: currentColor;\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\"><path d=\"M352 192c0-88.4-71.6-160-160-160S32 103.6 32 192c0 15.6 5.4 37 16.6 63.4c10.9 25.9 26.2 54 43.6 82.1c34.1 55.3 74.4 108.2 99.9 140c25.4-31.8 65.8-84.7 99.9-140c17.3-28.1 32.7-56.3 43.6-82.1C346.6 229 352 207.6 352 192zm32 0c0 87.4-117 243-168.3 307.2c-12.3 15.3-35.1 15.3-47.4 0C117 435 0 279.4 0 192C0 86 86 0 192 0S384 86 384 192zm-240 0a48 48 0 1 0 96 0 48 48 0 1 0 -96 0zm48 80a80 80 0 1 1 0-160 80 80 0 1 1 0 160z\"/></svg> Avda Pamplona 64<br>\n                                <span style=\"margin-left: 21px;\">Pamplona, Spain, 31009</span><br>\n                                <i class=\"fa fa-fw fa-envelope\"></i>  Email: support@refactoring.guru\n                            </div>\n                        </div>\n                    </div>\n                            </div>\n        </div>\n    </div>\n</footer>\n\n</div>\n\n\n    <script defer>\n    var CodeMirrorScripts = [\"/js/codemirror.min.js?id=f7ae4adf14bd00338caf8e95da733cc9\"];\n</script>\n\n\n\n    <script>window.loadContent = true;window.loadCart = true;</script>\n</body>\n</html>\n"},
{"title": null, "url": "https://refactoring.guru/design-patterns/iterator", "raw_html": "<!DOCTYPE html>\n<html lang=\"en\" dir=\"ltr\">\n<head prefix=\"og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# website: http://ogp.me/ns/website#\">\n    <meta charset=\"utf-8\">\n    <title>Iterator</title>\n\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n    <meta name=\"theme-color\" content=\"#A2E2FD\" />\n\n            <style>\n        .buy-widget-excl-local-taxes {\n            display: none;\n        }\n    </style>\n    \n    <link rel=\"preload\" href=\"/fonts/PTSans/ptsans-regular_en.woff2?1\" as=\"font\" type=\"font/woff2\" crossorigin>\n    <link rel=\"preload\" href=\"/fonts/PTSans/ptsans-bold_en.woff2?1\" as=\"font\" type=\"font/woff2\" crossorigin>\n        <link rel=\"preload\" href=\"/fonts/fontello/fontawesome.woff2?15843843\" as=\"font\" type=\"font/woff2\" crossorigin>\n    <link rel=\"preload\" href=\"/fonts/FiraCode/woff2/FiraCode-Regular_latin.woff2\" as=\"font\" type=\"font/woff2\" crossorigin>\n        <link rel=\"preconnect dns-prefetch\" href=\"https://cdn.paddle.com\">\n    <link rel=\"preconnect dns-prefetch\" href=\"https://www.googletagmanager.com\">\n\n    <link rel=\"alternate\" href=\"https://refactoring.guru/design-patterns/iterator\" hreflang=\"x-default\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/es/design-patterns/iterator\" hreflang=\"es\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/fr/design-patterns/iterator\" hreflang=\"fr\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/ja/design-patterns/iterator\" hreflang=\"ja\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/ko/design-patterns/iterator\" hreflang=\"ko\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/pl/design-patterns/iterator\" hreflang=\"pl\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/pt-br/design-patterns/iterator\" hreflang=\"pt-br\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/ru/design-patterns/iterator\" hreflang=\"ru\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/uk/design-patterns/iterator\" hreflang=\"uk\"/>\n    <link rel=\"alternate\" href=\"https://refactoringguru.cn/design-patterns/iterator\" hreflang=\"zh\"/>\n\n    <meta name=\"description\" content=\"Iterator is a behavioral design pattern that lets you traverse elements of a collection without exposing its underlying representation (list, stack, tree, etc.).\">\n\n    <link rel=\"canonical\" href=\"https://refactoring.guru/design-patterns/iterator\"/>\n\n    <link rel=\"icon\" type=\"image/x-icon\" href=\"/favicon.png\"/>\n\n        <meta property=\"fb:app_id\" content=\"666819623386327\"/>\n        <meta property=\"og:type\" content=\"website\"/>\n        <meta property=\"og:image\" content=\"https://refactoring.guru/images/refactoring/social/facebook-share-preview.png?id=dbf9e98269595be86eb668f365be6868\"/>\n    \n                    <link rel=\"stylesheet\" href=\"/css/public-packed.min.css?id=aaefab4da343b914b8dda9973604a9e8\">\n        <style type=\"text/css\">\n                    @font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_cyrillic-ext.woff2?1) format(\"woff2\");unicode-range:U+0460-052F,U+1C80-1C88,U+20B4,U+2DE0-2DFF,U+A640-A69F,U+FE2E-FE2F}@font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_cyrillic.woff2?1) format(\"woff2\");unicode-range:U+0400-045F,U+0490-0491,U+04B0-04B1,U+2116}@font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_latin-ext.woff2?1) format(\"woff2\");unicode-range:U+0100-024F,U+0259,U+1E00-1EFF,U+2020,U+20A0-20AB,U+20AD-20CF,U+2113,U+2C60-2C7F,U+A720-A7FF}@font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_latin.woff2?1) format(\"woff2\");unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}@font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_en.woff2?1) format(\"woff2\");unicode-range:U+0-FF,U+131,U+142,U+152,U+153,U+2BB,U+2BC,U+2C6,U+2DA,U+2DC,U+420,U+423,U+430,U+438-43A,U+43D,U+440,U+441,U+443,U+44C,U+457,U+2000-206F,U+2074,U+20AA-20AC,U+20B4,U+20B9,U+20BA,U+20BD,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_cyrillic-ext.woff2?1) format(\"woff2\");unicode-range:U+0460-052F,U+1C80-1C88,U+20B4,U+2DE0-2DFF,U+A640-A69F,U+FE2E-FE2F}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_cyrillic.woff2?1) format(\"woff2\");unicode-range:U+0400-045F,U+0490-0491,U+04B0-04B1,U+2116}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_latin-ext.woff2?1) format(\"woff2\");unicode-range:U+0100-024F,U+0259,U+1E00-1EFF,U+2020,U+20A0-20AB,U+20AD-20CF,U+2113,U+2C60-2C7F,U+A720-A7FF}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_latin.woff2?1) format(\"woff2\");unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_en.woff2?1) format(\"woff2\");unicode-range:U+0-FF,U+131,U+142,U+152,U+153,U+2BB,U+2BC,U+2C6,U+2DA,U+2DC,U+420,U+423,U+430,U+438-43A,U+43D,U+440,U+441,U+443,U+44C,U+457,U+2000-206F,U+2074,U+20AA-20AC,U+20B4,U+20B9,U+20BA,U+20BD,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}\n            </style>\n\n    \n            <script defer src=\"/js/public.min.js?id=1f19fe18ffe0fc844ede8a0f2ee64202\"></script>\n        <script defer src=\"/js/checkout.min.js?id=b4da9c5bd8b1cf504447c07ae8b7cd44\"></script>\n            <script defer src=\"https://cdn.paddle.com/paddle/v2/paddle.js\"></script>\n    <script async src=\"https://www.googletagmanager.com/gtag/js?id=G-SR8Y3GYQYC\"></script>\n\n    <script type=\"application/ld+json\">\n        {\"@context\": \"http://schema.org\", \"@graph\": [{\"@type\":\"Person\",\"@id\":\"https://refactoring.guru/#founder\",\"name\":\"Alexander Shvets\"},{\"@type\":\"Organization\",\"@id\":\"https://refactoring.guru/#organization\",\"name\":\"Refactoring.Guru\",\"description\":\"Refactoring.Guru makes it easy for you to discover everything you need to know about refactoring, design patterns, SOLID principles, and other smart programming topics.\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https://refactoring.guru/#organizationlogo\",\"url\":\"https://refactoring.guru/images/content-public/logos/logo-plain.png\",\"caption\":\"Refactoring.Guru\"},\"logo\":{\"@id\":\"https://refactoring.guru/#organizationlogo\"},\"founder\":{\"@id\":\"https://refactoring.guru/#founder\"},\"sameAs\":[\"https://www.facebook.com/refactoring.guru\",\"https://twitter.com/RefactoringGuru\",\"https://github.com/RefactoringGuru\"]},{\"@type\":\"WebSite\",\"@id\":\"https://refactoring.guru/#website\",\"url\":\"https://refactoring.guru/\",\"name\":\"Refactoring.Guru\",\"description\":\"Refactoring.Guru makes it easy for you to discover everything you need to know about refactoring, design patterns, SOLID principles, and other smart programming topics.\",\"author\":{\"@id\":\"https://refactoring.guru/#founder\"},\"publisher\":{\"@id\":\"https://refactoring.guru/#organization\"},\"copyrightYear\":2014},{\"@type\":\"WebPage\",\"@id\":\"https://refactoring.guru/design-patterns/iterator#webpage\",\"url\":\"https://refactoring.guru/design-patterns/iterator\",\"inLanguage\":\"en\",\"name\":\"Iterator\",\"description\":\"Iterator is a behavioral design pattern that lets you traverse elements of a collection without exposing its underlying representation (list, stack, tree, etc.).\",\"isPartOf\":{\"@id\":\"https://refactoring.guru#website\"},\"breadcrumb\":{\"@id\":\"https://refactoring.guru/design-patterns/iterator#breadcrumb\"},\"primaryImageOfPage\":{\"@id\":\"https://refactoring.guru/design-patterns/iterator#primaryimage\"},\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https://refactoring.guru/design-patterns/iterator#primaryimage\",\"url\":\"https://refactoring.guru/images/patterns/content/iterator/iterator-en-3x.png\",\"width\":1920,\"height\":1200}},{\"@type\":\"Article\",\"@id\":\"https://refactoring.guru/design-patterns/iterator#article\",\"isPartOf\":{\"@id\":\"https://refactoring.guru/design-patterns/iterator#webpage\"},\"mainEntityOfPage\":{\"@id\":\"https://refactoring.guru/design-patterns/iterator#webpage\"},\"author\":{\"@id\":\"https://refactoring.guru#founder\"},\"publisher\":{\"@id\":\"https://refactoring.guru#organization\"},\"headline\":\"Iterator\",\"datePublished\":\"2024-01-01\",\"dateModified\":\"2025-01-01\",\"articleSection\":\"Design Patterns\",\"image\":{\"@id\":\"https://refactoring.guru/design-patterns/iterator#primaryimage\"}},{\"@type\":\"BreadcrumbList\",\"@id\":\"https://refactoring.guru/design-patterns/iterator#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https://refactoring.guru\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Design Patterns\",\"item\":\"https://refactoring.guru/design-patterns\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"Behavioral Patterns\",\"item\":\"https://refactoring.guru/design-patterns/behavioral-patterns\"}]}] }\n    </script>\n\n    <script>\nfunction extend(){var extended={};var deep=false;var i=0;var length=arguments[\"length\"];if(Object[\"prototype\"][\"toString\"][\"call\"](arguments[0])=== '[object Boolean]'){deep= arguments[0];i++};var merge=function(obj){for(var prop in obj){if(Object[\"prototype\"][\"hasOwnProperty\"][\"call\"](obj,prop)){if(deep&& Object[\"prototype\"][\"toString\"][\"call\"](obj[prop])=== '[object Object]'){extended[prop]= extend(true,extended[prop],obj[prop])}else {extended[prop]= obj[prop]}}}};for(;i< length;i++){var obj=arguments[i];merge(obj)};return extended}\nfunction defer(method) {if (window.jQuery) {method();} else {setTimeout(function() { defer(method) }, 50);}}\n</script>\n<script>\n+function(sd){sd = (typeof sd === \"string\") ? JSON.parse(atob(sd)) : sd;for(var property in sd){if(window[property]!== null&&  typeof window[property]=== 'object'){window[property]= extend(true,window[property],sd[property])}else {window[property]= sd[property]}}}(\"eyJsb2NhbGUiOiJlbiIsImxvY2FsZV9wcmVmaXgiOiIiLCJsb2NhbGl6ZWRfdXJsX3ByZWZpeCI6Imh0dHBzOlwvXC9yZWZhY3RvcmluZy5ndXJ1XC8iLCJ1cmxfcHJlZml4IjoiaHR0cHM6XC9cL3JlZmFjdG9yaW5nLmd1cnVcLyIsImxvY2FsaXplZF91cmxfcHJlZml4X20iOiJodHRwczpcL1wvcmVmYWN0b3JpbmcuZ3VydVwvIiwidXJsX3ByZWZpeF9tIjoiaHR0cHM6XC9cL3JlZmFjdG9yaW5nLmd1cnVcLyIsInVzZXJfZWNob19hbGlhcyI6InJlZmFjdG9yaW5nIiwidXNlcl9lY2hvX2hvc3QiOiJmZWVkYmFjay5yZWZhY3RvcmluZy5ndXJ1IiwidXNlcl9lY2hvX3ByaXZhdGVfZm9ydW0iOiIyIiwidXNlcl9lY2hvX2xvY2FsZSI6ImVuIiwidXNlcl9lY2hvX3B1YmxpY19mb3J1bSI6IjMiLCJ1c2VyX2VjaG9fcHVibGljX2ZvcnVtX3VybCI6Imh0dHBzOlwvXC9mZWVkYmFjay5yZWZhY3RvcmluZy5ndXJ1XC8iLCJ1c2VyX2VjaG9fc3NvX3Rva2VuIjoiIn0=\");\n</script>\n\n<script>\n    window.dataLayer = window.dataLayer || [];\n    function gtag(){dataLayer.push(arguments);}\n    gtag('js', new Date());\n            gtag('set', 'linker', {'domains': [\"refactoring.guru,refactoringguru.cn\"]});\n        gtag('config', 'G-SR8Y3GYQYC', {\n        // Disable default page view, because we're going to report them on our own.\n        // This is done to report traffic on localized domains as part of the main website traffic\n        // See the Chinese overrides below.\n        send_page_view: false,\n    });\n</script>\n\n<script>\n    (() => {\n        // On first page view after returning from social network, we need to send the social login event.\n        (function detectSocialLogin() {\n            let getCookie = function (name) {\n                var nameEQ = name + \"=\";\n                var ca = document.cookie.split(';');\n                for (var i = 0; i < ca.length; i++) {\n                    var c = ca[i];\n                    while (c.charAt(0) == ' ') c = c.substring(1, c.length);\n                    if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);\n                }\n                return null;\n            };\n            window.social_login_provider = window.social_login_provider || getCookie('social_login_provider');\n            if (window.social_login_provider) {\n                gtag('set', {referrer: null});\n                gtag('event', 'login', {\"method\": window.social_login_provider});\n                // Delete cookie.\n                document.cookie = 'social_login_provider=; Path=/; Max-Age=-99999999;';\n            }\n        })();\n\n        function trackPageView(location, title) {\n            location = location || document.location.href;\n            title = title || document.title;\n\n            // This is show on https://refactoringguru.cn/ and alike.\n            if (typeof window.analytics_path_prefix === 'string') {\n                if (/^(https?:\\/\\/[^\\/]+?)\\/$/.test(location)) {\n                    location = location.replace(/(https?:\\/\\/[^\\/]+?)\\//, '$1' + window.analytics_path_prefix);\n                } else {\n                    location = location.replace(/(https?:\\/\\/[^\\/]+?)\\//, '$1' + window.analytics_path_prefix + '/');\n                }\n                gtag('set', {\n                    'page_location': location\n                });\n            }\n\n            // This is show on https://refactoring.guru/zh/login and alike.\n            if (typeof window.analytics_location_prefix === 'string') {\n                location = location.replace(/(https?:\\/\\/[^\\/]+?)\\//, window.analytics_location_prefix);\n                gtag('set', {\n                    'page_location': location\n                });\n            }\n\n            gtag('event', 'page_view', {\n                page_location: location,\n                page_title: title,\n                locale: window.locale ?? 'en'\n            });\n        }\n\n        if (window.loadContent) {\n            window.onPageLoad = window.onPageLoad || [];\n            window.onPageLoad.push({\n                func: function (context) {\n                    trackPageView(window.location.origin + context.canonicalPath, context.title);\n                },\n                afterAll: true,\n            });\n        }\n        else {\n            trackPageView();\n        }\n    })();\n</script>\n\n\n</head>\n<body class=\"locale-en   announcement   iterator\" data-body_class=\"iterator\">\n\n<div class=\"body-holder\">\n\n            <div class=\"announcement-block announcement-block-summer prom\" data-id=\"DIDP-announcement\" data-creative-id=\"en\" data-position=\"top\">\n        <span class=\"beach-and-sea\">\n            <span class=\"a1\"></span>\n            <span class=\"a2\"><span class=\"wave\"></span></span>\n            <span class=\"yacht\"></span>\n        </span>\n        <a href=\"/store\">\n            <img src=\"/images/content-public/ann/summer/sunbed.svg?id=b1e7314a63715a13870a6bd1a43613f7\" loading=\"lazy\" style=\"width: 32px; height:32px;vertical-align: middle; scale: -1 1 1;\">\n            <span class=\"announcement-link-text\">Summer SALE</span>\n            <img src=\"/images/content-public/ann/summer/reading-book.svg?id=36006ea720df8c171968cf613e8ea164\" loading=\"lazy\" style=\"width: 32px; height:32px;vertical-align: middle;\">\n        </a>\n    </div>\n\n    \n    <div class=\"cart-placeholder\">\n    <div class=\"cart-block-container\" style=\"display:none\">\n        <div class=\"cart-block btn-group\">\n            <a href=\"#checkout\" class=\"btn cart open-checkout\">\n                <span class=\"cart-text\"></span>&nbsp;<strong class=\"cart-total font-money\"></strong>\n            </a><a href=\"#checkout\" class=\"btn btn-secondary checkout open-checkout\"><i class=\"fa fa-shopping-cart\" aria-hidden=\"true\"></i> <span class=\"btn-text-span d-none d-sm-inline-block d-lg-none d-hg-inline-block\"></span></a>\n        </div>\n    </div>\n</div>\n    <main role=\"main\" class=\"main-content top-content center-content \" data-page_class=\"\">\n        <div class=\"main-content-container center-content-container\">\n                        <div class=\"pattern page text\">\n<article>\n    <div class=\"breadcrumb\">\n                                    <a class=\"home\" href=\"/\"><i class=\"fa fa-home\" aria-hidden=\"true\"></i></a>\n                                                / <a class=\"type\" href=\"/design-patterns\">Design Patterns</a>\n                                                / <a class=\"type\" href=\"/design-patterns/behavioral-patterns\">Behavioral Patterns</a>\n                        </div>\n    <h1 class=\"title\">Iterator</h1>\n\n    <script type=\"text/javascript\">\n        // Shorten examples titles for users.\n        var h1 = document.getElementsByTagName(\"H1\")[0];\n        if (h1.offsetHeight > 160) {\n            h1.className += ' smaller';\n        }\n\n        // Small beautification for pattern examples.\n        var title = h1.innerHTML;\n        title = title.replace(/^(Java|C\\+\\+|C#|PHP|Python|Ruby|Delphi): (.*)$/, '<strong>$1:</strong> $2');\n        h1.innerHTML = title;\n    </script>\n\n    \n    \n\n    <div class=\"section intent\">\n<h2 id=\"intent\"><i class=\"fa fa-flip-horizontal fa-comment-alt-dots\" aria-hidden=\"true\"></i> Intent</h2>\n<p><strong>Iterator</strong> is a behavioral design pattern that lets you traverse elements of a collection without exposing its underlying representation (list, stack, tree, etc.).</p>\n<figure class=\"image\"><img src=\"/images/patterns/content/iterator/iterator-en.png?id=d19123d71d355d01b0ede4be173eb695\" alt=\"Iterator design pattern\" srcset=\"/images/patterns/content/iterator/iterator-en.png?id=d19123d71d355d01b0ede4be173eb695 640w,/images/patterns/content/iterator/iterator-en-1.5x.png?id=54aa477cafffe8f9b1b6e63c2e88c21b 960w,/images/patterns/content/iterator/iterator-en-2x.png?id=2a85705e8e5fab257802b2ce36d6d236 1280w\" sizes=\"(max-width: 720px) 100vw, 640px\" width=\"640\" style=\"aspect-ratio: 1.6;\" fetchpriority=\"high\" /></figure>\n</div>\n<div class=\"section problem\">\n<h2 id=\"problem\"><i class=\"fa fa-frown\" aria-hidden=\"true\"></i> Problem</h2>\n<p>Collections are one of the most used data types in programming. Nonetheless, a collection is just a container for a group of objects.</p>\n<figure class=\"image\"><img src=\"/images/patterns/diagrams/iterator/problem1.png?id=52ef2fe2d4920e3fed696c221fe757f2\" alt=\"Various types of collections\" srcset=\"/images/patterns/diagrams/iterator/problem1.png?id=52ef2fe2d4920e3fed696c221fe757f2 490w,/images/patterns/diagrams/iterator/problem1-1.5x.png?id=b46e39ade7de292fdcacc9790066c72f 735w,/images/patterns/diagrams/iterator/problem1-2x.png?id=1f4384c3c631be238bfc23d6eb84a0ef 980w\" sizes=\"(max-width: 720px) 100vw, 490px\" width=\"490\" style=\"aspect-ratio: 4.9;\" loading=\"lazy\" /><figcaption>\n<p>Various types of collections.</p>\n</figcaption></figure>\n<p>Most collections store their elements in simple lists. However, some of them are based on stacks, trees, graphs and other complex data structures.</p>\n<p>But no matter how a collection is structured, it must provide some way of accessing its elements so that other code can use these elements. There should be a way to go through each element of the collection without accessing the same elements over and over.</p>\n<p>This may sound like an easy job if you have a collection based on a list. You just loop over all of the elements. But how do you sequentially traverse elements of a complex data structure, such as a tree? For example, one day you might be just fine with depth-first traversal of a tree. Yet the next day you might require breadth-first traversal. And the next week, you might need something else, like random access to the tree elements.</p>\n<figure class=\"image\"><img src=\"/images/patterns/diagrams/iterator/problem2.png?id=f9c1a746c787320291c85fdc2a314192\" alt=\"Various traversal algorithms\" srcset=\"/images/patterns/diagrams/iterator/problem2.png?id=f9c1a746c787320291c85fdc2a314192 600w,/images/patterns/diagrams/iterator/problem2-1.5x.png?id=7a003d020e789773e0c833d7b1df00e6 900w,/images/patterns/diagrams/iterator/problem2-2x.png?id=656b13c109d4d4960ea1f9fa993bae4c 1200w\" sizes=\"(max-width: 720px) 100vw, 600px\" width=\"600\" style=\"aspect-ratio: 3.75;\" loading=\"lazy\" /><figcaption>\n<p>The same collection can be traversed in several different ways.</p>\n</figcaption></figure>\n<p>Adding more and more traversal algorithms to the collection gradually blurs its primary responsibility, which is efficient data storage. Additionally, some algorithms might be tailored for a specific application, so including them into a generic collection class would be weird.</p>\n<p>On the other hand, the client code that’s supposed to work with various collections may not even care how they store their elements. However, since collections all provide different ways of accessing their elements, you have no option other than to couple your code to the specific collection classes.</p>\n</div>\n<div class=\"section solution\">\n<h2 id=\"solution\"><i class=\"fa fa-smile-beam\" aria-hidden=\"true\"></i> Solution</h2>\n<p>The main idea of the Iterator pattern is to extract the traversal behavior of a collection into a separate object called an <em>iterator</em>.</p>\n<figure class=\"image\"><img src=\"/images/patterns/diagrams/iterator/solution1.png?id=2f5fbcce6099d8ea09b2fbb83e3e7059\" alt=\"Iterators implement various traversal algorithms\" srcset=\"/images/patterns/diagrams/iterator/solution1.png?id=2f5fbcce6099d8ea09b2fbb83e3e7059 400w,/images/patterns/diagrams/iterator/solution1-1.5x.png?id=68612372ede6e5029403d38b381fdc05 600w,/images/patterns/diagrams/iterator/solution1-2x.png?id=dcebcad4c197bfa5f25f680382d0e5ac 800w\" sizes=\"(max-width: 720px) 100vw, 400px\" width=\"400\" style=\"aspect-ratio: 0.85;\" loading=\"lazy\" /><figcaption>\n<p>Iterators implement various traversal algorithms. Several iterator objects can traverse the same collection at the same time.</p>\n</figcaption></figure>\n<p>In addition to implementing the algorithm itself, an iterator object encapsulates all of the traversal details, such as the current position and how many elements are left till the end. Because of this, several iterators can go through the same collection at the same time, independently of each other.</p>\n<p>Usually, iterators provide one primary method for fetching elements of the collection. The client can keep running this method until it doesn’t return anything, which means that the iterator has traversed all of the elements.</p>\n<p>All iterators must implement the same interface. This makes the client code compatible with any collection type or any traversal algorithm as long as there’s a proper iterator. If you need a special way to traverse a collection, you just create a new iterator class, without having to change the collection or the client.</p>\n</div>\n<div class=\"section analogy\">\n<h2 id=\"analogy\"><i class=\"fa fa-car-side\" aria-hidden=\"true\"></i> Real-World Analogy</h2>\n<figure class=\"image\"><img src=\"/images/patterns/content/iterator/iterator-comic-1-en.png?id=fa30f5a944179e6fb12203fef5d5ed9d\" alt=\"Various ways to walk around Rome\" srcset=\"/images/patterns/content/iterator/iterator-comic-1-en.png?id=fa30f5a944179e6fb12203fef5d5ed9d 640w,/images/patterns/content/iterator/iterator-comic-1-en-1.5x.png?id=857dcd2ebfa02428843767f526ec8813 960w,/images/patterns/content/iterator/iterator-comic-1-en-2x.png?id=b90df2dbda9280336db189924683e121 1280w\" sizes=\"(max-width: 720px) 100vw, 640px\" width=\"640\" style=\"aspect-ratio: 2.13;\" loading=\"lazy\" /><figcaption>\n<p>Various ways to walk around Rome.</p>\n</figcaption></figure>\n<p>You plan to visit Rome for a few days and visit all of its main sights and attractions. But once there, you could waste a lot of time walking in circles, unable to find even the Colosseum.</p>\n<p>On the other hand, you could buy a virtual guide app for your smartphone and use it for navigation. It’s smart and inexpensive, and you could be staying at some interesting places for as long as you want.</p>\n<p>A third alternative is that you could spend some of the trip’s budget and hire a local guide who knows the city like the back of his hand. The guide would be able to tailor the tour to your likings, show you every attraction and tell a lot of exciting stories. That’ll be even more fun; but, alas, more expensive, too.</p>\n<p>All of these options—the random directions born in your head, the smartphone navigator or the human guide—act as iterators over the vast collection of sights and attractions located in Rome.</p>\n</div>\n<div class=\"section structure-container\">\n<h2 id=\"structure\"><i class=\"fa fa-sitemap\" aria-hidden=\"true\"></i> Structure</h2>\n<div class=\"structure\">\n<div class=\"struct-image1 struct-image\">\n<figure class=\"image\"><img class=\"structure-img-non-indexed d-none d-xl-block\" src=\"/images/patterns/diagrams/iterator/structure.png?id=35ea851f8f6bbe51d79eb91e6e6519d0\" alt=\"Structure of the Iterator design pattern\" srcset=\"/images/patterns/diagrams/iterator/structure.png?id=35ea851f8f6bbe51d79eb91e6e6519d0 480w,/images/patterns/diagrams/iterator/structure-1.5x.png?id=19d4c2130ab2e3bd718f87e956fcd873 720w,/images/patterns/diagrams/iterator/structure-2x.png?id=b7b4708d3f279dd046eb1692f1cba710 960w\" sizes=\"(max-width: 720px) 100vw, 480px\" width=\"480\" style=\"aspect-ratio: 1.12;\" loading=\"lazy\" /><img class=\"structure-img-indexed d-xl-none\" src=\"/images/patterns/diagrams/iterator/structure-indexed.png?id=7bc28907ff6b480db6635a93ebaa10ff\" alt=\"Structure of the Iterator design pattern\" srcset=\"/images/patterns/diagrams/iterator/structure-indexed.png?id=7bc28907ff6b480db6635a93ebaa10ff 520w,/images/patterns/diagrams/iterator/structure-indexed-1.5x.png?id=32fde4c4c1cbfbe07aa6e716e5ac2346 780w,/images/patterns/diagrams/iterator/structure-indexed-2x.png?id=d809428b2262e2013972fe69d2434473 1040w\" sizes=\"(max-width: 720px) 100vw, 520px\" width=\"520\" style=\"aspect-ratio: 1.33;\" loading=\"lazy\" /></figure>\n</div>\n<ol><li class=\"struct-li1\">\n<p>The <strong>Iterator</strong> interface declares the operations required for traversing a collection: fetching the next element, retrieving the current position, restarting iteration, etc.</p>\n</li>\n<li class=\"struct-li2\">\n<p><strong>Concrete Iterators</strong> implement specific algorithms for traversing a collection. The iterator object should track the traversal progress on its own. This allows several iterators to traverse the same collection independently of each other.</p>\n</li>\n<li class=\"struct-li3\">\n<p>The <strong>Collection</strong> interface declares one or multiple methods for getting iterators compatible with the collection. Note that the return type of the methods must be declared as the iterator interface so that the concrete collections can return various kinds of iterators.</p>\n</li>\n<li class=\"struct-li4\">\n<p><strong>Concrete Collections</strong> return new instances of a particular concrete iterator class each time the client requests one. You might be wondering, where’s the rest of the collection’s code? Don’t worry, it should be in the same class. It’s just that these details aren’t crucial to the actual pattern, so we’re omitting them.</p>\n</li>\n<li class=\"struct-li5\">\n<p>The <strong>Client</strong> works with both collections and iterators via their interfaces. This way the client isn’t coupled to concrete classes, allowing you to use various collections and iterators with the same client code.</p>\n<p>Typically, clients don’t create iterators on their own, but instead get them from collections. Yet, in certain cases, the client can create one directly; for example, when the client defines its own special iterator.</p>\n</li></ol>\n<style structure type=\"text/css\" >\n@media (min-width: 1200px) {\n.structure {\nmargin: 0;\nwidth: auto;\nheight: 600px;\n}\n\n.struct-image1 {\nleft: 190px;\ntop: 0px;\n}\n\n.struct-li1 {\nleft: 0px;\ntop: 20px;\nwidth: 220px;\n}\n\n.struct-li2 {\nleft: 0px;\ntop: 210px;\nwidth: 180px;\n}\n\n.struct-li3 {\nleft: 680px;\ntop: 0px;\nwidth: 230px;\n}\n\n.struct-li4 {\nleft: 680px;\ntop: 250px;\nwidth: 230px;\n}\n\n.struct-li5 {\nleft: 200px;\ntop: 440px;\nwidth: 460px;\n}\n}\n\n</style>\n</div></div>\n<div class=\"section pseudocode\">\n<h2 id=\"pseudocode\"><i class=\"fa fa-hashtag\" aria-hidden=\"true\"></i> Pseudocode</h2>\n<p>In this example, the <strong>Iterator</strong> pattern is used to walk through a special kind of collection which encapsulates access to Facebook’s social graph. The collection provides several iterators that can traverse profiles in various ways.</p>\n<figure class=\"image\"><img src=\"/images/patterns/diagrams/iterator/example.png?id=f2a24ef3787bf80ed450709240506ff2\" alt=\"Structure of the Iterator pattern example\" srcset=\"/images/patterns/diagrams/iterator/example.png?id=f2a24ef3787bf80ed450709240506ff2 600w,/images/patterns/diagrams/iterator/example-1.5x.png?id=cab0e1459ffc3721579a3e7d6a4e9022 900w,/images/patterns/diagrams/iterator/example-2x.png?id=73c3e55f75ca0250bd84e8a1d8cc88d2 1200w\" sizes=\"(max-width: 720px) 100vw, 600px\" width=\"600\" style=\"aspect-ratio: 0.95;\" loading=\"lazy\" /><figcaption>\n<p>Example of iterating over social profiles.</p>\n</figcaption></figure>\n<p>The ‘friends’ iterator can be used to go over the friends of a given profile. The ‘colleagues’ iterator does the same, except it omits friends who don’t work at the same company as a target person. Both iterators implement a common interface which allows clients to fetch profiles without diving into implementation details such as authentication and sending REST requests.</p>\n<p>The client code isn’t coupled to concrete classes because it works with collections and iterators only through interfaces. If you decide to connect your app to a new social network, you simply need to provide new collection and iterator classes without changing the existing code.</p>\n<figure class=\"code\">\n<pre class=\"code\" lang=\"pseudocode\">// The collection interface must declare a factory method for\n// producing iterators. You can declare several methods if there\n// are different kinds of iteration available in your program.\ninterface SocialNetwork is\n    method createFriendsIterator(profileId):ProfileIterator\n    method createCoworkersIterator(profileId):ProfileIterator\n\n\n// Each concrete collection is coupled to a set of concrete\n// iterator classes it returns. But the client isn't, since the\n// signature of these methods returns iterator interfaces.\nclass Facebook implements SocialNetwork is\n    // ... The bulk of the collection's code should go here ...\n\n    // Iterator creation code.\n    method createFriendsIterator(profileId) is\n        return new FacebookIterator(this, profileId, &quot;friends&quot;)\n    method createCoworkersIterator(profileId) is\n        return new FacebookIterator(this, profileId, &quot;coworkers&quot;)\n\n\n// The common interface for all iterators.\ninterface ProfileIterator is\n    method getNext():Profile\n    method hasMore():bool\n\n\n// The concrete iterator class.\nclass FacebookIterator implements ProfileIterator is\n    // The iterator needs a reference to the collection that it\n    // traverses.\n    private field facebook: Facebook\n    private field profileId, type: string\n\n    // An iterator object traverses the collection independently\n    // from other iterators. Therefore it has to store the\n    // iteration state.\n    private field currentPosition\n    private field cache: array of Profile\n\n    constructor FacebookIterator(facebook, profileId, type) is\n        this.facebook = facebook\n        this.profileId = profileId\n        this.type = type\n\n    private method lazyInit() is\n        if (cache == null)\n            cache = facebook.socialGraphRequest(profileId, type)\n\n    // Each concrete iterator class has its own implementation\n    // of the common iterator interface.\n    method getNext() is\n        if (hasMore())\n            result = cache[currentPosition]\n            currentPosition++\n            return result\n\n    method hasMore() is\n        lazyInit()\n        return currentPosition &lt; cache.length\n\n\n// Here is another useful trick: you can pass an iterator to a\n// client class instead of giving it access to a whole\n// collection. This way, you don't expose the collection to the\n// client.\n//\n// And there's another benefit: you can change the way the\n// client works with the collection at runtime by passing it a\n// different iterator. This is possible because the client code\n// isn't coupled to concrete iterator classes.\nclass SocialSpammer is\n    method send(iterator: ProfileIterator, message: string) is\n        while (iterator.hasMore())\n            profile = iterator.getNext()\n            System.sendEmail(profile.getEmail(), message)\n\n\n// The application class configures collections and iterators\n// and then passes them to the client code.\nclass Application is\n    field network: SocialNetwork\n    field spammer: SocialSpammer\n\n    method config() is\n        if working with Facebook\n            this.network = new Facebook()\n        if working with LinkedIn\n            this.network = new LinkedIn()\n        this.spammer = new SocialSpammer()\n\n    method sendSpamToFriends(profile) is\n        iterator = network.createFriendsIterator(profile.getId())\n        spammer.send(iterator, &quot;Very important message&quot;)\n\n    method sendSpamToCoworkers(profile) is\n        iterator = network.createCoworkersIterator(profile.getId())\n        spammer.send(iterator, &quot;Very important message&quot;)\n</pre>\n</figure>\n</div>\n<div class=\"section applicability-container\">\n<h2 id=\"applicability\"><i class=\"fa fa-lightbulb-on\" aria-hidden=\"true\"></i> Applicability</h2>\n<div class=\"applicability\">\n<div class=\"applicability-problem\">\n<p><i class=\"fa fa-fw fa-bug\" aria-hidden=\"true\"></i> Use the Iterator pattern when your collection has a complex data structure under the hood, but you want to hide its complexity from clients (either for convenience or security reasons).</p>\n</div><div class=\"applicability-solution\">\n<p><i class=\"fa fa-fw fa-bolt\" aria-hidden=\"true\"></i> The iterator encapsulates the details of working with a complex data structure, providing the client with several simple methods of accessing the collection elements. While this approach is very convenient for the client, it also protects the collection from careless or malicious actions which the client would be able to perform if working with the collection directly.</p>\n</div>\n<div class=\"applicability-problem\">\n<p><i class=\"fa fa-fw fa-bug\" aria-hidden=\"true\"></i> Use the pattern to reduce duplication of the traversal code across your app.</p>\n</div><div class=\"applicability-solution\">\n<p><i class=\"fa fa-fw fa-bolt\" aria-hidden=\"true\"></i> The code of non-trivial iteration algorithms tends to be very bulky. When placed within the business logic of an app, it may blur the responsibility of the original code and make it less maintainable. Moving the traversal code to designated iterators can help you make the code of the application more lean and clean.</p>\n</div>\n<div class=\"applicability-problem\">\n<p><i class=\"fa fa-fw fa-bug\" aria-hidden=\"true\"></i> Use the Iterator when you want your code to be able to traverse different data structures or when types of these structures are unknown beforehand.</p>\n</div><div class=\"applicability-solution\">\n<p><i class=\"fa fa-fw fa-bolt\" aria-hidden=\"true\"></i> The pattern provides a couple of generic interfaces for both collections and iterators. Given that your code now uses these interfaces, it’ll still work if you pass it various kinds of collections and iterators that implement these interfaces.</p>\n</div>\n</div></div>\n<div class=\"section checklist\">\n<h2 id=\"checklist\"><i class=\"fa fa-clipboard-list-check\" aria-hidden=\"true\"></i> How to Implement</h2>\n<ol>\n<li>\n<p>Declare the iterator interface. At the very least, it must have a method for fetching the next element from a collection. But for the sake of convenience you can add a couple of other methods, such as fetching the previous element, tracking the current position, and checking the end of the iteration.</p>\n</li>\n<li>\n<p>Declare the collection interface and describe a method for fetching iterators. The return type should be equal to that of the iterator interface. You may declare similar methods if you plan to have several distinct groups of iterators.</p>\n</li>\n<li>\n<p>Implement concrete iterator classes for the collections that you want to be traversable with iterators. An iterator object must be linked with a single collection instance. Usually, this link is established via the iterator’s constructor.</p>\n</li>\n<li>\n<p>Implement the collection interface in your collection classes. The main idea is to provide the client with a shortcut for creating iterators, tailored for a particular collection class. The collection object must pass itself to the iterator’s constructor to establish a link between them.</p>\n</li>\n<li>\n<p>Go over the client code to replace all of the collection traversal code with the use of iterators. The client fetches a new iterator object each time it needs to iterate over the collection elements.</p>\n</li>\n</ol>\n</div>\n<div class=\"section pros-cons\">\n<h2 id=\"pros-cons\"><i class=\"fa fa-balance-scale\" aria-hidden=\"true\"></i> Pros and Cons</h2>\n<div class=\"row\"><div class=\"col-sm-6\">\n<ul>\n<li><i class=\"fa fa-fw fa-check\" aria-hidden=\"true\"></i> <em>Single Responsibility Principle</em>. You can clean up the client code and the collections by extracting bulky traversal algorithms into separate classes.</li>\n<li><i class=\"fa fa-fw fa-check\" aria-hidden=\"true\"></i> <em>Open/Closed Principle</em>. You can implement new types of collections and iterators and pass them to existing code without breaking anything.</li>\n<li><i class=\"fa fa-fw fa-check\" aria-hidden=\"true\"></i> You can iterate over the same collection in parallel because each iterator object contains its own iteration state.</li>\n<li><i class=\"fa fa-fw fa-check\" aria-hidden=\"true\"></i> For the same reason, you can delay an iteration and continue it when needed.</li>\n</ul>\n</div><div class=\"col-sm-6\">\n<ul>\n<li><i class=\"fa fa-fw fa-times\" aria-hidden=\"true\"></i> Applying the pattern can be an overkill if your app only works with simple collections.</li>\n<li><i class=\"fa fa-fw fa-times\" aria-hidden=\"true\"></i> Using an iterator may be less efficient than going through elements of some specialized collections directly.</li>\n</ul>\n</div></div></div>\n<div class=\"section relations\">\n<h2 id=\"relations\"><i class=\"fa fa-exchange-alt\" aria-hidden=\"true\"></i> Relations with Other Patterns</h2>\n<ul>\n<li>\n<p>You can use <a href=\"/design-patterns/iterator\">Iterators</a> to traverse <a href=\"/design-patterns/composite\">Composite</a> trees.</p>\n</li>\n<li>\n<p>You can use <a href=\"/design-patterns/factory-method\">Factory Method</a> along with <a href=\"/design-patterns/iterator\">Iterator</a> to let collection subclasses return different types of iterators that are compatible with the collections.</p>\n</li>\n<li>\n<p>You can use <a href=\"/design-patterns/memento\">Memento</a> along with <a href=\"/design-patterns/iterator\">Iterator</a> to capture the current iteration state and roll it back if necessary.</p>\n</li>\n<li>\n<p>You can use <a href=\"/design-patterns/visitor\">Visitor</a> along with <a href=\"/design-patterns/iterator\">Iterator</a> to traverse a complex data structure and execute some operation over its elements, even if they all have different classes.</p>\n</li>\n</ul>\n</div>\n<div class=\"section implementations\">\n<h2 id=\"implementations\"><i class=\"fa fa-code\" aria-hidden=\"true\"></i> Code Examples</h2>\n<p><a href=\"/design-patterns/iterator/csharp/example\" title=\"Iterator in C#\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/csharp.svg?id=da64592defc6e86d57c39c66e9de3e58\" alt=\"Iterator in C#\" /></a>\n<a href=\"/design-patterns/iterator/cpp/example\" title=\"Iterator in C++\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/cpp.svg?id=f7782ed8b8666246bfcc3f8fefc3b858\" alt=\"Iterator in C++\" /></a>\n<a href=\"/design-patterns/iterator/go/example\" title=\"Iterator in Go\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/go.svg?id=1a89927eb99b1ea3fde7701d97970aca\" alt=\"Iterator in Go\" /></a>\n<a href=\"/design-patterns/iterator/java/example\" title=\"Iterator in Java\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/java.svg?id=e6d87e2dca08c953fe3acd1275ed4f4e\" alt=\"Iterator in Java\" /></a>\n<a href=\"/design-patterns/iterator/php/example\" title=\"Iterator in PHP\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/php.svg?id=be1906eb26b71ec1d3b93720d6156618\" alt=\"Iterator in PHP\" /></a>\n<a href=\"/design-patterns/iterator/python/example\" title=\"Iterator in Python\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/python.svg?id=6d815d43c0f7050a1151b43e51569c9f\" alt=\"Iterator in Python\" /></a>\n<a href=\"/design-patterns/iterator/ruby/example\" title=\"Iterator in Ruby\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/ruby.svg?id=b065b718c914bf8e960ef731600be1eb\" alt=\"Iterator in Ruby\" /></a>\n<a href=\"/design-patterns/iterator/rust/example\" title=\"Iterator in Rust\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/rust.svg?id=1f5698a4b5ae23fe79413511747e4a87\" alt=\"Iterator in Rust\" /></a>\n<a href=\"/design-patterns/iterator/swift/example\" title=\"Iterator in Swift\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/swift.svg?id=0b716c2d52ec3a48fbe91ac031070c1d\" alt=\"Iterator in Swift\" /></a>\n<a href=\"/design-patterns/iterator/typescript/example\" title=\"Iterator in TypeScript\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/typescript.svg?id=2239d0f16cb703540c205dd8cb0c0cb7\" alt=\"Iterator in TypeScript\" /></a></p>\n</div>\n\n\n    <div class=\"banner-set2\" id=\"book-promo\">\n            <div class=\"prom banner-content banner-bg banner-striped banner-with-image\" data-id=\"DP: 1: Support our free website and own the eBook!\" data-creative-id=\"standard-en\" data-position=\"content_bottom\">\n                <div class=\"banner-image\">\n                    <a href=\"/design-patterns/book\">\n                        <img width=\"200\" height=\"200\" loading=\"lazy\" src=\"/images/patterns/banners/patterns-book-banner-3.png?id=7d445df13c80287beaab234b4f3b698c\" srcset=\"/images/patterns/banners/patterns-book-banner-3-2x.png?id=0cc3f77ab421d1a5c02ee46488231c3a 2x\">\n                    </a>\n                </div>\n\n                <div class=\"banner-text\">\n                    <h3 class=\"title\">Support our free website and own the eBook!</h3>\n                    <ul style=\"font-size: 14px;\">\n                        <li style=\"margin: 0;\">22 design patterns and 8 principles explained in depth.</li>\n                        <li style=\"margin: 0;\">409 well-structured, easy to read, jargon-free pages.</li>\n                        <li style=\"margin: 0;\">225 clear and helpful illustrations and diagrams.</li>\n                        <li style=\"margin: 0;\">An archive with code examples in 11 languages.</li>\n                        <li style=\"margin: 0;\">All devices supported: PDF/EPUB/MOBI/KFX formats.</li>\n                    </ul>\n                    <a class=\"btn btn-secondary\" href=\"/design-patterns/book\"><i class=\"fa fa-book\" aria-hidden=\"true\"></i> Learn more…</a>\n                </div>\n            </div>\n        </div>\n\n    </article>\n\n<nav class=\"prev-next\">\n                    <div class=\"next\">\n                <h4>Read next</h4>\n                <a rel=\"next\" href=\"/design-patterns/mediator\" class=\"btn btn-primary\">Mediator&nbsp;<span class=\"fa fa-arrow-right\"></span></a>\n            </div>\n                            <div class=\"prev\">\n                <h4>Return</h4>\n                <a rel=\"prev\" href=\"/design-patterns/command\" class=\"btn btn-default\"><span class=\"fa fa-arrow-left\"></span>&nbsp;Command </a>\n            </div>\n            </nav>\n</div>\n\n<aside class=\"feature content-secondary\">\n    <div class=\"prom banner-sidebar banner-removable banner-removable-patterns\" data-id=\"DP: Sidebar\" data-creative-id=\"standard-sidebar-en\" data-position=\"sidebar\">\n        <div class=\"banner-inner\">\n            <div class=\"image3d-book-right\">\n                <div class=\"image3d-cover\" style=\"background: #0b3752;\">\n                    <a href=\"/design-patterns/book\">\n                        <img width=\"250\" height=\"375\" loading=\"lazy\" src=\"/images/patterns/book/web-cover-en.png?id=328861769fd11617674e3b8a7e2dd9e7\" srcset=\"/images/patterns/book/web-cover-en-2x.png?id=02940141c5652ed5a426d87390b16366 2x\">\n                    </a>\n                </div>\n            </div>\n            <div style=\"margin-top: 1rem\">\n                <p class=\"text-center\" >This article is a part of our eBook<br/><strong>Dive Into Design Patterns</strong>.</p>\n                <a href=\"/design-patterns/book\" class=\"btn btn-secondary btn-block\"><i class=\"fa fa-book\" aria-hidden=\"true\"></i> Learn more…</a>\n            </div>\n        </div>\n    </div>\n\n\n</aside>\n                    </div>\n    </main>\n\n    <aside class=\"sidebar main-menu\">\n    <div class=\"main-menu-controls\">\n        <button class=\"navigation-toggle\"><i class=\"fa fa-fw fa-times\"></i></button>\n    </div>\n    <div class=\"main-menu-list-wrapper nano\">\n        <div class=\"main-menu-list nano-content\">\n            <a class=\"menu-brand\" href=\"/\">\n                                    <img width=200 height=241 loading=\"lazy\" alt=\"Refactoring.Guru\" src=\"/images/content-public/logos/logo-new.png?id=97d554614702483f31e38b32e82d8e34\" srcset=\"/images/content-public/logos/logo-new-2x.png?id=3bc33294e095bab1d6fe9ae421d07837 2x\">\n                            </a>\n\n            <div class=\"menu-container\" style=\"position: relative\">\n                                <ul class=\"menu-list trail\">\n                            <li class=\"featured\">\n            <a href=\"/store\">\n                <i class=\"fa fa-fw fa-star\" aria-hidden=\"true\"></i> Premium Content\n            </a>\n    \n            <ul >\n                            <li class=\"featured menu-fs15\">\n            <a href=\"/design-patterns/book\">\n                <i class=\"fa fa-fw fa-book\" aria-hidden=\"true\"></i> Design Patterns eBook\n            </a>\n    \n    \n            </li>\n                                <li class=\"featured menu-fs15\">\n            <a href=\"/refactoring/course\">\n                <i class=\"fa fa-fw fa-graduation-cap\" aria-hidden=\"true\"></i> Refactoring Course\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring\">\n                <i class=\"fa fa-fw fa-scissors\" aria-hidden=\"true\"></i> Refactoring\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/refactoring/what-is-refactoring\">\n                What is Refactoring\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/refactoring/what-is-refactoring\">\n                Clean code\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/technical-debt\">\n                Technical debt\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/when\">\n                When to refactor\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/how-to\">\n                How to refactor\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/catalog\">\n                Catalog\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells\">\n                Code Smells\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/refactoring/smells/bloaters\">\n                Bloaters\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/long-method\">\n                Long Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/large-class\">\n                Large Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/primitive-obsession\">\n                Primitive Obsession\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/long-parameter-list\">\n                Long Parameter List\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/data-clumps\">\n                Data Clumps\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/oo-abusers\">\n                Object-Orientation Abusers\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/switch-statements\">\n                Switch Statements\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/temporary-field\">\n                Temporary Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/refused-bequest\">\n                Refused Bequest\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/alternative-classes-with-different-interfaces\">\n                Alternative Classes with Different Interfaces\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/change-preventers\">\n                Change Preventers\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/divergent-change\">\n                Divergent Change\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/shotgun-surgery\">\n                Shotgun Surgery\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/parallel-inheritance-hierarchies\">\n                Parallel Inheritance Hierarchies\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/dispensables\">\n                Dispensables\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/comments\">\n                Comments\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/duplicate-code\">\n                Duplicate Code\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/lazy-class\">\n                Lazy Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/data-class\">\n                Data Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/dead-code\">\n                Dead Code\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/speculative-generality\">\n                Speculative Generality\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/couplers\">\n                Couplers\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/feature-envy\">\n                Feature Envy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/inappropriate-intimacy\">\n                Inappropriate Intimacy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/message-chains\">\n                Message Chains\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/middle-man\">\n                Middle Man\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/other\">\n                Other Smells\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/incomplete-library-class\">\n                Incomplete Library Class\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques\">\n                Refactorings\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/refactoring/techniques/composing-methods\">\n                Composing Methods\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/extract-method\">\n                Extract Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/inline-method\">\n                Inline Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-variable\">\n                Extract Variable\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/inline-temp\">\n                Inline Temp\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-temp-with-query\">\n                Replace Temp with Query\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/split-temporary-variable\">\n                Split Temporary Variable\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-assignments-to-parameters\">\n                Remove Assignments to Parameters\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-method-with-method-object\">\n                Replace Method with Method Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/substitute-algorithm\">\n                Substitute Algorithm\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/moving-features-between-objects\">\n                Moving Features between Objects\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/move-method\">\n                Move Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/move-field\">\n                Move Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-class\">\n                Extract Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/inline-class\">\n                Inline Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/hide-delegate\">\n                Hide Delegate\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-middle-man\">\n                Remove Middle Man\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-foreign-method\">\n                Introduce Foreign Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-local-extension\">\n                Introduce Local Extension\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/organizing-data\">\n                Organizing Data\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/self-encapsulate-field\">\n                Self Encapsulate Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-data-value-with-object\">\n                Replace Data Value with Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/change-value-to-reference\">\n                Change Value to Reference\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/change-reference-to-value\">\n                Change Reference to Value\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-array-with-object\">\n                Replace Array with Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/duplicate-observed-data\">\n                Duplicate Observed Data\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/change-unidirectional-association-to-bidirectional\">\n                Change Unidirectional Association to Bidirectional\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/change-bidirectional-association-to-unidirectional\">\n                Change Bidirectional Association to Unidirectional\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-magic-number-with-symbolic-constant\">\n                Replace Magic Number with Symbolic Constant\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/encapsulate-field\">\n                Encapsulate Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/encapsulate-collection\">\n                Encapsulate Collection\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-type-code-with-class\">\n                Replace Type Code with Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-type-code-with-subclasses\">\n                Replace Type Code with Subclasses\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-type-code-with-state-strategy\">\n                Replace Type Code with State/Strategy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-subclass-with-fields\">\n                Replace Subclass with Fields\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/simplifying-conditional-expressions\">\n                Simplifying Conditional Expressions\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/decompose-conditional\">\n                Decompose Conditional\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/consolidate-conditional-expression\">\n                Consolidate Conditional Expression\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/consolidate-duplicate-conditional-fragments\">\n                Consolidate Duplicate Conditional Fragments\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-control-flag\">\n                Remove Control Flag\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-nested-conditional-with-guard-clauses\">\n                Replace Nested Conditional with Guard Clauses\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-conditional-with-polymorphism\">\n                Replace Conditional with Polymorphism\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-null-object\">\n                Introduce Null Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-assertion\">\n                Introduce Assertion\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/simplifying-method-calls\">\n                Simplifying Method Calls\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/rename-method\">\n                Rename Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/add-parameter\">\n                Add Parameter\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-parameter\">\n                Remove Parameter\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/separate-query-from-modifier\">\n                Separate Query from Modifier\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/parameterize-method\">\n                Parameterize Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-parameter-with-explicit-methods\">\n                Replace Parameter with Explicit Methods\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/preserve-whole-object\">\n                Preserve Whole Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-parameter-with-method-call\">\n                Replace Parameter with Method Call\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-parameter-object\">\n                Introduce Parameter Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-setting-method\">\n                Remove Setting Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/hide-method\">\n                Hide Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-constructor-with-factory-method\">\n                Replace Constructor with Factory Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-error-code-with-exception\">\n                Replace Error Code with Exception\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-exception-with-test\">\n                Replace Exception with Test\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/dealing-with-generalization\">\n                Dealing with Generalization\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/pull-up-field\">\n                Pull Up Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/pull-up-method\">\n                Pull Up Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/pull-up-constructor-body\">\n                Pull Up Constructor Body\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/push-down-method\">\n                Push Down Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/push-down-field\">\n                Push Down Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-subclass\">\n                Extract Subclass\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-superclass\">\n                Extract Superclass\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-interface\">\n                Extract Interface\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/collapse-hierarchy\">\n                Collapse Hierarchy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/form-template-method\">\n                Form Template Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-inheritance-with-delegation\">\n                Replace Inheritance with Delegation\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-delegation-with-inheritance\">\n                Replace Delegation with Inheritance\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"trail\">\n            <a href=\"/design-patterns\">\n                <i class=\"fa fa-fw fa-puzzle-piece\" aria-hidden=\"true\"></i> Design Patterns\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/what-is-pattern\">\n                What is a Pattern\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/what-is-pattern\">\n                What's a design pattern?\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/history\">\n                History of patterns\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/why-learn-patterns\">\n                Why should I learn patterns?\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/criticism\">\n                Criticism of patterns\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/classification\">\n                Classification of patterns\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/catalog\">\n                Catalog\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-third-level\">\n            <a href=\"/design-patterns/creational-patterns\">\n                Creational Patterns\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/factory-method\">\n                Factory Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/abstract-factory\">\n                Abstract Factory\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/builder\">\n                Builder\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/prototype\">\n                Prototype\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/singleton\">\n                Singleton\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"menu-third-level\">\n            <a href=\"/design-patterns/structural-patterns\">\n                Structural Patterns\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/adapter\">\n                Adapter\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/bridge\">\n                Bridge\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/composite\">\n                Composite\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/decorator\">\n                Decorator\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/facade\">\n                Facade\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/flyweight\">\n                Flyweight\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/proxy\">\n                Proxy\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"menu-third-level trail\">\n            <a href=\"/design-patterns/behavioral-patterns\">\n                Behavioral Patterns\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/chain-of-responsibility\">\n                Chain of Responsibility\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/command\">\n                Command\n            </a>\n    \n    \n            </li>\n                                <li class=\"trail active\">\n            <a href=\"/design-patterns/iterator\">\n                Iterator\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/mediator\">\n                Mediator\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/memento\">\n                Memento\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/observer\">\n                Observer\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/state\">\n                State\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/strategy\">\n                Strategy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/template-method\">\n                Template Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/visitor\">\n                Visitor\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"menu-code-examples\">\n            <a href=\"/design-patterns/examples\">\n                Code Examples\n            </a>\n    \n            <ul >\n                            <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/csharp\">\n                C#\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/cpp\">\n                C++\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/go\">\n                Go\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/java\">\n                Java\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/php\">\n                PHP\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/python\">\n                Python\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/ruby\">\n                Ruby\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/rust\">\n                Rust\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/swift\">\n                Swift\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/typescript\">\n                TypeScript\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n                </div>\n\n            <div class=\"main-menu-aux-controls\">\n                <a href=\"https://refactoring.guru/login\" title=\"Sign in\" style=\" display: inline-flex; align-items: center; gap: 6px; \"><svg style=\"width: 16px; height: 16px; filter:drop-shadow(0 1px 1px #74261e)\" class=\"inline-block mx-0\"  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\"opacity=\"0.4\" d=\"M352.7 222.4c3.2 1 6.5 1.6 10 1.6l21.3 0c17.7 0 32 14.3 32 32s-14.3 32-32 32l-21.3 0c-.8 0-1.7 0-2.5 0c-.9 0-1.7-.1-2.5-.1c-1.7-.1-3.4-.2-5-.4C357.4 414 391.1 512 432 512c44.2 0 80-114.6 80-256S476.2 0 432 0c-40.6 0-74.2 96.9-79.3 222.4z\"/><path fill=\"currentColor\"class=\"fa-primary\" d=\"M320 48a48 48 0 1 0 -96 0 48 48 0 1 0 96 0zM125.7 175.5c9.9-9.9 23.4-15.5 37.5-15.5c1.9 0 3.8 .1 5.6 .3L137.6 254c-9.3 28 1.7 58.8 26.8 74.5l86.2 53.9-25.4 88.8c-4.9 17 5 34.7 22 39.6s34.7-5 39.6-22l28.7-100.4c5.9-20.6-2.6-42.6-20.7-53.9L238 299l30.9-82.4 5.1 12.3C289 264.7 323.9 288 362.7 288l21.3 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-21.3 0c-12.9 0-24.6-7.8-29.5-19.7l-6.3-15c-14.6-35.1-44.1-61.9-80.5-73.1l-48.7-15c-11.1-3.4-22.7-5.2-34.4-5.2c-31 0-60.8 12.3-82.7 34.3L57.4 153.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l23.1-23.1zM91.2 352L32 352c-17.7 0-32 14.3-32 32s14.3 32 32 32l69.6 0c19 0 36.2-11.2 43.9-28.5L157 361.6l-9.5-6c-17.5-10.9-30.5-26.8-37.9-44.9L91.2 352z\"/></svg> Sign in</a>\n                <a href=\"https://feedback.refactoring.guru/\" class=\"userecho-public\" rel=\"nofollow\" title=\"Contact us\"><i class=\"fa fa-fw fa-fw fa-envelope\" aria-hidden=\"true\"></i> Contact us</a>\n            </div>\n        </div>\n    </div>\n</aside>\n\n    <nav class=\"navigation\" role=\"navigation\">\n    <div class=\"navigation-container\">\n        <a class=\"navigation-brand\" href=\"/\">\n            <img alt=\"Refactoring.Guru\"\n                 src=\"/images/content-public/logos/logo-new-mobile.png?id=ea18aa9b032eaa92835ed6d472b03b4a\"\n                 srcset=\"/images/content-public/logos/logo-new-mobile-2x.png?id=7ad5648bfd86ae2e8524147a72877c64 2x\">\n        </a>\n\n        <div class=\"shop-link d-none d-lg-block\" style=\"display: none !important;\">\n            <a class=\"btn btn-md btn-primary btn-featured\" href=\"/store\"><svg style=\"width: 28px; height: 28px; fill: currentColor; display: inline-block; margin-top: -14px;\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><!--! Font Awesome Pro 6.3.0 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2023 Fonticons, Inc. --><path d=\"M356 60l60 20-60 20-20 60-20-60L256 80l60-20L336 0l20 60zM464 208l48 16-48 16-16 48-16-48-48-16 48-16 16-48 16 48zm-243.8-9.8l33 66.9 73.8 10.7 59.8 8.7-43.3 42.2-53.4 52.1 12.6 73.5L313 512l-53.5-28.1-66-34.7-66 34.7L73.9 512l10.2-59.6 12.6-73.5L43.3 326.8 0 284.6l59.8-8.7 73.8-10.7 33-66.9L193.5 144l26.8 54.2zm26.1 114.4l-25-3.6-11.2-22.6-16.7-33.9-16.7 33.9L165.6 309l-25 3.6-37.4 5.4 27.1 26.4 18.1 17.6L144 387l-6.4 37.3 33.5-17.6 22.3-11.7 22.3 11.7 33.5 17.6L242.9 387l-4.3-24.9 18.1-17.6 27.1-26.4-37.4-5.4z\"/></svg>\n                Shop Now!</a>\n        </div>\n\n        <ul class=\"navigation-menu\">\n                            <li class=\"nav-locale dropdown dropdown-locales\">\n                    <button class=\"dropdown-toggle\" id=\"dropdownLanguage\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                        <i class=\"fa fa-fw fa-globe\" aria-hidden=\"true\"></i> <span class=\"caption d-none d-lg-inline-block\">English</span>\n                    </button>\n                    <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownLanguage\">\n                                                                                                                        <a href=\"https://refactoring.guru/design-patterns/iterator\" class=\"dropdown-item locale-link active\" data-locale=\"en\" title=\"English\">English</a>\n                                                                                                                                <a href=\"https://refactoring.guru/es/design-patterns/iterator\" class=\"dropdown-item locale-link \" data-locale=\"es\" title=\"Español\">Español</a>\n                                                                                                                                <a href=\"https://refactoring.guru/fr/design-patterns/iterator\" class=\"dropdown-item locale-link \" data-locale=\"fr\" title=\"Français\">Français</a>\n                                                                                                                                <a href=\"https://refactoring.guru/ja/design-patterns/iterator\" class=\"dropdown-item locale-link \" data-locale=\"ja\" title=\"日本語\">日本語</a>\n                                                                                                                                <a href=\"https://refactoring.guru/ko/design-patterns/iterator\" class=\"dropdown-item locale-link \" data-locale=\"ko\" title=\"한국어\">한국어</a>\n                                                                                                                                <a href=\"https://refactoring.guru/pl/design-patterns/iterator\" class=\"dropdown-item locale-link \" data-locale=\"pl\" title=\"Polski\">Polski</a>\n                                                                                                                                <a href=\"https://refactoring.guru/pt-br/design-patterns/iterator\" class=\"dropdown-item locale-link \" data-locale=\"pt-br\" title=\"Português Brasileiro\">Português Brasileiro</a>\n                                                                                                                                <a href=\"https://refactoring.guru/ru/design-patterns/iterator\" class=\"dropdown-item locale-link \" data-locale=\"ru\" title=\"Русский\">Русский</a>\n                                                                                                                                <a href=\"https://refactoring.guru/uk/design-patterns/iterator\" class=\"dropdown-item locale-link \" data-locale=\"uk\" title=\"Українська\">Українська</a>\n                                                                                                                                <a href=\"https://refactoringguru.cn/design-patterns/iterator\" class=\"dropdown-item locale-link \" data-locale=\"zh\" title=\"中文\">中文</a>\ndiv>\n                </li>\n                        <li class=\"nav-contacts\">\n                <a class=\"userecho-private\" href=\"https://feedback.refactoring.guru/?show_feedback_form_private=true\" rel=\"nofollow\" title=\"Contact us\">\n                    <i class=\"fa fa-fw fa-envelope\" aria-hidden=\"true\"></i> <span class=\"caption d-none d-xl-inline-block\">Contact us</span>\n                </a>\n            </li>\n                            <li class=\"nav-user\">\n                    <a href=\"https://refactoring.guru/login\" title=\"Sign in\"><span class=\"sign-in-icon\"><svg style=\"width: 24px; height: 24px; \" class=\"inline-block \"  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\"opacity=\"0.4\" d=\"M352.7 222.4c3.2 1 6.5 1.6 10 1.6l21.3 0c17.7 0 32 14.3 32 32s-14.3 32-32 32l-21.3 0c-.8 0-1.7 0-2.5 0c-.9 0-1.7-.1-2.5-.1c-1.7-.1-3.4-.2-5-.4C357.4 414 391.1 512 432 512c44.2 0 80-114.6 80-256S476.2 0 432 0c-40.6 0-74.2 96.9-79.3 222.4z\"/><path fill=\"currentColor\"class=\"fa-primary\" d=\"M320 48a48 48 0 1 0 -96 0 48 48 0 1 0 96 0zM125.7 175.5c9.9-9.9 23.4-15.5 37.5-15.5c1.9 0 3.8 .1 5.6 .3L137.6 254c-9.3 28 1.7 58.8 26.8 74.5l86.2 53.9-25.4 88.8c-4.9 17 5 34.7 22 39.6s34.7-5 39.6-22l28.7-100.4c5.9-20.6-2.6-42.6-20.7-53.9L238 299l30.9-82.4 5.1 12.3C289 264.7 323.9 288 362.7 288l21.3 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-21.3 0c-12.9 0-24.6-7.8-29.5-19.7l-6.3-15c-14.6-35.1-44.1-61.9-80.5-73.1l-48.7-15c-11.1-3.4-22.7-5.2-34.4-5.2c-31 0-60.8 12.3-82.7 34.3L57.4 153.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l23.1-23.1zM91.2 352L32 352c-17.7 0-32 14.3-32 32s14.3 32 32 32l69.6 0c19 0 36.2-11.2 43.9-28.5L157 361.6l-9.5-6c-17.5-10.9-30.5-26.8-37.9-44.9L91.2 352z\"/></svg></span> <span class=\"account-icon\" style=\"display:none\"><svg style=\"width: 24px; height: 24px; \" class=\"inline-block \"  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 576 512\"><path fill=\"currentColor\"opacity=\"0.4\" d=\"M64 270.5l224-196c74.7 65.4 149.4 130.7 224.1 196.1l.4 177.3c.1 35.4-28.6 64.1-64 64.1l-320.4 0c-35.3 0-64-28.6-64-64L64 270.5zM176.1 433.6c.1 .5 .1 1.1 .2 1.6c.2 1 .5 2 .9 3c.8 1.9 2 3.6 3.4 5.1c2.9 2.9 6.9 4.7 11.3 4.7l192 0c8.8 0 16-7.2 16-16c0-44.2-35.8-80-80-80l-64 0c-22.1 0-42.1 9-56.6 23.4c-7.2 7.2-13.1 15.9-17.1 25.4c-2 4.8-3.6 9.8-4.7 15c-.5 2.6-.9 5.3-1.2 7.9c-.1 1.3-.2 2.7-.3 4.1c-.1 1.4-.1 2.7-.1 4.1c0 .6 0 1.1 .1 1.6zm48.2-184.2c-.1 1.1-.2 2.2-.2 3.2c-.1 1.1-.1 2.2-.1 3.3s0 2.2 .1 3.3c.1 1.1 .1 2.2 .2 3.2c.2 2.1 .5 4.3 1 6.4c.9 4.2 2.1 8.2 3.7 12c3.2 7.7 7.9 14.6 13.7 20.3C254.3 312.8 270.3 320 288 320c35.3 0 64-28.7 64-64s-28.7-64-64-64c-17.7 0-33.7 7.2-45.3 18.7c-5.8 5.8-10.5 12.7-13.7 20.3c-1.6 3.8-2.9 7.8-3.7 12c-.4 2.1-.8 4.2-1 6.4z\"/><path fill=\"currentColor\"class=\"fa-primary\" d=\"M309.1 7.9C297-2.6 279-2.6 266.9 7.9l-256 224c-13.3 11.6-14.6 31.9-3 45.2s31.9 14.6 45.2 3L288 74.5 522.9 280.1c13.3 11.6 33.5 10.3 45.2-3s10.3-33.5-3-45.2L512 185.5 512 64c0-17.7-14.3-32-32-32l-32 0c-17.7 0-32 14.3-32 32l0 37.5L309.1 7.9zM352 256a64 64 0 1 0 -128 0 64 64 0 1 0 128 0zm-96 96c-44.2 0-80 35.8-80 80c0 8.8 7.2 16 16 16l192 0c8.8 0 16-7.2 16-16c0-44.2-35.8-80-80-80l-64 0z\"/></svg></span> <span class=\"sign-out-icon\" style=\"display:none\"><svg style=\"width: 24px; height: 24px; \" class=\"inline-block \"  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\"opacity=\"0.4\" d=\"M0 256C0 397.4 35.8 512 80 512c25.3 0 47.8-37.5 62.5-96L128 416c-.5 0-1.1 0-1.6 0c-.6 0-1.1-.1-1.6-.1c-1.1-.1-2.1-.3-3.2-.5c-2.1-.4-4.1-1.1-6-1.9c-3.8-1.6-7.3-4-10.2-6.9s-5.2-6.3-6.9-10.2c-.8-1.9-1.4-3.9-1.9-6c-.2-1.1-.4-2.3-.5-3.5c0-.3 0-.6-.1-.8c0-.2 0-.4 0-.7c0-.4 0-.7 0-.7c0-.5 0-.7 0-.9c0-.3 0-.6 0-.9c0 0 0-.3 0-.7c0-.2 0-.4 0-.7c0-.2 0-.4 .1-.8c0-.3 .1-.6 .1-.9c0-.2 .1-.4 .1-.7c.1-.8 .2-1.2 .3-1.7c.5-2.2 1.1-4.2 1.9-6.1c1.6-3.8 4-7.3 6.9-10.2c5.8-5.8 13.8-9.4 22.6-9.4l26.2 0c3.8-29.6 5.8-62.1 5.8-96c0-18.3-.6-36.1-1.7-53.4c-1.7-1.2-3.4-2.5-4.9-4c-.8-.8-1.6-1.6-2.2-2.5s-1.3-1.7-1.9-2.6c-1.2-1.8-2.1-3.6-2.9-5.5s-1.4-3.9-1.8-5.9c-.2-1-.3-2-.4-3s-.1-2-.2-3c0-8.3 3.1-16.5 9.4-22.8C141 63.1 112.8 0 80 0C35.8 0 0 114.6 0 256z\"/><path fill=\"currentColor\"class=\"fa-primary\" d=\"M416 48a48 48 0 1 0 -96 0 48 48 0 1 0 96 0zM221.7 175.5c9.9-9.9 23.4-15.5 37.5-15.5c1.9 0 3.8 .1 5.6 .3L233.6 254c-9.3 28 1.7 58.8 26.8 74.5l86.2 53.9-25.4 88.8c-4.9 17 5 34.7 22 39.6s34.7-5 39.6-22l28.7-100.4c5.9-20.6-2.6-42.6-20.7-53.9L334 299l30.9-82.4 5.1 12.3C385 264.7 419.9 288 458.7 288l21.3 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-21.3 0c-12.9 0-24.6-7.8-29.5-19.7l-6.3-15c-14.6-35.1-44.1-61.9-80.5-73.1l-48.7-15c-11.1-3.4-22.7-5.2-34.4-5.2c-31 0-60.8 12.3-82.7 34.3l-23.1 23.1c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l23.1-23.1zM187.2 352L128 352c-17.7 0-32 14.3-32 32s14.3 32 32 32l69.6 0c19 0 36.2-11.2 43.9-28.5L253 361.6l-9.5-6c-17.5-10.9-30.5-26.8-37.9-44.9L187.2 352z\"/></svg></span> <span class=\"caption d-none d-xl-inline-block\">Sign in</span></a>\n                </li>\n                        <li class=\"nav-menu\">\n                <button class=\"navigation-toggle\"><i class=\"fa fa-fw fa-bars\" aria-hidden=\"true\"></i></button>\n            </li>\n        </ul>\n    </div>\n</nav>\n\n    <footer class=\"footer center-content\">\n    <div class=\"footer-container center-content-container\">\n        <div class=\"footer-inner container-fluid\">\n            <div class=\"row\">\n                <div class=\"col-8 col-md-10\">\n                    <ul class=\"footer-list footer-list-horizontal\">\n                        <li><a href=\"/\">Home</a></li>\n                        <li><a href=\"/refactoring\">Refactoring</a></li>\n                        <li><a href=\"/design-patterns\">Design Patterns</a></li>\n                        <li><a href=\"/store\">Premium Content</a></li>\n                        <li><a href=\"https://gitbybit.com/\">Git Course</a></li>\n                        <li><a href=\"https://refactoring.userecho.com/\" rel=\"nofollow\" class=\"userecho-public\">Forum</a></li>\n                        <li><a href=\"https://refactoring.userecho.com/\" rel=\"nofollow\" class=\"userecho-private\">Contact us</a></li>\n                    </ul>\n                </div>\n                <div class=\"col-4 col-md-2\">\n                    <ul class=\"footer-list footer-list-iconic footer-list-right\">\n                                                    <li><a href=\"https://www.facebook.com/refactoring.guru\"><i class=\"fa fa-facebook-official\"></i></a></li>\n                                                <li><a href=\"/sendy/form\" rel=\"nofollow\"><i class=\"fa fa-envelope\" aria-hidden=\"true\"></i></a></li>\n                        <li><a href=\"https://github.com/RefactoringGuru\"><i class=\"fa fa-github-circled\"></i></a></li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"footer-second\">\n        <div class=\"footer-container center-content-container\">\n            <div class=\"footer-inner container-fluid\">\n                <div class=\"row\">\n                    <div class=\"col-12 col-sm-6\">\n                        <i class=\"fa fa-fw fa-copyright\"></i> 2014-2025 <a href=\"/\">Refactoring.Guru</a>. <span style=\"white-space: nowrap\">All rights reserved.</span><br>\n                        <i class=\"fa fa-fw fa-image\"></i> Illustrations by <a href=\"http://zhart.us/\" rel=\"nofollow\"><span style=\"white-space: nowrap\">Dmitry Zhart</span></a>\n                    </div>\n                    <div class=\"footer-links-right col-12 col-sm-6 mt-4 mt-sm-0\">\n                        <ul class=\"footer-list footer-list-horizontal footer-list-right\">\n                            <li><a href=\"/terms\"><span>Terms &amp; Conditions</span></a>\n                            </li>\n                            <li><a href=\"/privacy-policy\"><span>Privacy Policy</span></a>\n                            </li>\n                            <li><a href=\"/content-usage-policy\"><span>Content Usage Policy</span></a>\n                            </li>\n                            <li><a href=\"/site-about\"><span>About us</span></a>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n                                    <div class=\"row\">\n                        <div class=\"col-12 col-sm-4\">\n                            <div class=\"mt-4\">\n                                                                    <b>Ukrainian office:</b><br>\n                                    <object class=\"fa-fw\" style=\"height: 0.8rem; filter: invert(50%);\"  type=\"image/svg+xml\" data=\"/images/content-public/icons/fa-building.svg?id=afddb5806968b0a9acfc1df75a181234\">\n                                        <img class=\"fa-fw\" style=\"height: 0.8rem;\" src=\"/images/content-public/icons/fa-building.svg?id=afddb5806968b0a9acfc1df75a181234\" alt=\"Organization address\"/>\n                                    </object> FOP Olga Skobeleva<br>\n                                    <svg style=\"width: 16px; height: 16px; margin-right: 1px; fill: currentColor;\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\"><path d=\"M352 192c0-88.4-71.6-160-160-160S32 103.6 32 192c0 15.6 5.4 37 16.6 63.4c10.9 25.9 26.2 54 43.6 82.1c34.1 55.3 74.4 108.2 99.9 140c25.4-31.8 65.8-84.7 99.9-140c17.3-28.1 32.7-56.3 43.6-82.1C346.6 229 352 207.6 352 192zm32 0c0 87.4-117 243-168.3 307.2c-12.3 15.3-35.1 15.3-47.4 0C117 435 0 279.4 0 192C0 86 86 0 192 0S384 86 384 192zm-240 0a48 48 0 1 0 96 0 48 48 0 1 0 -96 0zm48 80a80 80 0 1 1 0-160 80 80 0 1 1 0 160z\"/></svg> Abolmasova 7<br>\n                                    <span style=\"margin-left: 21px;\">Kyiv, Ukraine, 02002</span><br>\n                                    <i class=\"fa fa-fw fa-envelope\"></i>  Email: support@refactoring.guru\n                                \n                            </div>\n                        </div>\n                        <div class=\"col-12 col-sm-4\">\n                            <div class=\"mt-4\">\n                                <b>Spanish office:</b><br>\n                                <object class=\"fa-fw\" style=\"height: 0.8rem; filter: invert(50%);\"  type=\"image/svg+xml\" data=\"/images/content-public/icons/fa-building.svg?id=afddb5806968b0a9acfc1df75a181234\">\n                                    <img class=\"fa-fw\" style=\"height: 0.8rem;\" src=\"/images/content-public/icons/fa-building.svg?id=afddb5806968b0a9acfc1df75a181234\" alt=\"Organization address\"/>\n                                </object> Oleksandr Shvets<br>\n                                <svg style=\"width: 16px; height: 16px; margin-right: 1px; fill: currentColor;\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\"><path d=\"M352 192c0-88.4-71.6-160-160-160S32 103.6 32 192c0 15.6 5.4 37 16.6 63.4c10.9 25.9 26.2 54 43.6 82.1c34.1 55.3 74.4 108.2 99.9 140c25.4-31.8 65.8-84.7 99.9-140c17.3-28.1 32.7-56.3 43.6-82.1C346.6 229 352 207.6 352 192zm32 0c0 87.4-117 243-168.3 307.2c-12.3 15.3-35.1 15.3-47.4 0C117 435 0 279.4 0 192C0 86 86 0 192 0S384 86 384 192zm-240 0a48 48 0 1 0 96 0 48 48 0 1 0 -96 0zm48 80a80 80 0 1 1 0-160 80 80 0 1 1 0 160z\"/></svg> Avda Pamplona 64<br>\n                                <span style=\"margin-left: 21px;\">Pamplona, Spain, 31009</span><br>\n                                <i class=\"fa fa-fw fa-envelope\"></i>  Email: support@refactoring.guru\n                            </div>\n                        </div>\n                    </div>\n                            </div>\n        </div>\n    </div>\n</footer>\n\n</div>\n\n\n    <script defer>\n    var CodeMirrorScripts = [\"/js/codemirror.min.js?id=f7ae4adf14bd00338caf8e95da733cc9\"];\n</script>\n\n\n\n    <script>window.loadContent = true;window.loadCart = true;</script>\n</body>\n</html>\n"},
{"title": null, "url": "https://refactoring.guru/design-patterns/command", "raw_html": "<!DOCTYPE html>\n<html lang=\"en\" dir=\"ltr\">\n<head prefix=\"og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# website: http://ogp.me/ns/website#\">\n    <meta charset=\"utf-8\">\n    <title>Command</title>\n\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n    <meta name=\"theme-color\" content=\"#A2E2FD\" />\n\n            <style>\n        .buy-widget-excl-local-taxes {\n            display: none;\n        }\n    </style>\n    \n    <link rel=\"preload\" href=\"/fonts/PTSans/ptsans-regular_en.woff2?1\" as=\"font\" type=\"font/woff2\" crossorigin>\n    <link rel=\"preload\" href=\"/fonts/PTSans/ptsans-bold_en.woff2?1\" as=\"font\" type=\"font/woff2\" crossorigin>\n        <link rel=\"preload\" href=\"/fonts/fontello/fontawesome.woff2?15843843\" as=\"font\" type=\"font/woff2\" crossorigin>\n    <link rel=\"preload\" href=\"/fonts/FiraCode/woff2/FiraCode-Regular_latin.woff2\" as=\"font\" type=\"font/woff2\" crossorigin>\n        <link rel=\"preconnect dns-prefetch\" href=\"https://cdn.paddle.com\">\n    <link rel=\"preconnect dns-prefetch\" href=\"https://www.googletagmanager.com\">\n\n    <link rel=\"alternate\" href=\"https://refactoring.guru/design-patterns/command\" hreflang=\"x-default\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/es/design-patterns/command\" hreflang=\"es\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/fr/design-patterns/command\" hreflang=\"fr\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/ja/design-patterns/command\" hreflang=\"ja\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/ko/design-patterns/command\" hreflang=\"ko\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/pl/design-patterns/command\" hreflang=\"pl\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/pt-br/design-patterns/command\" hreflang=\"pt-br\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/ru/design-patterns/command\" hreflang=\"ru\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/uk/design-patterns/command\" hreflang=\"uk\"/>\n    <link rel=\"alternate\" href=\"https://refactoringguru.cn/design-patterns/command\" hreflang=\"zh\"/>\n\n    <meta name=\"description\" content=\"Command is a behavioral design pattern that turns a request into a stand-alone object that contains all information about the request. This transformation lets you pass requests as a method arguments, delay or queue a request&#039;s execution, and support undoable operations.\">\n\n    <link rel=\"canonical\" href=\"https://refactoring.guru/design-patterns/command\"/>\n\n    <link rel=\"icon\" type=\"image/x-icon\" href=\"/favicon.png\"/>\n\n        <meta property=\"fb:app_id\" content=\"666819623386327\"/>\n        <meta property=\"og:type\" content=\"website\"/>\n        <meta property=\"og:image\" content=\"https://refactoring.guru/images/refactoring/social/facebook-share-preview.png?id=dbf9e98269595be86eb668f365be6868\"/>\n    \n                    <link rel=\"stylesheet\" href=\"/css/public-packed.min.css?id=aaefab4da343b914b8dda9973604a9e8\">\n        <style type=\"text/css\">\n                    @font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_cyrillic-ext.woff2?1) format(\"woff2\");unicode-range:U+0460-052F,U+1C80-1C88,U+20B4,U+2DE0-2DFF,U+A640-A69F,U+FE2E-FE2F}@font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_cyrillic.woff2?1) format(\"woff2\");unicode-range:U+0400-045F,U+0490-0491,U+04B0-04B1,U+2116}@font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_latin-ext.woff2?1) format(\"woff2\");unicode-range:U+0100-024F,U+0259,U+1E00-1EFF,U+2020,U+20A0-20AB,U+20AD-20CF,U+2113,U+2C60-2C7F,U+A720-A7FF}@font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_latin.woff2?1) format(\"woff2\");unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}@font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_en.woff2?1) format(\"woff2\");unicode-range:U+0-FF,U+131,U+142,U+152,U+153,U+2BB,U+2BC,U+2C6,U+2DA,U+2DC,U+420,U+423,U+430,U+438-43A,U+43D,U+440,U+441,U+443,U+44C,U+457,U+2000-206F,U+2074,U+20AA-20AC,U+20B4,U+20B9,U+20BA,U+20BD,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_cyrillic-ext.woff2?1) format(\"woff2\");unicode-range:U+0460-052F,U+1C80-1C88,U+20B4,U+2DE0-2DFF,U+A640-A69F,U+FE2E-FE2F}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_cyrillic.woff2?1) format(\"woff2\");unicode-range:U+0400-045F,U+0490-0491,U+04B0-04B1,U+2116}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_latin-ext.woff2?1) format(\"woff2\");unicode-range:U+0100-024F,U+0259,U+1E00-1EFF,U+2020,U+20A0-20AB,U+20AD-20CF,U+2113,U+2C60-2C7F,U+A720-A7FF}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_latin.woff2?1) format(\"woff2\");unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_en.woff2?1) format(\"woff2\");unicode-range:U+0-FF,U+131,U+142,U+152,U+153,U+2BB,U+2BC,U+2C6,U+2DA,U+2DC,U+420,U+423,U+430,U+438-43A,U+43D,U+440,U+441,U+443,U+44C,U+457,U+2000-206F,U+2074,U+20AA-20AC,U+20B4,U+20B9,U+20BA,U+20BD,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}\n            </style>\n\n    \n            <script defer src=\"/js/public.min.js?id=1f19fe18ffe0fc844ede8a0f2ee64202\"></script>\n        <script defer src=\"/js/checkout.min.js?id=b4da9c5bd8b1cf504447c07ae8b7cd44\"></script>\n            <script defer src=\"https://cdn.paddle.com/paddle/v2/paddle.js\"></script>\n    <script async src=\"https://www.googletagmanager.com/gtag/js?id=G-SR8Y3GYQYC\"></script>\n\n    <script type=\"application/ld+json\">\n        {\"@context\": \"http://schema.org\", \"@graph\": [{\"@type\":\"Person\",\"@id\":\"https://refactoring.guru/#founder\",\"name\":\"Alexander Shvets\"},{\"@type\":\"Organization\",\"@id\":\"https://refactoring.guru/#organization\",\"name\":\"Refactoring.Guru\",\"description\":\"Refactoring.Guru makes it easy for you to discover everything you need to know about refactoring, design patterns, SOLID principles, and other smart programming topics.\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https://refactoring.guru/#organizationlogo\",\"url\":\"https://refactoring.guru/images/content-public/logos/logo-plain.png\",\"caption\":\"Refactoring.Guru\"},\"logo\":{\"@id\":\"https://refactoring.guru/#organizationlogo\"},\"founder\":{\"@id\":\"https://refactoring.guru/#founder\"},\"sameAs\":[\"https://www.facebook.com/refactoring.guru\",\"https://twitter.com/RefactoringGuru\",\"https://github.com/RefactoringGuru\"]},{\"@type\":\"WebSite\",\"@id\":\"https://refactoring.guru/#website\",\"url\":\"https://refactoring.guru/\",\"name\":\"Refactoring.Guru\",\"description\":\"Refactoring.Guru makes it easy for you to discover everything you need to know about refactoring, design patterns, SOLID principles, and other smart programming topics.\",\"author\":{\"@id\":\"https://refactoring.guru/#founder\"},\"publisher\":{\"@id\":\"https://refactoring.guru/#organization\"},\"copyrightYear\":2014},{\"@type\":\"WebPage\",\"@id\":\"https://refactoring.guru/design-patterns/command#webpage\",\"url\":\"https://refactoring.guru/design-patterns/command\",\"inLanguage\":\"en\",\"name\":\"Command\",\"description\":\"Command is a behavioral design pattern that turns a request into a stand-alone object that contains all information about the request. This transformation lets you pass requests as a method arguments, delay or queue a request's execution, and support undoable operations.\",\"isPartOf\":{\"@id\":\"https://refactoring.guru#website\"},\"breadcrumb\":{\"@id\":\"https://refactoring.guru/design-patterns/command#breadcrumb\"},\"primaryImageOfPage\":{\"@id\":\"https://refactoring.guru/design-patterns/command#primaryimage\"},\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https://refactoring.guru/design-patterns/command#primaryimage\",\"url\":\"https://refactoring.guru/images/patterns/content/command/command-en-3x.png\",\"width\":1920,\"height\":1200}},{\"@type\":\"Article\",\"@id\":\"https://refactoring.guru/design-patterns/command#article\",\"isPartOf\":{\"@id\":\"https://refactoring.guru/design-patterns/command#webpage\"},\"mainEntityOfPage\":{\"@id\":\"https://refactoring.guru/design-patterns/command#webpage\"},\"author\":{\"@id\":\"https://refactoring.guru#founder\"},\"publisher\":{\"@id\":\"https://refactoring.guru#organization\"},\"headline\":\"Command\",\"datePublished\":\"2024-01-01\",\"dateModified\":\"2025-01-01\",\"articleSection\":\"Design Patterns\",\"image\":{\"@id\":\"https://refactoring.guru/design-patterns/command#primaryimage\"}},{\"@type\":\"BreadcrumbList\",\"@id\":\"https://refactoring.guru/design-patterns/command#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https://refactoring.guru\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Design Patterns\",\"item\":\"https://refactoring.guru/design-patterns\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"Behavioral Patterns\",\"item\":\"https://refactoring.guru/design-patterns/behavioral-patterns\"}]}] }\n    </script>\n\n    <script>\nfunction extend(){var extended={};var deep=false;var i=0;var length=arguments[\"length\"];if(Object[\"prototype\"][\"toString\"][\"call\"](arguments[0])=== '[object Boolean]'){deep= arguments[0];i++};var merge=function(obj){for(var prop in obj){if(Object[\"prototype\"][\"hasOwnProperty\"][\"call\"](obj,prop)){if(deep&& Object[\"prototype\"][\"toString\"][\"call\"](obj[prop])=== '[object Object]'){extended[prop]= extend(true,extended[prop],obj[prop])}else {extended[prop]= obj[prop]}}}};for(;i< length;i++){var obj=arguments[i];merge(obj)};return extended}\nfunction defer(method) {if (window.jQuery) {method();} else {setTimeout(function() { defer(method) }, 50);}}\n</script>\n<script>\n+function(sd){sd = (typeof sd === \"string\") ? JSON.parse(atob(sd)) : sd;for(var property in sd){if(window[property]!== null&&  typeof window[property]=== 'object'){window[property]= extend(true,window[property],sd[property])}else {window[property]= sd[property]}}}(\"eyJsb2NhbGUiOiJlbiIsImxvY2FsZV9wcmVmaXgiOiIiLCJsb2NhbGl6ZWRfdXJsX3ByZWZpeCI6Imh0dHBzOlwvXC9yZWZhY3RvcmluZy5ndXJ1XC8iLCJ1cmxfcHJlZml4IjoiaHR0cHM6XC9cL3JlZmFjdG9yaW5nLmd1cnVcLyIsImxvY2FsaXplZF91cmxfcHJlZml4X20iOiJodHRwczpcL1wvcmVmYWN0b3JpbmcuZ3VydVwvIiwidXJsX3ByZWZpeF9tIjoiaHR0cHM6XC9cL3JlZmFjdG9yaW5nLmd1cnVcLyIsInVzZXJfZWNob19hbGlhcyI6InJlZmFjdG9yaW5nIiwidXNlcl9lY2hvX2hvc3QiOiJmZWVkYmFjay5yZWZhY3RvcmluZy5ndXJ1IiwidXNlcl9lY2hvX3ByaXZhdGVfZm9ydW0iOiIyIiwidXNlcl9lY2hvX2xvY2FsZSI6ImVuIiwidXNlcl9lY2hvX3B1YmxpY19mb3J1bSI6IjMiLCJ1c2VyX2VjaG9fcHVibGljX2ZvcnVtX3VybCI6Imh0dHBzOlwvXC9mZWVkYmFjay5yZWZhY3RvcmluZy5ndXJ1XC8iLCJ1c2VyX2VjaG9fc3NvX3Rva2VuIjoiIn0=\");\n</script>\n\n<script>\n    window.dataLayer = window.dataLayer || [];\n    function gtag(){dataLayer.push(arguments);}\n    gtag('js', new Date());\n            gtag('set', 'linker', {'domains': [\"refactoring.guru,refactoringguru.cn\"]});\n        gtag('config', 'G-SR8Y3GYQYC', {\n        // Disable default page view, because we're going to report them on our own.\n        // This is done to report traffic on localized domains as part of the main website traffic\n        // See the Chinese overrides below.\n        send_page_view: false,\n    });\n</script>\n\n<script>\n    (() => {\n        // On first page view after returning from social network, we need to send the social login event.\n        (function detectSocialLogin() {\n            let getCookie = function (name) {\n                var nameEQ = name + \"=\";\n                var ca = document.cookie.split(';');\n                for (var i = 0; i < ca.length; i++) {\n                    var c = ca[i];\n                    while (c.charAt(0) == ' ') c = c.substring(1, c.length);\n                    if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);\n                }\n                return null;\n            };\n            window.social_login_provider = window.social_login_provider || getCookie('social_login_provider');\n            if (window.social_login_provider) {\n                gtag('set', {referrer: null});\n                gtag('event', 'login', {\"method\": window.social_login_provider});\n                // Delete cookie.\n                document.cookie = 'social_login_provider=; Path=/; Max-Age=-99999999;';\n            }\n        })();\n\n        function trackPageView(location, title) {\n            location = location || document.location.href;\n            title = title || document.title;\n\n            // This is show on https://refactoringguru.cn/ and alike.\n            if (typeof window.analytics_path_prefix === 'string') {\n                if (/^(https?:\\/\\/[^\\/]+?)\\/$/.test(location)) {\n                    location = location.replace(/(https?:\\/\\/[^\\/]+?)\\//, '$1' + window.analytics_path_prefix);\n                } else {\n                    location = location.replace(/(https?:\\/\\/[^\\/]+?)\\//, '$1' + window.analytics_path_prefix + '/');\n                }\n                gtag('set', {\n                    'page_location': location\n                });\n            }\n\n            // This is show on https://refactoring.guru/zh/login and alike.\n            if (typeof window.analytics_location_prefix === 'string') {\n                location = location.replace(/(https?:\\/\\/[^\\/]+?)\\//, window.analytics_location_prefix);\n                gtag('set', {\n                    'page_location': location\n                });\n            }\n\n            gtag('event', 'page_view', {\n                page_location: location,\n                page_title: title,\n                locale: window.locale ?? 'en'\n            });\n        }\n\n        if (window.loadContent) {\n            window.onPageLoad = window.onPageLoad || [];\n            window.onPageLoad.push({\n                func: function (context) {\n                    trackPageView(window.location.origin + context.canonicalPath, context.title);\n                },\n                afterAll: true,\n            });\n        }\n        else {\n            trackPageView();\n        }\n    })();\n</script>\n\n\n</head>\n<body class=\"locale-en   announcement   command\" data-body_class=\"command\">\n\n<div class=\"body-holder\">\n\n            <div class=\"announcement-block announcement-block-summer prom\" data-id=\"DIDP-announcement\" data-creative-id=\"en\" data-position=\"top\">\n        <span class=\"beach-and-sea\">\n            <span class=\"a1\"></span>\n            <span class=\"a2\"><span class=\"wave\"></span></span>\n            <span class=\"yacht\"></span>\n        </span>\n        <a href=\"/store\">\n            <img src=\"/images/content-public/ann/summer/sunbed.svg?id=b1e7314a63715a13870a6bd1a43613f7\" loading=\"lazy\" style=\"width: 32px; height:32px;vertical-align: middle; scale: -1 1 1;\">\n            <span class=\"announcement-link-text\">Summer SALE</span>\n            <img src=\"/images/content-public/ann/summer/reading-book.svg?id=36006ea720df8c171968cf613e8ea164\" loading=\"lazy\" style=\"width: 32px; height:32px;vertical-align: middle;\">\n        </a>\n    </div>\n\n    \n    <div class=\"cart-placeholder\">\n    <div class=\"cart-block-container\" style=\"display:none\">\n        <div class=\"cart-block btn-group\">\n            <a href=\"#checkout\" class=\"btn cart open-checkout\">\n                <span class=\"cart-text\"></span>&nbsp;<strong class=\"cart-total font-money\"></strong>\n            </a><a href=\"#checkout\" class=\"btn btn-secondary checkout open-checkout\"><i class=\"fa fa-shopping-cart\" aria-hidden=\"true\"></i> <span class=\"btn-text-span d-none d-sm-inline-block d-lg-none d-hg-inline-block\"></span></a>\n        </div>\n    </div>\n</div>\n    <main role=\"main\" class=\"main-content top-content center-content \" data-page_class=\"\">\n        <div class=\"main-content-container center-content-container\">\n                        <div class=\"pattern page text\">\n<article>\n    <div class=\"breadcrumb\">\n                                    <a class=\"home\" href=\"/\"><i class=\"fa fa-home\" aria-hidden=\"true\"></i></a>\n                                                / <a class=\"type\" href=\"/design-patterns\">Design Patterns</a>\n                                                / <a class=\"type\" href=\"/design-patterns/behavioral-patterns\">Behavioral Patterns</a>\n                        </div>\n    <h1 class=\"title\">Command</h1>\n\n    <script type=\"text/javascript\">\n        // Shorten examples titles for users.\n        var h1 = document.getElementsByTagName(\"H1\")[0];\n        if (h1.offsetHeight > 160) {\n            h1.className += ' smaller';\n        }\n\n        // Small beautification for pattern examples.\n        var title = h1.innerHTML;\n        title = title.replace(/^(Java|C\\+\\+|C#|PHP|Python|Ruby|Delphi): (.*)$/, '<strong>$1:</strong> $2');\n        h1.innerHTML = title;\n    </script>\n\n            <div class=\"aka\">\n            Also known as: <span style=\"display:inline-block\">Action,&nbsp;</span><span style=\"display:inline-block\">Transaction</span>\n        </div>\n    \n    \n\n    <div class=\"section intent\">\n<h2 id=\"intent\"><i class=\"fa fa-flip-horizontal fa-comment-alt-dots\" aria-hidden=\"true\"></i> Intent</h2>\n<p><strong>Command</strong> is a behavioral design pattern that turns a request into a stand-alone object that contains all information about the request. This transformation lets you pass requests as a method arguments, delay or queue a request’s execution, and support undoable operations.</p>\n<figure class=\"image\"><img src=\"/images/patterns/content/command/command-en.png?id=80fbadc666cf3b9b1958c546d2746ca4\" alt=\"Command design pattern\" srcset=\"/images/patterns/content/command/command-en.png?id=80fbadc666cf3b9b1958c546d2746ca4 640w,/images/patterns/content/command/command-en-1.5x.png?id=c3e1a91b500ce88f9b8fda6176762698 960w,/images/patterns/content/command/command-en-2x.png?id=6149af804cbbbd5cb18595c30b856d89 1280w\" sizes=\"(max-width: 720px) 100vw, 640px\" width=\"640\" style=\"aspect-ratio: 1.6;\" fetchpriority=\"high\" /></figure>\n</div>\n<div class=\"section problem\">\n<h2 id=\"problem\"><i class=\"fa fa-frown\" aria-hidden=\"true\"></i> Problem</h2>\n<p>Imagine that you’re working on a new text-editor app. Your current task is to create a toolbar with a bunch of buttons for various operations of the editor. You created a very neat <code>Button</code> class that can be used for buttons on the toolbar, as well as for generic buttons in various dialogs.</p>\n<figure class=\"image\"><img src=\"/images/patterns/diagrams/command/problem1.png?id=84189315a0e8d91da262792979005ab4\" alt=\"Problem solved by the Command pattern\" srcset=\"/images/patterns/diagrams/command/problem1.png?id=84189315a0e8d91da262792979005ab4 230w,/images/patterns/diagrams/command/problem1-1.5x.png?id=77bf0bc58e5c9c9b8369bc4f8dec457f 345w,/images/patterns/diagrams/command/problem1-2x.png?id=af4c4e9c1d1b4fa2c4104c5f6bb18719 460w\" sizes=\"(max-width: 720px) 100vw, 230px\" width=\"230\" style=\"aspect-ratio: 0.88;\" loading=\"lazy\" /><figcaption>\n<p>All buttons of the app are derived from the same class.</p>\n</figcaption></figure>\n<p>While all of these buttons look similar, they’re all supposed to do different things. Where would you put the code for the various click handlers of these buttons? The simplest solution is to create tons of subclasses for each place where the button is used. These subclasses would contain the code that would have to be executed on a button click.</p>\n<figure class=\"image\"><img src=\"/images/patterns/diagrams/command/problem2.png?id=f0e33da1842b3a3ee3b4857de0b6ec93\" alt=\"Lots of button subclasses\" srcset=\"/images/patterns/diagrams/command/problem2.png?id=f0e33da1842b3a3ee3b4857de0b6ec93 400w,/images/patterns/diagrams/command/problem2-1.5x.png?id=7ae15e2b07d5d076a878d99c3ed8ac32 600w,/images/patterns/diagrams/command/problem2-2x.png?id=5eea7d0f6247da011150bb63e423f405 800w\" sizes=\"(max-width: 720px) 100vw, 400px\" width=\"400\" style=\"aspect-ratio: 2.11;\" loading=\"lazy\" /><figcaption>\n<p>Lots of button subclasses. What can go wrong?</p>\n</figcaption></figure>\n<p>Before long, you realize that this approach is deeply flawed. First, you have an enormous number of subclasses, and that would be okay if you weren’t risking breaking the code in these subclasses each time you modify the base <code>Button</code> class. Put simply, your GUI code has become awkwardly dependent on the volatile code of the business logic.</p>\n<figure class=\"image\"><img src=\"/images/patterns/diagrams/command/problem3-en.png?id=1fbd56ae7ba3e3dfac45cfa2de6db450\" alt=\"Several classes implement the same functionality\" srcset=\"/images/patterns/diagrams/command/problem3-en.png?id=1fbd56ae7ba3e3dfac45cfa2de6db450 480w,/images/patterns/diagrams/command/problem3-en-1.5x.png?id=2da629d84c7cbabbca11562a3d7d2559 720w,/images/patterns/diagrams/command/problem3-en-2x.png?id=e06878f7cfbe4131980c68db2904878e 960w\" sizes=\"(max-width: 720px) 100vw, 480px\" width=\"480\" style=\"aspect-ratio: 4.36;\" loading=\"lazy\" /><figcaption>\n<p>Several classes implement the same functionality.</p>\n</figcaption></figure>\n<p>And here’s the ugliest part. Some operations, such as copying/pasting text, would need to be invoked from multiple places. For example, a user could click a small “Copy” button on the toolbar, or copy something via the context menu, or just hit <code>Ctrl+C</code> on the keyboard.</p>\n<p>Initially, when our app only had the toolbar, it was okay to place the implementation of various operations into the button subclasses. In other words, having the code for copying text inside the <code>CopyButton</code> subclass was fine. But then, when you implement context menus, shortcuts, and other stuff, you have to either duplicate the operation’s code in many classes or make menus dependent on buttons, which is an even worse option.</p>\n</div>\n<div class=\"section solution\">\n<h2 id=\"solution\"><i class=\"fa fa-smile-beam\" aria-hidden=\"true\"></i> Solution</h2>\n<p>Good software design is often based on the <em>principle of separation of concerns</em>, which usually results in breaking an app into layers. The most common example: a layer for the graphical user interface and another layer for the business logic. The GUI layer is responsible for rendering a beautiful picture on the screen, capturing any input and showing results of what the user and the app are doing. However, when it comes to doing something important, like calculating the trajectory of the moon or composing an annual report, the GUI layer delegates the work to the underlying layer of business logic.</p>\n<p>In the code it might look like this: a GUI object calls a method of a business logic object, passing it some arguments. This process is usually described as one object sending another a <em>request</em>.</p>\n<figure class=\"image\"><img src=\"/images/patterns/diagrams/command/solution1-en.png?id=ec37db1713fe2c1a9318886590667cfb\" alt=\"The GUI layer may access the business logic layer directly\" srcset=\"/images/patterns/diagrams/command/solution1-en.png?id=ec37db1713fe2c1a9318886590667cfb 470w,/images/patterns/diagrams/command/solution1-en-1.5x.png?id=e3f5d3cc9e4822419cbdc3fc54e3cac3 705w,/images/patterns/diagrams/command/solution1-en-2x.png?id=d66717631fdebf5fae4d28c6c942e5d4 940w\" sizes=\"(max-width: 720px) 100vw, 470px\" width=\"470\" style=\"aspect-ratio: 2.47;\" loading=\"lazy\" /><figcaption>\n<p>The GUI objects may access the business logic objects directly.</p>\n</figcaption></figure>\n<p>The Command pattern suggests that GUI objects shouldn’t send these requests directly. Instead, you should extract all of the request details, such as the object being called, the name of the method and the list of arguments into a separate <em>command</em> class with a single method that triggers this request.</p>\n<p>Command objects serve as links between various GUI and business logic objects. From now on, the GUI object doesn’t need to know what business logic object will receive the request and how it’ll be processed. The GUI object just triggers the command, which handles all the details.</p>\n<figure class=\"image\"><img src=\"/images/patterns/diagrams/command/solution2-en.png?id=63bcac5cde2ec536c3329eff4c385839\" alt=\"Accessing the business logic layer via a command.\" srcset=\"/images/patterns/diagrams/command/solution2-en.png?id=63bcac5cde2ec536c3329eff4c385839 550w,/images/patterns/diagrams/command/solution2-en-1.5x.png?id=fec1d2c44e4011b7c44917bebc6acad0 825w,/images/patterns/diagrams/command/solution2-en-2x.png?id=b530f7b00b40ed7d3445b91c08009b10 1100w\" sizes=\"(max-width: 720px) 100vw, 550px\" width=\"550\" style=\"aspect-ratio: 2.89;\" loading=\"lazy\" /><figcaption>\n<p>Accessing the business logic layer via a command.</p>\n</figcaption></figure>\n<p>The next step is to make your commands implement the same interface. Usually it has just a single execution method that takes no parameters. This interface lets you use various commands with the same request sender, without coupling it to concrete classes of commands. As a bonus, now you can switch command objects linked to the sender, effectively changing the sender’s behavior at runtime.</p>\n<p>You might have noticed one missing piece of the puzzle, which is the request parameters. A GUI object might have supplied the business-layer object with some parameters. Since the command execution method doesn’t have any parameters, how would we pass the request details to the receiver? It turns out the command should be either pre-configured with this data, or capable of getting it on its own.</p>\n<figure class=\"image\"><img src=\"/images/patterns/diagrams/command/solution3-en.png?id=c92f6874b95de46b041499d41234b00b\" alt=\"The GUI objects delegate the work to commands\" srcset=\"/images/patterns/diagrams/command/solution3-en.png?id=c92f6874b95de46b041499d41234b00b 440w,/images/patterns/diagrams/command/solution3-en-1.5x.png?id=580ba981ae73f0608513349ecf38ad90 660w,/images/patterns/diagrams/command/solution3-en-2x.png?id=c12bb9971d1ba4f8a3d3717bbced2859 880w\" sizes=\"(max-width: 720px) 100vw, 440px\" width=\"440\" style=\"aspect-ratio: 1.83;\" loading=\"lazy\" /><figcaption>\n<p>The GUI objects delegate the work to commands.</p>\n</figcaption></figure>\n<p>Let’s get back to our text editor. After we apply the Command pattern, we no longer need all those button subclasses to implement various click behaviors. It’s enough to put a single field into the base <code>Button</code> class that stores a reference to a command object and make the button execute that command on a click.</p>\n<p>You’ll implement a bunch of command classes for every possible operation and link them with particular buttons, depending on the buttons’ intended behavior.</p>\n<p>Other GUI elements, such as menus, shortcuts or entire dialogs, can be implemented in the same way. They’ll be linked to a command which gets executed when a user interacts with the GUI element. As you’ve probably guessed by now, the elements related to the same operations will be linked to the same commands, preventing any code duplication.</p>\n<p>As a result, commands become a convenient middle layer that reduces coupling between the GUI and business logic layers. And that’s only a fraction of the benefits that the Command pattern can offer!</p>\n</div>\n<div class=\"section analogy\">\n<h2 id=\"analogy\"><i class=\"fa fa-car-side\" aria-hidden=\"true\"></i> Real-World Analogy</h2>\n<figure class=\"image\"><img src=\"/images/patterns/content/command/command-comic-1.png?id=551df832f445080976f3116e0dc120c9\" alt=\"Making an order in a restaurant\" srcset=\"/images/patterns/content/command/command-comic-1.png?id=551df832f445080976f3116e0dc120c9 600w,/images/patterns/content/command/command-comic-1-1.5x.png?id=82dc5c38ce372ed4dfd4a37c04faeb72 900w,/images/patterns/content/command/command-comic-1-2x.png?id=47b3c00b2cfbda7157a1ed9da6ce2948 1200w\" sizes=\"(max-width: 720px) 100vw, 600px\" width=\"600\" style=\"aspect-ratio: 2;\" loading=\"lazy\" /><figcaption>\n<p>Making an order in a restaurant.</p>\n</figcaption></figure>\n<p>After a long walk through the city, you get to a nice restaurant and sit at the table by the window. A friendly waiter approaches you and quickly takes your order, writing it down on a piece of paper. The waiter goes to the kitchen and sticks the order on the wall. After a while, the order gets to the chef, who reads it and cooks the meal accordingly. The cook places the meal on a tray along with the order. The waiter discovers the tray, checks the order to make sure everything is as you wanted it, and brings everything to your table.</p>\n<p>The paper order serves as a command. It remains in a queue until the chef is ready to serve it. The order contains all the relevant information required to cook the meal. It allows the chef to start cooking right away instead of running around clarifying the order details from you directly.</p>\n</div>\n<div class=\"section structure-container\">\n<h2 id=\"structure\"><i class=\"fa fa-sitemap\" aria-hidden=\"true\"></i> Structure</h2>\n<div class=\"structure\">\n<div class=\"struct-image1 struct-image\">\n<figure class=\"image\"><img class=\"structure-img-non-indexed d-none d-xl-block\" src=\"/images/patterns/diagrams/command/structure.png?id=1cd7833638f4c43630f4a84017d31195\" alt=\"Structure of the Command design pattern\" srcset=\"/images/patterns/diagrams/command/structure.png?id=1cd7833638f4c43630f4a84017d31195 630w,/images/patterns/diagrams/command/structure-1.5x.png?id=6e5b68277c7747b22266e408891d5841 945w,/images/patterns/diagrams/command/structure-2x.png?id=1dfaa84354ffe49ef7ad46ce069482d2 1260w\" sizes=\"(max-width: 720px) 100vw, 630px\" width=\"630\" style=\"aspect-ratio: 1.7;\" loading=\"lazy\" /><img class=\"structure-img-indexed d-xl-none\" src=\"/images/patterns/diagrams/command/structure-indexed.png?id=95529d7282dc7bc1c5bc443423b1cf4f\" alt=\"Structure of the Command design pattern\" srcset=\"/images/patterns/diagrams/command/structure-indexed.png?id=95529d7282dc7bc1c5bc443423b1cf4f 640w,/images/patterns/diagrams/command/structure-indexed-1.5x.png?id=29d6c5c7a06da2747ed756c0ddad6169 960w,/images/patterns/diagrams/command/structure-indexed-2x.png?id=e4cc286a44768c7d060af33497da7df6 1280w\" sizes=\"(max-width: 720px) 100vw, 640px\" width=\"640\" style=\"aspect-ratio: 1.64;\" loading=\"lazy\" /></figure>\n</div>\n<ol><li class=\"struct-li1\">\n<p>The <strong>Sender</strong> class (aka <em>invoker</em>) is responsible for initiating requests. This class must have a field for storing a reference to a command object. The sender triggers that command instead of sending the request directly to the receiver. Note that the sender isn’t responsible for creating the command object. Usually, it gets a pre-created command from the client via the constructor.</p>\n</li>\n<li class=\"struct-li2\">\n<p>The <strong>Command</strong> interface usually declares just a single method for executing the command.</p>\n</li>\n<li class=\"struct-li3\">\n<p><strong>Concrete Commands</strong> implement various kinds of requests. A concrete command isn’t supposed to perform the work on its own, but rather to pass the call to one of the business logic objects. However, for the sake of simplifying the code, these classes can be merged.</p>\n<p>Parameters required to execute a method on a receiving object can be declared as fields in the concrete command. You can make command objects immutable by only allowing the initialization of these fields via the constructor.</p>\n</li>\n<li class=\"struct-li4\">\n<p>The <strong>Receiver</strong> class contains some business logic. Almost any object may act as a receiver. Most commands only handle the details of how a request is passed to the receiver, while the receiver itself does the actual work.</p>\n</li>\n<li class=\"struct-li5\">\n<p>The <strong>Client</strong> creates and configures concrete command objects. The client must pass all of the request parameters, including a receiver instance, into the command’s constructor. After that, the resulting command may be associated with one or multiple senders.</p>\n</li></ol>\n<style structure type=\"text/css\" >\n@media (min-width: 1200px) {\n.structure {\nmargin: 0;\nwidth: auto;\nheight: 620px;\n}\n\n.struct-image1 {\nleft: 40px;\ntop: 150px;\n}\n\n.struct-li1 {\nleft: 50px;\ntop: 10px;\nwidth: 510px;\n}\n\n.struct-li2 {\nleft: 600px;\ntop: 70px;\nwidth: 220px;\n}\n\n.struct-li3 {\nleft: 680px;\ntop: 190px;\nwidth: 220px;\n}\n\n.struct-li4 {\nleft: 180px;\ntop: 530px;\nwidth: 480px;\n}\n\n.struct-li5 {\nleft: 0px;\ntop: 230px;\nwidth: 160px;\n}\n}\n\n</style>\n</div></div>\n<div class=\"section pseudocode\">\n<h2 id=\"pseudocode\"><i class=\"fa fa-hashtag\" aria-hidden=\"true\"></i> Pseudocode</h2>\n<p>In this example, the <strong>Command</strong> pattern helps to track the history of executed operations and makes it possible to revert an operation if needed.</p>\n<figure class=\"image\"><img src=\"/images/patterns/diagrams/command/example.png?id=1f42c8395fe54d0e409026b91881e2a0\" alt=\"Structure of the Command pattern example\" srcset=\"/images/patterns/diagrams/command/example.png?id=1f42c8395fe54d0e409026b91881e2a0 640w,/images/patterns/diagrams/command/example-1.5x.png?id=435055a78a82c005eebb1bef869998ae 960w,/images/patterns/diagrams/command/example-2x.png?id=ed44dfd9b02eccf1ae7e2714d018ed36 1280w\" sizes=\"(max-width: 720px) 100vw, 640px\" width=\"640\" style=\"aspect-ratio: 1.07;\" loading=\"lazy\" /><figcaption>\n<p>Undoable operations in a text editor.</p>\n</figcaption></figure>\n<p>Commands which result in changing the state of the editor (e.g., cutting and pasting) make a backup copy of the editor’s state before executing an operation associated with the command. After a command is executed, it’s placed into the command history (a stack of command objects) along with the backup copy of the editor’s state at that point. Later, if the user needs to revert an operation, the app can take the most recent command from the history, read the associated backup of the editor’s state, and restore it.</p>\n<p>The client code (GUI elements, command history, etc.) isn’t coupled to concrete command classes because it works with commands via the command interface. This approach lets you introduce new commands into the app without breaking any existing code.</p>\n<figure class=\"code\">\n<pre class=\"code\" lang=\"pseudocode\">// The base command class defines the common interface for all\n// concrete commands.\nabstract class Command is\n    protected field app: Application\n    protected field editor: Editor\n    protected field backup: text\n\n    constructor Command(app: Application, editor: Editor) is\n        this.app = app\n        this.editor = editor\n\n    // Make a backup of the editor's state.\n    method saveBackup() is\n        backup = editor.text\n\n    // Restore the editor's state.\n    method undo() is\n        editor.text = backup\n\n    // The execution method is declared abstract to force all\n    // concrete commands to provide their own implementations.\n    // The method must return true or false depending on whether\n    // the command changes the editor's state.\n    abstract method execute()\n\n\n// The concrete commands go here.\nclass CopyCommand extends Command is\n    // The copy command isn't saved to the history since it\n    // doesn't change the editor's state.\n    method execute() is\n        app.clipboard = editor.getSelection()\n        return false\n\nclass CutCommand extends Command is\n    // The cut command does change the editor's state, therefore\n    // it must be saved to the history. And it'll be saved as\n    // long as the method returns true.\n    method execute() is\n        saveBackup()\n        app.clipboard = editor.getSelection()\n        editor.deleteSelection()\n        return true\n\nclass PasteCommand extends Command is\n    method execute() is\n        saveBackup()\n        editor.replaceSelection(app.clipboard)\n        return true\n\n// The undo operation is also a command.\nclass UndoCommand extends Command is\n    method execute() is\n        app.undo()\n        return false\n\n\n// The global command history is just a stack.\nclass CommandHistory is\n    private field history: array of Command\n\n    // Last in...\n    method push(c: Command) is\n        // Push the command to the end of the history array.\n\n    // ...first out\n    method pop():Command is\n        // Get the most recent command from the history.\n\n\n// The editor class has actual text editing operations. It plays\n// the role of a receiver: all commands end up delegating\n// execution to the editor's methods.\nclass Editor is\n    field text: string\n\n    method getSelection() is\n        // Return selected text.\n\n    method deleteSelection() is\n        // Delete selected text.\n\n    method replaceSelection(text) is\n        // Insert the clipboard's contents at the current\n        // position.\n\n\n// The application class sets up object relations. It acts as a\n// sender: when something needs to be done, it creates a command\n// object and executes it.\nclass Application is\n    field clipboard: string\n    field editors: array of Editors\n    field activeEditor: Editor\n    field history: CommandHistory\n\n    // The code which assigns commands to UI objects may look\n    // like this.\n    method createUI() is\n        // ...\n        copy = function() { executeCommand(\n            new CopyCommand(this, activeEditor)) }\n        copyButton.setCommand(copy)\n        shortcuts.onKeyPress(&quot;Ctrl+C&quot;, copy)\n\n        cut = function() { executeCommand(\n            new CutCommand(this, activeEditor)) }\n        cutButton.setCommand(cut)\n        shortcuts.onKeyPress(&quot;Ctrl+X&quot;, cut)\n\n        paste = function() { executeCommand(\n            new PasteCommand(this, activeEditor)) }\n        pasteButton.setCommand(paste)\n        shortcuts.onKeyPress(&quot;Ctrl+V&quot;, paste)\n\n        undo = function() { executeCommand(\n            new UndoCommand(this, activeEditor)) }\n        undoButton.setCommand(undo)\n        shortcuts.onKeyPress(&quot;Ctrl+Z&quot;, undo)\n\n    // Execute a command and check whether it has to be added to\n    // the history.\n    method executeCommand(command) is\n        if (command.execute())\n            history.push(command)\n\n    // Take the most recent command from the history and run its\n    // undo method. Note that we don't know the class of that\n    // command. But we don't have to, since the command knows\n    // how to undo its own action.\n    method undo() is\n        command = history.pop()\n        if (command != null)\n            command.undo()\n</pre>\n</figure>\n</div>\n<div class=\"section applicability-container\">\n<h2 id=\"applicability\"><i class=\"fa fa-lightbulb-on\" aria-hidden=\"true\"></i> Applicability</h2>\n<div class=\"applicability\">\n<div class=\"applicability-problem\">\n<p><i class=\"fa fa-fw fa-bug\" aria-hidden=\"true\"></i> Use the Command pattern when you want to parametrize objects with operations.</p>\n</div><div class=\"applicability-solution\">\n<p><i class=\"fa fa-fw fa-bolt\" aria-hidden=\"true\"></i> The Command pattern can turn a specific method call into a stand-alone object. This change opens up a lot of interesting uses: you can pass commands as method arguments, store them inside other objects, switch linked commands at runtime, etc.</p>\n<p>Here’s an example: you’re developing a GUI component such as a context menu, and you want your users to be able to configure menu items that trigger operations when an end user clicks an item.</p>\n</div>\n<div class=\"applicability-problem\">\n<p><i class=\"fa fa-fw fa-bug\" aria-hidden=\"true\"></i> Use the Command pattern when you want to queue operations, schedule their execution, or execute them remotely.</p>\n</div><div class=\"applicability-solution\">\n<p><i class=\"fa fa-fw fa-bolt\" aria-hidden=\"true\"></i> As with any other object, a command can be serialized, which means converting it to a string that can be easily written to a file or a database. Later, the string can be restored as the initial command object. Thus, you can delay and schedule command execution. But there’s even more! In the same way, you can queue, log or send commands over the network.</p>\n</div>\n<div class=\"applicability-problem\">\n<p><i class=\"fa fa-fw fa-bug\" aria-hidden=\"true\"></i> Use the Command pattern when you want to implement reversible operations.</p>\n</div><div class=\"applicability-solution\">\n<p><i class=\"fa fa-fw fa-bolt\" aria-hidden=\"true\"></i> Although there are many ways to implement undo/redo, the Command pattern is perhaps the most popular of all.</p>\n<p>To be able to revert operations, you need to implement the history of performed operations. The command history is a stack that contains all executed command objects along with related backups of the application’s state.</p>\n<p>This method has two drawbacks. First, it isn’t that easy to save an application’s state because some of it can be private. This problem can be mitigated with the <a href=\"/design-patterns/memento\">Memento</a> pattern.</p>\n<p>Second, the state backups may consume quite a lot of RAM. Therefore, sometimes you can resort to an alternative implementation: instead of restoring the past state, the command performs the inverse operation. The reverse operation also has a price: it may turn out to be hard or even impossible to implement.</p>\n</div>\n</div></div>\n<div class=\"section checklist\">\n<h2 id=\"checklist\"><i class=\"fa fa-clipboard-list-check\" aria-hidden=\"true\"></i> How to Implement</h2>\n<ol>\n<li>\n<p>Declare the command interface with a single execution method.</p>\n</li>\n<li>\n<p>Start extracting requests into concrete command classes that implement the command interface. Each class must have a set of fields for storing the request arguments along with a reference to the actual receiver object. All these values must be initialized via the command’s constructor.</p>\n</li>\n<li>\n<p>Identify classes that will act as <em>senders</em>. Add the fields for storing commands into these classes. Senders should communicate with their commands only via the command interface. Senders usually don’t create command objects on their own, but rather get them from the client code.</p>\n</li>\n<li>\n<p>Change the senders so they execute the command instead of sending a request to the receiver directly.</p>\n</li>\n<li>\n<p>The client should initialize objects in the following order:</p>\n<ul>\n<li>Create receivers.</li>\n<li>Create commands, and associate them with receivers if needed.</li>\n<li>Create senders, and associate them with specific commands.</li>\n</ul>\n</li>\n</ol>\n</div>\n<div class=\"section pros-cons\">\n<h2 id=\"pros-cons\"><i class=\"fa fa-balance-scale\" aria-hidden=\"true\"></i> Pros and Cons</h2>\n<div class=\"row\"><div class=\"col-sm-6\">\n<ul>\n<li><i class=\"fa fa-fw fa-check\" aria-hidden=\"true\"></i> <em>Single Responsibility Principle</em>. You can decouple classes that invoke operations from classes that perform these operations.</li>\n<li><i class=\"fa fa-fw fa-check\" aria-hidden=\"true\"></i> <em>Open/Closed Principle</em>. You can introduce new commands into the app without breaking existing client code.</li>\n<li><i class=\"fa fa-fw fa-check\" aria-hidden=\"true\"></i> You can implement undo/redo.</li>\n<li><i class=\"fa fa-fw fa-check\" aria-hidden=\"true\"></i> You can implement deferred execution of operations.</li>\n<li><i class=\"fa fa-fw fa-check\" aria-hidden=\"true\"></i> You can assemble a set of simple commands into a complex one.</li>\n</ul>\n</div><div class=\"col-sm-6\">\n<ul>\n<li><i class=\"fa fa-fw fa-times\" aria-hidden=\"true\"></i> The code may become more complicated since you’re introducing a whole new layer between senders and receivers.</li>\n</ul>\n</div></div></div>\n<div class=\"section relations\">\n<h2 id=\"relations\"><i class=\"fa fa-exchange-alt\" aria-hidden=\"true\"></i> Relations with Other Patterns</h2>\n<ul>\n<li>\n<p><a href=\"/design-patterns/chain-of-responsibility\">Chain of Responsibility</a>, <a href=\"/design-patterns/command\">Command</a>, <a href=\"/design-patterns/mediator\">Mediator</a> and <a href=\"/design-patterns/observer\">Observer</a> address various ways of connecting senders and receivers of requests:</p>\n<ul>\n<li><em>Chain of Responsibility</em> passes a request sequentially along a dynamic chain of potential receivers until one of them handles it.</li>\n<li><em>Command</em> establishes unidirectional connections between senders and receivers.</li>\n<li><em>Mediator</em> eliminates direct connections between senders and receivers, forcing them to communicate indirectly via a mediator object.</li>\n<li><em>Observer</em> lets receivers dynamically subscribe to and unsubscribe from receiving requests.</li>\n</ul>\n</li>\n<li>\n<p>Handlers in <a href=\"/design-patterns/chain-of-responsibility\">Chain of Responsibility</a> can be implemented as <a href=\"/design-patterns/command\">Commands</a>. In this case, you can execute a lot of different operations over the same context object, represented by a request.</p>\n<p>However, there’s another approach, where the request itself is a <em>Command</em> object. In this case, you can execute the same operation in a series of different contexts linked into a chain.</p>\n</li>\n<li>\n<p>You can use <a href=\"/design-patterns/command\">Command</a> and <a href=\"/design-patterns/memento\">Memento</a> together when implementing “undo”. In this case, commands are responsible for performing various operations over a target object, while mementos save the state of that object just before a command gets executed.</p>\n</li>\n<li>\n<p><a href=\"/design-patterns/command\">Command</a> and <a href=\"/design-patterns/strategy\">Strategy</a> may look similar because you can use both to parameterize an object with some action. However, they have very different intents.</p>\n<ul>\n<li>\n<p>You can use <em>Command</em> to convert any operation into an object. The operation’s parameters become fields of that object. The conversion lets you defer execution of the operation, queue it, store the history of commands, send commands to remote services, etc.</p>\n</li>\n<li>\n<p>On the other hand, <em>Strategy</em> usually describes different ways of doing the same thing, letting you swap these algorithms within a single context class.</p>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"/design-patterns/prototype\">Prototype</a> can help when you need to save copies of <a href=\"/design-patterns/command\">Commands</a> into history.</p>\n</li>\n<li>\n<p>You can treat <a href=\"/design-patterns/visitor\">Visitor</a> as a powerful version of the <a href=\"/design-patterns/command\">Command</a> pattern. Its objects can execute operations over various objects of different classes.</p>\n</li>\n</ul>\n</div>\n<div class=\"section implementations\">\n<h2 id=\"implementations\"><i class=\"fa fa-code\" aria-hidden=\"true\"></i> Code Examples</h2>\n<p><a href=\"/design-patterns/command/csharp/example\" title=\"Command in C#\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/csharp.svg?id=da64592defc6e86d57c39c66e9de3e58\" alt=\"Command in C#\" /></a>\n<a href=\"/design-patterns/command/cpp/example\" title=\"Command in C++\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/cpp.svg?id=f7782ed8b8666246bfcc3f8fefc3b858\" alt=\"Command in C++\" /></a>\n<a href=\"/design-patterns/command/go/example\" title=\"Command in Go\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/go.svg?id=1a89927eb99b1ea3fde7701d97970aca\" alt=\"Command in Go\" /></a>\n<a href=\"/design-patterns/command/java/example\" title=\"Command in Java\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/java.svg?id=e6d87e2dca08c953fe3acd1275ed4f4e\" alt=\"Command in Java\" /></a>\n<a href=\"/design-patterns/command/php/example\" title=\"Command in PHP\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/php.svg?id=be1906eb26b71ec1d3b93720d6156618\" alt=\"Command in PHP\" /></a>\n<a href=\"/design-patterns/command/python/example\" title=\"Command in Python\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/python.svg?id=6d815d43c0f7050a1151b43e51569c9f\" alt=\"Command in Python\" /></a>\n<a href=\"/design-patterns/command/ruby/example\" title=\"Command in Ruby\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/ruby.svg?id=b065b718c914bf8e960ef731600be1eb\" alt=\"Command in Ruby\" /></a>\n<a href=\"/design-patterns/command/rust/example\" title=\"Command in Rust\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/rust.svg?id=1f5698a4b5ae23fe79413511747e4a87\" alt=\"Command in Rust\" /></a>\n<a href=\"/design-patterns/command/swift/example\" title=\"Command in Swift\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/swift.svg?id=0b716c2d52ec3a48fbe91ac031070c1d\" alt=\"Command in Swift\" /></a>\n<a href=\"/design-patterns/command/typescript/example\" title=\"Command in TypeScript\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/typescript.svg?id=2239d0f16cb703540c205dd8cb0c0cb7\" alt=\"Command in TypeScript\" /></a></p>\n</div>\n\n\n    <div class=\"banner-set2\" id=\"book-promo\">\n            <div class=\"prom banner-content banner-bg banner-striped banner-with-image\" data-id=\"DP: 1: Support our free website and own the eBook!\" data-creative-id=\"standard-en\" data-position=\"content_bottom\">\n                <div class=\"banner-image\">\n                    <a href=\"/design-patterns/book\">\n                        <img width=\"200\" height=\"200\" loading=\"lazy\" src=\"/images/patterns/banners/patterns-book-banner-3.png?id=7d445df13c80287beaab234b4f3b698c\" srcset=\"/images/patterns/banners/patterns-book-banner-3-2x.png?id=0cc3f77ab421d1a5c02ee46488231c3a 2x\">\n                    </a>\n                </div>\n\n                <div class=\"banner-text\">\n                    <h3 class=\"title\">Support our free website and own the eBook!</h3>\n                    <ul style=\"font-size: 14px;\">\n                        <li style=\"margin: 0;\">22 design patterns and 8 principles explained in depth.</li>\n                        <li style=\"margin: 0;\">409 well-structured, easy to read, jargon-free pages.</li>\n                        <li style=\"margin: 0;\">225 clear and helpful illustrations and diagrams.</li>\n                        <li style=\"margin: 0;\">An archive with code examples in 11 languages.</li>\n                        <li style=\"margin: 0;\">All devices supported: PDF/EPUB/MOBI/KFX formats.</li>\n                    </ul>\n                    <a class=\"btn btn-secondary\" href=\"/design-patterns/book\"><i class=\"fa fa-book\" aria-hidden=\"true\"></i> Learn more…</a>\n                </div>\n            </div>\n        </div>\n\n    </article>\n\n<nav class=\"prev-next\">\n                    <div class=\"next\">\n                <h4>Read next</h4>\n                <a rel=\"next\" href=\"/design-patterns/iterator\" class=\"btn btn-primary\">Iterator&nbsp;<span class=\"fa fa-arrow-right\"></span></a>\n            </div>\n                            <div class=\"prev\">\n                <h4>Return</h4>\n                <a rel=\"prev\" href=\"/design-patterns/chain-of-responsibility\" class=\"btn btn-default\"><span class=\"fa fa-arrow-left\"></span>&nbsp;Chain of Responsibility </a>\n            </div>\n            </nav>\n</div>\n\n<aside class=\"feature content-secondary\">\n    <div class=\"prom banner-sidebar banner-removable banner-removable-patterns\" data-id=\"DP: Sidebar\" data-creative-id=\"standard-sidebar-en\" data-position=\"sidebar\">\n        <div class=\"banner-inner\">\n            <div class=\"image3d-book-right\">\n                <div class=\"image3d-cover\" style=\"background: #0b3752;\">\n                    <a href=\"/design-patterns/book\">\n                        <img width=\"250\" height=\"375\" loading=\"lazy\" src=\"/images/patterns/book/web-cover-en.png?id=328861769fd11617674e3b8a7e2dd9e7\" srcset=\"/images/patterns/book/web-cover-en-2x.png?id=02940141c5652ed5a426d87390b16366 2x\">\n                    </a>\n                </div>\n            </div>\n            <div style=\"margin-top: 1rem\">\n                <p class=\"text-center\" >This article is a part of our eBook<br/><strong>Dive Into Design Patterns</strong>.</p>\n                <a href=\"/design-patterns/book\" class=\"btn btn-secondary btn-block\"><i class=\"fa fa-book\" aria-hidden=\"true\"></i> Learn more…</a>\n            </div>\n        </div>\n    </div>\n\n\n</aside>\n                    </div>\n    </main>\n\n    <aside class=\"sidebar main-menu\">\n    <div class=\"main-menu-controls\">\n        <button class=\"navigation-toggle\"><i class=\"fa fa-fw fa-times\"></i></button>\n    </div>\n    <div class=\"main-menu-list-wrapper nano\">\n        <div class=\"main-menu-list nano-content\">\n            <a class=\"menu-brand\" href=\"/\">\n                                    <img width=200 height=241 loading=\"lazy\" alt=\"Refactoring.Guru\" src=\"/images/content-public/logos/logo-new.png?id=97d554614702483f31e38b32e82d8e34\" srcset=\"/images/content-public/logos/logo-new-2x.png?id=3bc33294e095bab1d6fe9ae421d07837 2x\">\n                            </a>\n\n            <div class=\"menu-container\" style=\"position: relative\">\n                                <ul class=\"menu-list trail\">\n                            <li class=\"featured\">\n            <a href=\"/store\">\n                <i class=\"fa fa-fw fa-star\" aria-hidden=\"true\"></i> Premium Content\n            </a>\n    \n            <ul >\n                            <li class=\"featured menu-fs15\">\n            <a href=\"/design-patterns/book\">\n                <i class=\"fa fa-fw fa-book\" aria-hidden=\"true\"></i> Design Patterns eBook\n            </a>\n    \n    \n            </li>\n                                <li class=\"featured menu-fs15\">\n            <a href=\"/refactoring/course\">\n                <i class=\"fa fa-fw fa-graduation-cap\" aria-hidden=\"true\"></i> Refactoring Course\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring\">\n                <i class=\"fa fa-fw fa-scissors\" aria-hidden=\"true\"></i> Refactoring\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/refactoring/what-is-refactoring\">\n                What is Refactoring\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/refactoring/what-is-refactoring\">\n                Clean code\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/technical-debt\">\n                Technical debt\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/when\">\n                When to refactor\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/how-to\">\n                How to refactor\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/catalog\">\n                Catalog\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells\">\n                Code Smells\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/refactoring/smells/bloaters\">\n                Bloaters\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/long-method\">\n                Long Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/large-class\">\n                Large Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/primitive-obsession\">\n                Primitive Obsession\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/long-parameter-list\">\n                Long Parameter List\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/data-clumps\">\n                Data Clumps\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/oo-abusers\">\n                Object-Orientation Abusers\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/switch-statements\">\n                Switch Statements\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/temporary-field\">\n                Temporary Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/refused-bequest\">\n                Refused Bequest\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/alternative-classes-with-different-interfaces\">\n                Alternative Classes with Different Interfaces\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/change-preventers\">\n                Change Preventers\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/divergent-change\">\n                Divergent Change\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/shotgun-surgery\">\n                Shotgun Surgery\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/parallel-inheritance-hierarchies\">\n                Parallel Inheritance Hierarchies\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/dispensables\">\n                Dispensables\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/comments\">\n                Comments\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/duplicate-code\">\n                Duplicate Code\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/lazy-class\">\n                Lazy Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/data-class\">\n                Data Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/dead-code\">\n                Dead Code\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/speculative-generality\">\n                Speculative Generality\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/couplers\">\n                Couplers\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/feature-envy\">\n                Feature Envy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/inappropriate-intimacy\">\n                Inappropriate Intimacy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/message-chains\">\n                Message Chains\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/middle-man\">\n                Middle Man\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/other\">\n                Other Smells\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/incomplete-library-class\">\n                Incomplete Library Class\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques\">\n                Refactorings\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/refactoring/techniques/composing-methods\">\n                Composing Methods\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/extract-method\">\n                Extract Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/inline-method\">\n                Inline Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-variable\">\n                Extract Variable\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/inline-temp\">\n                Inline Temp\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-temp-with-query\">\n                Replace Temp with Query\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/split-temporary-variable\">\n                Split Temporary Variable\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-assignments-to-parameters\">\n                Remove Assignments to Parameters\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-method-with-method-object\">\n                Replace Method with Method Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/substitute-algorithm\">\n                Substitute Algorithm\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/moving-features-between-objects\">\n                Moving Features between Objects\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/move-method\">\n                Move Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/move-field\">\n                Move Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-class\">\n                Extract Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/inline-class\">\n                Inline Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/hide-delegate\">\n                Hide Delegate\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-middle-man\">\n                Remove Middle Man\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-foreign-method\">\n                Introduce Foreign Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-local-extension\">\n                Introduce Local Extension\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/organizing-data\">\n                Organizing Data\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/self-encapsulate-field\">\n                Self Encapsulate Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-data-value-with-object\">\n                Replace Data Value with Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/change-value-to-reference\">\n                Change Value to Reference\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/change-reference-to-value\">\n                Change Reference to Value\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-array-with-object\">\n                Replace Array with Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/duplicate-observed-data\">\n                Duplicate Observed Data\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/change-unidirectional-association-to-bidirectional\">\n                Change Unidirectional Association to Bidirectional\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/change-bidirectional-association-to-unidirectional\">\n                Change Bidirectional Association to Unidirectional\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-magic-number-with-symbolic-constant\">\n                Replace Magic Number with Symbolic Constant\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/encapsulate-field\">\n                Encapsulate Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/encapsulate-collection\">\n                Encapsulate Collection\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-type-code-with-class\">\n                Replace Type Code with Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-type-code-with-subclasses\">\n                Replace Type Code with Subclasses\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-type-code-with-state-strategy\">\n                Replace Type Code with State/Strategy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-subclass-with-fields\">\n                Replace Subclass with Fields\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/simplifying-conditional-expressions\">\n                Simplifying Conditional Expressions\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/decompose-conditional\">\n                Decompose Conditional\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/consolidate-conditional-expression\">\n                Consolidate Conditional Expression\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/consolidate-duplicate-conditional-fragments\">\n                Consolidate Duplicate Conditional Fragments\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-control-flag\">\n                Remove Control Flag\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-nested-conditional-with-guard-clauses\">\n                Replace Nested Conditional with Guard Clauses\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-conditional-with-polymorphism\">\n                Replace Conditional with Polymorphism\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-null-object\">\n                Introduce Null Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-assertion\">\n                Introduce Assertion\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/simplifying-method-calls\">\n                Simplifying Method Calls\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/rename-method\">\n                Rename Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/add-parameter\">\n                Add Parameter\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-parameter\">\n                Remove Parameter\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/separate-query-from-modifier\">\n                Separate Query from Modifier\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/parameterize-method\">\n                Parameterize Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-parameter-with-explicit-methods\">\n                Replace Parameter with Explicit Methods\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/preserve-whole-object\">\n                Preserve Whole Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-parameter-with-method-call\">\n                Replace Parameter with Method Call\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-parameter-object\">\n                Introduce Parameter Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-setting-method\">\n                Remove Setting Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/hide-method\">\n                Hide Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-constructor-with-factory-method\">\n                Replace Constructor with Factory Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-error-code-with-exception\">\n                Replace Error Code with Exception\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-exception-with-test\">\n                Replace Exception with Test\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/dealing-with-generalization\">\n                Dealing with Generalization\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/pull-up-field\">\n                Pull Up Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/pull-up-method\">\n                Pull Up Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/pull-up-constructor-body\">\n                Pull Up Constructor Body\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/push-down-method\">\n                Push Down Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/push-down-field\">\n                Push Down Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-subclass\">\n                Extract Subclass\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-superclass\">\n                Extract Superclass\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-interface\">\n                Extract Interface\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/collapse-hierarchy\">\n                Collapse Hierarchy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/form-template-method\">\n                Form Template Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-inheritance-with-delegation\">\n                Replace Inheritance with Delegation\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-delegation-with-inheritance\">\n                Replace Delegation with Inheritance\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"trail\">\n            <a href=\"/design-patterns\">\n                <i class=\"fa fa-fw fa-puzzle-piece\" aria-hidden=\"true\"></i> Design Patterns\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/what-is-pattern\">\n                What is a Pattern\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/what-is-pattern\">\n                What's a design pattern?\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/history\">\n                History of patterns\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/why-learn-patterns\">\n                Why should I learn patterns?\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/criticism\">\n                Criticism of patterns\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/classification\">\n                Classification of patterns\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/catalog\">\n                Catalog\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-third-level\">\n            <a href=\"/design-patterns/creational-patterns\">\n                Creational Patterns\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/factory-method\">\n                Factory Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/abstract-factory\">\n                Abstract Factory\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/builder\">\n                Builder\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/prototype\">\n                Prototype\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/singleton\">\n                Singleton\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"menu-third-level\">\n            <a href=\"/design-patterns/structural-patterns\">\n                Structural Patterns\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/adapter\">\n                Adapter\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/bridge\">\n                Bridge\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/composite\">\n                Composite\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/decorator\">\n                Decorator\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/facade\">\n                Facade\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/flyweight\">\n                Flyweight\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/proxy\">\n                Proxy\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"menu-third-level trail\">\n            <a href=\"/design-patterns/behavioral-patterns\">\n                Behavioral Patterns\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/chain-of-responsibility\">\n                Chain of Responsibility\n            </a>\n    \n    \n            </li>\n                                <li class=\"trail active\">\n            <a href=\"/design-patterns/command\">\n                Command\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/iterator\">\n                Iterator\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/mediator\">\n                Mediator\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/memento\">\n                Memento\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/observer\">\n                Observer\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/state\">\n                State\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/strategy\">\n                Strategy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/template-method\">\n                Template Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/visitor\">\n                Visitor\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"menu-code-examples\">\n            <a href=\"/design-patterns/examples\">\n                Code Examples\n            </a>\n    \n            <ul >\n                            <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/csharp\">\n                C#\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/cpp\">\n                C++\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/go\">\n                Go\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/java\">\n                Java\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/php\">\n                PHP\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/python\">\n                Python\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/ruby\">\n                Ruby\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/rust\">\n                Rust\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/swift\">\n                Swift\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/typescript\">\n                TypeScript\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n                </div>\n\n            <div class=\"main-menu-aux-controls\">\n                <a href=\"https://refactoring.guru/login\" title=\"Sign in\" style=\" display: inline-flex; align-items: center; gap: 6px; \"><svg style=\"width: 16px; height: 16px; filter:drop-shadow(0 1px 1px #74261e)\" class=\"inline-block mx-0\"  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\"opacity=\"0.4\" d=\"M352.7 222.4c3.2 1 6.5 1.6 10 1.6l21.3 0c17.7 0 32 14.3 32 32s-14.3 32-32 32l-21.3 0c-.8 0-1.7 0-2.5 0c-.9 0-1.7-.1-2.5-.1c-1.7-.1-3.4-.2-5-.4C357.4 414 391.1 512 432 512c44.2 0 80-114.6 80-256S476.2 0 432 0c-40.6 0-74.2 96.9-79.3 222.4z\"/><path fill=\"currentColor\"class=\"fa-primary\" d=\"M320 48a48 48 0 1 0 -96 0 48 48 0 1 0 96 0zM125.7 175.5c9.9-9.9 23.4-15.5 37.5-15.5c1.9 0 3.8 .1 5.6 .3L137.6 254c-9.3 28 1.7 58.8 26.8 74.5l86.2 53.9-25.4 88.8c-4.9 17 5 34.7 22 39.6s34.7-5 39.6-22l28.7-100.4c5.9-20.6-2.6-42.6-20.7-53.9L238 299l30.9-82.4 5.1 12.3C289 264.7 323.9 288 362.7 288l21.3 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-21.3 0c-12.9 0-24.6-7.8-29.5-19.7l-6.3-15c-14.6-35.1-44.1-61.9-80.5-73.1l-48.7-15c-11.1-3.4-22.7-5.2-34.4-5.2c-31 0-60.8 12.3-82.7 34.3L57.4 153.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l23.1-23.1zM91.2 352L32 352c-17.7 0-32 14.3-32 32s14.3 32 32 32l69.6 0c19 0 36.2-11.2 43.9-28.5L157 361.6l-9.5-6c-17.5-10.9-30.5-26.8-37.9-44.9L91.2 352z\"/></svg> Sign in</a>\n                <a href=\"https://feedback.refactoring.guru/\" class=\"userecho-public\" rel=\"nofollow\" title=\"Contact us\"><i class=\"fa fa-fw fa-fw fa-envelope\" aria-hidden=\"true\"></i> Contact us</a>\n            </div>\n        </div>\n    </div>\n</aside>\n\n    <nav class=\"navigation\" role=\"navigation\">\n    <div class=\"navigation-container\">\n        <a class=\"navigation-brand\" href=\"/\">\n            <img alt=\"Refactoring.Guru\"\n                 src=\"/images/content-public/logos/logo-new-mobile.png?id=ea18aa9b032eaa92835ed6d472b03b4a\"\n                 srcset=\"/images/content-public/logos/logo-new-mobile-2x.png?id=7ad5648bfd86ae2e8524147a72877c64 2x\">\n        </a>\n\n        <div class=\"shop-link d-none d-lg-block\" style=\"display: none !important;\">\n            <a class=\"btn btn-md btn-primary btn-featured\" href=\"/store\"><svg style=\"width: 28px; height: 28px; fill: currentColor; display: inline-block; margin-top: -14px;\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><!--! Font Awesome Pro 6.3.0 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2023 Fonticons, Inc. --><path d=\"M356 60l60 20-60 20-20 60-20-60L256 80l60-20L336 0l20 60zM464 208l48 16-48 16-16 48-16-48-48-16 48-16 16-48 16 48zm-243.8-9.8l33 66.9 73.8 10.7 59.8 8.7-43.3 42.2-53.4 52.1 12.6 73.5L313 512l-53.5-28.1-66-34.7-66 34.7L73.9 512l10.2-59.6 12.6-73.5L43.3 326.8 0 284.6l59.8-8.7 73.8-10.7 33-66.9L193.5 144l26.8 54.2zm26.1 114.4l-25-3.6-11.2-22.6-16.7-33.9-16.7 33.9L165.6 309l-25 3.6-37.4 5.4 27.1 26.4 18.1 17.6L144 387l-6.4 37.3 33.5-17.6 22.3-11.7 22.3 11.7 33.5 17.6L242.9 387l-4.3-24.9 18.1-17.6 27.1-26.4-37.4-5.4z\"/></svg>\n                Shop Now!</a>\n        </div>\n\n        <ul class=\"navigation-menu\">\n                            <li class=\"nav-locale dropdown dropdown-locales\">\n                    <button class=\"dropdown-toggle\" id=\"dropdownLanguage\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                        <i class=\"fa fa-fw fa-globe\" aria-hidden=\"true\"></i> <span class=\"caption d-none d-lg-inline-block\">English</span>\n                    </button>\n                    <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownLanguage\">\n                                                                                                                        <a href=\"https://refactoring.guru/design-patterns/command\" class=\"dropdown-item locale-link active\" data-locale=\"en\" title=\"English\">English</a>\n                                                                                                                                <a href=\"https://refactoring.guru/es/design-patterns/command\" class=\"dropdown-item locale-link \" data-locale=\"es\" title=\"Español\">Español</a>\n                                                                                                                                <a href=\"https://refactoring.guru/fr/design-patterns/command\" class=\"dropdown-item locale-link \" data-locale=\"fr\" title=\"Français\">Français</a>\n                                                                                                                                <a href=\"https://refactoring.guru/ja/design-patterns/command\" class=\"dropdown-item locale-link \" data-locale=\"ja\" title=\"日本語\">日本語</a>\n                                                                                                                                <a href=\"https://refactoring.guru/ko/design-patterns/command\" class=\"dropdown-item locale-link \" data-locale=\"ko\" title=\"한국어\">한국어</a>\n                                                                                                                                <a href=\"https://refactoring.guru/pl/design-patterns/command\" class=\"dropdown-item locale-link \" data-locale=\"pl\" title=\"Polski\">Polski</a>\n                                                                                                                                <a href=\"https://refactoring.guru/pt-br/design-patterns/command\" class=\"dropdown-item locale-link \" data-locale=\"pt-br\" title=\"Português Brasileiro\">Português Brasileiro</a>\n                                                                                                                                <a href=\"https://refactoring.guru/ru/design-patterns/command\" class=\"dropdown-item locale-link \" data-locale=\"ru\" title=\"Русский\">Русский</a>\n                                                                                                                                <a href=\"https://refactoring.guru/uk/design-patterns/command\" class=\"dropdown-item locale-link \" data-locale=\"uk\" title=\"Українська\">Українська</a>\n                                                                                                                                <a href=\"https://refactoringguru.cn/design-patterns/command\" class=\"dropdown-item locale-link \" data-locale=\"zh\" title=\"中文\">中文</a>\ndiv>\n                </li>\n                        <li class=\"nav-contacts\">\n                <a class=\"userecho-private\" href=\"https://feedback.refactoring.guru/?show_feedback_form_private=true\" rel=\"nofollow\" title=\"Contact us\">\n                    <i class=\"fa fa-fw fa-envelope\" aria-hidden=\"true\"></i> <span class=\"caption d-none d-xl-inline-block\">Contact us</span>\n                </a>\n            </li>\n                            <li class=\"nav-user\">\n                    <a href=\"https://refactoring.guru/login\" title=\"Sign in\"><span class=\"sign-in-icon\"><svg style=\"width: 24px; height: 24px; \" class=\"inline-block \"  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\"opacity=\"0.4\" d=\"M352.7 222.4c3.2 1 6.5 1.6 10 1.6l21.3 0c17.7 0 32 14.3 32 32s-14.3 32-32 32l-21.3 0c-.8 0-1.7 0-2.5 0c-.9 0-1.7-.1-2.5-.1c-1.7-.1-3.4-.2-5-.4C357.4 414 391.1 512 432 512c44.2 0 80-114.6 80-256S476.2 0 432 0c-40.6 0-74.2 96.9-79.3 222.4z\"/><path fill=\"currentColor\"class=\"fa-primary\" d=\"M320 48a48 48 0 1 0 -96 0 48 48 0 1 0 96 0zM125.7 175.5c9.9-9.9 23.4-15.5 37.5-15.5c1.9 0 3.8 .1 5.6 .3L137.6 254c-9.3 28 1.7 58.8 26.8 74.5l86.2 53.9-25.4 88.8c-4.9 17 5 34.7 22 39.6s34.7-5 39.6-22l28.7-100.4c5.9-20.6-2.6-42.6-20.7-53.9L238 299l30.9-82.4 5.1 12.3C289 264.7 323.9 288 362.7 288l21.3 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-21.3 0c-12.9 0-24.6-7.8-29.5-19.7l-6.3-15c-14.6-35.1-44.1-61.9-80.5-73.1l-48.7-15c-11.1-3.4-22.7-5.2-34.4-5.2c-31 0-60.8 12.3-82.7 34.3L57.4 153.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l23.1-23.1zM91.2 352L32 352c-17.7 0-32 14.3-32 32s14.3 32 32 32l69.6 0c19 0 36.2-11.2 43.9-28.5L157 361.6l-9.5-6c-17.5-10.9-30.5-26.8-37.9-44.9L91.2 352z\"/></svg></span> <span class=\"account-icon\" style=\"display:none\"><svg style=\"width: 24px; height: 24px; \" class=\"inline-block \"  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 576 512\"><path fill=\"currentColor\"opacity=\"0.4\" d=\"M64 270.5l224-196c74.7 65.4 149.4 130.7 224.1 196.1l.4 177.3c.1 35.4-28.6 64.1-64 64.1l-320.4 0c-35.3 0-64-28.6-64-64L64 270.5zM176.1 433.6c.1 .5 .1 1.1 .2 1.6c.2 1 .5 2 .9 3c.8 1.9 2 3.6 3.4 5.1c2.9 2.9 6.9 4.7 11.3 4.7l192 0c8.8 0 16-7.2 16-16c0-44.2-35.8-80-80-80l-64 0c-22.1 0-42.1 9-56.6 23.4c-7.2 7.2-13.1 15.9-17.1 25.4c-2 4.8-3.6 9.8-4.7 15c-.5 2.6-.9 5.3-1.2 7.9c-.1 1.3-.2 2.7-.3 4.1c-.1 1.4-.1 2.7-.1 4.1c0 .6 0 1.1 .1 1.6zm48.2-184.2c-.1 1.1-.2 2.2-.2 3.2c-.1 1.1-.1 2.2-.1 3.3s0 2.2 .1 3.3c.1 1.1 .1 2.2 .2 3.2c.2 2.1 .5 4.3 1 6.4c.9 4.2 2.1 8.2 3.7 12c3.2 7.7 7.9 14.6 13.7 20.3C254.3 312.8 270.3 320 288 320c35.3 0 64-28.7 64-64s-28.7-64-64-64c-17.7 0-33.7 7.2-45.3 18.7c-5.8 5.8-10.5 12.7-13.7 20.3c-1.6 3.8-2.9 7.8-3.7 12c-.4 2.1-.8 4.2-1 6.4z\"/><path fill=\"currentColor\"class=\"fa-primary\" d=\"M309.1 7.9C297-2.6 279-2.6 266.9 7.9l-256 224c-13.3 11.6-14.6 31.9-3 45.2s31.9 14.6 45.2 3L288 74.5 522.9 280.1c13.3 11.6 33.5 10.3 45.2-3s10.3-33.5-3-45.2L512 185.5 512 64c0-17.7-14.3-32-32-32l-32 0c-17.7 0-32 14.3-32 32l0 37.5L309.1 7.9zM352 256a64 64 0 1 0 -128 0 64 64 0 1 0 128 0zm-96 96c-44.2 0-80 35.8-80 80c0 8.8 7.2 16 16 16l192 0c8.8 0 16-7.2 16-16c0-44.2-35.8-80-80-80l-64 0z\"/></svg></span> <span class=\"sign-out-icon\" style=\"display:none\"><svg style=\"width: 24px; height: 24px; \" class=\"inline-block \"  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\"opacity=\"0.4\" d=\"M0 256C0 397.4 35.8 512 80 512c25.3 0 47.8-37.5 62.5-96L128 416c-.5 0-1.1 0-1.6 0c-.6 0-1.1-.1-1.6-.1c-1.1-.1-2.1-.3-3.2-.5c-2.1-.4-4.1-1.1-6-1.9c-3.8-1.6-7.3-4-10.2-6.9s-5.2-6.3-6.9-10.2c-.8-1.9-1.4-3.9-1.9-6c-.2-1.1-.4-2.3-.5-3.5c0-.3 0-.6-.1-.8c0-.2 0-.4 0-.7c0-.4 0-.7 0-.7c0-.5 0-.7 0-.9c0-.3 0-.6 0-.9c0 0 0-.3 0-.7c0-.2 0-.4 0-.7c0-.2 0-.4 .1-.8c0-.3 .1-.6 .1-.9c0-.2 .1-.4 .1-.7c.1-.8 .2-1.2 .3-1.7c.5-2.2 1.1-4.2 1.9-6.1c1.6-3.8 4-7.3 6.9-10.2c5.8-5.8 13.8-9.4 22.6-9.4l26.2 0c3.8-29.6 5.8-62.1 5.8-96c0-18.3-.6-36.1-1.7-53.4c-1.7-1.2-3.4-2.5-4.9-4c-.8-.8-1.6-1.6-2.2-2.5s-1.3-1.7-1.9-2.6c-1.2-1.8-2.1-3.6-2.9-5.5s-1.4-3.9-1.8-5.9c-.2-1-.3-2-.4-3s-.1-2-.2-3c0-8.3 3.1-16.5 9.4-22.8C141 63.1 112.8 0 80 0C35.8 0 0 114.6 0 256z\"/><path fill=\"currentColor\"class=\"fa-primary\" d=\"M416 48a48 48 0 1 0 -96 0 48 48 0 1 0 96 0zM221.7 175.5c9.9-9.9 23.4-15.5 37.5-15.5c1.9 0 3.8 .1 5.6 .3L233.6 254c-9.3 28 1.7 58.8 26.8 74.5l86.2 53.9-25.4 88.8c-4.9 17 5 34.7 22 39.6s34.7-5 39.6-22l28.7-100.4c5.9-20.6-2.6-42.6-20.7-53.9L334 299l30.9-82.4 5.1 12.3C385 264.7 419.9 288 458.7 288l21.3 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-21.3 0c-12.9 0-24.6-7.8-29.5-19.7l-6.3-15c-14.6-35.1-44.1-61.9-80.5-73.1l-48.7-15c-11.1-3.4-22.7-5.2-34.4-5.2c-31 0-60.8 12.3-82.7 34.3l-23.1 23.1c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l23.1-23.1zM187.2 352L128 352c-17.7 0-32 14.3-32 32s14.3 32 32 32l69.6 0c19 0 36.2-11.2 43.9-28.5L253 361.6l-9.5-6c-17.5-10.9-30.5-26.8-37.9-44.9L187.2 352z\"/></svg></span> <span class=\"caption d-none d-xl-inline-block\">Sign in</span></a>\n                </li>\n                        <li class=\"nav-menu\">\n                <button class=\"navigation-toggle\"><i class=\"fa fa-fw fa-bars\" aria-hidden=\"true\"></i></button>\n            </li>\n        </ul>\n    </div>\n</nav>\n\n    <footer class=\"footer center-content\">\n    <div class=\"footer-container center-content-container\">\n        <div class=\"footer-inner container-fluid\">\n            <div class=\"row\">\n                <div class=\"col-8 col-md-10\">\n                    <ul class=\"footer-list footer-list-horizontal\">\n                        <li><a href=\"/\">Home</a></li>\n                        <li><a href=\"/refactoring\">Refactoring</a></li>\n                        <li><a href=\"/design-patterns\">Design Patterns</a></li>\n                        <li><a href=\"/store\">Premium Content</a></li>\n                        <li><a href=\"https://gitbybit.com/\">Git Course</a></li>\n                        <li><a href=\"https://refactoring.userecho.com/\" rel=\"nofollow\" class=\"userecho-public\">Forum</a></li>\n                        <li><a href=\"https://refactoring.userecho.com/\" rel=\"nofollow\" class=\"userecho-private\">Contact us</a></li>\n                    </ul>\n                </div>\n                <div class=\"col-4 col-md-2\">\n                    <ul class=\"footer-list footer-list-iconic footer-list-right\">\n                                                    <li><a href=\"https://www.facebook.com/refactoring.guru\"><i class=\"fa fa-facebook-official\"></i></a></li>\n                                                <li><a href=\"/sendy/form\" rel=\"nofollow\"><i class=\"fa fa-envelope\" aria-hidden=\"true\"></i></a></li>\n                        <li><a href=\"https://github.com/RefactoringGuru\"><i class=\"fa fa-github-circled\"></i></a></li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"footer-second\">\n        <div class=\"footer-container center-content-container\">\n            <div class=\"footer-inner container-fluid\">\n                <div class=\"row\">\n                    <div class=\"col-12 col-sm-6\">\n                        <i class=\"fa fa-fw fa-copyright\"></i> 2014-2025 <a href=\"/\">Refactoring.Guru</a>. <span style=\"white-space: nowrap\">All rights reserved.</span><br>\n                        <i class=\"fa fa-fw fa-image\"></i> Illustrations by <a href=\"http://zhart.us/\" rel=\"nofollow\"><span style=\"white-space: nowrap\">Dmitry Zhart</span></a>\n                    </div>\n                    <div class=\"footer-links-right col-12 col-sm-6 mt-4 mt-sm-0\">\n                        <ul class=\"footer-list footer-list-horizontal footer-list-right\">\n                            <li><a href=\"/terms\"><span>Terms &amp; Conditions</span></a>\n                            </li>\n                            <li><a href=\"/privacy-policy\"><span>Privacy Policy</span></a>\n                            </li>\n                            <li><a href=\"/content-usage-policy\"><span>Content Usage Policy</span></a>\n                            </li>\n                            <li><a href=\"/site-about\"><span>About us</span></a>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n                                    <div class=\"row\">\n                        <div class=\"col-12 col-sm-4\">\n                            <div class=\"mt-4\">\n                                                                    <b>Ukrainian office:</b><br>\n                                    <object class=\"fa-fw\" style=\"height: 0.8rem; filter: invert(50%);\"  type=\"image/svg+xml\" data=\"/images/content-public/icons/fa-building.svg?id=afddb5806968b0a9acfc1df75a181234\">\n                                        <img class=\"fa-fw\" style=\"height: 0.8rem;\" src=\"/images/content-public/icons/fa-building.svg?id=afddb5806968b0a9acfc1df75a181234\" alt=\"Organization address\"/>\n                                    </object> FOP Olga Skobeleva<br>\n                                    <svg style=\"width: 16px; height: 16px; margin-right: 1px; fill: currentColor;\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\"><path d=\"M352 192c0-88.4-71.6-160-160-160S32 103.6 32 192c0 15.6 5.4 37 16.6 63.4c10.9 25.9 26.2 54 43.6 82.1c34.1 55.3 74.4 108.2 99.9 140c25.4-31.8 65.8-84.7 99.9-140c17.3-28.1 32.7-56.3 43.6-82.1C346.6 229 352 207.6 352 192zm32 0c0 87.4-117 243-168.3 307.2c-12.3 15.3-35.1 15.3-47.4 0C117 435 0 279.4 0 192C0 86 86 0 192 0S384 86 384 192zm-240 0a48 48 0 1 0 96 0 48 48 0 1 0 -96 0zm48 80a80 80 0 1 1 0-160 80 80 0 1 1 0 160z\"/></svg> Abolmasova 7<br>\n                                    <span style=\"margin-left: 21px;\">Kyiv, Ukraine, 02002</span><br>\n                                    <i class=\"fa fa-fw fa-envelope\"></i>  Email: support@refactoring.guru\n                                \n                            </div>\n                        </div>\n                        <div class=\"col-12 col-sm-4\">\n                            <div class=\"mt-4\">\n                                <b>Spanish office:</b><br>\n                                <object class=\"fa-fw\" style=\"height: 0.8rem; filter: invert(50%);\"  type=\"image/svg+xml\" data=\"/images/content-public/icons/fa-building.svg?id=afddb5806968b0a9acfc1df75a181234\">\n                                    <img class=\"fa-fw\" style=\"height: 0.8rem;\" src=\"/images/content-public/icons/fa-building.svg?id=afddb5806968b0a9acfc1df75a181234\" alt=\"Organization address\"/>\n                                </object> Oleksandr Shvets<br>\n                                <svg style=\"width: 16px; height: 16px; margin-right: 1px; fill: currentColor;\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\"><path d=\"M352 192c0-88.4-71.6-160-160-160S32 103.6 32 192c0 15.6 5.4 37 16.6 63.4c10.9 25.9 26.2 54 43.6 82.1c34.1 55.3 74.4 108.2 99.9 140c25.4-31.8 65.8-84.7 99.9-140c17.3-28.1 32.7-56.3 43.6-82.1C346.6 229 352 207.6 352 192zm32 0c0 87.4-117 243-168.3 307.2c-12.3 15.3-35.1 15.3-47.4 0C117 435 0 279.4 0 192C0 86 86 0 192 0S384 86 384 192zm-240 0a48 48 0 1 0 96 0 48 48 0 1 0 -96 0zm48 80a80 80 0 1 1 0-160 80 80 0 1 1 0 160z\"/></svg> Avda Pamplona 64<br>\n                                <span style=\"margin-left: 21px;\">Pamplona, Spain, 31009</span><br>\n                                <i class=\"fa fa-fw fa-envelope\"></i>  Email: support@refactoring.guru\n                            </div>\n                        </div>\n                    </div>\n                            </div>\n        </div>\n    </div>\n</footer>\n\n</div>\n\n\n    <script defer>\n    var CodeMirrorScripts = [\"/js/codemirror.min.js?id=f7ae4adf14bd00338caf8e95da733cc9\"];\n</script>\n\n\n\n    <script>window.loadContent = true;window.loadCart = true;</script>\n</body>\n</html>\n"},
{"title": null, "url": "https://refactoring.guru/design-patterns/chain-of-responsibility", "raw_html": "<!DOCTYPE html>\n<html lang=\"en\" dir=\"ltr\">\n<head prefix=\"og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# website: http://ogp.me/ns/website#\">\n    <meta charset=\"utf-8\">\n    <title>Chain of Responsibility</title>\n\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n    <meta name=\"theme-color\" content=\"#A2E2FD\" />\n\n            <style>\n        .buy-widget-excl-local-taxes {\n            display: none;\n        }\n    </style>\n    \n    <link rel=\"preload\" href=\"/fonts/PTSans/ptsans-regular_en.woff2?1\" as=\"font\" type=\"font/woff2\" crossorigin>\n    <link rel=\"preload\" href=\"/fonts/PTSans/ptsans-bold_en.woff2?1\" as=\"font\" type=\"font/woff2\" crossorigin>\n        <link rel=\"preload\" href=\"/fonts/fontello/fontawesome.woff2?15843843\" as=\"font\" type=\"font/woff2\" crossorigin>\n    <link rel=\"preload\" href=\"/fonts/FiraCode/woff2/FiraCode-Regular_latin.woff2\" as=\"font\" type=\"font/woff2\" crossorigin>\n        <link rel=\"preconnect dns-prefetch\" href=\"https://cdn.paddle.com\">\n    <link rel=\"preconnect dns-prefetch\" href=\"https://www.googletagmanager.com\">\n\n    <link rel=\"alternate\" href=\"https://refactoring.guru/design-patterns/chain-of-responsibility\" hreflang=\"x-default\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/es/design-patterns/chain-of-responsibility\" hreflang=\"es\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/fr/design-patterns/chain-of-responsibility\" hreflang=\"fr\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/ja/design-patterns/chain-of-responsibility\" hreflang=\"ja\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/ko/design-patterns/chain-of-responsibility\" hreflang=\"ko\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/pl/design-patterns/chain-of-responsibility\" hreflang=\"pl\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/pt-br/design-patterns/chain-of-responsibility\" hreflang=\"pt-br\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/ru/design-patterns/chain-of-responsibility\" hreflang=\"ru\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/uk/design-patterns/chain-of-responsibility\" hreflang=\"uk\"/>\n    <link rel=\"alternate\" href=\"https://refactoringguru.cn/design-patterns/chain-of-responsibility\" hreflang=\"zh\"/>\n\n    <meta name=\"description\" content=\"Chain of Responsibility is a behavioral design pattern that lets you pass requests along a chain of handlers. Upon receiving a request, each handler decides either to process the request or to pass it to the next handler in the chain.\">\n\n    <link rel=\"canonical\" href=\"https://refactoring.guru/design-patterns/chain-of-responsibility\"/>\n\n    <link rel=\"icon\" type=\"image/x-icon\" href=\"/favicon.png\"/>\n\n        <meta property=\"fb:app_id\" content=\"666819623386327\"/>\n        <meta property=\"og:type\" content=\"website\"/>\n        <meta property=\"og:image\" content=\"https://refactoring.guru/images/refactoring/social/facebook-share-preview.png?id=dbf9e98269595be86eb668f365be6868\"/>\n    \n                    <link rel=\"stylesheet\" href=\"/css/public-packed.min.css?id=aaefab4da343b914b8dda9973604a9e8\">\n        <style type=\"text/css\">\n                    @font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_cyrillic-ext.woff2?1) format(\"woff2\");unicode-range:U+0460-052F,U+1C80-1C88,U+20B4,U+2DE0-2DFF,U+A640-A69F,U+FE2E-FE2F}@font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_cyrillic.woff2?1) format(\"woff2\");unicode-range:U+0400-045F,U+0490-0491,U+04B0-04B1,U+2116}@font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_latin-ext.woff2?1) format(\"woff2\");unicode-range:U+0100-024F,U+0259,U+1E00-1EFF,U+2020,U+20A0-20AB,U+20AD-20CF,U+2113,U+2C60-2C7F,U+A720-A7FF}@font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_latin.woff2?1) format(\"woff2\");unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}@font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_en.woff2?1) format(\"woff2\");unicode-range:U+0-FF,U+131,U+142,U+152,U+153,U+2BB,U+2BC,U+2C6,U+2DA,U+2DC,U+420,U+423,U+430,U+438-43A,U+43D,U+440,U+441,U+443,U+44C,U+457,U+2000-206F,U+2074,U+20AA-20AC,U+20B4,U+20B9,U+20BA,U+20BD,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_cyrillic-ext.woff2?1) format(\"woff2\");unicode-range:U+0460-052F,U+1C80-1C88,U+20B4,U+2DE0-2DFF,U+A640-A69F,U+FE2E-FE2F}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_cyrillic.woff2?1) format(\"woff2\");unicode-range:U+0400-045F,U+0490-0491,U+04B0-04B1,U+2116}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_latin-ext.woff2?1) format(\"woff2\");unicode-range:U+0100-024F,U+0259,U+1E00-1EFF,U+2020,U+20A0-20AB,U+20AD-20CF,U+2113,U+2C60-2C7F,U+A720-A7FF}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_latin.woff2?1) format(\"woff2\");unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_en.woff2?1) format(\"woff2\");unicode-range:U+0-FF,U+131,U+142,U+152,U+153,U+2BB,U+2BC,U+2C6,U+2DA,U+2DC,U+420,U+423,U+430,U+438-43A,U+43D,U+440,U+441,U+443,U+44C,U+457,U+2000-206F,U+2074,U+20AA-20AC,U+20B4,U+20B9,U+20BA,U+20BD,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}\n            </style>\n\n    \n            <script defer src=\"/js/public.min.js?id=1f19fe18ffe0fc844ede8a0f2ee64202\"></script>\n        <script defer src=\"/js/checkout.min.js?id=b4da9c5bd8b1cf504447c07ae8b7cd44\"></script>\n            <script defer src=\"https://cdn.paddle.com/paddle/v2/paddle.js\"></script>\n    <script async src=\"https://www.googletagmanager.com/gtag/js?id=G-SR8Y3GYQYC\"></script>\n\n    <script type=\"application/ld+json\">\n        {\"@context\": \"http://schema.org\", \"@graph\": [{\"@type\":\"Person\",\"@id\":\"https://refactoring.guru/#founder\",\"name\":\"Alexander Shvets\"},{\"@type\":\"Organization\",\"@id\":\"https://refactoring.guru/#organization\",\"name\":\"Refactoring.Guru\",\"description\":\"Refactoring.Guru makes it easy for you to discover everything you need to know about refactoring, design patterns, SOLID principles, and other smart programming topics.\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https://refactoring.guru/#organizationlogo\",\"url\":\"https://refactoring.guru/images/content-public/logos/logo-plain.png\",\"caption\":\"Refactoring.Guru\"},\"logo\":{\"@id\":\"https://refactoring.guru/#organizationlogo\"},\"founder\":{\"@id\":\"https://refactoring.guru/#founder\"},\"sameAs\":[\"https://www.facebook.com/refactoring.guru\",\"https://twitter.com/RefactoringGuru\",\"https://github.com/RefactoringGuru\"]},{\"@type\":\"WebSite\",\"@id\":\"https://refactoring.guru/#website\",\"url\":\"https://refactoring.guru/\",\"name\":\"Refactoring.Guru\",\"description\":\"Refactoring.Guru makes it easy for you to discover everything you need to know about refactoring, design patterns, SOLID principles, and other smart programming topics.\",\"author\":{\"@id\":\"https://refactoring.guru/#founder\"},\"publisher\":{\"@id\":\"https://refactoring.guru/#organization\"},\"copyrightYear\":2014},{\"@type\":\"WebPage\",\"@id\":\"https://refactoring.guru/design-patterns/chain-of-responsibility#webpage\",\"url\":\"https://refactoring.guru/design-patterns/chain-of-responsibility\",\"inLanguage\":\"en\",\"name\":\"Chain of Responsibility\",\"description\":\"Chain of Responsibility is a behavioral design pattern that lets you pass requests along a chain of handlers. Upon receiving a request, each handler decides either to process the request or to pass it to the next handler in the chain.\",\"isPartOf\":{\"@id\":\"https://refactoring.guru#website\"},\"breadcrumb\":{\"@id\":\"https://refactoring.guru/design-patterns/chain-of-responsibility#breadcrumb\"},\"primaryImageOfPage\":{\"@id\":\"https://refactoring.guru/design-patterns/chain-of-responsibility#primaryimage\"},\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https://refactoring.guru/design-patterns/chain-of-responsibility#primaryimage\",\"url\":\"https://refactoring.guru/images/patterns/content/chain-of-responsibility/chain-of-responsibility-3x.png\",\"width\":1920,\"height\":1200}},{\"@type\":\"Article\",\"@id\":\"https://refactoring.guru/design-patterns/chain-of-responsibility#article\",\"isPartOf\":{\"@id\":\"https://refactoring.guru/design-patterns/chain-of-responsibility#webpage\"},\"mainEntityOfPage\":{\"@id\":\"https://refactoring.guru/design-patterns/chain-of-responsibility#webpage\"},\"author\":{\"@id\":\"https://refactoring.guru#founder\"},\"publisher\":{\"@id\":\"https://refactoring.guru#organization\"},\"headline\":\"Chain of Responsibility\",\"datePublished\":\"2024-01-01\",\"dateModified\":\"2025-01-01\",\"articleSection\":\"Design Patterns\",\"image\":{\"@id\":\"https://refactoring.guru/design-patterns/chain-of-responsibility#primaryimage\"}},{\"@type\":\"BreadcrumbList\",\"@id\":\"https://refactoring.guru/design-patterns/chain-of-responsibility#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https://refactoring.guru\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Design Patterns\",\"item\":\"https://refactoring.guru/design-patterns\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"Behavioral Patterns\",\"item\":\"https://refactoring.guru/design-patterns/behavioral-patterns\"}]}] }\n    </script>\n\n    <script>\nfunction extend(){var extended={};var deep=false;var i=0;var length=arguments[\"length\"];if(Object[\"prototype\"][\"toString\"][\"call\"](arguments[0])=== '[object Boolean]'){deep= arguments[0];i++};var merge=function(obj){for(var prop in obj){if(Object[\"prototype\"][\"hasOwnProperty\"][\"call\"](obj,prop)){if(deep&& Object[\"prototype\"][\"toString\"][\"call\"](obj[prop])=== '[object Object]'){extended[prop]= extend(true,extended[prop],obj[prop])}else {extended[prop]= obj[prop]}}}};for(;i< length;i++){var obj=arguments[i];merge(obj)};return extended}\nfunction defer(method) {if (window.jQuery) {method();} else {setTimeout(function() { defer(method) }, 50);}}\n</script>\n<script>\n+function(sd){sd = (typeof sd === \"string\") ? JSON.parse(atob(sd)) : sd;for(var property in sd){if(window[property]!== null&&  typeof window[property]=== 'object'){window[property]= extend(true,window[property],sd[property])}else {window[property]= sd[property]}}}(\"eyJsb2NhbGUiOiJlbiIsImxvY2FsZV9wcmVmaXgiOiIiLCJsb2NhbGl6ZWRfdXJsX3ByZWZpeCI6Imh0dHBzOlwvXC9yZWZhY3RvcmluZy5ndXJ1XC8iLCJ1cmxfcHJlZml4IjoiaHR0cHM6XC9cL3JlZmFjdG9yaW5nLmd1cnVcLyIsImxvY2FsaXplZF91cmxfcHJlZml4X20iOiJodHRwczpcL1wvcmVmYWN0b3JpbmcuZ3VydVwvIiwidXJsX3ByZWZpeF9tIjoiaHR0cHM6XC9cL3JlZmFjdG9yaW5nLmd1cnVcLyIsInVzZXJfZWNob19hbGlhcyI6InJlZmFjdG9yaW5nIiwidXNlcl9lY2hvX2hvc3QiOiJmZWVkYmFjay5yZWZhY3RvcmluZy5ndXJ1IiwidXNlcl9lY2hvX3ByaXZhdGVfZm9ydW0iOiIyIiwidXNlcl9lY2hvX2xvY2FsZSI6ImVuIiwidXNlcl9lY2hvX3B1YmxpY19mb3J1bSI6IjMiLCJ1c2VyX2VjaG9fcHVibGljX2ZvcnVtX3VybCI6Imh0dHBzOlwvXC9mZWVkYmFjay5yZWZhY3RvcmluZy5ndXJ1XC8iLCJ1c2VyX2VjaG9fc3NvX3Rva2VuIjoiIn0=\");\n</script>\n\n<script>\n    window.dataLayer = window.dataLayer || [];\n    function gtag(){dataLayer.push(arguments);}\n    gtag('js', new Date());\n            gtag('set', 'linker', {'domains': [\"refactoring.guru,refactoringguru.cn\"]});\n        gtag('config', 'G-SR8Y3GYQYC', {\n        // Disable default page view, because we're going to report them on our own.\n        // This is done to report traffic on localized domains as part of the main website traffic\n        // See the Chinese overrides below.\n        send_page_view: false,\n    });\n</script>\n\n<script>\n    (() => {\n        // On first page view after returning from social network, we need to send the social login event.\n        (function detectSocialLogin() {\n            let getCookie = function (name) {\n                var nameEQ = name + \"=\";\n                var ca = document.cookie.split(';');\n                for (var i = 0; i < ca.length; i++) {\n                    var c = ca[i];\n                    while (c.charAt(0) == ' ') c = c.substring(1, c.length);\n                    if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);\n                }\n                return null;\n            };\n            window.social_login_provider = window.social_login_provider || getCookie('social_login_provider');\n            if (window.social_login_provider) {\n                gtag('set', {referrer: null});\n                gtag('event', 'login', {\"method\": window.social_login_provider});\n                // Delete cookie.\n                document.cookie = 'social_login_provider=; Path=/; Max-Age=-99999999;';\n            }\n        })();\n\n        function trackPageView(location, title) {\n            location = location || document.location.href;\n            title = title || document.title;\n\n            // This is show on https://refactoringguru.cn/ and alike.\n            if (typeof window.analytics_path_prefix === 'string') {\n                if (/^(https?:\\/\\/[^\\/]+?)\\/$/.test(location)) {\n                    location = location.replace(/(https?:\\/\\/[^\\/]+?)\\//, '$1' + window.analytics_path_prefix);\n                } else {\n                    location = location.replace(/(https?:\\/\\/[^\\/]+?)\\//, '$1' + window.analytics_path_prefix + '/');\n                }\n                gtag('set', {\n                    'page_location': location\n                });\n            }\n\n            // This is show on https://refactoring.guru/zh/login and alike.\n            if (typeof window.analytics_location_prefix === 'string') {\n                location = location.replace(/(https?:\\/\\/[^\\/]+?)\\//, window.analytics_location_prefix);\n                gtag('set', {\n                    'page_location': location\n                });\n            }\n\n            gtag('event', 'page_view', {\n                page_location: location,\n                page_title: title,\n                locale: window.locale ?? 'en'\n            });\n        }\n\n        if (window.loadContent) {\n            window.onPageLoad = window.onPageLoad || [];\n            window.onPageLoad.push({\n                func: function (context) {\n                    trackPageView(window.location.origin + context.canonicalPath, context.title);\n                },\n                afterAll: true,\n            });\n        }\n        else {\n            trackPageView();\n        }\n    })();\n</script>\n\n\n</head>\n<body class=\"locale-en   announcement   chain-of-responsibility\" data-body_class=\"chain-of-responsibility\">\n\n<div class=\"body-holder\">\n\n            <div class=\"announcement-block announcement-block-summer prom\" data-id=\"DIDP-announcement\" data-creative-id=\"en\" data-position=\"top\">\n        <span class=\"beach-and-sea\">\n            <span class=\"a1\"></span>\n            <span class=\"a2\"><span class=\"wave\"></span></span>\n            <span class=\"yacht\"></span>\n        </span>\n        <a href=\"/store\">\n            <img src=\"/images/content-public/ann/summer/sunbed.svg?id=b1e7314a63715a13870a6bd1a43613f7\" loading=\"lazy\" style=\"width: 32px; height:32px;vertical-align: middle; scale: -1 1 1;\">\n            <span class=\"announcement-link-text\">Summer SALE</span>\n            <img src=\"/images/content-public/ann/summer/reading-book.svg?id=36006ea720df8c171968cf613e8ea164\" loading=\"lazy\" style=\"width: 32px; height:32px;vertical-align: middle;\">\n        </a>\n    </div>\n\n    \n    <div class=\"cart-placeholder\">\n    <div class=\"cart-block-container\" style=\"display:none\">\n        <div class=\"cart-block btn-group\">\n            <a href=\"#checkout\" class=\"btn cart open-checkout\">\n                <span class=\"cart-text\"></span>&nbsp;<strong class=\"cart-total font-money\"></strong>\n            </a><a href=\"#checkout\" class=\"btn btn-secondary checkout open-checkout\"><i class=\"fa fa-shopping-cart\" aria-hidden=\"true\"></i> <span class=\"btn-text-span d-none d-sm-inline-block d-lg-none d-hg-inline-block\"></span></a>\n        </div>\n    </div>\n</div>\n    <main role=\"main\" class=\"main-content top-content center-content \" data-page_class=\"\">\n        <div class=\"main-content-container center-content-container\">\n                        <div class=\"pattern page text\">\n<article>\n    <div class=\"breadcrumb\">\n                                    <a class=\"home\" href=\"/\"><i class=\"fa fa-home\" aria-hidden=\"true\"></i></a>\n                                                / <a class=\"type\" href=\"/design-patterns\">Design Patterns</a>\n                                                / <a class=\"type\" href=\"/design-patterns/behavioral-patterns\">Behavioral Patterns</a>\n                        </div>\n    <h1 class=\"title\">Chain of Responsibility</h1>\n\n    <script type=\"text/javascript\">\n        // Shorten examples titles for users.\n        var h1 = document.getElementsByTagName(\"H1\")[0];\n        if (h1.offsetHeight > 160) {\n            h1.className += ' smaller';\n        }\n\n        // Small beautification for pattern examples.\n        var title = h1.innerHTML;\n        title = title.replace(/^(Java|C\\+\\+|C#|PHP|Python|Ruby|Delphi): (.*)$/, '<strong>$1:</strong> $2');\n        h1.innerHTML = title;\n    </script>\n\n            <div class=\"aka\">\n            Also known as: <span style=\"display:inline-block\">CoR,&nbsp;</span><span style=\"display:inline-block\">Chain of Command</span>\n        </div>\n    \n    \n\n    <div class=\"section intent\">\n<h2 id=\"intent\"><i class=\"fa fa-flip-horizontal fa-comment-alt-dots\" aria-hidden=\"true\"></i> Intent</h2>\n<p><strong>Chain of Responsibility</strong> is a behavioral design pattern that lets you pass requests along a chain of handlers. Upon receiving a request, each handler decides either to process the request or to pass it to the next handler in the chain.</p>\n<figure class=\"image\"><img src=\"/images/patterns/content/chain-of-responsibility/chain-of-responsibility.png?id=56c10d0dc712546cc283cfb3fb463458\" alt=\"Chain of Responsibility design pattern\" srcset=\"/images/patterns/content/chain-of-responsibility/chain-of-responsibility.png?id=56c10d0dc712546cc283cfb3fb463458 640w,/images/patterns/content/chain-of-responsibility/chain-of-responsibility-1.5x.png?id=770c03ad168fa797ec8ed4556ddf0b5c 960w,/images/patterns/content/chain-of-responsibility/chain-of-responsibility-2x.png?id=cc104b0a00a410f37fb39da80f392b88 1280w\" sizes=\"(max-width: 720px) 100vw, 640px\" width=\"640\" style=\"aspect-ratio: 1.6;\" fetchpriority=\"high\" /></figure>\n</div>\n<div class=\"section problem\">\n<h2 id=\"problem\"><i class=\"fa fa-frown\" aria-hidden=\"true\"></i> Problem</h2>\n<p>Imagine that you’re working on an online ordering system. You want to restrict access to the system so only authenticated users can create orders. Also, users who have administrative permissions must have full access to all orders.</p>\n<p>After a bit of planning, you realized that these checks must be performed sequentially. The application can attempt to authenticate a user to the system whenever it receives a request that contains the user’s credentials. However, if those credentials aren’t correct and authentication fails, there’s no reason to proceed with any other checks.</p>\n<figure class=\"image\"><img src=\"/images/patterns/diagrams/chain-of-responsibility/problem1-en.png?id=dde084d408d2b14d632ba82583d16612\" alt=\"Problem, solved by Chain of Responsibility\" srcset=\"/images/patterns/diagrams/chain-of-responsibility/problem1-en.png?id=dde084d408d2b14d632ba82583d16612 600w,/images/patterns/diagrams/chain-of-responsibility/problem1-en-1.5x.png?id=645017a237c198fc7b35fda7238bf2b7 900w,/images/patterns/diagrams/chain-of-responsibility/problem1-en-2x.png?id=17786228efa05f83435fd39316cb940c 1200w\" sizes=\"(max-width: 720px) 100vw, 600px\" width=\"600\" style=\"aspect-ratio: 2.5;\" loading=\"lazy\" /><figcaption>\n<p>The request must pass a series of checks before the ordering system itself can handle it.</p>\n</figcaption></figure>\n<p>During the next few months, you implemented several more of those sequential checks.</p>\n<ul>\n<li>\n<p>One of your colleagues suggested that it’s unsafe to pass raw data straight to the ordering system. So you added an extra validation step to sanitize the data in a request.</p>\n</li>\n<li>\n<p>Later, somebody noticed that the system is vulnerable to brute force password cracking. To negate this, you promptly added a check that filters repeated failed requests coming from the same IP address.</p>\n</li>\n<li>\n<p>Someone else suggested that you could speed up the system by returning cached results on repeated requests containing the same data. Hence, you added another check which lets the request pass through to the system only if there’s no suitable cached response.</p>\n</li>\n</ul>\n<figure class=\"image\"><img src=\"/images/patterns/diagrams/chain-of-responsibility/problem2-en.png?id=88c684d3eab7707bee7b1550a2d8ae04\" alt=\"With each new check the code became bigger, messier, and uglier\" srcset=\"/images/patterns/diagrams/chain-of-responsibility/problem2-en.png?id=88c684d3eab7707bee7b1550a2d8ae04 610w,/images/patterns/diagrams/chain-of-responsibility/problem2-en-1.5x.png?id=7f2bce2135d4b0e860277fcc190ce6d4 915w,/images/patterns/diagrams/chain-of-responsibility/problem2-en-2x.png?id=bea31844e04cdd110755cef1571ca088 1220w\" sizes=\"(max-width: 720px) 100vw, 610px\" width=\"610\" style=\"aspect-ratio: 1.65;\" loading=\"lazy\" /><figcaption>\n<p>The bigger the code grew, the messier it became.</p>\n</figcaption></figure>\n<p>The code of the checks, which had already looked like a mess, became more and more bloated as you added each new feature. Changing one check sometimes affected the others. Worst of all, when you tried to reuse the checks to protect other components of the system, you had to duplicate some of the code since those components required some of the checks, but not all of them.</p>\n<p>The system became very hard to comprehend and expensive to maintain. You struggled with the code for a while, until one day you decided to refactor the whole thing.</p>\n</div>\n<div class=\"section solution\">\n<h2 id=\"solution\"><i class=\"fa fa-smile-beam\" aria-hidden=\"true\"></i> Solution</h2>\n<p>Like many other behavioral design patterns, the <strong>Chain of Responsibility</strong> relies on transforming particular behaviors into stand-alone objects called <em>handlers</em>. In our case, each check should be extracted to its own class with a single method that performs the check. The request, along with its data, is passed to this method as an argument.</p>\n<p>The pattern suggests that you link these handlers into a chain. Each linked handler has a field for storing a reference to the next handler in the chain. In addition to processing a request, handlers pass the request further along the chain. The request travels along the chain until all handlers have had a chance to process it.</p>\n<p>Here’s the best part: a handler can decide not to pass the request further down the chain and effectively stop any further processing.</p>\n<p>In our example with ordering systems, a handler performs the processing and then decides whether to pass the request further down the chain. Assuming the request contains the right data, all the handlers can execute their primary behavior, whether it’s authentication checks or caching.</p>\n<figure class=\"image\"><img src=\"/images/patterns/diagrams/chain-of-responsibility/solution1-en.png?id=dccad3e628bd2b8f1856c99369ca6e5b\" alt=\"Handlers are lined-up one by one, forming a chain\" srcset=\"/images/patterns/diagrams/chain-of-responsibility/solution1-en.png?id=dccad3e628bd2b8f1856c99369ca6e5b 640w,/images/patterns/diagrams/chain-of-responsibility/solution1-en-1.5x.png?id=c50a4fd7f58fb902cd23e5f52d15e9ba 960w,/images/patterns/diagrams/chain-of-responsibility/solution1-en-2x.png?id=5942fb6064f55d3894ca71c0c0df3fd8 1280w\" sizes=\"(max-width: 720px) 100vw, 640px\" width=\"640\" style=\"aspect-ratio: 4;\" loading=\"lazy\" /><figcaption>\n<p>Handlers are lined up one by one, forming a chain.</p>\n</figcaption></figure>\n<p>However, there’s a slightly different approach (and it’s a bit more canonical) in which, upon receiving a request, a handler decides whether it can process it. If it can, it doesn’t pass the request any further. So it’s either only one handler that processes the request or none at all. This approach is very common when dealing with events in stacks of elements within a graphical user interface.</p>\n<p>For instance, when a user clicks a button, the event propagates through the chain of GUI elements that starts with the button, goes along its containers (like forms or panels), and ends up with the main application window. The event is processed by the first element in the chain that’s capable of handling it. This example is also noteworthy because it shows that a chain can always be extracted from an object tree.</p>\n<figure class=\"image\"><img src=\"/images/patterns/diagrams/chain-of-responsibility/solution2-en.png?id=cc5bab096e1b37105e1027c43a92cc8a\" alt=\"A chain can be formed from a branch of an object tree\" srcset=\"/images/patterns/diagrams/chain-of-responsibility/solution2-en.png?id=cc5bab096e1b37105e1027c43a92cc8a 520w,/images/patterns/diagrams/chain-of-responsibility/solution2-en-1.5x.png?id=e310e9af8040174984077f0b3282155e 780w,/images/patterns/diagrams/chain-of-responsibility/solution2-en-2x.png?id=3ba9dfc081064c3ecd3882f931431a0e 1040w\" sizes=\"(max-width: 720px) 100vw, 520px\" width=\"520\" style=\"aspect-ratio: 1.73;\" loading=\"lazy\" /><figcaption>\n<p>A chain can be formed from a branch of an object tree.</p>\n</figcaption></figure>\n<p>It’s crucial that all handler classes implement the same interface. Each concrete handler should only care about the following one having the <code>execute</code> method. This way you can compose chains at runtime, using various handlers without coupling your code to their concrete classes.</p>\n</div>\n<div class=\"section analogy\">\n<h2 id=\"analogy\"><i class=\"fa fa-car-side\" aria-hidden=\"true\"></i> Real-World Analogy</h2>\n<figure class=\"image\"><img src=\"/images/patterns/content/chain-of-responsibility/chain-of-responsibility-comic-1-en.png?id=bcd771fd1a61c754911bd580cd80463e\" alt=\"Talking with tech support can be hard\" srcset=\"/images/patterns/content/chain-of-responsibility/chain-of-responsibility-comic-1-en.png?id=bcd771fd1a61c754911bd580cd80463e 600w,/images/patterns/content/chain-of-responsibility/chain-of-responsibility-comic-1-en-1.5x.png?id=2e13d156642005bdb2ef9559a06946c3 900w,/images/patterns/content/chain-of-responsibility/chain-of-responsibility-comic-1-en-2x.png?id=169e558d5a5b869b4465f88b697a10ec 1200w\" sizes=\"(max-width: 720px) 100vw, 600px\" width=\"600\" style=\"aspect-ratio: 2;\" loading=\"lazy\" /><figcaption>\n<p>A call to tech support can go through multiple operators.</p>\n</figcaption></figure>\n<p>You’ve just bought and installed a new piece of hardware on your computer. Since you’re a geek, the computer has several operating systems installed. You try to boot all of them to see whether the hardware is supported. Windows detects and enables the hardware automatically. However, your beloved Linux refuses to work with the new hardware. With a small flicker of hope, you decide to call the tech-support phone number written on the box.</p>\n<p>The first thing you hear is the robotic voice of the autoresponder. It suggests nine popular solutions to various problems, none of which are relevant to your case. After a while, the robot connects you to a live operator.</p>\n<p>Alas, the operator isn’t able to suggest anything specific either. He keeps quoting lengthy excerpts from the manual, refusing to listen to your comments. After hearing the phrase “have you tried turning the computer off and on again?” for the 10th time, you demand to be connected to a proper engineer.</p>\n<p>Eventually, the operator passes your call to one of the engineers, who had probably longed for a live human chat for hours as he sat in his lonely server room in the dark basement of some office building. The engineer tells you where to download proper drivers for your new hardware and how to install them on Linux. Finally, the solution! You end the call, bursting with joy.</p>\n</div>\n<div class=\"section structure-container\">\n<h2 id=\"structure\"><i class=\"fa fa-sitemap\" aria-hidden=\"true\"></i> Structure</h2>\n<div class=\"structure\">\n<div class=\"struct-image1 struct-image\">\n<figure class=\"image\"><img class=\"structure-img-non-indexed d-none d-xl-block\" src=\"/images/patterns/diagrams/chain-of-responsibility/structure.png?id=848f0fc8dca57a44974d63f8181f5406\" alt=\"Structure of the Chain Of Responsibility design pattern\" srcset=\"/images/patterns/diagrams/chain-of-responsibility/structure.png?id=848f0fc8dca57a44974d63f8181f5406 380w,/images/patterns/diagrams/chain-of-responsibility/structure-1.5x.png?id=49dfbae38f146af7319f80dce9ea7e2a 570w,/images/patterns/diagrams/chain-of-responsibility/structure-2x.png?id=bb837faaac88e7f2a16f751d0beaa201 760w\" sizes=\"(max-width: 720px) 100vw, 380px\" width=\"380\" style=\"aspect-ratio: 0.93;\" loading=\"lazy\" /><img class=\"structure-img-indexed d-xl-none\" src=\"/images/patterns/diagrams/chain-of-responsibility/structure-indexed.png?id=e13a5bf44f9ca47299223116af77cbef\" alt=\"Structure of the Chain Of Responsibility design pattern\" srcset=\"/images/patterns/diagrams/chain-of-responsibility/structure-indexed.png?id=e13a5bf44f9ca47299223116af77cbef 380w,/images/patterns/diagrams/chain-of-responsibility/structure-indexed-1.5x.png?id=ca660e2cb697b512aadc07fdd3e109cd 570w,/images/patterns/diagrams/chain-of-responsibility/structure-indexed-2x.png?id=4f27e2c48e635f45a78472d707a8df3c 760w\" sizes=\"(max-width: 720px) 100vw, 380px\" width=\"380\" style=\"aspect-ratio: 0.88;\" loading=\"lazy\" /></figure>\n</div>\n<ol><li class=\"struct-li1\">\n<p>The <strong>Handler</strong> declares the interface, common for all concrete handlers. It usually  contains just a single method for handling requests, but sometimes it may also have another method for setting the next handler on the chain.</p>\n</li>\n<li class=\"struct-li2\">\n<p>The <strong>Base Handler</strong> is an optional class where you can put the boilerplate code that’s common to all handler classes.</p>\n<p>Usually, this class defines a field for storing a reference to the next handler. The clients can build a chain by passing a handler to the constructor or setter of the previous handler. The class may also implement the default handling behavior: it can pass execution to the next handler after checking for its existence.</p>\n</li>\n<li class=\"struct-li3\">\n<p><strong>Concrete Handlers</strong> contain the actual code for processing requests. Upon receiving a request, each handler must decide whether to process it and, additionally, whether to pass it along the chain.</p>\n<p>Handlers are usually self-contained and immutable, accepting all necessary data just once via the constructor.</p>\n</li>\n<li class=\"struct-li4\">\n<p>The <strong>Client</strong> may compose chains just once or compose them dynamically, depending on the application’s logic. Note that a request can be sent to any handler in the chain—it doesn’t have to be the first one.</p>\n</li></ol>\n<style structure type=\"text/css\" >\n@media (min-width: 1200px) {\n.structure {\nmargin: 0;\nwidth: auto;\nheight: 450px;\n}\n\n.struct-image1 {\nleft: 280px;\ntop: 50px;\n}\n\n.struct-li1 {\nleft: 0px;\ntop: 10px;\nwidth: 280px;\n}\n\n.struct-li2 {\nleft: 0px;\ntop: 180px;\nwidth: 280px;\n}\n\n.struct-li4 {\nleft: 670px;\ntop: -10px;\nwidth: 230px;\n}\n\n.struct-li3 {\nleft: 670px;\ntop: 180px;\nwidth: 230px;\n}\n}\n\n</style>\n</div></div>\n<div class=\"section pseudocode\">\n<h2 id=\"pseudocode\"><i class=\"fa fa-hashtag\" aria-hidden=\"true\"></i> Pseudocode</h2>\n<p>In this example, the <strong>Chain of Responsibility</strong> pattern is responsible for displaying contextual help information for active GUI elements.</p>\n<figure class=\"image\"><img src=\"/images/patterns/diagrams/chain-of-responsibility/example-en.png?id=4b890b18dbff5193b3b538a438b6c5a4\" alt=\"Structure of the Chain of Responsibility example\" srcset=\"/images/patterns/diagrams/chain-of-responsibility/example-en.png?id=4b890b18dbff5193b3b538a438b6c5a4 610w,/images/patterns/diagrams/chain-of-responsibility/example-en-1.5x.png?id=9b08bd8fbc187c1251cb2cc70a57e3f6 915w,/images/patterns/diagrams/chain-of-responsibility/example-en-2x.png?id=0f25d3d948f33c87482e832a55c3c680 1220w\" sizes=\"(max-width: 720px) 100vw, 610px\" width=\"610\" style=\"aspect-ratio: 1.09;\" loading=\"lazy\" /><figcaption>\n<p>The GUI classes are built with the Composite pattern. Each element is linked to its container element. At any point, you can build a chain of elements that starts with the element itself and goes through all of its container elements.</p>\n</figcaption></figure>\n<p>The application’s GUI is usually structured as an object tree. For example, the <code>Dialog</code> class, which renders the main window of the app, would be the root of the object tree. The dialog contains <code>Panels</code>, which might contain other panels or simple low-level elements like <code>Buttons</code> and <code>TextFields</code>.</p>\n<p>A simple component can show brief contextual tooltips, as long as the component has some help text assigned. But more complex components define their own way of showing contextual help, such as showing an excerpt from the manual or opening a page in a browser.</p>\n<figure class=\"image\"><img src=\"/images/patterns/diagrams/chain-of-responsibility/example2-en.png?id=ea5e6ea07b5cab132e51bac80467ca5a\" alt=\"Structure of the Chain of Responsibility example\" srcset=\"/images/patterns/diagrams/chain-of-responsibility/example2-en.png?id=ea5e6ea07b5cab132e51bac80467ca5a 250w,/images/patterns/diagrams/chain-of-responsibility/example2-en-1.5x.png?id=8f829167ba656e6bd57d61c9f76d5b17 375w,/images/patterns/diagrams/chain-of-responsibility/example2-en-2x.png?id=f6d72166631d9a4a80b013a4fa3d886b 500w\" sizes=\"(max-width: 720px) 100vw, 250px\" width=\"250\" style=\"aspect-ratio: 0.81;\" loading=\"lazy\" /><figcaption>\n<p>That’s how a help request traverses GUI objects.</p>\n</figcaption></figure>\n<p>When a user points the mouse cursor at an element and presses the <code>F1</code> key, the application detects the component under the pointer and sends it a help request. The request bubbles up through all the element’s containers until it reaches the element that’s capable of displaying the help information.</p>\n<figure class=\"code\">\n<pre class=\"code\" lang=\"pseudocode\">// The handler interface declares a method for executing a\n// request.\ninterface ComponentWithContextualHelp is\n    method showHelp()\n\n\n// The base class for simple components.\nabstract class Component implements ComponentWithContextualHelp is\n    field tooltipText: string\n\n    // The component's container acts as the next link in the\n    // chain of handlers.\n    protected field container: Container\n\n    // The component shows a tooltip if there's help text\n    // assigned to it. Otherwise it forwards the call to the\n    // container, if it exists.\n    method showHelp() is\n        if (tooltipText != null)\n            // Show tooltip.\n        else\n            container.showHelp()\n\n\n// Containers can contain both simple components and other\n// containers as children. The chain relationships are\n// established here. The class inherits showHelp behavior from\n// its parent.\nabstract class Container extends Component is\n    protected field children: array of Component\n\n    method add(child) is\n        children.add(child)\n        child.container = this\n\n\n// Primitive components may be fine with default help\n// implementation...\nclass Button extends Component is\n    // ...\n\n// But complex components may override the default\n// implementation. If the help text can't be provided in a new\n// way, the component can always call the base implementation\n// (see Component class).\nclass Panel extends Container is\n    field modalHelpText: string\n\n    method showHelp() is\n        if (modalHelpText != null)\n            // Show a modal window with the help text.\n        else\n            super.showHelp()\n\n// ...same as above...\nclass Dialog extends Container is\n    field wikiPageURL: string\n\n    method showHelp() is\n        if (wikiPageURL != null)\n            // Open the wiki help page.\n        else\n            super.showHelp()\n\n\n// Client code.\nclass Application is\n    // Every application configures the chain differently.\n    method createUI() is\n        dialog = new Dialog(&quot;Budget Reports&quot;)\n        dialog.wikiPageURL = &quot;http://...&quot;\n        panel = new Panel(0, 0, 400, 800)\n        panel.modalHelpText = &quot;This panel does...&quot;\n        ok = new Button(250, 760, 50, 20, &quot;OK&quot;)\n        ok.tooltipText = &quot;This is an OK button that...&quot;\n        cancel = new Button(320, 760, 50, 20, &quot;Cancel&quot;)\n        // ...\n        panel.add(ok)\n        panel.add(cancel)\n        dialog.add(panel)\n\n    // Imagine what happens here.\n    method onF1KeyPress() is\n        component = this.getComponentAtMouseCoords()\n        component.showHelp()\n</pre>\n</figure>\n</div>\n<div class=\"section applicability-container\">\n<h2 id=\"applicability\"><i class=\"fa fa-lightbulb-on\" aria-hidden=\"true\"></i> Applicability</h2>\n<div class=\"applicability\">\n<div class=\"applicability-problem\">\n<p><i class=\"fa fa-fw fa-bug\" aria-hidden=\"true\"></i> Use the Chain of Responsibility pattern when your program is expected to process different kinds of requests in various ways, but the exact types of requests and their sequences are unknown beforehand.</p>\n</div><div class=\"applicability-solution\">\n<p><i class=\"fa fa-fw fa-bolt\" aria-hidden=\"true\"></i> The pattern lets you link several handlers into one chain and, upon receiving a request, “ask” each handler whether it can process it. This way all handlers get a chance to process the request.</p>\n</div>\n<div class=\"applicability-problem\">\n<p><i class=\"fa fa-fw fa-bug\" aria-hidden=\"true\"></i> Use the pattern when it’s essential to execute several handlers in a particular order.</p>\n</div><div class=\"applicability-solution\">\n<p><i class=\"fa fa-fw fa-bolt\" aria-hidden=\"true\"></i> Since you can link the handlers in the chain in any order, all requests will get through the chain exactly as you planned.</p>\n</div>\n<div class=\"applicability-problem\">\n<p><i class=\"fa fa-fw fa-bug\" aria-hidden=\"true\"></i> Use the CoR pattern when the set of handlers and their order are supposed to change at runtime.</p>\n</div><div class=\"applicability-solution\">\n<p><i class=\"fa fa-fw fa-bolt\" aria-hidden=\"true\"></i> If you provide setters for a reference field inside the handler classes, you’ll be able to insert, remove or reorder handlers dynamically.</p>\n</div>\n</div></div>\n<div class=\"section checklist\">\n<h2 id=\"checklist\"><i class=\"fa fa-clipboard-list-check\" aria-hidden=\"true\"></i> How to Implement</h2>\n<ol>\n<li>\n<p>Declare the handler interface and describe the signature of a method for handling requests.</p>\n<p>Decide how the client will pass the request data into the method. The most flexible way is to convert the request into an object and pass it to the handling method as an argument.</p>\n</li>\n<li>\n<p>To eliminate duplicate boilerplate code in concrete handlers, it might be worth creating an abstract base handler class, derived from the handler interface.</p>\n<p>This class should have a field for storing a reference to the next handler in the chain. Consider making the class immutable. However, if you plan to modify chains at runtime, you need to define a setter for altering the value of the reference field.</p>\n<p>You can also implement the convenient default behavior for the handling method, which is to forward the request to the next object unless there’s none left. Concrete handlers will be able to use this behavior by calling the parent method.</p>\n</li>\n<li>\n<p>One by one create concrete handler subclasses and implement their handling methods. Each handler should make two decisions when receiving a request:</p>\n<ul>\n<li>Whether it’ll process the request.</li>\n<li>Whether it’ll pass the request along the chain.</li>\n</ul>\n</li>\n<li>\n<p>The client may either assemble chains on its own or receive pre-built chains from other objects. In the latter case, you must implement some factory classes to build chains according to the configuration or environment settings.</p>\n</li>\n<li>\n<p>The client may trigger any handler in the chain, not just the first one. The request will be passed along the chain until some handler refuses to pass it further or until it reaches the end of the chain.</p>\n</li>\n<li>\n<p>Due to the dynamic nature of the chain, the client should be ready to handle the following scenarios:</p>\n<ul>\n<li>The chain may consist of a single link.</li>\n<li>Some requests may not reach the end of the chain.</li>\n<li>Others may reach the end of the chain unhandled.</li>\n</ul>\n</li>\n</ol>\n</div>\n<div class=\"section pros-cons\">\n<h2 id=\"pros-cons\"><i class=\"fa fa-balance-scale\" aria-hidden=\"true\"></i> Pros and Cons</h2>\n<div class=\"row\"><div class=\"col-sm-6\">\n<ul>\n<li><i class=\"fa fa-fw fa-check\" aria-hidden=\"true\"></i> You can control the order of request handling.</li>\n<li><i class=\"fa fa-fw fa-check\" aria-hidden=\"true\"></i> <em>Single Responsibility Principle</em>. You can decouple classes that invoke operations from classes that perform operations.</li>\n<li><i class=\"fa fa-fw fa-check\" aria-hidden=\"true\"></i> <em>Open/Closed Principle</em>. You can introduce new handlers into the app without breaking the existing client code.</li>\n</ul>\n</div><div class=\"col-sm-6\">\n<ul>\n<li><i class=\"fa fa-fw fa-times\" aria-hidden=\"true\"></i> Some requests may end up unhandled.</li>\n</ul>\n</div></div></div>\n<div class=\"section relations\">\n<h2 id=\"relations\"><i class=\"fa fa-exchange-alt\" aria-hidden=\"true\"></i> Relations with Other Patterns</h2>\n<ul>\n<li>\n<p><a href=\"/design-patterns/chain-of-responsibility\">Chain of Responsibility</a>, <a href=\"/design-patterns/command\">Command</a>, <a href=\"/design-patterns/mediator\">Mediator</a> and <a href=\"/design-patterns/observer\">Observer</a> address various ways of connecting senders and receivers of requests:</p>\n<ul>\n<li><em>Chain of Responsibility</em> passes a request sequentially along a dynamic chain of potential receivers until one of them handles it.</li>\n<li><em>Command</em> establishes unidirectional connections between senders and receivers.</li>\n<li><em>Mediator</em> eliminates direct connections between senders and receivers, forcing them to communicate indirectly via a mediator object.</li>\n<li><em>Observer</em> lets receivers dynamically subscribe to and unsubscribe from receiving requests.</li>\n</ul>\n</li>\n<li>\n<p><a href=\"/design-patterns/chain-of-responsibility\">Chain of Responsibility</a> is often used in conjunction with <a href=\"/design-patterns/composite\">Composite</a>. In this case, when a leaf component gets a request, it may pass it through the chain of all of the parent components down to the root of the object tree.</p>\n</li>\n<li>\n<p>Handlers in <a href=\"/design-patterns/chain-of-responsibility\">Chain of Responsibility</a> can be implemented as <a href=\"/design-patterns/command\">Commands</a>. In this case, you can execute a lot of different operations over the same context object, represented by a request.</p>\n<p>However, there’s another approach, where the request itself is a <em>Command</em> object. In this case, you can execute the same operation in a series of different contexts linked into a chain.</p>\n</li>\n<li>\n<p><a href=\"/design-patterns/chain-of-responsibility\">Chain of Responsibility</a> and <a href=\"/design-patterns/decorator\">Decorator</a> have very similar class structures. Both patterns rely on recursive composition to pass the execution through a series of objects. However, there are several crucial differences.</p>\n<p>The <em>CoR</em> handlers can execute arbitrary operations independently of each other. They can also stop passing the request further at any point. On the other hand, various <em>Decorators</em> can extend the object’s behavior while keeping it consistent with the base interface. In addition, decorators aren’t allowed to break the flow of the request.</p>\n</li>\n</ul>\n</div>\n<div class=\"section implementations\">\n<h2 id=\"implementations\"><i class=\"fa fa-code\" aria-hidden=\"true\"></i> Code Examples</h2>\n<p><a href=\"/design-patterns/chain-of-responsibility/csharp/example\" title=\"Chain of Responsibility in C#\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/csharp.svg?id=da64592defc6e86d57c39c66e9de3e58\" alt=\"Chain of Responsibility in C#\" /></a>\n<a href=\"/design-patterns/chain-of-responsibility/cpp/example\" title=\"Chain of Responsibility in C++\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/cpp.svg?id=f7782ed8b8666246bfcc3f8fefc3b858\" alt=\"Chain of Responsibility in C++\" /></a>\n<a href=\"/design-patterns/chain-of-responsibility/go/example\" title=\"Chain of Responsibility in Go\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/go.svg?id=1a89927eb99b1ea3fde7701d97970aca\" alt=\"Chain of Responsibility in Go\" /></a>\n<a href=\"/design-patterns/chain-of-responsibility/java/example\" title=\"Chain of Responsibility in Java\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/java.svg?id=e6d87e2dca08c953fe3acd1275ed4f4e\" alt=\"Chain of Responsibility in Java\" /></a>\n<a href=\"/design-patterns/chain-of-responsibility/php/example\" title=\"Chain of Responsibility in PHP\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/php.svg?id=be1906eb26b71ec1d3b93720d6156618\" alt=\"Chain of Responsibility in PHP\" /></a>\n<a href=\"/design-patterns/chain-of-responsibility/python/example\" title=\"Chain of Responsibility in Python\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/python.svg?id=6d815d43c0f7050a1151b43e51569c9f\" alt=\"Chain of Responsibility in Python\" /></a>\n<a href=\"/design-patterns/chain-of-responsibility/ruby/example\" title=\"Chain of Responsibility in Ruby\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/ruby.svg?id=b065b718c914bf8e960ef731600be1eb\" alt=\"Chain of Responsibility in Ruby\" /></a>\n<a href=\"/design-patterns/chain-of-responsibility/rust/example\" title=\"Chain of Responsibility in Rust\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/rust.svg?id=1f5698a4b5ae23fe79413511747e4a87\" alt=\"Chain of Responsibility in Rust\" /></a>\n<a href=\"/design-patterns/chain-of-responsibility/swift/example\" title=\"Chain of Responsibility in Swift\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/swift.svg?id=0b716c2d52ec3a48fbe91ac031070c1d\" alt=\"Chain of Responsibility in Swift\" /></a>\n<a href=\"/design-patterns/chain-of-responsibility/typescript/example\" title=\"Chain of Responsibility in TypeScript\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/typescript.svg?id=2239d0f16cb703540c205dd8cb0c0cb7\" alt=\"Chain of Responsibility in TypeScript\" /></a></p>\n</div>\n\n\n    <div class=\"banner-set2\" id=\"book-promo\">\n            <div class=\"prom banner-content banner-bg banner-striped banner-with-image\" data-id=\"DP: 1: Support our free website and own the eBook!\" data-creative-id=\"standard-en\" data-position=\"content_bottom\">\n                <div class=\"banner-image\">\n                    <a href=\"/design-patterns/book\">\n                        <img width=\"200\" height=\"200\" loading=\"lazy\" src=\"/images/patterns/banners/patterns-book-banner-3.png?id=7d445df13c80287beaab234b4f3b698c\" srcset=\"/images/patterns/banners/patterns-book-banner-3-2x.png?id=0cc3f77ab421d1a5c02ee46488231c3a 2x\">\n                    </a>\n                </div>\n\n                <div class=\"banner-text\">\n                    <h3 class=\"title\">Support our free website and own the eBook!</h3>\n                    <ul style=\"font-size: 14px;\">\n                        <li style=\"margin: 0;\">22 design patterns and 8 principles explained in depth.</li>\n                        <li style=\"margin: 0;\">409 well-structured, easy to read, jargon-free pages.</li>\n                        <li style=\"margin: 0;\">225 clear and helpful illustrations and diagrams.</li>\n                        <li style=\"margin: 0;\">An archive with code examples in 11 languages.</li>\n                        <li style=\"margin: 0;\">All devices supported: PDF/EPUB/MOBI/KFX formats.</li>\n                    </ul>\n                    <a class=\"btn btn-secondary\" href=\"/design-patterns/book\"><i class=\"fa fa-book\" aria-hidden=\"true\"></i> Learn more…</a>\n                </div>\n            </div>\n        </div>\n\n    </article>\n\n<nav class=\"prev-next\">\n                    <div class=\"next\">\n                <h4>Read next</h4>\n                <a rel=\"next\" href=\"/design-patterns/command\" class=\"btn btn-primary\">Command&nbsp;<span class=\"fa fa-arrow-right\"></span></a>\n            </div>\n                            <div class=\"prev\">\n                <h4>Return</h4>\n                <a rel=\"prev\" href=\"/design-patterns/behavioral-patterns\" class=\"btn btn-default\"><span class=\"fa fa-arrow-left\"></span>&nbsp;Behavioral Patterns </a>\n            </div>\n            </nav>\n</div>\n\n<aside class=\"feature content-secondary\">\n    <div class=\"prom banner-sidebar banner-removable banner-removable-patterns\" data-id=\"DP: Sidebar\" data-creative-id=\"standard-sidebar-en\" data-position=\"sidebar\">\n        <div class=\"banner-inner\">\n            <div class=\"image3d-book-right\">\n                <div class=\"image3d-cover\" style=\"background: #0b3752;\">\n                    <a href=\"/design-patterns/book\">\n                        <img width=\"250\" height=\"375\" loading=\"lazy\" src=\"/images/patterns/book/web-cover-en.png?id=328861769fd11617674e3b8a7e2dd9e7\" srcset=\"/images/patterns/book/web-cover-en-2x.png?id=02940141c5652ed5a426d87390b16366 2x\">\n                    </a>\n                </div>\n            </div>\n            <div style=\"margin-top: 1rem\">\n                <p class=\"text-center\" >This article is a part of our eBook<br/><strong>Dive Into Design Patterns</strong>.</p>\n                <a href=\"/design-patterns/book\" class=\"btn btn-secondary btn-block\"><i class=\"fa fa-book\" aria-hidden=\"true\"></i> Learn more…</a>\n            </div>\n        </div>\n    </div>\n\n\n</aside>\n                    </div>\n    </main>\n\n    <aside class=\"sidebar main-menu\">\n    <div class=\"main-menu-controls\">\n        <button class=\"navigation-toggle\"><i class=\"fa fa-fw fa-times\"></i></button>\n    </div>\n    <div class=\"main-menu-list-wrapper nano\">\n        <div class=\"main-menu-list nano-content\">\n            <a class=\"menu-brand\" href=\"/\">\n                                    <img width=200 height=241 loading=\"lazy\" alt=\"Refactoring.Guru\" src=\"/images/content-public/logos/logo-new.png?id=97d554614702483f31e38b32e82d8e34\" srcset=\"/images/content-public/logos/logo-new-2x.png?id=3bc33294e095bab1d6fe9ae421d07837 2x\">\n                            </a>\n\n            <div class=\"menu-container\" style=\"position: relative\">\n                                <ul class=\"menu-list trail\">\n                            <li class=\"featured\">\n            <a href=\"/store\">\n                <i class=\"fa fa-fw fa-star\" aria-hidden=\"true\"></i> Premium Content\n            </a>\n    \n            <ul >\n                            <li class=\"featured menu-fs15\">\n            <a href=\"/design-patterns/book\">\n                <i class=\"fa fa-fw fa-book\" aria-hidden=\"true\"></i> Design Patterns eBook\n            </a>\n    \n    \n            </li>\n                                <li class=\"featured menu-fs15\">\n            <a href=\"/refactoring/course\">\n                <i class=\"fa fa-fw fa-graduation-cap\" aria-hidden=\"true\"></i> Refactoring Course\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring\">\n                <i class=\"fa fa-fw fa-scissors\" aria-hidden=\"true\"></i> Refactoring\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/refactoring/what-is-refactoring\">\n                What is Refactoring\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/refactoring/what-is-refactoring\">\n                Clean code\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/technical-debt\">\n                Technical debt\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/when\">\n                When to refactor\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/how-to\">\n                How to refactor\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/catalog\">\n                Catalog\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells\">\n                Code Smells\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/refactoring/smells/bloaters\">\n                Bloaters\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/long-method\">\n                Long Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/large-class\">\n                Large Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/primitive-obsession\">\n                Primitive Obsession\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/long-parameter-list\">\n                Long Parameter List\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/data-clumps\">\n                Data Clumps\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/oo-abusers\">\n                Object-Orientation Abusers\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/switch-statements\">\n                Switch Statements\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/temporary-field\">\n                Temporary Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/refused-bequest\">\n                Refused Bequest\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/alternative-classes-with-different-interfaces\">\n                Alternative Classes with Different Interfaces\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/change-preventers\">\n                Change Preventers\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/divergent-change\">\n                Divergent Change\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/shotgun-surgery\">\n                Shotgun Surgery\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/parallel-inheritance-hierarchies\">\n                Parallel Inheritance Hierarchies\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/dispensables\">\n                Dispensables\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/comments\">\n                Comments\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/duplicate-code\">\n                Duplicate Code\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/lazy-class\">\n                Lazy Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/data-class\">\n                Data Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/dead-code\">\n                Dead Code\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/speculative-generality\">\n                Speculative Generality\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/couplers\">\n                Couplers\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/feature-envy\">\n                Feature Envy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/inappropriate-intimacy\">\n                Inappropriate Intimacy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/message-chains\">\n                Message Chains\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/middle-man\">\n                Middle Man\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/other\">\n                Other Smells\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/incomplete-library-class\">\n                Incomplete Library Class\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques\">\n                Refactorings\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/refactoring/techniques/composing-methods\">\n                Composing Methods\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/extract-method\">\n                Extract Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/inline-method\">\n                Inline Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-variable\">\n                Extract Variable\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/inline-temp\">\n                Inline Temp\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-temp-with-query\">\n                Replace Temp with Query\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/split-temporary-variable\">\n                Split Temporary Variable\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-assignments-to-parameters\">\n                Remove Assignments to Parameters\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-method-with-method-object\">\n                Replace Method with Method Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/substitute-algorithm\">\n                Substitute Algorithm\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/moving-features-between-objects\">\n                Moving Features between Objects\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/move-method\">\n                Move Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/move-field\">\n                Move Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-class\">\n                Extract Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/inline-class\">\n                Inline Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/hide-delegate\">\n                Hide Delegate\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-middle-man\">\n                Remove Middle Man\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-foreign-method\">\n                Introduce Foreign Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-local-extension\">\n                Introduce Local Extension\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/organizing-data\">\n                Organizing Data\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/self-encapsulate-field\">\n                Self Encapsulate Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-data-value-with-object\">\n                Replace Data Value with Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/change-value-to-reference\">\n                Change Value to Reference\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/change-reference-to-value\">\n                Change Reference to Value\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-array-with-object\">\n                Replace Array with Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/duplicate-observed-data\">\n                Duplicate Observed Data\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/change-unidirectional-association-to-bidirectional\">\n                Change Unidirectional Association to Bidirectional\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/change-bidirectional-association-to-unidirectional\">\n                Change Bidirectional Association to Unidirectional\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-magic-number-with-symbolic-constant\">\n                Replace Magic Number with Symbolic Constant\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/encapsulate-field\">\n                Encapsulate Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/encapsulate-collection\">\n                Encapsulate Collection\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-type-code-with-class\">\n                Replace Type Code with Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-type-code-with-subclasses\">\n                Replace Type Code with Subclasses\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-type-code-with-state-strategy\">\n                Replace Type Code with State/Strategy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-subclass-with-fields\">\n                Replace Subclass with Fields\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/simplifying-conditional-expressions\">\n                Simplifying Conditional Expressions\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/decompose-conditional\">\n                Decompose Conditional\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/consolidate-conditional-expression\">\n                Consolidate Conditional Expression\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/consolidate-duplicate-conditional-fragments\">\n                Consolidate Duplicate Conditional Fragments\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-control-flag\">\n                Remove Control Flag\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-nested-conditional-with-guard-clauses\">\n                Replace Nested Conditional with Guard Clauses\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-conditional-with-polymorphism\">\n                Replace Conditional with Polymorphism\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-null-object\">\n                Introduce Null Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-assertion\">\n                Introduce Assertion\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/simplifying-method-calls\">\n                Simplifying Method Calls\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/rename-method\">\n                Rename Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/add-parameter\">\n                Add Parameter\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-parameter\">\n                Remove Parameter\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/separate-query-from-modifier\">\n                Separate Query from Modifier\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/parameterize-method\">\n                Parameterize Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-parameter-with-explicit-methods\">\n                Replace Parameter with Explicit Methods\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/preserve-whole-object\">\n                Preserve Whole Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-parameter-with-method-call\">\n                Replace Parameter with Method Call\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-parameter-object\">\n                Introduce Parameter Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-setting-method\">\n                Remove Setting Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/hide-method\">\n                Hide Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-constructor-with-factory-method\">\n                Replace Constructor with Factory Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-error-code-with-exception\">\n                Replace Error Code with Exception\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-exception-with-test\">\n                Replace Exception with Test\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/dealing-with-generalization\">\n                Dealing with Generalization\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/pull-up-field\">\n                Pull Up Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/pull-up-method\">\n                Pull Up Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/pull-up-constructor-body\">\n                Pull Up Constructor Body\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/push-down-method\">\n                Push Down Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/push-down-field\">\n                Push Down Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-subclass\">\n                Extract Subclass\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-superclass\">\n                Extract Superclass\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-interface\">\n                Extract Interface\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/collapse-hierarchy\">\n                Collapse Hierarchy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/form-template-method\">\n                Form Template Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-inheritance-with-delegation\">\n                Replace Inheritance with Delegation\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-delegation-with-inheritance\">\n                Replace Delegation with Inheritance\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"trail\">\n            <a href=\"/design-patterns\">\n                <i class=\"fa fa-fw fa-puzzle-piece\" aria-hidden=\"true\"></i> Design Patterns\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/what-is-pattern\">\n                What is a Pattern\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/what-is-pattern\">\n                What's a design pattern?\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/history\">\n                History of patterns\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/why-learn-patterns\">\n                Why should I learn patterns?\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/criticism\">\n                Criticism of patterns\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/classification\">\n                Classification of patterns\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/catalog\">\n                Catalog\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-third-level\">\n            <a href=\"/design-patterns/creational-patterns\">\n                Creational Patterns\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/factory-method\">\n                Factory Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/abstract-factory\">\n                Abstract Factory\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/builder\">\n                Builder\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/prototype\">\n                Prototype\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/singleton\">\n                Singleton\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"menu-third-level\">\n            <a href=\"/design-patterns/structural-patterns\">\n                Structural Patterns\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/adapter\">\n                Adapter\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/bridge\">\n                Bridge\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/composite\">\n                Composite\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/decorator\">\n                Decorator\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/facade\">\n                Facade\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/flyweight\">\n                Flyweight\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/proxy\">\n                Proxy\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"menu-third-level trail\">\n            <a href=\"/design-patterns/behavioral-patterns\">\n                Behavioral Patterns\n            </a>\n    \n            <ul >\n                            <li class=\"trail active\">\n            <a href=\"/design-patterns/chain-of-responsibility\">\n                Chain of Responsibility\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/command\">\n                Command\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/iterator\">\n                Iterator\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/mediator\">\n                Mediator\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/memento\">\n                Memento\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/observer\">\n                Observer\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/state\">\n                State\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/strategy\">\n                Strategy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/template-method\">\n                Template Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/visitor\">\n                Visitor\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"menu-code-examples\">\n            <a href=\"/design-patterns/examples\">\n                Code Examples\n            </a>\n    \n            <ul >\n                            <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/csharp\">\n                C#\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/cpp\">\n                C++\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/go\">\n                Go\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/java\">\n                Java\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/php\">\n                PHP\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/python\">\n                Python\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/ruby\">\n                Ruby\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/rust\">\n                Rust\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/swift\">\n                Swift\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/typescript\">\n                TypeScript\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n                </div>\n\n            <div class=\"main-menu-aux-controls\">\n                <a href=\"https://refactoring.guru/login\" title=\"Sign in\" style=\" display: inline-flex; align-items: center; gap: 6px; \"><svg style=\"width: 16px; height: 16px; filter:drop-shadow(0 1px 1px #74261e)\" class=\"inline-block mx-0\"  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\"opacity=\"0.4\" d=\"M352.7 222.4c3.2 1 6.5 1.6 10 1.6l21.3 0c17.7 0 32 14.3 32 32s-14.3 32-32 32l-21.3 0c-.8 0-1.7 0-2.5 0c-.9 0-1.7-.1-2.5-.1c-1.7-.1-3.4-.2-5-.4C357.4 414 391.1 512 432 512c44.2 0 80-114.6 80-256S476.2 0 432 0c-40.6 0-74.2 96.9-79.3 222.4z\"/><path fill=\"currentColor\"class=\"fa-primary\" d=\"M320 48a48 48 0 1 0 -96 0 48 48 0 1 0 96 0zM125.7 175.5c9.9-9.9 23.4-15.5 37.5-15.5c1.9 0 3.8 .1 5.6 .3L137.6 254c-9.3 28 1.7 58.8 26.8 74.5l86.2 53.9-25.4 88.8c-4.9 17 5 34.7 22 39.6s34.7-5 39.6-22l28.7-100.4c5.9-20.6-2.6-42.6-20.7-53.9L238 299l30.9-82.4 5.1 12.3C289 264.7 323.9 288 362.7 288l21.3 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-21.3 0c-12.9 0-24.6-7.8-29.5-19.7l-6.3-15c-14.6-35.1-44.1-61.9-80.5-73.1l-48.7-15c-11.1-3.4-22.7-5.2-34.4-5.2c-31 0-60.8 12.3-82.7 34.3L57.4 153.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l23.1-23.1zM91.2 352L32 352c-17.7 0-32 14.3-32 32s14.3 32 32 32l69.6 0c19 0 36.2-11.2 43.9-28.5L157 361.6l-9.5-6c-17.5-10.9-30.5-26.8-37.9-44.9L91.2 352z\"/></svg> Sign in</a>\n                <a href=\"https://feedback.refactoring.guru/\" class=\"userecho-public\" rel=\"nofollow\" title=\"Contact us\"><i class=\"fa fa-fw fa-fw fa-envelope\" aria-hidden=\"true\"></i> Contact us</a>\n            </div>\n        </div>\n    </div>\n</aside>\n\n    <nav class=\"navigation\" role=\"navigation\">\n    <div class=\"navigation-container\">\n        <a class=\"navigation-brand\" href=\"/\">\n            <img alt=\"Refactoring.Guru\"\n                 src=\"/images/content-public/logos/logo-new-mobile.png?id=ea18aa9b032eaa92835ed6d472b03b4a\"\n                 srcset=\"/images/content-public/logos/logo-new-mobile-2x.png?id=7ad5648bfd86ae2e8524147a72877c64 2x\">\n        </a>\n\n        <div class=\"shop-link d-none d-lg-block\" style=\"display: none !important;\">\n            <a class=\"btn btn-md btn-primary btn-featured\" href=\"/store\"><svg style=\"width: 28px; height: 28px; fill: currentColor; display: inline-block; margin-top: -14px;\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><!--! Font Awesome Pro 6.3.0 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2023 Fonticons, Inc. --><path d=\"M356 60l60 20-60 20-20 60-20-60L256 80l60-20L336 0l20 60zM464 208l48 16-48 16-16 48-16-48-48-16 48-16 16-48 16 48zm-243.8-9.8l33 66.9 73.8 10.7 59.8 8.7-43.3 42.2-53.4 52.1 12.6 73.5L313 512l-53.5-28.1-66-34.7-66 34.7L73.9 512l10.2-59.6 12.6-73.5L43.3 326.8 0 284.6l59.8-8.7 73.8-10.7 33-66.9L193.5 144l26.8 54.2zm26.1 114.4l-25-3.6-11.2-22.6-16.7-33.9-16.7 33.9L165.6 309l-25 3.6-37.4 5.4 27.1 26.4 18.1 17.6L144 387l-6.4 37.3 33.5-17.6 22.3-11.7 22.3 11.7 33.5 17.6L242.9 387l-4.3-24.9 18.1-17.6 27.1-26.4-37.4-5.4z\"/></svg>\n                Shop Now!</a>\n        </div>\n\n        <ul class=\"navigation-menu\">\n                            <li class=\"nav-locale dropdown dropdown-locales\">\n                    <button class=\"dropdown-toggle\" id=\"dropdownLanguage\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                        <i class=\"fa fa-fw fa-globe\" aria-hidden=\"true\"></i> <span class=\"caption d-none d-lg-inline-block\">English</span>\n                    </button>\n                    <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownLanguage\">\n                                                                                                                        <a href=\"https://refactoring.guru/design-patterns/chain-of-responsibility\" class=\"dropdown-item locale-link active\" data-locale=\"en\" title=\"English\">English</a>\n                                                                                                                                <a href=\"https://refactoring.guru/es/design-patterns/chain-of-responsibility\" class=\"dropdown-item locale-link \" data-locale=\"es\" title=\"Español\">Español</a>\n                                                                                                                                <a href=\"https://refactoring.guru/fr/design-patterns/chain-of-responsibility\" class=\"dropdown-item locale-link \" data-locale=\"fr\" title=\"Français\">Français</a>\n                                                                                                                                <a href=\"https://refactoring.guru/ja/design-patterns/chain-of-responsibility\" class=\"dropdown-item locale-link \" data-locale=\"ja\" title=\"日本語\">日本語</a>\n                                                                                                                                <a href=\"https://refactoring.guru/ko/design-patterns/chain-of-responsibility\" class=\"dropdown-item locale-link \" data-locale=\"ko\" title=\"한국어\">한국어</a>\n                                                                                                                                <a href=\"https://refactoring.guru/pl/design-patterns/chain-of-responsibility\" class=\"dropdown-item locale-link \" data-locale=\"pl\" title=\"Polski\">Polski</a>\n                                                                                                                                <a href=\"https://refactoring.guru/pt-br/design-patterns/chain-of-responsibility\" class=\"dropdown-item locale-link \" data-locale=\"pt-br\" title=\"Português Brasileiro\">Português Brasileiro</a>\n                                                                                                                                <a href=\"https://refactoring.guru/ru/design-patterns/chain-of-responsibility\" class=\"dropdown-item locale-link \" data-locale=\"ru\" title=\"Русский\">Русский</a>\n                                                                                                                                <a href=\"https://refactoring.guru/uk/design-patterns/chain-of-responsibility\" class=\"dropdown-item locale-link \" data-locale=\"uk\" title=\"Українська\">Українська</a>\n                                                                                                                                <a href=\"https://refactoringguru.cn/design-patterns/chain-of-responsibility\" class=\"dropdown-item locale-link \" data-locale=\"zh\" title=\"中文\">中文</a>\ndiv>\n                </li>\n                        <li class=\"nav-contacts\">\n                <a class=\"userecho-private\" href=\"https://feedback.refactoring.guru/?show_feedback_form_private=true\" rel=\"nofollow\" title=\"Contact us\">\n                    <i class=\"fa fa-fw fa-envelope\" aria-hidden=\"true\"></i> <span class=\"caption d-none d-xl-inline-block\">Contact us</span>\n                </a>\n            </li>\n                            <li class=\"nav-user\">\n                    <a href=\"https://refactoring.guru/login\" title=\"Sign in\"><span class=\"sign-in-icon\"><svg style=\"width: 24px; height: 24px; \" class=\"inline-block \"  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\"opacity=\"0.4\" d=\"M352.7 222.4c3.2 1 6.5 1.6 10 1.6l21.3 0c17.7 0 32 14.3 32 32s-14.3 32-32 32l-21.3 0c-.8 0-1.7 0-2.5 0c-.9 0-1.7-.1-2.5-.1c-1.7-.1-3.4-.2-5-.4C357.4 414 391.1 512 432 512c44.2 0 80-114.6 80-256S476.2 0 432 0c-40.6 0-74.2 96.9-79.3 222.4z\"/><path fill=\"currentColor\"class=\"fa-primary\" d=\"M320 48a48 48 0 1 0 -96 0 48 48 0 1 0 96 0zM125.7 175.5c9.9-9.9 23.4-15.5 37.5-15.5c1.9 0 3.8 .1 5.6 .3L137.6 254c-9.3 28 1.7 58.8 26.8 74.5l86.2 53.9-25.4 88.8c-4.9 17 5 34.7 22 39.6s34.7-5 39.6-22l28.7-100.4c5.9-20.6-2.6-42.6-20.7-53.9L238 299l30.9-82.4 5.1 12.3C289 264.7 323.9 288 362.7 288l21.3 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-21.3 0c-12.9 0-24.6-7.8-29.5-19.7l-6.3-15c-14.6-35.1-44.1-61.9-80.5-73.1l-48.7-15c-11.1-3.4-22.7-5.2-34.4-5.2c-31 0-60.8 12.3-82.7 34.3L57.4 153.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l23.1-23.1zM91.2 352L32 352c-17.7 0-32 14.3-32 32s14.3 32 32 32l69.6 0c19 0 36.2-11.2 43.9-28.5L157 361.6l-9.5-6c-17.5-10.9-30.5-26.8-37.9-44.9L91.2 352z\"/></svg></span> <span class=\"account-icon\" style=\"display:none\"><svg style=\"width: 24px; height: 24px; \" class=\"inline-block \"  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 576 512\"><path fill=\"currentColor\"opacity=\"0.4\" d=\"M64 270.5l224-196c74.7 65.4 149.4 130.7 224.1 196.1l.4 177.3c.1 35.4-28.6 64.1-64 64.1l-320.4 0c-35.3 0-64-28.6-64-64L64 270.5zM176.1 433.6c.1 .5 .1 1.1 .2 1.6c.2 1 .5 2 .9 3c.8 1.9 2 3.6 3.4 5.1c2.9 2.9 6.9 4.7 11.3 4.7l192 0c8.8 0 16-7.2 16-16c0-44.2-35.8-80-80-80l-64 0c-22.1 0-42.1 9-56.6 23.4c-7.2 7.2-13.1 15.9-17.1 25.4c-2 4.8-3.6 9.8-4.7 15c-.5 2.6-.9 5.3-1.2 7.9c-.1 1.3-.2 2.7-.3 4.1c-.1 1.4-.1 2.7-.1 4.1c0 .6 0 1.1 .1 1.6zm48.2-184.2c-.1 1.1-.2 2.2-.2 3.2c-.1 1.1-.1 2.2-.1 3.3s0 2.2 .1 3.3c.1 1.1 .1 2.2 .2 3.2c.2 2.1 .5 4.3 1 6.4c.9 4.2 2.1 8.2 3.7 12c3.2 7.7 7.9 14.6 13.7 20.3C254.3 312.8 270.3 320 288 320c35.3 0 64-28.7 64-64s-28.7-64-64-64c-17.7 0-33.7 7.2-45.3 18.7c-5.8 5.8-10.5 12.7-13.7 20.3c-1.6 3.8-2.9 7.8-3.7 12c-.4 2.1-.8 4.2-1 6.4z\"/><path fill=\"currentColor\"class=\"fa-primary\" d=\"M309.1 7.9C297-2.6 279-2.6 266.9 7.9l-256 224c-13.3 11.6-14.6 31.9-3 45.2s31.9 14.6 45.2 3L288 74.5 522.9 280.1c13.3 11.6 33.5 10.3 45.2-3s10.3-33.5-3-45.2L512 185.5 512 64c0-17.7-14.3-32-32-32l-32 0c-17.7 0-32 14.3-32 32l0 37.5L309.1 7.9zM352 256a64 64 0 1 0 -128 0 64 64 0 1 0 128 0zm-96 96c-44.2 0-80 35.8-80 80c0 8.8 7.2 16 16 16l192 0c8.8 0 16-7.2 16-16c0-44.2-35.8-80-80-80l-64 0z\"/></svg></span> <span class=\"sign-out-icon\" style=\"display:none\"><svg style=\"width: 24px; height: 24px; \" class=\"inline-block \"  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\"opacity=\"0.4\" d=\"M0 256C0 397.4 35.8 512 80 512c25.3 0 47.8-37.5 62.5-96L128 416c-.5 0-1.1 0-1.6 0c-.6 0-1.1-.1-1.6-.1c-1.1-.1-2.1-.3-3.2-.5c-2.1-.4-4.1-1.1-6-1.9c-3.8-1.6-7.3-4-10.2-6.9s-5.2-6.3-6.9-10.2c-.8-1.9-1.4-3.9-1.9-6c-.2-1.1-.4-2.3-.5-3.5c0-.3 0-.6-.1-.8c0-.2 0-.4 0-.7c0-.4 0-.7 0-.7c0-.5 0-.7 0-.9c0-.3 0-.6 0-.9c0 0 0-.3 0-.7c0-.2 0-.4 0-.7c0-.2 0-.4 .1-.8c0-.3 .1-.6 .1-.9c0-.2 .1-.4 .1-.7c.1-.8 .2-1.2 .3-1.7c.5-2.2 1.1-4.2 1.9-6.1c1.6-3.8 4-7.3 6.9-10.2c5.8-5.8 13.8-9.4 22.6-9.4l26.2 0c3.8-29.6 5.8-62.1 5.8-96c0-18.3-.6-36.1-1.7-53.4c-1.7-1.2-3.4-2.5-4.9-4c-.8-.8-1.6-1.6-2.2-2.5s-1.3-1.7-1.9-2.6c-1.2-1.8-2.1-3.6-2.9-5.5s-1.4-3.9-1.8-5.9c-.2-1-.3-2-.4-3s-.1-2-.2-3c0-8.3 3.1-16.5 9.4-22.8C141 63.1 112.8 0 80 0C35.8 0 0 114.6 0 256z\"/><path fill=\"currentColor\"class=\"fa-primary\" d=\"M416 48a48 48 0 1 0 -96 0 48 48 0 1 0 96 0zM221.7 175.5c9.9-9.9 23.4-15.5 37.5-15.5c1.9 0 3.8 .1 5.6 .3L233.6 254c-9.3 28 1.7 58.8 26.8 74.5l86.2 53.9-25.4 88.8c-4.9 17 5 34.7 22 39.6s34.7-5 39.6-22l28.7-100.4c5.9-20.6-2.6-42.6-20.7-53.9L334 299l30.9-82.4 5.1 12.3C385 264.7 419.9 288 458.7 288l21.3 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-21.3 0c-12.9 0-24.6-7.8-29.5-19.7l-6.3-15c-14.6-35.1-44.1-61.9-80.5-73.1l-48.7-15c-11.1-3.4-22.7-5.2-34.4-5.2c-31 0-60.8 12.3-82.7 34.3l-23.1 23.1c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l23.1-23.1zM187.2 352L128 352c-17.7 0-32 14.3-32 32s14.3 32 32 32l69.6 0c19 0 36.2-11.2 43.9-28.5L253 361.6l-9.5-6c-17.5-10.9-30.5-26.8-37.9-44.9L187.2 352z\"/></svg></span> <span class=\"caption d-none d-xl-inline-block\">Sign in</span></a>\n                </li>\n                        <li class=\"nav-menu\">\n                <button class=\"navigation-toggle\"><i class=\"fa fa-fw fa-bars\" aria-hidden=\"true\"></i></button>\n            </li>\n        </ul>\n    </div>\n</nav>\n\n    <footer class=\"footer center-content\">\n    <div class=\"footer-container center-content-container\">\n        <div class=\"footer-inner container-fluid\">\n            <div class=\"row\">\n                <div class=\"col-8 col-md-10\">\n                    <ul class=\"footer-list footer-list-horizontal\">\n                        <li><a href=\"/\">Home</a></li>\n                        <li><a href=\"/refactoring\">Refactoring</a></li>\n                        <li><a href=\"/design-patterns\">Design Patterns</a></li>\n                        <li><a href=\"/store\">Premium Content</a></li>\n                        <li><a href=\"https://gitbybit.com/\">Git Course</a></li>\n                        <li><a href=\"https://refactoring.userecho.com/\" rel=\"nofollow\" class=\"userecho-public\">Forum</a></li>\n                        <li><a href=\"https://refactoring.userecho.com/\" rel=\"nofollow\" class=\"userecho-private\">Contact us</a></li>\n                    </ul>\n                </div>\n                <div class=\"col-4 col-md-2\">\n                    <ul class=\"footer-list footer-list-iconic footer-list-right\">\n                                                    <li><a href=\"https://www.facebook.com/refactoring.guru\"><i class=\"fa fa-facebook-official\"></i></a></li>\n                                                <li><a href=\"/sendy/form\" rel=\"nofollow\"><i class=\"fa fa-envelope\" aria-hidden=\"true\"></i></a></li>\n                        <li><a href=\"https://github.com/RefactoringGuru\"><i class=\"fa fa-github-circled\"></i></a></li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"footer-second\">\n        <div class=\"footer-container center-content-container\">\n            <div class=\"footer-inner container-fluid\">\n                <div class=\"row\">\n                    <div class=\"col-12 col-sm-6\">\n                        <i class=\"fa fa-fw fa-copyright\"></i> 2014-2025 <a href=\"/\">Refactoring.Guru</a>. <span style=\"white-space: nowrap\">All rights reserved.</span><br>\n                        <i class=\"fa fa-fw fa-image\"></i> Illustrations by <a href=\"http://zhart.us/\" rel=\"nofollow\"><span style=\"white-space: nowrap\">Dmitry Zhart</span></a>\n                    </div>\n                    <div class=\"footer-links-right col-12 col-sm-6 mt-4 mt-sm-0\">\n                        <ul class=\"footer-list footer-list-horizontal footer-list-right\">\n                            <li><a href=\"/terms\"><span>Terms &amp; Conditions</span></a>\n                            </li>\n                            <li><a href=\"/privacy-policy\"><span>Privacy Policy</span></a>\n                            </li>\n                            <li><a href=\"/content-usage-policy\"><span>Content Usage Policy</span></a>\n                            </li>\n                            <li><a href=\"/site-about\"><span>About us</span></a>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n                                    <div class=\"row\">\n                        <div class=\"col-12 col-sm-4\">\n                            <div class=\"mt-4\">\n                                                                    <b>Ukrainian office:</b><br>\n                                    <object class=\"fa-fw\" style=\"height: 0.8rem; filter: invert(50%);\"  type=\"image/svg+xml\" data=\"/images/content-public/icons/fa-building.svg?id=afddb5806968b0a9acfc1df75a181234\">\n                                        <img class=\"fa-fw\" style=\"height: 0.8rem;\" src=\"/images/content-public/icons/fa-building.svg?id=afddb5806968b0a9acfc1df75a181234\" alt=\"Organization address\"/>\n                                    </object> FOP Olga Skobeleva<br>\n                                    <svg style=\"width: 16px; height: 16px; margin-right: 1px; fill: currentColor;\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\"><path d=\"M352 192c0-88.4-71.6-160-160-160S32 103.6 32 192c0 15.6 5.4 37 16.6 63.4c10.9 25.9 26.2 54 43.6 82.1c34.1 55.3 74.4 108.2 99.9 140c25.4-31.8 65.8-84.7 99.9-140c17.3-28.1 32.7-56.3 43.6-82.1C346.6 229 352 207.6 352 192zm32 0c0 87.4-117 243-168.3 307.2c-12.3 15.3-35.1 15.3-47.4 0C117 435 0 279.4 0 192C0 86 86 0 192 0S384 86 384 192zm-240 0a48 48 0 1 0 96 0 48 48 0 1 0 -96 0zm48 80a80 80 0 1 1 0-160 80 80 0 1 1 0 160z\"/></svg> Abolmasova 7<br>\n                                    <span style=\"margin-left: 21px;\">Kyiv, Ukraine, 02002</span><br>\n                                    <i class=\"fa fa-fw fa-envelope\"></i>  Email: support@refactoring.guru\n                                \n                            </div>\n                        </div>\n                        <div class=\"col-12 col-sm-4\">\n                            <div class=\"mt-4\">\n                                <b>Spanish office:</b><br>\n                                <object class=\"fa-fw\" style=\"height: 0.8rem; filter: invert(50%);\"  type=\"image/svg+xml\" data=\"/images/content-public/icons/fa-building.svg?id=afddb5806968b0a9acfc1df75a181234\">\n                                    <img class=\"fa-fw\" style=\"height: 0.8rem;\" src=\"/images/content-public/icons/fa-building.svg?id=afddb5806968b0a9acfc1df75a181234\" alt=\"Organization address\"/>\n                                </object> Oleksandr Shvets<br>\n                                <svg style=\"width: 16px; height: 16px; margin-right: 1px; fill: currentColor;\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\"><path d=\"M352 192c0-88.4-71.6-160-160-160S32 103.6 32 192c0 15.6 5.4 37 16.6 63.4c10.9 25.9 26.2 54 43.6 82.1c34.1 55.3 74.4 108.2 99.9 140c25.4-31.8 65.8-84.7 99.9-140c17.3-28.1 32.7-56.3 43.6-82.1C346.6 229 352 207.6 352 192zm32 0c0 87.4-117 243-168.3 307.2c-12.3 15.3-35.1 15.3-47.4 0C117 435 0 279.4 0 192C0 86 86 0 192 0S384 86 384 192zm-240 0a48 48 0 1 0 96 0 48 48 0 1 0 -96 0zm48 80a80 80 0 1 1 0-160 80 80 0 1 1 0 160z\"/></svg> Avda Pamplona 64<br>\n                                <span style=\"margin-left: 21px;\">Pamplona, Spain, 31009</span><br>\n                                <i class=\"fa fa-fw fa-envelope\"></i>  Email: support@refactoring.guru\n                            </div>\n                        </div>\n                    </div>\n                            </div>\n        </div>\n    </div>\n</footer>\n\n</div>\n\n\n    <script defer>\n    var CodeMirrorScripts = [\"/js/codemirror.min.js?id=f7ae4adf14bd00338caf8e95da733cc9\"];\n</script>\n\n\n\n    <script>window.loadContent = true;window.loadCart = true;</script>\n</body>\n</html>\n"},
{"title": null, "url": "https://refactoring.guru/design-patterns/proxy", "raw_html": "<!DOCTYPE html>\n<html lang=\"en\" dir=\"ltr\">\n<head prefix=\"og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# website: http://ogp.me/ns/website#\">\n    <meta charset=\"utf-8\">\n    <title>Proxy</title>\n\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n    <meta name=\"theme-color\" content=\"#A2E2FD\" />\n\n            <style>\n        .buy-widget-excl-local-taxes {\n            display: none;\n        }\n    </style>\n    \n    <link rel=\"preload\" href=\"/fonts/PTSans/ptsans-regular_en.woff2?1\" as=\"font\" type=\"font/woff2\" crossorigin>\n    <link rel=\"preload\" href=\"/fonts/PTSans/ptsans-bold_en.woff2?1\" as=\"font\" type=\"font/woff2\" crossorigin>\n        <link rel=\"preload\" href=\"/fonts/fontello/fontawesome.woff2?15843843\" as=\"font\" type=\"font/woff2\" crossorigin>\n    <link rel=\"preload\" href=\"/fonts/FiraCode/woff2/FiraCode-Regular_latin.woff2\" as=\"font\" type=\"font/woff2\" crossorigin>\n        <link rel=\"preconnect dns-prefetch\" href=\"https://cdn.paddle.com\">\n    <link rel=\"preconnect dns-prefetch\" href=\"https://www.googletagmanager.com\">\n\n    <link rel=\"alternate\" href=\"https://refactoring.guru/design-patterns/proxy\" hreflang=\"x-default\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/es/design-patterns/proxy\" hreflang=\"es\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/fr/design-patterns/proxy\" hreflang=\"fr\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/ja/design-patterns/proxy\" hreflang=\"ja\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/ko/design-patterns/proxy\" hreflang=\"ko\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/pl/design-patterns/proxy\" hreflang=\"pl\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/pt-br/design-patterns/proxy\" hreflang=\"pt-br\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/ru/design-patterns/proxy\" hreflang=\"ru\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/uk/design-patterns/proxy\" hreflang=\"uk\"/>\n    <link rel=\"alternate\" href=\"https://refactoringguru.cn/design-patterns/proxy\" hreflang=\"zh\"/>\n\n    <meta name=\"description\" content=\"Proxy is a structural design pattern that lets you provide a substitute or placeholder for another object. A proxy controls access to the original object, allowing you to perform something either before or after the request gets through to the original object.\">\n\n    <link rel=\"canonical\" href=\"https://refactoring.guru/design-patterns/proxy\"/>\n\n    <link rel=\"icon\" type=\"image/x-icon\" href=\"/favicon.png\"/>\n\n        <meta property=\"fb:app_id\" content=\"666819623386327\"/>\n        <meta property=\"og:type\" content=\"website\"/>\n        <meta property=\"og:image\" content=\"https://refactoring.guru/images/refactoring/social/facebook-share-preview.png?id=dbf9e98269595be86eb668f365be6868\"/>\n    \n                    <link rel=\"stylesheet\" href=\"/css/public-packed.min.css?id=aaefab4da343b914b8dda9973604a9e8\">\n        <style type=\"text/css\">\n                    @font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_cyrillic-ext.woff2?1) format(\"woff2\");unicode-range:U+0460-052F,U+1C80-1C88,U+20B4,U+2DE0-2DFF,U+A640-A69F,U+FE2E-FE2F}@font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_cyrillic.woff2?1) format(\"woff2\");unicode-range:U+0400-045F,U+0490-0491,U+04B0-04B1,U+2116}@font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_latin-ext.woff2?1) format(\"woff2\");unicode-range:U+0100-024F,U+0259,U+1E00-1EFF,U+2020,U+20A0-20AB,U+20AD-20CF,U+2113,U+2C60-2C7F,U+A720-A7FF}@font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_latin.woff2?1) format(\"woff2\");unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}@font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_en.woff2?1) format(\"woff2\");unicode-range:U+0-FF,U+131,U+142,U+152,U+153,U+2BB,U+2BC,U+2C6,U+2DA,U+2DC,U+420,U+423,U+430,U+438-43A,U+43D,U+440,U+441,U+443,U+44C,U+457,U+2000-206F,U+2074,U+20AA-20AC,U+20B4,U+20B9,U+20BA,U+20BD,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_cyrillic-ext.woff2?1) format(\"woff2\");unicode-range:U+0460-052F,U+1C80-1C88,U+20B4,U+2DE0-2DFF,U+A640-A69F,U+FE2E-FE2F}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_cyrillic.woff2?1) format(\"woff2\");unicode-range:U+0400-045F,U+0490-0491,U+04B0-04B1,U+2116}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_latin-ext.woff2?1) format(\"woff2\");unicode-range:U+0100-024F,U+0259,U+1E00-1EFF,U+2020,U+20A0-20AB,U+20AD-20CF,U+2113,U+2C60-2C7F,U+A720-A7FF}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_latin.woff2?1) format(\"woff2\");unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_en.woff2?1) format(\"woff2\");unicode-range:U+0-FF,U+131,U+142,U+152,U+153,U+2BB,U+2BC,U+2C6,U+2DA,U+2DC,U+420,U+423,U+430,U+438-43A,U+43D,U+440,U+441,U+443,U+44C,U+457,U+2000-206F,U+2074,U+20AA-20AC,U+20B4,U+20B9,U+20BA,U+20BD,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}\n            </style>\n\n    \n            <script defer src=\"/js/public.min.js?id=1f19fe18ffe0fc844ede8a0f2ee64202\"></script>\n        <script defer src=\"/js/checkout.min.js?id=b4da9c5bd8b1cf504447c07ae8b7cd44\"></script>\n            <script defer src=\"https://cdn.paddle.com/paddle/v2/paddle.js\"></script>\n    <script async src=\"https://www.googletagmanager.com/gtag/js?id=G-SR8Y3GYQYC\"></script>\n\n    <script type=\"application/ld+json\">\n        {\"@context\": \"http://schema.org\", \"@graph\": [{\"@type\":\"Person\",\"@id\":\"https://refactoring.guru/#founder\",\"name\":\"Alexander Shvets\"},{\"@type\":\"Organization\",\"@id\":\"https://refactoring.guru/#organization\",\"name\":\"Refactoring.Guru\",\"description\":\"Refactoring.Guru makes it easy for you to discover everything you need to know about refactoring, design patterns, SOLID principles, and other smart programming topics.\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https://refactoring.guru/#organizationlogo\",\"url\":\"https://refactoring.guru/images/content-public/logos/logo-plain.png\",\"caption\":\"Refactoring.Guru\"},\"logo\":{\"@id\":\"https://refactoring.guru/#organizationlogo\"},\"founder\":{\"@id\":\"https://refactoring.guru/#founder\"},\"sameAs\":[\"https://www.facebook.com/refactoring.guru\",\"https://twitter.com/RefactoringGuru\",\"https://github.com/RefactoringGuru\"]},{\"@type\":\"WebSite\",\"@id\":\"https://refactoring.guru/#website\",\"url\":\"https://refactoring.guru/\",\"name\":\"Refactoring.Guru\",\"description\":\"Refactoring.Guru makes it easy for you to discover everything you need to know about refactoring, design patterns, SOLID principles, and other smart programming topics.\",\"author\":{\"@id\":\"https://refactoring.guru/#founder\"},\"publisher\":{\"@id\":\"https://refactoring.guru/#organization\"},\"copyrightYear\":2014},{\"@type\":\"WebPage\",\"@id\":\"https://refactoring.guru/design-patterns/proxy#webpage\",\"url\":\"https://refactoring.guru/design-patterns/proxy\",\"inLanguage\":\"en\",\"name\":\"Proxy\",\"description\":\"Proxy is a structural design pattern that lets you provide a substitute or placeholder for another object. A proxy controls access to the original object, allowing you to perform something either before or after the request gets through to the original object.\",\"isPartOf\":{\"@id\":\"https://refactoring.guru#website\"},\"breadcrumb\":{\"@id\":\"https://refactoring.guru/design-patterns/proxy#breadcrumb\"},\"primaryImageOfPage\":{\"@id\":\"https://refactoring.guru/design-patterns/proxy#primaryimage\"},\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https://refactoring.guru/design-patterns/proxy#primaryimage\",\"url\":\"https://refactoring.guru/images/patterns/content/proxy/proxy-3x.png\",\"width\":1920,\"height\":1200}},{\"@type\":\"Article\",\"@id\":\"https://refactoring.guru/design-patterns/proxy#article\",\"isPartOf\":{\"@id\":\"https://refactoring.guru/design-patterns/proxy#webpage\"},\"mainEntityOfPage\":{\"@id\":\"https://refactoring.guru/design-patterns/proxy#webpage\"},\"author\":{\"@id\":\"https://refactoring.guru#founder\"},\"publisher\":{\"@id\":\"https://refactoring.guru#organization\"},\"headline\":\"Proxy\",\"datePublished\":\"2024-01-01\",\"dateModified\":\"2025-01-01\",\"articleSection\":\"Design Patterns\",\"image\":{\"@id\":\"https://refactoring.guru/design-patterns/proxy#primaryimage\"}},{\"@type\":\"BreadcrumbList\",\"@id\":\"https://refactoring.guru/design-patterns/proxy#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https://refactoring.guru\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Design Patterns\",\"item\":\"https://refactoring.guru/design-patterns\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"Structural Patterns\",\"item\":\"https://refactoring.guru/design-patterns/structural-patterns\"}]}] }\n    </script>\n\n    <script>\nfunction extend(){var extended={};var deep=false;var i=0;var length=arguments[\"length\"];if(Object[\"prototype\"][\"toString\"][\"call\"](arguments[0])=== '[object Boolean]'){deep= arguments[0];i++};var merge=function(obj){for(var prop in obj){if(Object[\"prototype\"][\"hasOwnProperty\"][\"call\"](obj,prop)){if(deep&& Object[\"prototype\"][\"toString\"][\"call\"](obj[prop])=== '[object Object]'){extended[prop]= extend(true,extended[prop],obj[prop])}else {extended[prop]= obj[prop]}}}};for(;i< length;i++){var obj=arguments[i];merge(obj)};return extended}\nfunction defer(method) {if (window.jQuery) {method();} else {setTimeout(function() { defer(method) }, 50);}}\n</script>\n<script>\n+function(sd){sd = (typeof sd === \"string\") ? JSON.parse(atob(sd)) : sd;for(var property in sd){if(window[property]!== null&&  typeof window[property]=== 'object'){window[property]= extend(true,window[property],sd[property])}else {window[property]= sd[property]}}}(\"eyJsb2NhbGUiOiJlbiIsImxvY2FsZV9wcmVmaXgiOiIiLCJsb2NhbGl6ZWRfdXJsX3ByZWZpeCI6Imh0dHBzOlwvXC9yZWZhY3RvcmluZy5ndXJ1XC8iLCJ1cmxfcHJlZml4IjoiaHR0cHM6XC9cL3JlZmFjdG9yaW5nLmd1cnVcLyIsImxvY2FsaXplZF91cmxfcHJlZml4X20iOiJodHRwczpcL1wvcmVmYWN0b3JpbmcuZ3VydVwvIiwidXJsX3ByZWZpeF9tIjoiaHR0cHM6XC9cL3JlZmFjdG9yaW5nLmd1cnVcLyIsInVzZXJfZWNob19hbGlhcyI6InJlZmFjdG9yaW5nIiwidXNlcl9lY2hvX2hvc3QiOiJmZWVkYmFjay5yZWZhY3RvcmluZy5ndXJ1IiwidXNlcl9lY2hvX3ByaXZhdGVfZm9ydW0iOiIyIiwidXNlcl9lY2hvX2xvY2FsZSI6ImVuIiwidXNlcl9lY2hvX3B1YmxpY19mb3J1bSI6IjMiLCJ1c2VyX2VjaG9fcHVibGljX2ZvcnVtX3VybCI6Imh0dHBzOlwvXC9mZWVkYmFjay5yZWZhY3RvcmluZy5ndXJ1XC8iLCJ1c2VyX2VjaG9fc3NvX3Rva2VuIjoiIn0=\");\n</script>\n\n<script>\n    window.dataLayer = window.dataLayer || [];\n    function gtag(){dataLayer.push(arguments);}\n    gtag('js', new Date());\n            gtag('set', 'linker', {'domains': [\"refactoring.guru,refactoringguru.cn\"]});\n        gtag('config', 'G-SR8Y3GYQYC', {\n        // Disable default page view, because we're going to report them on our own.\n        // This is done to report traffic on localized domains as part of the main website traffic\n        // See the Chinese overrides below.\n        send_page_view: false,\n    });\n</script>\n\n<script>\n    (() => {\n        // On first page view after returning from social network, we need to send the social login event.\n        (function detectSocialLogin() {\n            let getCookie = function (name) {\n                var nameEQ = name + \"=\";\n                var ca = document.cookie.split(';');\n                for (var i = 0; i < ca.length; i++) {\n                    var c = ca[i];\n                    while (c.charAt(0) == ' ') c = c.substring(1, c.length);\n                    if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);\n                }\n                return null;\n            };\n            window.social_login_provider = window.social_login_provider || getCookie('social_login_provider');\n            if (window.social_login_provider) {\n                gtag('set', {referrer: null});\n                gtag('event', 'login', {\"method\": window.social_login_provider});\n                // Delete cookie.\n                document.cookie = 'social_login_provider=; Path=/; Max-Age=-99999999;';\n            }\n        })();\n\n        function trackPageView(location, title) {\n            location = location || document.location.href;\n            title = title || document.title;\n\n            // This is show on https://refactoringguru.cn/ and alike.\n            if (typeof window.analytics_path_prefix === 'string') {\n                if (/^(https?:\\/\\/[^\\/]+?)\\/$/.test(location)) {\n                    location = location.replace(/(https?:\\/\\/[^\\/]+?)\\//, '$1' + window.analytics_path_prefix);\n                } else {\n                    location = location.replace(/(https?:\\/\\/[^\\/]+?)\\//, '$1' + window.analytics_path_prefix + '/');\n                }\n                gtag('set', {\n                    'page_location': location\n                });\n            }\n\n            // This is show on https://refactoring.guru/zh/login and alike.\n            if (typeof window.analytics_location_prefix === 'string') {\n                location = location.replace(/(https?:\\/\\/[^\\/]+?)\\//, window.analytics_location_prefix);\n                gtag('set', {\n                    'page_location': location\n                });\n            }\n\n            gtag('event', 'page_view', {\n                page_location: location,\n                page_title: title,\n                locale: window.locale ?? 'en'\n            });\n        }\n\n        if (window.loadContent) {\n            window.onPageLoad = window.onPageLoad || [];\n            window.onPageLoad.push({\n                func: function (context) {\n                    trackPageView(window.location.origin + context.canonicalPath, context.title);\n                },\n                afterAll: true,\n            });\n        }\n        else {\n            trackPageView();\n        }\n    })();\n</script>\n\n\n</head>\n<body class=\"locale-en   announcement   proxy\" data-body_class=\"proxy\">\n\n<div class=\"body-holder\">\n\n            <div class=\"announcement-block announcement-block-summer prom\" data-id=\"DIDP-announcement\" data-creative-id=\"en\" data-position=\"top\">\n        <span class=\"beach-and-sea\">\n            <span class=\"a1\"></span>\n            <span class=\"a2\"><span class=\"wave\"></span></span>\n            <span class=\"yacht\"></span>\n        </span>\n        <a href=\"/store\">\n            <img src=\"/images/content-public/ann/summer/sunbed.svg?id=b1e7314a63715a13870a6bd1a43613f7\" loading=\"lazy\" style=\"width: 32px; height:32px;vertical-align: middle; scale: -1 1 1;\">\n            <span class=\"announcement-link-text\">Summer SALE</span>\n            <img src=\"/images/content-public/ann/summer/reading-book.svg?id=36006ea720df8c171968cf613e8ea164\" loading=\"lazy\" style=\"width: 32px; height:32px;vertical-align: middle;\">\n        </a>\n    </div>\n\n    \n    <div class=\"cart-placeholder\">\n    <div class=\"cart-block-container\" style=\"display:none\">\n        <div class=\"cart-block btn-group\">\n            <a href=\"#checkout\" class=\"btn cart open-checkout\">\n                <span class=\"cart-text\"></span>&nbsp;<strong class=\"cart-total font-money\"></strong>\n            </a><a href=\"#checkout\" class=\"btn btn-secondary checkout open-checkout\"><i class=\"fa fa-shopping-cart\" aria-hidden=\"true\"></i> <span class=\"btn-text-span d-none d-sm-inline-block d-lg-none d-hg-inline-block\"></span></a>\n        </div>\n    </div>\n</div>\n    <main role=\"main\" class=\"main-content top-content center-content \" data-page_class=\"\">\n        <div class=\"main-content-container center-content-container\">\n                        <div class=\"pattern page text\">\n<article>\n    <div class=\"breadcrumb\">\n                                    <a class=\"home\" href=\"/\"><i class=\"fa fa-home\" aria-hidden=\"true\"></i></a>\n                                                / <a class=\"type\" href=\"/design-patterns\">Design Patterns</a>\n                                                / <a class=\"type\" href=\"/design-patterns/structural-patterns\">Structural Patterns</a>\n                        </div>\n    <h1 class=\"title\">Proxy</h1>\n\n    <script type=\"text/javascript\">\n        // Shorten examples titles for users.\n        var h1 = document.getElementsByTagName(\"H1\")[0];\n        if (h1.offsetHeight > 160) {\n            h1.className += ' smaller';\n        }\n\n        // Small beautification for pattern examples.\n        var title = h1.innerHTML;\n        title = title.replace(/^(Java|C\\+\\+|C#|PHP|Python|Ruby|Delphi): (.*)$/, '<strong>$1:</strong> $2');\n        h1.innerHTML = title;\n    </script>\n\n    \n    \n\n    <div class=\"section intent\">\n<h2 id=\"intent\"><i class=\"fa fa-flip-horizontal fa-comment-alt-dots\" aria-hidden=\"true\"></i> Intent</h2>\n<p><strong>Proxy</strong> is a structural design pattern that lets you provide a substitute or placeholder for another object. A proxy controls access to the original object, allowing you to perform something either before or after the request gets through to the original object.</p>\n<figure class=\"image\"><img src=\"/images/patterns/content/proxy/proxy.png?id=efece4647fb11e3f7539291796327666\" alt=\"Proxy design pattern\" srcset=\"/images/patterns/content/proxy/proxy.png?id=efece4647fb11e3f7539291796327666 640w,/images/patterns/content/proxy/proxy-1.5x.png?id=80a11690fa49172c517470a834289b60 960w,/images/patterns/content/proxy/proxy-2x.png?id=fb3d14e21c210a758d4777f4d93dce09 1280w\" sizes=\"(max-width: 720px) 100vw, 640px\" width=\"640\" style=\"aspect-ratio: 1.6;\" fetchpriority=\"high\" /></figure>\n</div>\n<div class=\"section problem\">\n<h2 id=\"problem\"><i class=\"fa fa-frown\" aria-hidden=\"true\"></i> Problem</h2>\n<p>Why would you want to control access to an object? Here is an example: you have a massive object that consumes a vast amount of system resources. You need it from time to time, but not always.</p>\n<figure class=\"image\"><img src=\"/images/patterns/diagrams/proxy/problem-en.png?id=b36e65189e939de5dc809636c1946a43\" alt=\"Problem solved by Proxy pattern\" srcset=\"/images/patterns/diagrams/proxy/problem-en.png?id=b36e65189e939de5dc809636c1946a43 510w,/images/patterns/diagrams/proxy/problem-en-1.5x.png?id=344d31dfcf156ae35b7e4005b0959f28 765w,/images/patterns/diagrams/proxy/problem-en-2x.png?id=50393231365429384bd08c3fe3807f56 1020w\" sizes=\"(max-width: 720px) 100vw, 510px\" width=\"510\" style=\"aspect-ratio: 3.19;\" loading=\"lazy\" /><figcaption>\n<p>Database queries can be really slow.</p>\n</figcaption></figure>\n<p>You could implement lazy initialization: create this object only when it’s actually needed. All of the object’s clients would need to execute some deferred initialization code. Unfortunately, this would probably cause a lot of code duplication.</p>\n<p>In an ideal world, we’d want to put this code directly into our object’s class, but that isn’t always possible. For instance, the class may be part of a closed 3rd-party library.</p>\n</div>\n<div class=\"section solution\">\n<h2 id=\"solution\"><i class=\"fa fa-smile-beam\" aria-hidden=\"true\"></i> Solution</h2>\n<p>The Proxy pattern suggests that you create a new proxy class with the same interface as an original service object. Then you update your app so that it passes the proxy object to all of the original object’s clients. Upon receiving a request from a client, the proxy creates a real service object and delegates all the work to it.</p>\n<figure class=\"image\"><img src=\"/images/patterns/diagrams/proxy/solution-en.png?id=ab36b8b03fabf92c7dd10ad87507b78c\" alt=\"Solution with the Proxy pattern\" srcset=\"/images/patterns/diagrams/proxy/solution-en.png?id=ab36b8b03fabf92c7dd10ad87507b78c 510w,/images/patterns/diagrams/proxy/solution-en-1.5x.png?id=5b127cfce320b214653a58a5ade5f887 765w,/images/patterns/diagrams/proxy/solution-en-2x.png?id=06d3d96b36666ea5762250dbc8d5e624 1020w\" sizes=\"(max-width: 720px) 100vw, 510px\" width=\"510\" style=\"aspect-ratio: 3.19;\" loading=\"lazy\" /><figcaption>\n<p>The proxy disguises itself as a database object. It can handle lazy initialization and result caching without the client or the real database object even knowing.</p>\n</figcaption></figure>\n<p>But what’s the benefit? If you need to execute something either before or after the primary logic of the class, the proxy lets you do this without changing that class. Since the proxy implements the same interface as the original class, it can be passed to any client that expects a real service object.</p>\n</div>\n<div class=\"section analogy\">\n<h2 id=\"analogy\"><i class=\"fa fa-car-side\" aria-hidden=\"true\"></i> Real-World Analogy</h2>\n<figure class=\"image\"><img src=\"/images/patterns/diagrams/proxy/live-example.png?id=a268c57fdaf073ee81cf4dfc7239eae2\" alt=\"A credit card is a proxy for a bundle of cash\" srcset=\"/images/patterns/diagrams/proxy/live-example.png?id=a268c57fdaf073ee81cf4dfc7239eae2 540w,/images/patterns/diagrams/proxy/live-example-1.5x.png?id=4b8ee7f90cf76180004e9f5d37661ee2 810w,/images/patterns/diagrams/proxy/live-example-2x.png?id=8b8083fa1954d2d92ca84a5a5636ead7 1080w\" sizes=\"(max-width: 720px) 100vw, 540px\" width=\"540\" style=\"aspect-ratio: 2.57;\" loading=\"lazy\" /><figcaption>\n<p>Credit cards can be used for payments just the same as cash.</p>\n</figcaption></figure>\n<p>A credit card is a proxy for a bank account, which is a proxy for a bundle of cash. Both implement the same interface: they can be used for making a payment. A consumer feels great because there’s no need to carry loads of cash around. A shop owner is also happy since the income from a transaction gets added electronically to the shop’s bank account without the risk of losing the deposit or getting robbed on the way to the bank.</p>\n</div>\n<div class=\"section structure-container\">\n<h2 id=\"structure\"><i class=\"fa fa-sitemap\" aria-hidden=\"true\"></i> Structure</h2>\n<div class=\"structure\">\n<div class=\"struct-image1 struct-image\">\n<figure class=\"image\"><img class=\"structure-img-non-indexed d-none d-xl-block\" src=\"/images/patterns/diagrams/proxy/structure.png?id=f2478a82a84e1a1e512a8414bf1abd1c\" alt=\"Structure of the Proxy design pattern\" srcset=\"/images/patterns/diagrams/proxy/structure.png?id=f2478a82a84e1a1e512a8414bf1abd1c 370w,/images/patterns/diagrams/proxy/structure-1.5x.png?id=0db7bf3c1193b2a1961894349f1e07ad 555w,/images/patterns/diagrams/proxy/structure-2x.png?id=3d54eeca9af4aa373e989a73463539b5 740w\" sizes=\"(max-width: 720px) 100vw, 370px\" width=\"370\" style=\"aspect-ratio: 1;\" loading=\"lazy\" /><img class=\"structure-img-indexed d-xl-none\" src=\"/images/patterns/diagrams/proxy/structure-indexed.png?id=e56d420f31925b3d41348c5036d3cd64\" alt=\"Structure of the Proxy design pattern\" srcset=\"/images/patterns/diagrams/proxy/structure-indexed.png?id=e56d420f31925b3d41348c5036d3cd64 410w,/images/patterns/diagrams/proxy/structure-indexed-1.5x.png?id=5b24af632e76d81d24eab0b7c0be1a66 615w,/images/patterns/diagrams/proxy/structure-indexed-2x.png?id=ddf2b3b4807e52330c456c59fc52d504 820w\" sizes=\"(max-width: 720px) 100vw, 410px\" width=\"410\" style=\"aspect-ratio: 1.05;\" loading=\"lazy\" /></figure>\n</div>\n<ol><li class=\"struct-li1\">\n<p>The <strong>Service Interface</strong> declares the interface of the Service. The proxy must follow this interface to be able to disguise itself as a service object.</p>\n</li>\n<li class=\"struct-li2\">\n<p>The <strong>Service</strong> is a class that provides some useful business logic.</p>\n</li>\n<li class=\"struct-li3\">\n<p>The <strong>Proxy</strong> class has a reference field that points to a service object. After the proxy finishes its processing (e.g., lazy initialization, logging, access control, caching, etc.), it passes the request to the service object.</p>\n<p>Usually, proxies manage the full lifecycle of their service objects.</p>\n</li>\n<li class=\"struct-li4\">\n<p>The <strong>Client</strong> should work with both services and proxies via the same interface. This way you can pass a proxy into any code that expects a service object.</p>\n</li></ol>\n<style structure type=\"text/css\" >\n@media (min-width: 1200px) {\n.structure {\nmargin: 0;\nwidth: auto;\nheight: 420px;\n}\n\n.struct-image1 {\nleft: 290px;\ntop: 30px;\n}\n\n.struct-li1 {\nleft: 590px;\ntop: 10px;\nwidth: 300px;\n}\n\n.struct-li2 {\nleft: 680px;\ntop: 180px;\nwidth: 160px;\n}\n\n.struct-li3 {\nleft: 0px;\ntop: 180px;\nwidth: 290px;\n}\n\n.struct-li4 {\nleft: 0px;\ntop: 20px;\nwidth: 290px;\n}\n\n}\n\n</style>\n</div></div>\n<div class=\"section pseudocode\">\n<h2 id=\"pseudocode\"><i class=\"fa fa-hashtag\" aria-hidden=\"true\"></i> Pseudocode</h2>\n<p>This example illustrates how the <strong>Proxy</strong> pattern can help to introduce lazy initialization and caching to a 3rd-party YouTube integration library.</p>\n<figure class=\"image\"><img src=\"/images/patterns/diagrams/proxy/example.png?id=ddb1402479562b9e2c776933cc861bed\" alt=\"Structure of the Proxy pattern example\" srcset=\"/images/patterns/diagrams/proxy/example.png?id=ddb1402479562b9e2c776933cc861bed 490w,/images/patterns/diagrams/proxy/example-1.5x.png?id=9b7608e1ef46a52d4ca1d7d89986e5b0 735w,/images/patterns/diagrams/proxy/example-2x.png?id=40f22d12d183b9285a380e4a072efb16 980w\" sizes=\"(max-width: 720px) 100vw, 490px\" width=\"490\" style=\"aspect-ratio: 1.23;\" loading=\"lazy\" /><figcaption>\n<p>Caching results of a service with a proxy.</p>\n</figcaption></figure>\n<p>The library provides us with the video downloading class. However, it’s very inefficient. If the client application requests the same video multiple times, the library just downloads it over and over, instead of caching and reusing the first downloaded file.</p>\n<p>The proxy class implements the same interface as the original downloader and delegates it all the work. However, it keeps track of the downloaded files and returns the cached result when the app requests the same video multiple times.</p>\n<figure class=\"code\">\n<pre class=\"code\" lang=\"pseudocode\">// The interface of a remote service.\ninterface ThirdPartyYouTubeLib is\n    method listVideos()\n    method getVideoInfo(id)\n    method downloadVideo(id)\n\n// The concrete implementation of a service connector. Methods\n// of this class can request information from YouTube. The speed\n// of the request depends on a user's internet connection as\n// well as YouTube's. The application will slow down if a lot of\n// requests are fired at the same time, even if they all request\n// the same information.\nclass ThirdPartyYouTubeClass implements ThirdPartyYouTubeLib is\n    method listVideos() is\n        // Send an API request to YouTube.\n\n    method getVideoInfo(id) is\n        // Get metadata about some video.\n\n    method downloadVideo(id) is\n        // Download a video file from YouTube.\n\n// To save some bandwidth, we can cache request results and keep\n// them for some time. But it may be impossible to put such code\n// directly into the service class. For example, it could have\n// been provided as part of a third party library and/or defined\n// as `final`. That's why we put the caching code into a new\n// proxy class which implements the same interface as the\n// service class. It delegates to the service object only when\n// the real requests have to be sent.\nclass CachedYouTubeClass implements ThirdPartyYouTubeLib is\n    private field service: ThirdPartyYouTubeLib\n    private field listCache, videoCache\n    field needReset\n\n    constructor CachedYouTubeClass(service: ThirdPartyYouTubeLib) is\n        this.service = service\n\n    method listVideos() is\n        if (listCache == null || needReset)\n            listCache = service.listVideos()\n        return listCache\n\n    method getVideoInfo(id) is\n        if (videoCache == null || needReset)\n            videoCache = service.getVideoInfo(id)\n        return videoCache\n\n    method downloadVideo(id) is\n        if (!downloadExists(id) || needReset)\n            service.downloadVideo(id)\n\n// The GUI class, which used to work directly with a service\n// object, stays unchanged as long as it works with the service\n// object through an interface. We can safely pass a proxy\n// object instead of a real service object since they both\n// implement the same interface.\nclass YouTubeManager is\n    protected field service: ThirdPartyYouTubeLib\n\n    constructor YouTubeManager(service: ThirdPartyYouTubeLib) is\n        this.service = service\n\n    method renderVideoPage(id) is\n        info = service.getVideoInfo(id)\n        // Render the video page.\n\n    method renderListPanel() is\n        list = service.listVideos()\n        // Render the list of video thumbnails.\n\n    method reactOnUserInput() is\n        renderVideoPage()\n        renderListPanel()\n\n// The application can configure proxies on the fly.\nclass Application is\n    method init() is\n        aYouTubeService = new ThirdPartyYouTubeClass()\n        aYouTubeProxy = new CachedYouTubeClass(aYouTubeService)\n        manager = new YouTubeManager(aYouTubeProxy)\n        manager.reactOnUserInput()\n</pre>\n</figure>\n</div>\n<div class=\"section applicability-container\">\n<h2 id=\"applicability\"><i class=\"fa fa-lightbulb-on\" aria-hidden=\"true\"></i> Applicability</h2>\n<div class=\"applicability\">\n<p>There are dozens of ways to utilize the Proxy pattern. Let’s go over the most popular uses.</p>\n<div class=\"applicability-problem\">\n<p><i class=\"fa fa-fw fa-bug\" aria-hidden=\"true\"></i> Lazy initialization (virtual proxy). This is when you have a heavyweight service object that wastes system resources by being always up, even though you only need it from time to time.</p>\n</div><div class=\"applicability-solution\">\n<p><i class=\"fa fa-fw fa-bolt\" aria-hidden=\"true\"></i> Instead of creating the object when the app launches, you can delay the object’s initialization to a time when it’s really needed.</p>\n</div>\n<div class=\"applicability-problem\">\n<p><i class=\"fa fa-fw fa-bug\" aria-hidden=\"true\"></i> Access control (protection proxy). This is when you want only specific clients to be able to use the service object; for instance, when your objects are crucial parts of an operating system and clients are various launched applications (including malicious ones).</p>\n</div><div class=\"applicability-solution\">\n<p><i class=\"fa fa-fw fa-bolt\" aria-hidden=\"true\"></i> The proxy can pass the request to the service object only if the client’s credentials match some criteria.</p>\n</div>\n<div class=\"applicability-problem\">\n<p><i class=\"fa fa-fw fa-bug\" aria-hidden=\"true\"></i> Local execution of a remote service (remote proxy). This is when the service object is located on a remote server.</p>\n</div><div class=\"applicability-solution\">\n<p><i class=\"fa fa-fw fa-bolt\" aria-hidden=\"true\"></i> In this case, the proxy passes the client request over the network, handling all of the nasty details of working with the network.</p>\n</div>\n<div class=\"applicability-problem\">\n<p><i class=\"fa fa-fw fa-bug\" aria-hidden=\"true\"></i> Logging requests (logging proxy). This is when you want to keep a history of requests to the service object.</p>\n</div><div class=\"applicability-solution\">\n<p><i class=\"fa fa-fw fa-bolt\" aria-hidden=\"true\"></i> The proxy can log each request before passing it to the service.</p>\n</div>\n<div class=\"applicability-problem\">\n<p><i class=\"fa fa-fw fa-bug\" aria-hidden=\"true\"></i> Caching request results (caching proxy). This is when you need to cache results of client requests and manage the life cycle of this cache, especially if results are quite large.</p>\n</div><div class=\"applicability-solution\">\n<p><i class=\"fa fa-fw fa-bolt\" aria-hidden=\"true\"></i> The proxy can implement caching for recurring requests that always yield the same results. The proxy may use the parameters of requests as the cache keys.</p>\n</div>\n<div class=\"applicability-problem\">\n<p><i class=\"fa fa-fw fa-bug\" aria-hidden=\"true\"></i> Smart reference. This is when you need to be able to dismiss a heavyweight object once there are no clients that use it.</p>\n</div><div class=\"applicability-solution\">\n<p><i class=\"fa fa-fw fa-bolt\" aria-hidden=\"true\"></i> The proxy can keep track of clients that obtained a reference to the service object or its results. From time to time, the proxy may go over the clients and check whether they are still active. If the client list gets empty, the proxy might dismiss the service object and free the underlying system resources.</p>\n<p>The proxy can also track whether the client had modified the service object. Then the unchanged objects may be reused by other clients.</p>\n</div>\n</div></div>\n<div class=\"section checklist\">\n<h2 id=\"checklist\"><i class=\"fa fa-clipboard-list-check\" aria-hidden=\"true\"></i> How to Implement</h2>\n<ol>\n<li>\n<p>If there’s no pre-existing service interface, create one to make proxy and service objects interchangeable. Extracting the interface from the service class isn’t always possible, because you’d need to change all of the service’s clients to use that interface. Plan B is to make the proxy a subclass of the service class, and this way it’ll inherit the interface of the service.</p>\n</li>\n<li>\n<p>Create the proxy class. It should have a field for storing a reference to the service. Usually, proxies create and manage the whole life cycle of their services. On rare occasions, a service is passed to the proxy via a constructor by the client.</p>\n</li>\n<li>\n<p>Implement the proxy methods according to their purposes. In most cases, after doing some work, the proxy should delegate the work to the service object.</p>\n</li>\n<li>\n<p>Consider introducing a creation method that decides whether the client gets a proxy or a real service. This can be a simple static method in the proxy class or a full-blown factory method.</p>\n</li>\n<li>\n<p>Consider implementing lazy initialization for the service object.</p>\n</li>\n</ol>\n</div>\n<div class=\"section pros-cons\">\n<h2 id=\"pros-cons\"><i class=\"fa fa-balance-scale\" aria-hidden=\"true\"></i> Pros and Cons</h2>\n<div class=\"row\"><div class=\"col-sm-6\">\n<ul>\n<li><i class=\"fa fa-fw fa-check\" aria-hidden=\"true\"></i> You can control the service object without clients knowing about it.</li>\n<li><i class=\"fa fa-fw fa-check\" aria-hidden=\"true\"></i> You can manage the lifecycle of the service object when clients don’t care about it.</li>\n<li><i class=\"fa fa-fw fa-check\" aria-hidden=\"true\"></i> The proxy works even if the service object isn’t ready or is not available.</li>\n<li><i class=\"fa fa-fw fa-check\" aria-hidden=\"true\"></i> <em>Open/Closed Principle</em>. You can introduce new proxies without changing the service or clients.</li>\n</ul>\n</div><div class=\"col-sm-6\">\n<ul>\n<li><i class=\"fa fa-fw fa-times\" aria-hidden=\"true\"></i> The code may become more complicated since you need to introduce a lot of new classes.</li>\n<li><i class=\"fa fa-fw fa-times\" aria-hidden=\"true\"></i> The response from the service might get delayed.</li>\n</ul>\n</div></div></div>\n<div class=\"section relations\">\n<h2 id=\"relations\"><i class=\"fa fa-exchange-alt\" aria-hidden=\"true\"></i> Relations with Other Patterns</h2>\n<ul>\n<li>\n<p>With <a href=\"/design-patterns/adapter\">Adapter</a> you access an existing object via different interface. With <a href=\"/design-patterns/proxy\">Proxy</a>, the interface stays the same. With <a href=\"/design-patterns/decorator\">Decorator</a> you access the object via an enhanced interface.</p>\n</li>\n<li>\n<p><a href=\"/design-patterns/facade\">Facade</a> is similar to <a href=\"/design-patterns/proxy\">Proxy</a> in that both buffer a complex entity and initialize it on its own. Unlike <em>Facade</em>, <em>Proxy</em> has the same interface as its service object, which makes them interchangeable.</p>\n</li>\n<li>\n<p><a href=\"/design-patterns/decorator\">Decorator</a> and <a href=\"/design-patterns/proxy\">Proxy</a> have similar structures, but very different intents. Both patterns are built on the composition principle, where one object is supposed to delegate some of the work to another. The difference is that a <em>Proxy</em> usually manages the life cycle of its service object on its own, whereas the composition of <em>Decorators</em> is always controlled by the client.</p>\n</li>\n</ul>\n</div>\n<div class=\"section implementations\">\n<h2 id=\"implementations\"><i class=\"fa fa-code\" aria-hidden=\"true\"></i> Code Examples</h2>\n<p><a href=\"/design-patterns/proxy/csharp/example\" title=\"Proxy in C#\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/csharp.svg?id=da64592defc6e86d57c39c66e9de3e58\" alt=\"Proxy in C#\" /></a>\n<a href=\"/design-patterns/proxy/cpp/example\" title=\"Proxy in C++\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/cpp.svg?id=f7782ed8b8666246bfcc3f8fefc3b858\" alt=\"Proxy in C++\" /></a>\n<a href=\"/design-patterns/proxy/go/example\" title=\"Proxy in Go\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/go.svg?id=1a89927eb99b1ea3fde7701d97970aca\" alt=\"Proxy in Go\" /></a>\n<a href=\"/design-patterns/proxy/java/example\" title=\"Proxy in Java\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/java.svg?id=e6d87e2dca08c953fe3acd1275ed4f4e\" alt=\"Proxy in Java\" /></a>\n<a href=\"/design-patterns/proxy/php/example\" title=\"Proxy in PHP\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/php.svg?id=be1906eb26b71ec1d3b93720d6156618\" alt=\"Proxy in PHP\" /></a>\n<a href=\"/design-patterns/proxy/python/example\" title=\"Proxy in Python\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/python.svg?id=6d815d43c0f7050a1151b43e51569c9f\" alt=\"Proxy in Python\" /></a>\n<a href=\"/design-patterns/proxy/ruby/example\" title=\"Proxy in Ruby\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/ruby.svg?id=b065b718c914bf8e960ef731600be1eb\" alt=\"Proxy in Ruby\" /></a>\n<a href=\"/design-patterns/proxy/rust/example\" title=\"Proxy in Rust\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/rust.svg?id=1f5698a4b5ae23fe79413511747e4a87\" alt=\"Proxy in Rust\" /></a>\n<a href=\"/design-patterns/proxy/swift/example\" title=\"Proxy in Swift\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/swift.svg?id=0b716c2d52ec3a48fbe91ac031070c1d\" alt=\"Proxy in Swift\" /></a>\n<a href=\"/design-patterns/proxy/typescript/example\" title=\"Proxy in TypeScript\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/typescript.svg?id=2239d0f16cb703540c205dd8cb0c0cb7\" alt=\"Proxy in TypeScript\" /></a></p>\n</div>\n\n\n    <div class=\"banner-set2\" id=\"book-promo\">\n            <div class=\"prom banner-content banner-bg banner-striped banner-with-image\" data-id=\"DP: 1: Support our free website and own the eBook!\" data-creative-id=\"standard-en\" data-position=\"content_bottom\">\n                <div class=\"banner-image\">\n                    <a href=\"/design-patterns/book\">\n                        <img width=\"200\" height=\"200\" loading=\"lazy\" src=\"/images/patterns/banners/patterns-book-banner-3.png?id=7d445df13c80287beaab234b4f3b698c\" srcset=\"/images/patterns/banners/patterns-book-banner-3-2x.png?id=0cc3f77ab421d1a5c02ee46488231c3a 2x\">\n                    </a>\n                </div>\n\n                <div class=\"banner-text\">\n                    <h3 class=\"title\">Support our free website and own the eBook!</h3>\n                    <ul style=\"font-size: 14px;\">\n                        <li style=\"margin: 0;\">22 design patterns and 8 principles explained in depth.</li>\n                        <li style=\"margin: 0;\">409 well-structured, easy to read, jargon-free pages.</li>\n                        <li style=\"margin: 0;\">225 clear and helpful illustrations and diagrams.</li>\n                        <li style=\"margin: 0;\">An archive with code examples in 11 languages.</li>\n                        <li style=\"margin: 0;\">All devices supported: PDF/EPUB/MOBI/KFX formats.</li>\n                    </ul>\n                    <a class=\"btn btn-secondary\" href=\"/design-patterns/book\"><i class=\"fa fa-book\" aria-hidden=\"true\"></i> Learn more…</a>\n                </div>\n            </div>\n        </div>\n\n    </article>\n\n<nav class=\"prev-next\">\n                    <div class=\"next\">\n                <h4>Read next</h4>\n                <a rel=\"next\" href=\"/design-patterns/behavioral-patterns\" class=\"btn btn-primary\">Behavioral Patterns&nbsp;<span class=\"fa fa-arrow-right\"></span></a>\n            </div>\n                            <div class=\"prev\">\n                <h4>Return</h4>\n                <a rel=\"prev\" href=\"/design-patterns/flyweight\" class=\"btn btn-default\"><span class=\"fa fa-arrow-left\"></span>&nbsp;Flyweight </a>\n            </div>\n            </nav>\n</div>\n\n<aside class=\"feature content-secondary\">\n    <div class=\"prom banner-sidebar banner-removable banner-removable-patterns\" data-id=\"DP: Sidebar\" data-creative-id=\"standard-sidebar-en\" data-position=\"sidebar\">\n        <div class=\"banner-inner\">\n            <div class=\"image3d-book-right\">\n                <div class=\"image3d-cover\" style=\"background: #0b3752;\">\n                    <a href=\"/design-patterns/book\">\n                        <img width=\"250\" height=\"375\" loading=\"lazy\" src=\"/images/patterns/book/web-cover-en.png?id=328861769fd11617674e3b8a7e2dd9e7\" srcset=\"/images/patterns/book/web-cover-en-2x.png?id=02940141c5652ed5a426d87390b16366 2x\">\n                    </a>\n                </div>\n            </div>\n            <div style=\"margin-top: 1rem\">\n                <p class=\"text-center\" >This article is a part of our eBook<br/><strong>Dive Into Design Patterns</strong>.</p>\n                <a href=\"/design-patterns/book\" class=\"btn btn-secondary btn-block\"><i class=\"fa fa-book\" aria-hidden=\"true\"></i> Learn more…</a>\n            </div>\n        </div>\n    </div>\n\n\n</aside>\n                    </div>\n    </main>\n\n    <aside class=\"sidebar main-menu\">\n    <div class=\"main-menu-controls\">\n        <button class=\"navigation-toggle\"><i class=\"fa fa-fw fa-times\"></i></button>\n    </div>\n    <div class=\"main-menu-list-wrapper nano\">\n        <div class=\"main-menu-list nano-content\">\n            <a class=\"menu-brand\" href=\"/\">\n                                    <img width=200 height=241 loading=\"lazy\" alt=\"Refactoring.Guru\" src=\"/images/content-public/logos/logo-new.png?id=97d554614702483f31e38b32e82d8e34\" srcset=\"/images/content-public/logos/logo-new-2x.png?id=3bc33294e095bab1d6fe9ae421d07837 2x\">\n                            </a>\n\n            <div class=\"menu-container\" style=\"position: relative\">\n                                <ul class=\"menu-list trail\">\n                            <li class=\"featured\">\n            <a href=\"/store\">\n                <i class=\"fa fa-fw fa-star\" aria-hidden=\"true\"></i> Premium Content\n            </a>\n    \n            <ul >\n                            <li class=\"featured menu-fs15\">\n            <a href=\"/design-patterns/book\">\n                <i class=\"fa fa-fw fa-book\" aria-hidden=\"true\"></i> Design Patterns eBook\n            </a>\n    \n    \n            </li>\n                                <li class=\"featured menu-fs15\">\n            <a href=\"/refactoring/course\">\n                <i class=\"fa fa-fw fa-graduation-cap\" aria-hidden=\"true\"></i> Refactoring Course\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring\">\n                <i class=\"fa fa-fw fa-scissors\" aria-hidden=\"true\"></i> Refactoring\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/refactoring/what-is-refactoring\">\n                What is Refactoring\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/refactoring/what-is-refactoring\">\n                Clean code\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/technical-debt\">\n                Technical debt\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/when\">\n                When to refactor\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/how-to\">\n                How to refactor\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/catalog\">\n                Catalog\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells\">\n                Code Smells\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/refactoring/smells/bloaters\">\n                Bloaters\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/long-method\">\n                Long Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/large-class\">\n                Large Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/primitive-obsession\">\n                Primitive Obsession\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/long-parameter-list\">\n                Long Parameter List\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/data-clumps\">\n                Data Clumps\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/oo-abusers\">\n                Object-Orientation Abusers\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/switch-statements\">\n                Switch Statements\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/temporary-field\">\n                Temporary Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/refused-bequest\">\n                Refused Bequest\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/alternative-classes-with-different-interfaces\">\n                Alternative Classes with Different Interfaces\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/change-preventers\">\n                Change Preventers\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/divergent-change\">\n                Divergent Change\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/shotgun-surgery\">\n                Shotgun Surgery\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/parallel-inheritance-hierarchies\">\n                Parallel Inheritance Hierarchies\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/dispensables\">\n                Dispensables\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/comments\">\n                Comments\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/duplicate-code\">\n                Duplicate Code\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/lazy-class\">\n                Lazy Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/data-class\">\n                Data Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/dead-code\">\n                Dead Code\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/speculative-generality\">\n                Speculative Generality\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/couplers\">\n                Couplers\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/feature-envy\">\n                Feature Envy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/inappropriate-intimacy\">\n                Inappropriate Intimacy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/message-chains\">\n                Message Chains\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/middle-man\">\n                Middle Man\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/other\">\n                Other Smells\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/incomplete-library-class\">\n                Incomplete Library Class\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques\">\n                Refactorings\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/refactoring/techniques/composing-methods\">\n                Composing Methods\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/extract-method\">\n                Extract Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/inline-method\">\n                Inline Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-variable\">\n                Extract Variable\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/inline-temp\">\n                Inline Temp\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-temp-with-query\">\n                Replace Temp with Query\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/split-temporary-variable\">\n                Split Temporary Variable\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-assignments-to-parameters\">\n                Remove Assignments to Parameters\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-method-with-method-object\">\n                Replace Method with Method Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/substitute-algorithm\">\n                Substitute Algorithm\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/moving-features-between-objects\">\n                Moving Features between Objects\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/move-method\">\n                Move Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/move-field\">\n                Move Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-class\">\n                Extract Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/inline-class\">\n                Inline Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/hide-delegate\">\n                Hide Delegate\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-middle-man\">\n                Remove Middle Man\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-foreign-method\">\n                Introduce Foreign Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-local-extension\">\n                Introduce Local Extension\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/organizing-data\">\n                Organizing Data\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/self-encapsulate-field\">\n                Self Encapsulate Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-data-value-with-object\">\n                Replace Data Value with Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/change-value-to-reference\">\n                Change Value to Reference\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/change-reference-to-value\">\n                Change Reference to Value\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-array-with-object\">\n                Replace Array with Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/duplicate-observed-data\">\n                Duplicate Observed Data\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/change-unidirectional-association-to-bidirectional\">\n                Change Unidirectional Association to Bidirectional\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/change-bidirectional-association-to-unidirectional\">\n                Change Bidirectional Association to Unidirectional\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-magic-number-with-symbolic-constant\">\n                Replace Magic Number with Symbolic Constant\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/encapsulate-field\">\n                Encapsulate Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/encapsulate-collection\">\n                Encapsulate Collection\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-type-code-with-class\">\n                Replace Type Code with Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-type-code-with-subclasses\">\n                Replace Type Code with Subclasses\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-type-code-with-state-strategy\">\n                Replace Type Code with State/Strategy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-subclass-with-fields\">\n                Replace Subclass with Fields\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/simplifying-conditional-expressions\">\n                Simplifying Conditional Expressions\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/decompose-conditional\">\n                Decompose Conditional\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/consolidate-conditional-expression\">\n                Consolidate Conditional Expression\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/consolidate-duplicate-conditional-fragments\">\n                Consolidate Duplicate Conditional Fragments\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-control-flag\">\n                Remove Control Flag\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-nested-conditional-with-guard-clauses\">\n                Replace Nested Conditional with Guard Clauses\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-conditional-with-polymorphism\">\n                Replace Conditional with Polymorphism\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-null-object\">\n                Introduce Null Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-assertion\">\n                Introduce Assertion\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/simplifying-method-calls\">\n                Simplifying Method Calls\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/rename-method\">\n                Rename Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/add-parameter\">\n                Add Parameter\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-parameter\">\n                Remove Parameter\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/separate-query-from-modifier\">\n                Separate Query from Modifier\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/parameterize-method\">\n                Parameterize Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-parameter-with-explicit-methods\">\n                Replace Parameter with Explicit Methods\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/preserve-whole-object\">\n                Preserve Whole Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-parameter-with-method-call\">\n                Replace Parameter with Method Call\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-parameter-object\">\n                Introduce Parameter Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-setting-method\">\n                Remove Setting Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/hide-method\">\n                Hide Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-constructor-with-factory-method\">\n                Replace Constructor with Factory Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-error-code-with-exception\">\n                Replace Error Code with Exception\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-exception-with-test\">\n                Replace Exception with Test\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/dealing-with-generalization\">\n                Dealing with Generalization\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/pull-up-field\">\n                Pull Up Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/pull-up-method\">\n                Pull Up Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/pull-up-constructor-body\">\n                Pull Up Constructor Body\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/push-down-method\">\n                Push Down Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/push-down-field\">\n                Push Down Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-subclass\">\n                Extract Subclass\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-superclass\">\n                Extract Superclass\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-interface\">\n                Extract Interface\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/collapse-hierarchy\">\n                Collapse Hierarchy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/form-template-method\">\n                Form Template Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-inheritance-with-delegation\">\n                Replace Inheritance with Delegation\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-delegation-with-inheritance\">\n                Replace Delegation with Inheritance\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"trail\">\n            <a href=\"/design-patterns\">\n                <i class=\"fa fa-fw fa-puzzle-piece\" aria-hidden=\"true\"></i> Design Patterns\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/what-is-pattern\">\n                What is a Pattern\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/what-is-pattern\">\n                What's a design pattern?\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/history\">\n                History of patterns\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/why-learn-patterns\">\n                Why should I learn patterns?\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/criticism\">\n                Criticism of patterns\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/classification\">\n                Classification of patterns\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/catalog\">\n                Catalog\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-third-level\">\n            <a href=\"/design-patterns/creational-patterns\">\n                Creational Patterns\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/factory-method\">\n                Factory Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/abstract-factory\">\n                Abstract Factory\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/builder\">\n                Builder\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/prototype\">\n                Prototype\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/singleton\">\n                Singleton\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"menu-third-level trail\">\n            <a href=\"/design-patterns/structural-patterns\">\n                Structural Patterns\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/adapter\">\n                Adapter\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/bridge\">\n                Bridge\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/composite\">\n                Composite\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/decorator\">\n                Decorator\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/facade\">\n                Facade\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/flyweight\">\n                Flyweight\n            </a>\n    \n    \n            </li>\n                                <li class=\"trail active\">\n            <a href=\"/design-patterns/proxy\">\n                Proxy\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"menu-third-level\">\n            <a href=\"/design-patterns/behavioral-patterns\">\n                Behavioral Patterns\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/chain-of-responsibility\">\n                Chain of Responsibility\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/command\">\n                Command\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/iterator\">\n                Iterator\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/mediator\">\n                Mediator\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/memento\">\n                Memento\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/observer\">\n                Observer\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/state\">\n                State\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/strategy\">\n                Strategy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/template-method\">\n                Template Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/visitor\">\n                Visitor\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"menu-code-examples\">\n            <a href=\"/design-patterns/examples\">\n                Code Examples\n            </a>\n    \n            <ul >\n                            <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/csharp\">\n                C#\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/cpp\">\n                C++\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/go\">\n                Go\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/java\">\n                Java\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/php\">\n                PHP\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/python\">\n                Python\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/ruby\">\n                Ruby\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/rust\">\n                Rust\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/swift\">\n                Swift\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/typescript\">\n                TypeScript\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n                </div>\n\n            <div class=\"main-menu-aux-controls\">\n                <a href=\"https://refactoring.guru/login\" title=\"Sign in\" style=\" display: inline-flex; align-items: center; gap: 6px; \"><svg style=\"width: 16px; height: 16px; filter:drop-shadow(0 1px 1px #74261e)\" class=\"inline-block mx-0\"  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\"opacity=\"0.4\" d=\"M352.7 222.4c3.2 1 6.5 1.6 10 1.6l21.3 0c17.7 0 32 14.3 32 32s-14.3 32-32 32l-21.3 0c-.8 0-1.7 0-2.5 0c-.9 0-1.7-.1-2.5-.1c-1.7-.1-3.4-.2-5-.4C357.4 414 391.1 512 432 512c44.2 0 80-114.6 80-256S476.2 0 432 0c-40.6 0-74.2 96.9-79.3 222.4z\"/><path fill=\"currentColor\"class=\"fa-primary\" d=\"M320 48a48 48 0 1 0 -96 0 48 48 0 1 0 96 0zM125.7 175.5c9.9-9.9 23.4-15.5 37.5-15.5c1.9 0 3.8 .1 5.6 .3L137.6 254c-9.3 28 1.7 58.8 26.8 74.5l86.2 53.9-25.4 88.8c-4.9 17 5 34.7 22 39.6s34.7-5 39.6-22l28.7-100.4c5.9-20.6-2.6-42.6-20.7-53.9L238 299l30.9-82.4 5.1 12.3C289 264.7 323.9 288 362.7 288l21.3 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-21.3 0c-12.9 0-24.6-7.8-29.5-19.7l-6.3-15c-14.6-35.1-44.1-61.9-80.5-73.1l-48.7-15c-11.1-3.4-22.7-5.2-34.4-5.2c-31 0-60.8 12.3-82.7 34.3L57.4 153.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l23.1-23.1zM91.2 352L32 352c-17.7 0-32 14.3-32 32s14.3 32 32 32l69.6 0c19 0 36.2-11.2 43.9-28.5L157 361.6l-9.5-6c-17.5-10.9-30.5-26.8-37.9-44.9L91.2 352z\"/></svg> Sign in</a>\n                <a href=\"https://feedback.refactoring.guru/\" class=\"userecho-public\" rel=\"nofollow\" title=\"Contact us\"><i class=\"fa fa-fw fa-fw fa-envelope\" aria-hidden=\"true\"></i> Contact us</a>\n            </div>\n        </div>\n    </div>\n</aside>\n\n    <nav class=\"navigation\" role=\"navigation\">\n    <div class=\"navigation-container\">\n        <a class=\"navigation-brand\" href=\"/\">\n            <img alt=\"Refactoring.Guru\"\n                 src=\"/images/content-public/logos/logo-new-mobile.png?id=ea18aa9b032eaa92835ed6d472b03b4a\"\n                 srcset=\"/images/content-public/logos/logo-new-mobile-2x.png?id=7ad5648bfd86ae2e8524147a72877c64 2x\">\n        </a>\n\n        <div class=\"shop-link d-none d-lg-block\" style=\"display: none !important;\">\n            <a class=\"btn btn-md btn-primary btn-featured\" href=\"/store\"><svg style=\"width: 28px; height: 28px; fill: currentColor; display: inline-block; margin-top: -14px;\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><!--! Font Awesome Pro 6.3.0 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2023 Fonticons, Inc. --><path d=\"M356 60l60 20-60 20-20 60-20-60L256 80l60-20L336 0l20 60zM464 208l48 16-48 16-16 48-16-48-48-16 48-16 16-48 16 48zm-243.8-9.8l33 66.9 73.8 10.7 59.8 8.7-43.3 42.2-53.4 52.1 12.6 73.5L313 512l-53.5-28.1-66-34.7-66 34.7L73.9 512l10.2-59.6 12.6-73.5L43.3 326.8 0 284.6l59.8-8.7 73.8-10.7 33-66.9L193.5 144l26.8 54.2zm26.1 114.4l-25-3.6-11.2-22.6-16.7-33.9-16.7 33.9L165.6 309l-25 3.6-37.4 5.4 27.1 26.4 18.1 17.6L144 387l-6.4 37.3 33.5-17.6 22.3-11.7 22.3 11.7 33.5 17.6L242.9 387l-4.3-24.9 18.1-17.6 27.1-26.4-37.4-5.4z\"/></svg>\n                Shop Now!</a>\n        </div>\n\n        <ul class=\"navigation-menu\">\n                            <li class=\"nav-locale dropdown dropdown-locales\">\n                    <button class=\"dropdown-toggle\" id=\"dropdownLanguage\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                        <i class=\"fa fa-fw fa-globe\" aria-hidden=\"true\"></i> <span class=\"caption d-none d-lg-inline-block\">English</span>\n                    </button>\n                    <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownLanguage\">\n                                                                                                                        <a href=\"https://refactoring.guru/design-patterns/proxy\" class=\"dropdown-item locale-link active\" data-locale=\"en\" title=\"English\">English</a>\n                                                                                                                                <a href=\"https://refactoring.guru/es/design-patterns/proxy\" class=\"dropdown-item locale-link \" data-locale=\"es\" title=\"Español\">Español</a>\n                                                                                                                                <a href=\"https://refactoring.guru/fr/design-patterns/proxy\" class=\"dropdown-item locale-link \" data-locale=\"fr\" title=\"Français\">Français</a>\n                                                                                                                                <a href=\"https://refactoring.guru/ja/design-patterns/proxy\" class=\"dropdown-item locale-link \" data-locale=\"ja\" title=\"日本語\">日本語</a>\n                                                                                                                                <a href=\"https://refactoring.guru/ko/design-patterns/proxy\" class=\"dropdown-item locale-link \" data-locale=\"ko\" title=\"한국어\">한국어</a>\n                                                                                                                                <a href=\"https://refactoring.guru/pl/design-patterns/proxy\" class=\"dropdown-item locale-link \" data-locale=\"pl\" title=\"Polski\">Polski</a>\n                                                                                                                                <a href=\"https://refactoring.guru/pt-br/design-patterns/proxy\" class=\"dropdown-item locale-link \" data-locale=\"pt-br\" title=\"Português Brasileiro\">Português Brasileiro</a>\n                                                                                                                                <a href=\"https://refactoring.guru/ru/design-patterns/proxy\" class=\"dropdown-item locale-link \" data-locale=\"ru\" title=\"Русский\">Русский</a>\n                                                                                                                                <a href=\"https://refactoring.guru/uk/design-patterns/proxy\" class=\"dropdown-item locale-link \" data-locale=\"uk\" title=\"Українська\">Українська</a>\n                                                                                                                                <a href=\"https://refactoringguru.cn/design-patterns/proxy\" class=\"dropdown-item locale-link \" data-locale=\"zh\" title=\"中文\">中文</a>\ndiv>\n                </li>\n                        <li class=\"nav-contacts\">\n                <a class=\"userecho-private\" href=\"https://feedback.refactoring.guru/?show_feedback_form_private=true\" rel=\"nofollow\" title=\"Contact us\">\n                    <i class=\"fa fa-fw fa-envelope\" aria-hidden=\"true\"></i> <span class=\"caption d-none d-xl-inline-block\">Contact us</span>\n                </a>\n            </li>\n                            <li class=\"nav-user\">\n                    <a href=\"https://refactoring.guru/login\" title=\"Sign in\"><span class=\"sign-in-icon\"><svg style=\"width: 24px; height: 24px; \" class=\"inline-block \"  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\"opacity=\"0.4\" d=\"M352.7 222.4c3.2 1 6.5 1.6 10 1.6l21.3 0c17.7 0 32 14.3 32 32s-14.3 32-32 32l-21.3 0c-.8 0-1.7 0-2.5 0c-.9 0-1.7-.1-2.5-.1c-1.7-.1-3.4-.2-5-.4C357.4 414 391.1 512 432 512c44.2 0 80-114.6 80-256S476.2 0 432 0c-40.6 0-74.2 96.9-79.3 222.4z\"/><path fill=\"currentColor\"class=\"fa-primary\" d=\"M320 48a48 48 0 1 0 -96 0 48 48 0 1 0 96 0zM125.7 175.5c9.9-9.9 23.4-15.5 37.5-15.5c1.9 0 3.8 .1 5.6 .3L137.6 254c-9.3 28 1.7 58.8 26.8 74.5l86.2 53.9-25.4 88.8c-4.9 17 5 34.7 22 39.6s34.7-5 39.6-22l28.7-100.4c5.9-20.6-2.6-42.6-20.7-53.9L238 299l30.9-82.4 5.1 12.3C289 264.7 323.9 288 362.7 288l21.3 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-21.3 0c-12.9 0-24.6-7.8-29.5-19.7l-6.3-15c-14.6-35.1-44.1-61.9-80.5-73.1l-48.7-15c-11.1-3.4-22.7-5.2-34.4-5.2c-31 0-60.8 12.3-82.7 34.3L57.4 153.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l23.1-23.1zM91.2 352L32 352c-17.7 0-32 14.3-32 32s14.3 32 32 32l69.6 0c19 0 36.2-11.2 43.9-28.5L157 361.6l-9.5-6c-17.5-10.9-30.5-26.8-37.9-44.9L91.2 352z\"/></svg></span> <span class=\"account-icon\" style=\"display:none\"><svg style=\"width: 24px; height: 24px; \" class=\"inline-block \"  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 576 512\"><path fill=\"currentColor\"opacity=\"0.4\" d=\"M64 270.5l224-196c74.7 65.4 149.4 130.7 224.1 196.1l.4 177.3c.1 35.4-28.6 64.1-64 64.1l-320.4 0c-35.3 0-64-28.6-64-64L64 270.5zM176.1 433.6c.1 .5 .1 1.1 .2 1.6c.2 1 .5 2 .9 3c.8 1.9 2 3.6 3.4 5.1c2.9 2.9 6.9 4.7 11.3 4.7l192 0c8.8 0 16-7.2 16-16c0-44.2-35.8-80-80-80l-64 0c-22.1 0-42.1 9-56.6 23.4c-7.2 7.2-13.1 15.9-17.1 25.4c-2 4.8-3.6 9.8-4.7 15c-.5 2.6-.9 5.3-1.2 7.9c-.1 1.3-.2 2.7-.3 4.1c-.1 1.4-.1 2.7-.1 4.1c0 .6 0 1.1 .1 1.6zm48.2-184.2c-.1 1.1-.2 2.2-.2 3.2c-.1 1.1-.1 2.2-.1 3.3s0 2.2 .1 3.3c.1 1.1 .1 2.2 .2 3.2c.2 2.1 .5 4.3 1 6.4c.9 4.2 2.1 8.2 3.7 12c3.2 7.7 7.9 14.6 13.7 20.3C254.3 312.8 270.3 320 288 320c35.3 0 64-28.7 64-64s-28.7-64-64-64c-17.7 0-33.7 7.2-45.3 18.7c-5.8 5.8-10.5 12.7-13.7 20.3c-1.6 3.8-2.9 7.8-3.7 12c-.4 2.1-.8 4.2-1 6.4z\"/><path fill=\"currentColor\"class=\"fa-primary\" d=\"M309.1 7.9C297-2.6 279-2.6 266.9 7.9l-256 224c-13.3 11.6-14.6 31.9-3 45.2s31.9 14.6 45.2 3L288 74.5 522.9 280.1c13.3 11.6 33.5 10.3 45.2-3s10.3-33.5-3-45.2L512 185.5 512 64c0-17.7-14.3-32-32-32l-32 0c-17.7 0-32 14.3-32 32l0 37.5L309.1 7.9zM352 256a64 64 0 1 0 -128 0 64 64 0 1 0 128 0zm-96 96c-44.2 0-80 35.8-80 80c0 8.8 7.2 16 16 16l192 0c8.8 0 16-7.2 16-16c0-44.2-35.8-80-80-80l-64 0z\"/></svg></span> <span class=\"sign-out-icon\" style=\"display:none\"><svg style=\"width: 24px; height: 24px; \" class=\"inline-block \"  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\"opacity=\"0.4\" d=\"M0 256C0 397.4 35.8 512 80 512c25.3 0 47.8-37.5 62.5-96L128 416c-.5 0-1.1 0-1.6 0c-.6 0-1.1-.1-1.6-.1c-1.1-.1-2.1-.3-3.2-.5c-2.1-.4-4.1-1.1-6-1.9c-3.8-1.6-7.3-4-10.2-6.9s-5.2-6.3-6.9-10.2c-.8-1.9-1.4-3.9-1.9-6c-.2-1.1-.4-2.3-.5-3.5c0-.3 0-.6-.1-.8c0-.2 0-.4 0-.7c0-.4 0-.7 0-.7c0-.5 0-.7 0-.9c0-.3 0-.6 0-.9c0 0 0-.3 0-.7c0-.2 0-.4 0-.7c0-.2 0-.4 .1-.8c0-.3 .1-.6 .1-.9c0-.2 .1-.4 .1-.7c.1-.8 .2-1.2 .3-1.7c.5-2.2 1.1-4.2 1.9-6.1c1.6-3.8 4-7.3 6.9-10.2c5.8-5.8 13.8-9.4 22.6-9.4l26.2 0c3.8-29.6 5.8-62.1 5.8-96c0-18.3-.6-36.1-1.7-53.4c-1.7-1.2-3.4-2.5-4.9-4c-.8-.8-1.6-1.6-2.2-2.5s-1.3-1.7-1.9-2.6c-1.2-1.8-2.1-3.6-2.9-5.5s-1.4-3.9-1.8-5.9c-.2-1-.3-2-.4-3s-.1-2-.2-3c0-8.3 3.1-16.5 9.4-22.8C141 63.1 112.8 0 80 0C35.8 0 0 114.6 0 256z\"/><path fill=\"currentColor\"class=\"fa-primary\" d=\"M416 48a48 48 0 1 0 -96 0 48 48 0 1 0 96 0zM221.7 175.5c9.9-9.9 23.4-15.5 37.5-15.5c1.9 0 3.8 .1 5.6 .3L233.6 254c-9.3 28 1.7 58.8 26.8 74.5l86.2 53.9-25.4 88.8c-4.9 17 5 34.7 22 39.6s34.7-5 39.6-22l28.7-100.4c5.9-20.6-2.6-42.6-20.7-53.9L334 299l30.9-82.4 5.1 12.3C385 264.7 419.9 288 458.7 288l21.3 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-21.3 0c-12.9 0-24.6-7.8-29.5-19.7l-6.3-15c-14.6-35.1-44.1-61.9-80.5-73.1l-48.7-15c-11.1-3.4-22.7-5.2-34.4-5.2c-31 0-60.8 12.3-82.7 34.3l-23.1 23.1c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l23.1-23.1zM187.2 352L128 352c-17.7 0-32 14.3-32 32s14.3 32 32 32l69.6 0c19 0 36.2-11.2 43.9-28.5L253 361.6l-9.5-6c-17.5-10.9-30.5-26.8-37.9-44.9L187.2 352z\"/></svg></span> <span class=\"caption d-none d-xl-inline-block\">Sign in</span></a>\n                </li>\n                        <li class=\"nav-menu\">\n                <button class=\"navigation-toggle\"><i class=\"fa fa-fw fa-bars\" aria-hidden=\"true\"></i></button>\n            </li>\n        </ul>\n    </div>\n</nav>\n\n    <footer class=\"footer center-content\">\n    <div class=\"footer-container center-content-container\">\n        <div class=\"footer-inner container-fluid\">\n            <div class=\"row\">\n                <div class=\"col-8 col-md-10\">\n                    <ul class=\"footer-list footer-list-horizontal\">\n                        <li><a href=\"/\">Home</a></li>\n                        <li><a href=\"/refactoring\">Refactoring</a></li>\n                        <li><a href=\"/design-patterns\">Design Patterns</a></li>\n                        <li><a href=\"/store\">Premium Content</a></li>\n                        <li><a href=\"https://gitbybit.com/\">Git Course</a></li>\n                        <li><a href=\"https://refactoring.userecho.com/\" rel=\"nofollow\" class=\"userecho-public\">Forum</a></li>\n                        <li><a href=\"https://refactoring.userecho.com/\" rel=\"nofollow\" class=\"userecho-private\">Contact us</a></li>\n                    </ul>\n                </div>\n                <div class=\"col-4 col-md-2\">\n                    <ul class=\"footer-list footer-list-iconic footer-list-right\">\n                                                    <li><a href=\"https://www.facebook.com/refactoring.guru\"><i class=\"fa fa-facebook-official\"></i></a></li>\n                                                <li><a href=\"/sendy/form\" rel=\"nofollow\"><i class=\"fa fa-envelope\" aria-hidden=\"true\"></i></a></li>\n                        <li><a href=\"https://github.com/RefactoringGuru\"><i class=\"fa fa-github-circled\"></i></a></li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"footer-second\">\n        <div class=\"footer-container center-content-container\">\n            <div class=\"footer-inner container-fluid\">\n                <div class=\"row\">\n                    <div class=\"col-12 col-sm-6\">\n                        <i class=\"fa fa-fw fa-copyright\"></i> 2014-2025 <a href=\"/\">Refactoring.Guru</a>. <span style=\"white-space: nowrap\">All rights reserved.</span><br>\n                        <i class=\"fa fa-fw fa-image\"></i> Illustrations by <a href=\"http://zhart.us/\" rel=\"nofollow\"><span style=\"white-space: nowrap\">Dmitry Zhart</span></a>\n                    </div>\n                    <div class=\"footer-links-right col-12 col-sm-6 mt-4 mt-sm-0\">\n                        <ul class=\"footer-list footer-list-horizontal footer-list-right\">\n                            <li><a href=\"/terms\"><span>Terms &amp; Conditions</span></a>\n                            </li>\n                            <li><a href=\"/privacy-policy\"><span>Privacy Policy</span></a>\n                            </li>\n                            <li><a href=\"/content-usage-policy\"><span>Content Usage Policy</span></a>\n                            </li>\n                            <li><a href=\"/site-about\"><span>About us</span></a>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n                                    <div class=\"row\">\n                        <div class=\"col-12 col-sm-4\">\n                            <div class=\"mt-4\">\n                                                                    <b>Ukrainian office:</b><br>\n                                    <object class=\"fa-fw\" style=\"height: 0.8rem; filter: invert(50%);\"  type=\"image/svg+xml\" data=\"/images/content-public/icons/fa-building.svg?id=afddb5806968b0a9acfc1df75a181234\">\n                                        <img class=\"fa-fw\" style=\"height: 0.8rem;\" src=\"/images/content-public/icons/fa-building.svg?id=afddb5806968b0a9acfc1df75a181234\" alt=\"Organization address\"/>\n                                    </object> FOP Olga Skobeleva<br>\n                                    <svg style=\"width: 16px; height: 16px; margin-right: 1px; fill: currentColor;\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\"><path d=\"M352 192c0-88.4-71.6-160-160-160S32 103.6 32 192c0 15.6 5.4 37 16.6 63.4c10.9 25.9 26.2 54 43.6 82.1c34.1 55.3 74.4 108.2 99.9 140c25.4-31.8 65.8-84.7 99.9-140c17.3-28.1 32.7-56.3 43.6-82.1C346.6 229 352 207.6 352 192zm32 0c0 87.4-117 243-168.3 307.2c-12.3 15.3-35.1 15.3-47.4 0C117 435 0 279.4 0 192C0 86 86 0 192 0S384 86 384 192zm-240 0a48 48 0 1 0 96 0 48 48 0 1 0 -96 0zm48 80a80 80 0 1 1 0-160 80 80 0 1 1 0 160z\"/></svg> Abolmasova 7<br>\n                                    <span style=\"margin-left: 21px;\">Kyiv, Ukraine, 02002</span><br>\n                                    <i class=\"fa fa-fw fa-envelope\"></i>  Email: support@refactoring.guru\n                                \n                            </div>\n                        </div>\n                        <div class=\"col-12 col-sm-4\">\n                            <div class=\"mt-4\">\n                                <b>Spanish office:</b><br>\n                                <object class=\"fa-fw\" style=\"height: 0.8rem; filter: invert(50%);\"  type=\"image/svg+xml\" data=\"/images/content-public/icons/fa-building.svg?id=afddb5806968b0a9acfc1df75a181234\">\n                                    <img class=\"fa-fw\" style=\"height: 0.8rem;\" src=\"/images/content-public/icons/fa-building.svg?id=afddb5806968b0a9acfc1df75a181234\" alt=\"Organization address\"/>\n                                </object> Oleksandr Shvets<br>\n                                <svg style=\"width: 16px; height: 16px; margin-right: 1px; fill: currentColor;\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\"><path d=\"M352 192c0-88.4-71.6-160-160-160S32 103.6 32 192c0 15.6 5.4 37 16.6 63.4c10.9 25.9 26.2 54 43.6 82.1c34.1 55.3 74.4 108.2 99.9 140c25.4-31.8 65.8-84.7 99.9-140c17.3-28.1 32.7-56.3 43.6-82.1C346.6 229 352 207.6 352 192zm32 0c0 87.4-117 243-168.3 307.2c-12.3 15.3-35.1 15.3-47.4 0C117 435 0 279.4 0 192C0 86 86 0 192 0S384 86 384 192zm-240 0a48 48 0 1 0 96 0 48 48 0 1 0 -96 0zm48 80a80 80 0 1 1 0-160 80 80 0 1 1 0 160z\"/></svg> Avda Pamplona 64<br>\n                                <span style=\"margin-left: 21px;\">Pamplona, Spain, 31009</span><br>\n                                <i class=\"fa fa-fw fa-envelope\"></i>  Email: support@refactoring.guru\n                            </div>\n                        </div>\n                    </div>\n                            </div>\n        </div>\n    </div>\n</footer>\n\n</div>\n\n\n    <script defer>\n    var CodeMirrorScripts = [\"/js/codemirror.min.js?id=f7ae4adf14bd00338caf8e95da733cc9\"];\n</script>\n\n\n\n    <script>window.loadContent = true;window.loadCart = true;</script>\n</body>\n</html>\n"},
{"title": null, "url": "https://refactoring.guru/design-patterns/flyweight", "raw_html": "<!DOCTYPE html>\n<html lang=\"en\" dir=\"ltr\">\n<head prefix=\"og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# website: http://ogp.me/ns/website#\">\n    <meta charset=\"utf-8\">\n    <title>Flyweight</title>\n\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n    <meta name=\"theme-color\" content=\"#A2E2FD\" />\n\n            <style>\n        .buy-widget-excl-local-taxes {\n            display: none;\n        }\n    </style>\n    \n    <link rel=\"preload\" href=\"/fonts/PTSans/ptsans-regular_en.woff2?1\" as=\"font\" type=\"font/woff2\" crossorigin>\n    <link rel=\"preload\" href=\"/fonts/PTSans/ptsans-bold_en.woff2?1\" as=\"font\" type=\"font/woff2\" crossorigin>\n        <link rel=\"preload\" href=\"/fonts/fontello/fontawesome.woff2?15843843\" as=\"font\" type=\"font/woff2\" crossorigin>\n    <link rel=\"preload\" href=\"/fonts/FiraCode/woff2/FiraCode-Regular_latin.woff2\" as=\"font\" type=\"font/woff2\" crossorigin>\n        <link rel=\"preconnect dns-prefetch\" href=\"https://cdn.paddle.com\">\n    <link rel=\"preconnect dns-prefetch\" href=\"https://www.googletagmanager.com\">\n\n    <link rel=\"alternate\" href=\"https://refactoring.guru/design-patterns/flyweight\" hreflang=\"x-default\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/es/design-patterns/flyweight\" hreflang=\"es\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/fr/design-patterns/flyweight\" hreflang=\"fr\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/ja/design-patterns/flyweight\" hreflang=\"ja\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/ko/design-patterns/flyweight\" hreflang=\"ko\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/pl/design-patterns/flyweight\" hreflang=\"pl\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/pt-br/design-patterns/flyweight\" hreflang=\"pt-br\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/ru/design-patterns/flyweight\" hreflang=\"ru\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/uk/design-patterns/flyweight\" hreflang=\"uk\"/>\n    <link rel=\"alternate\" href=\"https://refactoringguru.cn/design-patterns/flyweight\" hreflang=\"zh\"/>\n\n    <meta name=\"description\" content=\"Flyweight is a structural design pattern that lets you fit more objects into the available amount of RAM by sharing common parts of state between multiple objects instead of keeping all of the data in each object.\">\n\n    <link rel=\"canonical\" href=\"https://refactoring.guru/design-patterns/flyweight\"/>\n\n    <link rel=\"icon\" type=\"image/x-icon\" href=\"/favicon.png\"/>\n\n        <meta property=\"fb:app_id\" content=\"666819623386327\"/>\n        <meta property=\"og:type\" content=\"website\"/>\n        <meta property=\"og:image\" content=\"https://refactoring.guru/images/refactoring/social/facebook-share-preview.png?id=dbf9e98269595be86eb668f365be6868\"/>\n    \n                    <link rel=\"stylesheet\" href=\"/css/public-packed.min.css?id=aaefab4da343b914b8dda9973604a9e8\">\n        <style type=\"text/css\">\n                    @font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_cyrillic-ext.woff2?1) format(\"woff2\");unicode-range:U+0460-052F,U+1C80-1C88,U+20B4,U+2DE0-2DFF,U+A640-A69F,U+FE2E-FE2F}@font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_cyrillic.woff2?1) format(\"woff2\");unicode-range:U+0400-045F,U+0490-0491,U+04B0-04B1,U+2116}@font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_latin-ext.woff2?1) format(\"woff2\");unicode-range:U+0100-024F,U+0259,U+1E00-1EFF,U+2020,U+20A0-20AB,U+20AD-20CF,U+2113,U+2C60-2C7F,U+A720-A7FF}@font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_latin.woff2?1) format(\"woff2\");unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}@font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_en.woff2?1) format(\"woff2\");unicode-range:U+0-FF,U+131,U+142,U+152,U+153,U+2BB,U+2BC,U+2C6,U+2DA,U+2DC,U+420,U+423,U+430,U+438-43A,U+43D,U+440,U+441,U+443,U+44C,U+457,U+2000-206F,U+2074,U+20AA-20AC,U+20B4,U+20B9,U+20BA,U+20BD,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_cyrillic-ext.woff2?1) format(\"woff2\");unicode-range:U+0460-052F,U+1C80-1C88,U+20B4,U+2DE0-2DFF,U+A640-A69F,U+FE2E-FE2F}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_cyrillic.woff2?1) format(\"woff2\");unicode-range:U+0400-045F,U+0490-0491,U+04B0-04B1,U+2116}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_latin-ext.woff2?1) format(\"woff2\");unicode-range:U+0100-024F,U+0259,U+1E00-1EFF,U+2020,U+20A0-20AB,U+20AD-20CF,U+2113,U+2C60-2C7F,U+A720-A7FF}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_latin.woff2?1) format(\"woff2\");unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_en.woff2?1) format(\"woff2\");unicode-range:U+0-FF,U+131,U+142,U+152,U+153,U+2BB,U+2BC,U+2C6,U+2DA,U+2DC,U+420,U+423,U+430,U+438-43A,U+43D,U+440,U+441,U+443,U+44C,U+457,U+2000-206F,U+2074,U+20AA-20AC,U+20B4,U+20B9,U+20BA,U+20BD,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}\n            </style>\n\n    \n            <script defer src=\"/js/public.min.js?id=1f19fe18ffe0fc844ede8a0f2ee64202\"></script>\n        <script defer src=\"/js/checkout.min.js?id=b4da9c5bd8b1cf504447c07ae8b7cd44\"></script>\n            <script defer src=\"https://cdn.paddle.com/paddle/v2/paddle.js\"></script>\n    <script async src=\"https://www.googletagmanager.com/gtag/js?id=G-SR8Y3GYQYC\"></script>\n\n    <script type=\"application/ld+json\">\n        {\"@context\": \"http://schema.org\", \"@graph\": [{\"@type\":\"Person\",\"@id\":\"https://refactoring.guru/#founder\",\"name\":\"Alexander Shvets\"},{\"@type\":\"Organization\",\"@id\":\"https://refactoring.guru/#organization\",\"name\":\"Refactoring.Guru\",\"description\":\"Refactoring.Guru makes it easy for you to discover everything you need to know about refactoring, design patterns, SOLID principles, and other smart programming topics.\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https://refactoring.guru/#organizationlogo\",\"url\":\"https://refactoring.guru/images/content-public/logos/logo-plain.png\",\"caption\":\"Refactoring.Guru\"},\"logo\":{\"@id\":\"https://refactoring.guru/#organizationlogo\"},\"founder\":{\"@id\":\"https://refactoring.guru/#founder\"},\"sameAs\":[\"https://www.facebook.com/refactoring.guru\",\"https://twitter.com/RefactoringGuru\",\"https://github.com/RefactoringGuru\"]},{\"@type\":\"WebSite\",\"@id\":\"https://refactoring.guru/#website\",\"url\":\"https://refactoring.guru/\",\"name\":\"Refactoring.Guru\",\"description\":\"Refactoring.Guru makes it easy for you to discover everything you need to know about refactoring, design patterns, SOLID principles, and other smart programming topics.\",\"author\":{\"@id\":\"https://refactoring.guru/#founder\"},\"publisher\":{\"@id\":\"https://refactoring.guru/#organization\"},\"copyrightYear\":2014},{\"@type\":\"WebPage\",\"@id\":\"https://refactoring.guru/design-patterns/flyweight#webpage\",\"url\":\"https://refactoring.guru/design-patterns/flyweight\",\"inLanguage\":\"en\",\"name\":\"Flyweight\",\"description\":\"Flyweight is a structural design pattern that lets you fit more objects into the available amount of RAM by sharing common parts of state between multiple objects instead of keeping all of the data in each object.\",\"isPartOf\":{\"@id\":\"https://refactoring.guru#website\"},\"breadcrumb\":{\"@id\":\"https://refactoring.guru/design-patterns/flyweight#breadcrumb\"},\"primaryImageOfPage\":{\"@id\":\"https://refactoring.guru/design-patterns/flyweight#primaryimage\"},\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https://refactoring.guru/design-patterns/flyweight#primaryimage\",\"url\":\"https://refactoring.guru/images/patterns/content/flyweight/flyweight-3x.png\",\"width\":1920,\"height\":1200}},{\"@type\":\"Article\",\"@id\":\"https://refactoring.guru/design-patterns/flyweight#article\",\"isPartOf\":{\"@id\":\"https://refactoring.guru/design-patterns/flyweight#webpage\"},\"mainEntityOfPage\":{\"@id\":\"https://refactoring.guru/design-patterns/flyweight#webpage\"},\"author\":{\"@id\":\"https://refactoring.guru#founder\"},\"publisher\":{\"@id\":\"https://refactoring.guru#organization\"},\"headline\":\"Flyweight\",\"datePublished\":\"2024-01-01\",\"dateModified\":\"2025-01-01\",\"articleSection\":\"Design Patterns\",\"image\":{\"@id\":\"https://refactoring.guru/design-patterns/flyweight#primaryimage\"}},{\"@type\":\"BreadcrumbList\",\"@id\":\"https://refactoring.guru/design-patterns/flyweight#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https://refactoring.guru\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Design Patterns\",\"item\":\"https://refactoring.guru/design-patterns\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"Structural Patterns\",\"item\":\"https://refactoring.guru/design-patterns/structural-patterns\"}]}] }\n    </script>\n\n    <script>\nfunction extend(){var extended={};var deep=false;var i=0;var length=arguments[\"length\"];if(Object[\"prototype\"][\"toString\"][\"call\"](arguments[0])=== '[object Boolean]'){deep= arguments[0];i++};var merge=function(obj){for(var prop in obj){if(Object[\"prototype\"][\"hasOwnProperty\"][\"call\"](obj,prop)){if(deep&& Object[\"prototype\"][\"toString\"][\"call\"](obj[prop])=== '[object Object]'){extended[prop]= extend(true,extended[prop],obj[prop])}else {extended[prop]= obj[prop]}}}};for(;i< length;i++){var obj=arguments[i];merge(obj)};return extended}\nfunction defer(method) {if (window.jQuery) {method();} else {setTimeout(function() { defer(method) }, 50);}}\n</script>\n<script>\n+function(sd){sd = (typeof sd === \"string\") ? JSON.parse(atob(sd)) : sd;for(var property in sd){if(window[property]!== null&&  typeof window[property]=== 'object'){window[property]= extend(true,window[property],sd[property])}else {window[property]= sd[property]}}}(\"eyJsb2NhbGUiOiJlbiIsImxvY2FsZV9wcmVmaXgiOiIiLCJsb2NhbGl6ZWRfdXJsX3ByZWZpeCI6Imh0dHBzOlwvXC9yZWZhY3RvcmluZy5ndXJ1XC8iLCJ1cmxfcHJlZml4IjoiaHR0cHM6XC9cL3JlZmFjdG9yaW5nLmd1cnVcLyIsImxvY2FsaXplZF91cmxfcHJlZml4X20iOiJodHRwczpcL1wvcmVmYWN0b3JpbmcuZ3VydVwvIiwidXJsX3ByZWZpeF9tIjoiaHR0cHM6XC9cL3JlZmFjdG9yaW5nLmd1cnVcLyIsInVzZXJfZWNob19hbGlhcyI6InJlZmFjdG9yaW5nIiwidXNlcl9lY2hvX2hvc3QiOiJmZWVkYmFjay5yZWZhY3RvcmluZy5ndXJ1IiwidXNlcl9lY2hvX3ByaXZhdGVfZm9ydW0iOiIyIiwidXNlcl9lY2hvX2xvY2FsZSI6ImVuIiwidXNlcl9lY2hvX3B1YmxpY19mb3J1bSI6IjMiLCJ1c2VyX2VjaG9fcHVibGljX2ZvcnVtX3VybCI6Imh0dHBzOlwvXC9mZWVkYmFjay5yZWZhY3RvcmluZy5ndXJ1XC8iLCJ1c2VyX2VjaG9fc3NvX3Rva2VuIjoiIn0=\");\n</script>\n\n<script>\n    window.dataLayer = window.dataLayer || [];\n    function gtag(){dataLayer.push(arguments);}\n    gtag('js', new Date());\n            gtag('set', 'linker', {'domains': [\"refactoring.guru,refactoringguru.cn\"]});\n        gtag('config', 'G-SR8Y3GYQYC', {\n        // Disable default page view, because we're going to report them on our own.\n        // This is done to report traffic on localized domains as part of the main website traffic\n        // See the Chinese overrides below.\n        send_page_view: false,\n    });\n</script>\n\n<script>\n    (() => {\n        // On first page view after returning from social network, we need to send the social login event.\n        (function detectSocialLogin() {\n            let getCookie = function (name) {\n                var nameEQ = name + \"=\";\n                var ca = document.cookie.split(';');\n                for (var i = 0; i < ca.length; i++) {\n                    var c = ca[i];\n                    while (c.charAt(0) == ' ') c = c.substring(1, c.length);\n                    if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);\n                }\n                return null;\n            };\n            window.social_login_provider = window.social_login_provider || getCookie('social_login_provider');\n            if (window.social_login_provider) {\n                gtag('set', {referrer: null});\n                gtag('event', 'login', {\"method\": window.social_login_provider});\n                // Delete cookie.\n                document.cookie = 'social_login_provider=; Path=/; Max-Age=-99999999;';\n            }\n        })();\n\n        function trackPageView(location, title) {\n            location = location || document.location.href;\n            title = title || document.title;\n\n            // This is show on https://refactoringguru.cn/ and alike.\n            if (typeof window.analytics_path_prefix === 'string') {\n                if (/^(https?:\\/\\/[^\\/]+?)\\/$/.test(location)) {\n                    location = location.replace(/(https?:\\/\\/[^\\/]+?)\\//, '$1' + window.analytics_path_prefix);\n                } else {\n                    location = location.replace(/(https?:\\/\\/[^\\/]+?)\\//, '$1' + window.analytics_path_prefix + '/');\n                }\n                gtag('set', {\n                    'page_location': location\n                });\n            }\n\n            // This is show on https://refactoring.guru/zh/login and alike.\n            if (typeof window.analytics_location_prefix === 'string') {\n                location = location.replace(/(https?:\\/\\/[^\\/]+?)\\//, window.analytics_location_prefix);\n                gtag('set', {\n                    'page_location': location\n                });\n            }\n\n            gtag('event', 'page_view', {\n                page_location: location,\n                page_title: title,\n                locale: window.locale ?? 'en'\n            });\n        }\n\n        if (window.loadContent) {\n            window.onPageLoad = window.onPageLoad || [];\n            window.onPageLoad.push({\n                func: function (context) {\n                    trackPageView(window.location.origin + context.canonicalPath, context.title);\n                },\n                afterAll: true,\n            });\n        }\n        else {\n            trackPageView();\n        }\n    })();\n</script>\n\n\n</head>\n<body class=\"locale-en   announcement   flyweight\" data-body_class=\"flyweight\">\n\n<div class=\"body-holder\">\n\n            <div class=\"announcement-block announcement-block-summer prom\" data-id=\"DIDP-announcement\" data-creative-id=\"en\" data-position=\"top\">\n        <span class=\"beach-and-sea\">\n            <span class=\"a1\"></span>\n            <span class=\"a2\"><span class=\"wave\"></span></span>\n            <span class=\"yacht\"></span>\n        </span>\n        <a href=\"/store\">\n            <img src=\"/images/content-public/ann/summer/sunbed.svg?id=b1e7314a63715a13870a6bd1a43613f7\" loading=\"lazy\" style=\"width: 32px; height:32px;vertical-align: middle; scale: -1 1 1;\">\n            <span class=\"announcement-link-text\">Summer SALE</span>\n            <img src=\"/images/content-public/ann/summer/reading-book.svg?id=36006ea720df8c171968cf613e8ea164\" loading=\"lazy\" style=\"width: 32px; height:32px;vertical-align: middle;\">\n        </a>\n    </div>\n\n    \n    <div class=\"cart-placeholder\">\n    <div class=\"cart-block-container\" style=\"display:none\">\n        <div class=\"cart-block btn-group\">\n            <a href=\"#checkout\" class=\"btn cart open-checkout\">\n                <span class=\"cart-text\"></span>&nbsp;<strong class=\"cart-total font-money\"></strong>\n            </a><a href=\"#checkout\" class=\"btn btn-secondary checkout open-checkout\"><i class=\"fa fa-shopping-cart\" aria-hidden=\"true\"></i> <span class=\"btn-text-span d-none d-sm-inline-block d-lg-none d-hg-inline-block\"></span></a>\n        </div>\n    </div>\n</div>\n    <main role=\"main\" class=\"main-content top-content center-content \" data-page_class=\"\">\n        <div class=\"main-content-container center-content-container\">\n                        <div class=\"pattern page text\">\n<article>\n    <div class=\"breadcrumb\">\n                                    <a class=\"home\" href=\"/\"><i class=\"fa fa-home\" aria-hidden=\"true\"></i></a>\n                                                / <a class=\"type\" href=\"/design-patterns\">Design Patterns</a>\n                                                / <a class=\"type\" href=\"/design-patterns/structural-patterns\">Structural Patterns</a>\n                        </div>\n    <h1 class=\"title\">Flyweight</h1>\n\n    <script type=\"text/javascript\">\n        // Shorten examples titles for users.\n        var h1 = document.getElementsByTagName(\"H1\")[0];\n        if (h1.offsetHeight > 160) {\n            h1.className += ' smaller';\n        }\n\n        // Small beautification for pattern examples.\n        var title = h1.innerHTML;\n        title = title.replace(/^(Java|C\\+\\+|C#|PHP|Python|Ruby|Delphi): (.*)$/, '<strong>$1:</strong> $2');\n        h1.innerHTML = title;\n    </script>\n\n            <div class=\"aka\">\n            Also known as: <span style=\"display:inline-block\">Cache</span>\n        </div>\n    \n    \n\n    <div class=\"section intent\">\n<h2 id=\"intent\"><i class=\"fa fa-flip-horizontal fa-comment-alt-dots\" aria-hidden=\"true\"></i> Intent</h2>\n<p><strong>Flyweight</strong> is a structural design pattern that lets you fit more objects into the available amount of RAM by sharing common parts of state between multiple objects instead of keeping all of the data in each object.</p>\n<figure class=\"image\"><img src=\"/images/patterns/content/flyweight/flyweight.png?id=e34fbacb847dd609b5e68aaf252c4db0\" alt=\"Flyweight design pattern\" srcset=\"/images/patterns/content/flyweight/flyweight.png?id=e34fbacb847dd609b5e68aaf252c4db0 640w,/images/patterns/content/flyweight/flyweight-1.5x.png?id=b32df2297473b8a7577e1900e57325ac 960w,/images/patterns/content/flyweight/flyweight-2x.png?id=6a8f17d9550c75c3d648a605c4d31b45 1280w\" sizes=\"(max-width: 720px) 100vw, 640px\" width=\"640\" style=\"aspect-ratio: 1.6;\" fetchpriority=\"high\" /></figure>\n</div>\n<div class=\"section problem\">\n<h2 id=\"problem\"><i class=\"fa fa-frown\" aria-hidden=\"true\"></i> Problem</h2>\n<p>To have some fun after long working hours, you decided to create a simple video game: players would be moving around a map and shooting each other. You chose to implement a realistic particle system and make it a distinctive feature of the game. Vast quantities of bullets, missiles, and shrapnel from explosions should fly all over the map and deliver a thrilling experience to the player.</p>\n<p>Upon its completion, you pushed the last commit, built the game and sent it to your friend for a test drive. Although the game was running flawlessly on your machine, your friend wasn’t able to play for long. On his computer, the game kept crashing after a few minutes of gameplay. After spending several hours digging through debug logs, you discovered that the game crashed because of an insufficient amount of RAM. It turned out that your friend’s rig was much less powerful than your own computer, and that’s why the problem emerged so quickly on his machine.</p>\n<p>The actual problem was related to your particle system. Each particle, such as a bullet, a missile or a piece of shrapnel was represented by a separate object containing plenty of data. At some point, when the carnage on a player’s screen reached its climax, newly created particles no longer fit into the remaining RAM, so the program crashed.</p>\n<figure class=\"image\"><img src=\"/images/patterns/diagrams/flyweight/problem-en.png?id=7cfc97e5bf1cb38274c93823447cf17e\" alt=\"Flyweight pattern problem\" srcset=\"/images/patterns/diagrams/flyweight/problem-en.png?id=7cfc97e5bf1cb38274c93823447cf17e 660w,/images/patterns/diagrams/flyweight/problem-en-1.5x.png?id=97ad1eeb398bf85ee032e63b8c30a2e0 990w,/images/patterns/diagrams/flyweight/problem-en-2x.png?id=80d8ed54c18cc72473045bbd398f9b43 1320w\" sizes=\"(max-width: 720px) 100vw, 640px\" width=\"660\" style=\"aspect-ratio: 2.54;\" loading=\"lazy\" /></figure>\n</div>\n<div class=\"section solution\">\n<h2 id=\"solution\"><i class=\"fa fa-smile-beam\" aria-hidden=\"true\"></i> Solution</h2>\n<p>On closer inspection of the <code>Particle</code> class, you may notice that the color and <abbr title=\"An image that represents the particle.\">sprite</abbr> fields consume a lot more memory than other fields. What’s worse is that these two fields store almost identical data across all particles. For example, all bullets have the same color and sprite.</p>\n<figure class=\"image\"><img src=\"/images/patterns/diagrams/flyweight/solution1-en.png?id=4b962ce51832e49a24f16f36be79ec45\" alt=\"Flyweight pattern solution\" srcset=\"/images/patterns/diagrams/flyweight/solution1-en.png?id=4b962ce51832e49a24f16f36be79ec45 640w,/images/patterns/diagrams/flyweight/solution1-en-1.5x.png?id=15865ee8e5a54f14ed3c2f72375e64df 960w,/images/patterns/diagrams/flyweight/solution1-en-2x.png?id=89d70cf5947b93412fe48750a398d8c3 1280w\" sizes=\"(max-width: 720px) 100vw, 640px\" width=\"640\" style=\"aspect-ratio: 2.06;\" loading=\"lazy\" /></figure>\n<p>Other parts of a particle’s state, such as coordinates, movement vector and speed, are unique to each particle. After all, the values of these fields change over time. This data represents the always changing context in which the particle exists, while the color and sprite remain constant for each particle.</p>\n<p>This constant data of an object is usually called the <em>intrinsic state</em>. It lives within the object; other objects can only read it, not change it. The rest of the object’s state, often altered “from the outside” by other objects, is called the <em>extrinsic state</em>.</p>\n<p>The Flyweight pattern suggests that you stop storing the extrinsic state inside the object. Instead, you should pass this state to specific methods which rely on it. Only the intrinsic state stays within the object, letting you reuse it in different contexts. As a result, you’d need fewer of these objects since they only differ in the intrinsic state, which has much fewer variations than the extrinsic.</p>\n<figure class=\"image\"><img src=\"/images/patterns/diagrams/flyweight/solution3-en.png?id=e861e35c1214c46ac7333a127462de68\" alt=\"Flyweight pattern solution\" srcset=\"/images/patterns/diagrams/flyweight/solution3-en.png?id=e861e35c1214c46ac7333a127462de68 424w,/images/patterns/diagrams/flyweight/solution3-en-1.5x.png?id=06b6c5eefd437b098360494bdd4a092f 636w,/images/patterns/diagrams/flyweight/solution3-en-2x.png?id=a8679f0aa03f6521dd206fcbc5ed9176 848w\" sizes=\"(max-width: 720px) 100vw, 424px\" width=\"424\" style=\"aspect-ratio: 0.76;\" loading=\"lazy\" /></figure>\n<p>Let’s return to our game. Assuming that we had extracted the extrinsic state from our particle class, only three different objects would suffice to represent all particles in the game: a bullet, a missile, and a piece of shrapnel. As you’ve probably guessed by now, an object that only stores the intrinsic state is called <abbr title=\"The term comes from boxing and stands for a fighter who weighs less than 51 kg (111 lbs).\">a flyweight</abbr>.</p>\n<h4>Extrinsic state storage</h4>\n<p>Where does the extrinsic state move to? Some class should still store it, right? In most cases, it gets moved to the container object, which aggregates objects before we apply the pattern.</p>\n<p>In our case, that’s the main <code>Game</code> object that stores all particles in the <code>particles</code> field. To move the extrinsic state into this class, you need to create several array fields for storing coordinates, vectors, and speed of each individual particle. But that’s not all. You need another array for storing references to a specific flyweight that represents a particle. These arrays must be in sync so that you can access all data of a particle using the same index.</p>\n<figure class=\"image\"><img src=\"/images/patterns/diagrams/flyweight/solution2-en.png?id=3e4154df627d99ecd099e07301f8eb81\" alt=\"Flyweight pattern solution\" srcset=\"/images/patterns/diagrams/flyweight/solution2-en.png?id=3e4154df627d99ecd099e07301f8eb81 640w,/images/patterns/diagrams/flyweight/solution2-en-1.5x.png?id=a439f0902d8a45e31fe68e6716919764 960w,/images/patterns/diagrams/flyweight/solution2-en-2x.png?id=64debda3b847213b134d303bd32613cb 1280w\" sizes=\"(max-width: 720px) 100vw, 640px\" width=\"640\" style=\"aspect-ratio: 1.94;\" loading=\"lazy\" /></figure>\n<p>A more elegant solution is to create a separate context class that would store the extrinsic state along with reference to the flyweight object. This approach would require having just a single array in the container class.</p>\n<p>Wait a second! Won’t we need to have as many of these contextual objects as we had at the very beginning? Technically, yes. But the thing is, these objects are much smaller than before. The most memory-consuming fields have been moved to just a few flyweight objects. Now, a thousand small contextual objects can reuse a single heavy flyweight object instead of storing a thousand copies of its data.</p>\n<h4>Flyweight and immutability</h4>\n<p>Since the same flyweight object can be used in different contexts, you have to make sure that its state can’t be modified. A flyweight should initialize its state just once, via constructor parameters. It shouldn’t expose any setters or public fields to other objects.</p>\n<h4>Flyweight factory</h4>\n<p>For more convenient access to various flyweights, you can create a factory method that manages a pool of existing flyweight objects. The method accepts the intrinsic state of the desired flyweight from a client, looks for an existing flyweight object matching this state, and returns it if it was found. If not, it creates a new flyweight and adds it to the pool.</p>\n<p>There are several options where this method could be placed. The most obvious place is a flyweight container. Alternatively, you could create a new factory class. Or you could make the factory method static and put it inside an actual flyweight class.</p>\n</div>\n<div class=\"section structure-container\">\n<h2 id=\"structure\"><i class=\"fa fa-sitemap\" aria-hidden=\"true\"></i> Structure</h2>\n<div class=\"structure\">\n<div class=\"struct-image1 struct-image\">\n<figure class=\"image\"><img class=\"structure-img-non-indexed d-none d-xl-block\" src=\"/images/patterns/diagrams/flyweight/structure.png?id=c1e7e1748f957a4792822f902bc1d420\" alt=\"Structure of the Flyweight design pattern\" srcset=\"/images/patterns/diagrams/flyweight/structure.png?id=c1e7e1748f957a4792822f902bc1d420 640w,/images/patterns/diagrams/flyweight/structure-1.5x.png?id=34cf08f6c2b09dcd1c521c7512cc52b6 960w,/images/patterns/diagrams/flyweight/structure-2x.png?id=a7c8347421bde16435fc90a706f5dd34 1280w\" sizes=\"(max-width: 720px) 100vw, 640px\" width=\"640\" style=\"aspect-ratio: 1.64;\" loading=\"lazy\" /><img class=\"structure-img-indexed d-xl-none\" src=\"/images/patterns/diagrams/flyweight/structure-indexed.png?id=aa490792baa26b04464dacbc1f4a19cd\" alt=\"Structure of the Flyweight design pattern\" srcset=\"/images/patterns/diagrams/flyweight/structure-indexed.png?id=aa490792baa26b04464dacbc1f4a19cd 630w,/images/patterns/diagrams/flyweight/structure-indexed-1.5x.png?id=b22a5eab6aacbbd03c66c34802b240ca 945w,/images/patterns/diagrams/flyweight/structure-indexed-2x.png?id=205e2f7d08b4ac0695f445a9db8989c4 1260w\" sizes=\"(max-width: 720px) 100vw, 630px\" width=\"630\" style=\"aspect-ratio: 1.54;\" loading=\"lazy\" /></figure>\n</div>\n<ol><li class=\"struct-li1\">\n<p>The Flyweight pattern is merely an optimization. Before applying it, make sure your program does have the RAM consumption problem related to having a massive number of similar objects in memory at the same time. Make sure that this problem can’t be solved in any other meaningful way.</p>\n</li>\n<li class=\"struct-li2\">\n<p>The <strong>Flyweight</strong> class contains the portion of the original object’s state that can be shared between multiple objects. The same flyweight object can be used in many different contexts. The state stored inside a flyweight is called <em>intrinsic.</em> The state passed to the flyweight’s methods is called <em>extrinsic.</em></p>\n</li>\n<li class=\"struct-li3\">\n<p>The <strong>Context</strong> class contains the extrinsic state, unique across all original objects. When a context is paired with one of the flyweight objects, it represents the full state of the original object.</p>\n</li>\n<li class=\"struct-li4\">\n<p>Usually, the behavior of the original object remains in the flyweight class. In this case, whoever calls a flyweight’s method must also pass appropriate bits of the extrinsic state into the method’s parameters. On the other hand, the behavior can be moved to the context class, which would use the linked flyweight merely as a data object.</p>\n</li>\n<li class=\"struct-li5\">\n<p>The <strong>Client</strong> calculates or stores the extrinsic state of flyweights. From the client’s perspective, a flyweight is a template object which can be configured at runtime by passing some contextual data into parameters of its methods.</p>\n</li>\n<li class=\"struct-li6\">\n<p>The <strong>Flyweight Factory</strong> manages a pool of existing flyweights. With the factory, clients don’t create flyweights directly. Instead, they call the factory, passing it bits of the intrinsic state of the desired flyweight. The factory looks over previously created flyweights and either returns an existing one that matches search criteria or creates a new one if nothing is found.</p>\n</li></ol>\n<style structure type=\"text/css\" >\n@media (min-width: 1200px) {\n.structure {\nmargin: 0;\nwidth: auto;\nheight: 740px;\n}\n\n.struct-image1 {\nleft: 210px;\ntop: 160px;\n}\n\n.struct-li1 {\nleft: 50px;\ntop: 10px;\nwidth: 400px;\n}\n\n.struct-li2 {\nleft: 0px;\ntop: 570px;\nwidth: 270px;\n}\n\n.struct-li3 {\nleft: 310px;\ntop: 570px;\nwidth: 190px;\n}\n\n.struct-li4 {\nleft: 540px;\ntop: 570px;\nwidth: 300px;\n}\n\n.struct-li5 {\nleft: 510px;\ntop: 10px;\nwidth: 350px;\n}\n\n.struct-li6 {\nleft: 0px;\ntop: 170px;\nwidth: 200px;\n}\n}\n\n</style>\n</div></div>\n<div class=\"section pseudocode\">\n<h2 id=\"pseudocode\"><i class=\"fa fa-hashtag\" aria-hidden=\"true\"></i> Pseudocode</h2>\n<p>In this example, the <strong>Flyweight</strong> pattern helps to reduce memory usage when rendering millions of tree objects on a canvas.</p>\n<figure class=\"image\"><img src=\"/images/patterns/diagrams/flyweight/example.png?id=0818d078c1a79f373e96397f37b7ee06\" alt=\"Flyweight pattern example\" srcset=\"/images/patterns/diagrams/flyweight/example.png?id=0818d078c1a79f373e96397f37b7ee06 540w,/images/patterns/diagrams/flyweight/example-1.5x.png?id=449fa5906e277c134870c07e33dd4b62 810w,/images/patterns/diagrams/flyweight/example-2x.png?id=9423640fe3688a64201389b6e7aa1f48 1080w\" sizes=\"(max-width: 720px) 100vw, 540px\" width=\"540\" style=\"aspect-ratio: 1.54;\" loading=\"lazy\" /></figure>\n<p>The pattern extracts the repeating intrinsic state from a main <code>Tree</code> class and moves it into the flyweight class <code>TreeType</code>.</p>\n<p>Now instead of storing the same data in multiple objects, it’s kept in just a few flyweight objects and linked to appropriate <code>Tree</code> objects which act as contexts. The client code creates new tree objects using the flyweight factory, which encapsulates the complexity of searching for the right object and reusing it if needed.</p>\n<figure class=\"code\">\n<pre class=\"code\" lang=\"pseudocode\">// The flyweight class contains a portion of the state of a\n// tree. These fields store values that are unique for each\n// particular tree. For instance, you won't find here the tree\n// coordinates. But the texture and colors shared between many\n// trees are here. Since this data is usually BIG, you'd waste a\n// lot of memory by keeping it in each tree object. Instead, we\n// can extract texture, color and other repeating data into a\n// separate object which lots of individual tree objects can\n// reference.\nclass TreeType is\n    field name\n    field color\n    field texture\n    constructor TreeType(name, color, texture) { ... }\n    method draw(canvas, x, y) is\n        // 1. Create a bitmap of a given type, color &amp; texture.\n        // 2. Draw the bitmap on the canvas at X and Y coords.\n\n// Flyweight factory decides whether to re-use existing\n// flyweight or to create a new object.\nclass TreeFactory is\n    static field treeTypes: collection of tree types\n    static method getTreeType(name, color, texture) is\n        type = treeTypes.find(name, color, texture)\n        if (type == null)\n            type = new TreeType(name, color, texture)\n            treeTypes.add(type)\n        return type\n\n// The contextual object contains the extrinsic part of the tree\n// state. An application can create billions of these since they\n// are pretty small: just two integer coordinates and one\n// reference field.\nclass Tree is\n    field x,y\n    field type: TreeType\n    constructor Tree(x, y, type) { ... }\n    method draw(canvas) is\n        type.draw(canvas, this.x, this.y)\n\n// The Tree and the Forest classes are the flyweight's clients.\n// You can merge them if you don't plan to develop the Tree\n// class any further.\nclass Forest is\n    field trees: collection of Trees\n\n    method plantTree(x, y, name, color, texture) is\n        type = TreeFactory.getTreeType(name, color, texture)\n        tree = new Tree(x, y, type)\n        trees.add(tree)\n\n    method draw(canvas) is\n        foreach (tree in trees) do\n            tree.draw(canvas)\n</pre>\n</figure>\n</div>\n<div class=\"section applicability-container\">\n<h2 id=\"applicability\"><i class=\"fa fa-lightbulb-on\" aria-hidden=\"true\"></i> Applicability</h2>\n<div class=\"applicability\">\n<div class=\"applicability-problem\">\n<p><i class=\"fa fa-fw fa-bug\" aria-hidden=\"true\"></i> Use the Flyweight pattern only when your program must support a huge number of objects which barely fit into available RAM.</p>\n</div><div class=\"applicability-solution\">\n<p><i class=\"fa fa-fw fa-bolt\" aria-hidden=\"true\"></i> The benefit of applying the pattern depends heavily on how and where it’s used. It’s most useful when:</p>\n<ul>\n<li>an application needs to spawn a huge number of similar objects</li>\n<li>this drains all available RAM on a target device</li>\n<li>the objects contain duplicate states which can be extracted and shared between multiple objects</li>\n</ul>\n</div>\n</div></div>\n<div class=\"section checklist\">\n<h2 id=\"checklist\"><i class=\"fa fa-clipboard-list-check\" aria-hidden=\"true\"></i> How to Implement</h2>\n<ol>\n<li>\n<p>Divide fields of a class that will become a flyweight into two parts:</p>\n<ul>\n<li>the intrinsic state: the fields that contain unchanging data duplicated across many objects</li>\n<li>the extrinsic state: the fields that contain contextual data unique to each object</li>\n</ul>\n</li>\n<li>\n<p>Leave the fields that represent the intrinsic state in the class, but make sure they’re immutable. They should take their initial values only inside the constructor.</p>\n</li>\n<li>\n<p>Go over methods that use fields of the extrinsic state. For each field used in the method, introduce a new parameter and use it instead of the field.</p>\n</li>\n<li>\n<p>Optionally, create a factory class to manage the pool of flyweights. It should check for an existing flyweight before creating a new one. Once the factory is in place, clients must only request flyweights through it. They should describe the desired flyweight by passing its intrinsic state to the factory.</p>\n</li>\n<li>\n<p>The client must store or calculate values of the extrinsic state (context) to be able to call methods of flyweight objects. For the sake of convenience, the extrinsic state along with the flyweight-referencing field may be moved to a separate context class.</p>\n</li>\n</ol>\n</div>\n<div class=\"section pros-cons\">\n<h2 id=\"pros-cons\"><i class=\"fa fa-balance-scale\" aria-hidden=\"true\"></i> Pros and Cons</h2>\n<div class=\"row\"><div class=\"col-sm-6\">\n<ul>\n<li><i class=\"fa fa-fw fa-check\" aria-hidden=\"true\"></i> You can save lots of RAM, assuming your program has tons of similar objects.</li>\n</ul>\n</div><div class=\"col-sm-6\">\n<ul>\n<li><i class=\"fa fa-fw fa-times\" aria-hidden=\"true\"></i> You might be trading RAM over CPU cycles when some of the context data needs to be recalculated each time somebody calls a flyweight method.</li>\n<li><i class=\"fa fa-fw fa-times\" aria-hidden=\"true\"></i> The code becomes much more complicated. New team members will always be wondering why the state of an entity was separated in such a way.</li>\n</ul>\n</div></div></div>\n<div class=\"section relations\">\n<h2 id=\"relations\"><i class=\"fa fa-exchange-alt\" aria-hidden=\"true\"></i> Relations with Other Patterns</h2>\n<ul>\n<li>\n<p>You can implement shared leaf nodes of the <a href=\"/design-patterns/composite\">Composite</a> tree as <a href=\"/design-patterns/flyweight\">Flyweights</a> to save some RAM.</p>\n</li>\n<li>\n<p><a href=\"/design-patterns/flyweight\">Flyweight</a> shows how to make lots of little objects, whereas <a href=\"/design-patterns/facade\">Facade</a> shows how to make a single object that represents an entire subsystem.</p>\n</li>\n<li>\n<p><a href=\"/design-patterns/flyweight\">Flyweight</a> would resemble <a href=\"/design-patterns/singleton\">Singleton</a> if you somehow managed to reduce all shared states of the objects to just one flyweight object. But there are two fundamental differences between these patterns:</p>\n<ol>\n<li>There should be only one Singleton instance, whereas a <em>Flyweight</em> class can have multiple instances with different intrinsic states.</li>\n<li>The <em>Singleton</em> object can be mutable. Flyweight objects are immutable.</li>\n</ol>\n</li>\n</ul>\n</div>\n<div class=\"section implementations\">\n<h2 id=\"implementations\"><i class=\"fa fa-code\" aria-hidden=\"true\"></i> Code Examples</h2>\n<p><a href=\"/design-patterns/flyweight/csharp/example\" title=\"Flyweight in C#\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/csharp.svg?id=da64592defc6e86d57c39c66e9de3e58\" alt=\"Flyweight in C#\" /></a>\n<a href=\"/design-patterns/flyweight/cpp/example\" title=\"Flyweight in C++\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/cpp.svg?id=f7782ed8b8666246bfcc3f8fefc3b858\" alt=\"Flyweight in C++\" /></a>\n<a href=\"/design-patterns/flyweight/go/example\" title=\"Flyweight in Go\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/go.svg?id=1a89927eb99b1ea3fde7701d97970aca\" alt=\"Flyweight in Go\" /></a>\n<a href=\"/design-patterns/flyweight/java/example\" title=\"Flyweight in Java\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/java.svg?id=e6d87e2dca08c953fe3acd1275ed4f4e\" alt=\"Flyweight in Java\" /></a>\n<a href=\"/design-patterns/flyweight/php/example\" title=\"Flyweight in PHP\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/php.svg?id=be1906eb26b71ec1d3b93720d6156618\" alt=\"Flyweight in PHP\" /></a>\n<a href=\"/design-patterns/flyweight/python/example\" title=\"Flyweight in Python\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/python.svg?id=6d815d43c0f7050a1151b43e51569c9f\" alt=\"Flyweight in Python\" /></a>\n<a href=\"/design-patterns/flyweight/ruby/example\" title=\"Flyweight in Ruby\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/ruby.svg?id=b065b718c914bf8e960ef731600be1eb\" alt=\"Flyweight in Ruby\" /></a>\n<a href=\"/design-patterns/flyweight/rust/example\" title=\"Flyweight in Rust\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/rust.svg?id=1f5698a4b5ae23fe79413511747e4a87\" alt=\"Flyweight in Rust\" /></a>\n<a href=\"/design-patterns/flyweight/swift/example\" title=\"Flyweight in Swift\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/swift.svg?id=0b716c2d52ec3a48fbe91ac031070c1d\" alt=\"Flyweight in Swift\" /></a>\n<a href=\"/design-patterns/flyweight/typescript/example\" title=\"Flyweight in TypeScript\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/typescript.svg?id=2239d0f16cb703540c205dd8cb0c0cb7\" alt=\"Flyweight in TypeScript\" /></a></p>\n</div>\n\n\n    <div class=\"banner-set2\" id=\"book-promo\">\n            <div class=\"prom banner-content banner-bg banner-striped banner-with-image\" data-id=\"DP: 1: Support our free website and own the eBook!\" data-creative-id=\"standard-en\" data-position=\"content_bottom\">\n                <div class=\"banner-image\">\n                    <a href=\"/design-patterns/book\">\n                        <img width=\"200\" height=\"200\" loading=\"lazy\" src=\"/images/patterns/banners/patterns-book-banner-3.png?id=7d445df13c80287beaab234b4f3b698c\" srcset=\"/images/patterns/banners/patterns-book-banner-3-2x.png?id=0cc3f77ab421d1a5c02ee46488231c3a 2x\">\n                    </a>\n                </div>\n\n                <div class=\"banner-text\">\n                    <h3 class=\"title\">Support our free website and own the eBook!</h3>\n                    <ul style=\"font-size: 14px;\">\n                        <li style=\"margin: 0;\">22 design patterns and 8 principles explained in depth.</li>\n                        <li style=\"margin: 0;\">409 well-structured, easy to read, jargon-free pages.</li>\n                        <li style=\"margin: 0;\">225 clear and helpful illustrations and diagrams.</li>\n                        <li style=\"margin: 0;\">An archive with code examples in 11 languages.</li>\n                        <li style=\"margin: 0;\">All devices supported: PDF/EPUB/MOBI/KFX formats.</li>\n                    </ul>\n                    <a class=\"btn btn-secondary\" href=\"/design-patterns/book\"><i class=\"fa fa-book\" aria-hidden=\"true\"></i> Learn more…</a>\n                </div>\n            </div>\n        </div>\n\n    </article>\n\n<nav class=\"prev-next\">\n                    <div class=\"next\">\n                <h4>Read next</h4>\n                <a rel=\"next\" href=\"/design-patterns/proxy\" class=\"btn btn-primary\">Proxy&nbsp;<span class=\"fa fa-arrow-right\"></span></a>\n            </div>\n                            <div class=\"prev\">\n                <h4>Return</h4>\n                <a rel=\"prev\" href=\"/design-patterns/facade\" class=\"btn btn-default\"><span class=\"fa fa-arrow-left\"></span>&nbsp;Facade </a>\n            </div>\n            </nav>\n</div>\n\n<aside class=\"feature content-secondary\">\n    <div class=\"prom banner-sidebar banner-removable banner-removable-patterns\" data-id=\"DP: Sidebar\" data-creative-id=\"standard-sidebar-en\" data-position=\"sidebar\">\n        <div class=\"banner-inner\">\n            <div class=\"image3d-book-right\">\n                <div class=\"image3d-cover\" style=\"background: #0b3752;\">\n                    <a href=\"/design-patterns/book\">\n                        <img width=\"250\" height=\"375\" loading=\"lazy\" src=\"/images/patterns/book/web-cover-en.png?id=328861769fd11617674e3b8a7e2dd9e7\" srcset=\"/images/patterns/book/web-cover-en-2x.png?id=02940141c5652ed5a426d87390b16366 2x\">\n                    </a>\n                </div>\n            </div>\n            <div style=\"margin-top: 1rem\">\n                <p class=\"text-center\" >This article is a part of our eBook<br/><strong>Dive Into Design Patterns</strong>.</p>\n                <a href=\"/design-patterns/book\" class=\"btn btn-secondary btn-block\"><i class=\"fa fa-book\" aria-hidden=\"true\"></i> Learn more…</a>\n            </div>\n        </div>\n    </div>\n\n\n</aside>\n                    </div>\n    </main>\n\n    <aside class=\"sidebar main-menu\">\n    <div class=\"main-menu-controls\">\n        <button class=\"navigation-toggle\"><i class=\"fa fa-fw fa-times\"></i></button>\n    </div>\n    <div class=\"main-menu-list-wrapper nano\">\n        <div class=\"main-menu-list nano-content\">\n            <a class=\"menu-brand\" href=\"/\">\n                                    <img width=200 height=241 loading=\"lazy\" alt=\"Refactoring.Guru\" src=\"/images/content-public/logos/logo-new.png?id=97d554614702483f31e38b32e82d8e34\" srcset=\"/images/content-public/logos/logo-new-2x.png?id=3bc33294e095bab1d6fe9ae421d07837 2x\">\n                            </a>\n\n            <div class=\"menu-container\" style=\"position: relative\">\n                                <ul class=\"menu-list trail\">\n                            <li class=\"featured\">\n            <a href=\"/store\">\n                <i class=\"fa fa-fw fa-star\" aria-hidden=\"true\"></i> Premium Content\n            </a>\n    \n            <ul >\n                            <li class=\"featured menu-fs15\">\n            <a href=\"/design-patterns/book\">\n                <i class=\"fa fa-fw fa-book\" aria-hidden=\"true\"></i> Design Patterns eBook\n            </a>\n    \n    \n            </li>\n                                <li class=\"featured menu-fs15\">\n            <a href=\"/refactoring/course\">\n                <i class=\"fa fa-fw fa-graduation-cap\" aria-hidden=\"true\"></i> Refactoring Course\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring\">\n                <i class=\"fa fa-fw fa-scissors\" aria-hidden=\"true\"></i> Refactoring\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/refactoring/what-is-refactoring\">\n                What is Refactoring\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/refactoring/what-is-refactoring\">\n                Clean code\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/technical-debt\">\n                Technical debt\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/when\">\n                When to refactor\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/how-to\">\n                How to refactor\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/catalog\">\n                Catalog\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells\">\n                Code Smells\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/refactoring/smells/bloaters\">\n                Bloaters\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/long-method\">\n                Long Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/large-class\">\n                Large Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/primitive-obsession\">\n                Primitive Obsession\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/long-parameter-list\">\n                Long Parameter List\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/data-clumps\">\n                Data Clumps\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/oo-abusers\">\n                Object-Orientation Abusers\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/switch-statements\">\n                Switch Statements\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/temporary-field\">\n                Temporary Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/refused-bequest\">\n                Refused Bequest\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/alternative-classes-with-different-interfaces\">\n                Alternative Classes with Different Interfaces\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/change-preventers\">\n                Change Preventers\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/divergent-change\">\n                Divergent Change\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/shotgun-surgery\">\n                Shotgun Surgery\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/parallel-inheritance-hierarchies\">\n                Parallel Inheritance Hierarchies\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/dispensables\">\n                Dispensables\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/comments\">\n                Comments\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/duplicate-code\">\n                Duplicate Code\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/lazy-class\">\n                Lazy Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/data-class\">\n                Data Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/dead-code\">\n                Dead Code\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/speculative-generality\">\n                Speculative Generality\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/couplers\">\n                Couplers\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/feature-envy\">\n                Feature Envy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/inappropriate-intimacy\">\n                Inappropriate Intimacy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/message-chains\">\n                Message Chains\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/middle-man\">\n                Middle Man\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/other\">\n                Other Smells\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/incomplete-library-class\">\n                Incomplete Library Class\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques\">\n                Refactorings\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/refactoring/techniques/composing-methods\">\n                Composing Methods\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/extract-method\">\n                Extract Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/inline-method\">\n                Inline Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-variable\">\n                Extract Variable\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/inline-temp\">\n                Inline Temp\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-temp-with-query\">\n                Replace Temp with Query\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/split-temporary-variable\">\n                Split Temporary Variable\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-assignments-to-parameters\">\n                Remove Assignments to Parameters\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-method-with-method-object\">\n                Replace Method with Method Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/substitute-algorithm\">\n                Substitute Algorithm\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/moving-features-between-objects\">\n                Moving Features between Objects\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/move-method\">\n                Move Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/move-field\">\n                Move Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-class\">\n                Extract Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/inline-class\">\n                Inline Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/hide-delegate\">\n                Hide Delegate\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-middle-man\">\n                Remove Middle Man\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-foreign-method\">\n                Introduce Foreign Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-local-extension\">\n                Introduce Local Extension\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/organizing-data\">\n                Organizing Data\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/self-encapsulate-field\">\n                Self Encapsulate Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-data-value-with-object\">\n                Replace Data Value with Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/change-value-to-reference\">\n                Change Value to Reference\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/change-reference-to-value\">\n                Change Reference to Value\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-array-with-object\">\n                Replace Array with Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/duplicate-observed-data\">\n                Duplicate Observed Data\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/change-unidirectional-association-to-bidirectional\">\n                Change Unidirectional Association to Bidirectional\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/change-bidirectional-association-to-unidirectional\">\n                Change Bidirectional Association to Unidirectional\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-magic-number-with-symbolic-constant\">\n                Replace Magic Number with Symbolic Constant\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/encapsulate-field\">\n                Encapsulate Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/encapsulate-collection\">\n                Encapsulate Collection\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-type-code-with-class\">\n                Replace Type Code with Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-type-code-with-subclasses\">\n                Replace Type Code with Subclasses\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-type-code-with-state-strategy\">\n                Replace Type Code with State/Strategy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-subclass-with-fields\">\n                Replace Subclass with Fields\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/simplifying-conditional-expressions\">\n                Simplifying Conditional Expressions\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/decompose-conditional\">\n                Decompose Conditional\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/consolidate-conditional-expression\">\n                Consolidate Conditional Expression\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/consolidate-duplicate-conditional-fragments\">\n                Consolidate Duplicate Conditional Fragments\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-control-flag\">\n                Remove Control Flag\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-nested-conditional-with-guard-clauses\">\n                Replace Nested Conditional with Guard Clauses\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-conditional-with-polymorphism\">\n                Replace Conditional with Polymorphism\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-null-object\">\n                Introduce Null Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-assertion\">\n                Introduce Assertion\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/simplifying-method-calls\">\n                Simplifying Method Calls\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/rename-method\">\n                Rename Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/add-parameter\">\n                Add Parameter\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-parameter\">\n                Remove Parameter\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/separate-query-from-modifier\">\n                Separate Query from Modifier\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/parameterize-method\">\n                Parameterize Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-parameter-with-explicit-methods\">\n                Replace Parameter with Explicit Methods\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/preserve-whole-object\">\n                Preserve Whole Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-parameter-with-method-call\">\n                Replace Parameter with Method Call\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-parameter-object\">\n                Introduce Parameter Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-setting-method\">\n                Remove Setting Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/hide-method\">\n                Hide Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-constructor-with-factory-method\">\n                Replace Constructor with Factory Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-error-code-with-exception\">\n                Replace Error Code with Exception\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-exception-with-test\">\n                Replace Exception with Test\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/dealing-with-generalization\">\n                Dealing with Generalization\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/pull-up-field\">\n                Pull Up Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/pull-up-method\">\n                Pull Up Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/pull-up-constructor-body\">\n                Pull Up Constructor Body\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/push-down-method\">\n                Push Down Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/push-down-field\">\n                Push Down Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-subclass\">\n                Extract Subclass\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-superclass\">\n                Extract Superclass\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-interface\">\n                Extract Interface\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/collapse-hierarchy\">\n                Collapse Hierarchy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/form-template-method\">\n                Form Template Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-inheritance-with-delegation\">\n                Replace Inheritance with Delegation\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-delegation-with-inheritance\">\n                Replace Delegation with Inheritance\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"trail\">\n            <a href=\"/design-patterns\">\n                <i class=\"fa fa-fw fa-puzzle-piece\" aria-hidden=\"true\"></i> Design Patterns\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/what-is-pattern\">\n                What is a Pattern\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/what-is-pattern\">\n                What's a design pattern?\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/history\">\n                History of patterns\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/why-learn-patterns\">\n                Why should I learn patterns?\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/criticism\">\n                Criticism of patterns\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/classification\">\n                Classification of patterns\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/catalog\">\n                Catalog\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-third-level\">\n            <a href=\"/design-patterns/creational-patterns\">\n                Creational Patterns\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/factory-method\">\n                Factory Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/abstract-factory\">\n                Abstract Factory\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/builder\">\n                Builder\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/prototype\">\n                Prototype\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/singleton\">\n                Singleton\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"menu-third-level trail\">\n            <a href=\"/design-patterns/structural-patterns\">\n                Structural Patterns\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/adapter\">\n                Adapter\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/bridge\">\n                Bridge\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/composite\">\n                Composite\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/decorator\">\n                Decorator\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/facade\">\n                Facade\n            </a>\n    \n    \n            </li>\n                                <li class=\"trail active\">\n            <a href=\"/design-patterns/flyweight\">\n                Flyweight\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/proxy\">\n                Proxy\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"menu-third-level\">\n            <a href=\"/design-patterns/behavioral-patterns\">\n                Behavioral Patterns\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/chain-of-responsibility\">\n                Chain of Responsibility\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/command\">\n                Command\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/iterator\">\n                Iterator\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/mediator\">\n                Mediator\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/memento\">\n                Memento\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/observer\">\n                Observer\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/state\">\n                State\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/strategy\">\n                Strategy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/template-method\">\n                Template Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/visitor\">\n                Visitor\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"menu-code-examples\">\n            <a href=\"/design-patterns/examples\">\n                Code Examples\n            </a>\n    \n            <ul >\n                            <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/csharp\">\n                C#\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/cpp\">\n                C++\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/go\">\n                Go\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/java\">\n                Java\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/php\">\n                PHP\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/python\">\n                Python\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/ruby\">\n                Ruby\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/rust\">\n                Rust\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/swift\">\n                Swift\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/typescript\">\n                TypeScript\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n                </div>\n\n            <div class=\"main-menu-aux-controls\">\n                <a href=\"https://refactoring.guru/login\" title=\"Sign in\" style=\" display: inline-flex; align-items: center; gap: 6px; \"><svg style=\"width: 16px; height: 16px; filter:drop-shadow(0 1px 1px #74261e)\" class=\"inline-block mx-0\"  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\"opacity=\"0.4\" d=\"M352.7 222.4c3.2 1 6.5 1.6 10 1.6l21.3 0c17.7 0 32 14.3 32 32s-14.3 32-32 32l-21.3 0c-.8 0-1.7 0-2.5 0c-.9 0-1.7-.1-2.5-.1c-1.7-.1-3.4-.2-5-.4C357.4 414 391.1 512 432 512c44.2 0 80-114.6 80-256S476.2 0 432 0c-40.6 0-74.2 96.9-79.3 222.4z\"/><path fill=\"currentColor\"class=\"fa-primary\" d=\"M320 48a48 48 0 1 0 -96 0 48 48 0 1 0 96 0zM125.7 175.5c9.9-9.9 23.4-15.5 37.5-15.5c1.9 0 3.8 .1 5.6 .3L137.6 254c-9.3 28 1.7 58.8 26.8 74.5l86.2 53.9-25.4 88.8c-4.9 17 5 34.7 22 39.6s34.7-5 39.6-22l28.7-100.4c5.9-20.6-2.6-42.6-20.7-53.9L238 299l30.9-82.4 5.1 12.3C289 264.7 323.9 288 362.7 288l21.3 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-21.3 0c-12.9 0-24.6-7.8-29.5-19.7l-6.3-15c-14.6-35.1-44.1-61.9-80.5-73.1l-48.7-15c-11.1-3.4-22.7-5.2-34.4-5.2c-31 0-60.8 12.3-82.7 34.3L57.4 153.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l23.1-23.1zM91.2 352L32 352c-17.7 0-32 14.3-32 32s14.3 32 32 32l69.6 0c19 0 36.2-11.2 43.9-28.5L157 361.6l-9.5-6c-17.5-10.9-30.5-26.8-37.9-44.9L91.2 352z\"/></svg> Sign in</a>\n                <a href=\"https://feedback.refactoring.guru/\" class=\"userecho-public\" rel=\"nofollow\" title=\"Contact us\"><i class=\"fa fa-fw fa-fw fa-envelope\" aria-hidden=\"true\"></i> Contact us</a>\n            </div>\n        </div>\n    </div>\n</aside>\n\n    <nav class=\"navigation\" role=\"navigation\">\n    <div class=\"navigation-container\">\n        <a class=\"navigation-brand\" href=\"/\">\n            <img alt=\"Refactoring.Guru\"\n                 src=\"/images/content-public/logos/logo-new-mobile.png?id=ea18aa9b032eaa92835ed6d472b03b4a\"\n                 srcset=\"/images/content-public/logos/logo-new-mobile-2x.png?id=7ad5648bfd86ae2e8524147a72877c64 2x\">\n        </a>\n\n        <div class=\"shop-link d-none d-lg-block\" style=\"display: none !important;\">\n            <a class=\"btn btn-md btn-primary btn-featured\" href=\"/store\"><svg style=\"width: 28px; height: 28px; fill: currentColor; display: inline-block; margin-top: -14px;\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><!--! Font Awesome Pro 6.3.0 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2023 Fonticons, Inc. --><path d=\"M356 60l60 20-60 20-20 60-20-60L256 80l60-20L336 0l20 60zM464 208l48 16-48 16-16 48-16-48-48-16 48-16 16-48 16 48zm-243.8-9.8l33 66.9 73.8 10.7 59.8 8.7-43.3 42.2-53.4 52.1 12.6 73.5L313 512l-53.5-28.1-66-34.7-66 34.7L73.9 512l10.2-59.6 12.6-73.5L43.3 326.8 0 284.6l59.8-8.7 73.8-10.7 33-66.9L193.5 144l26.8 54.2zm26.1 114.4l-25-3.6-11.2-22.6-16.7-33.9-16.7 33.9L165.6 309l-25 3.6-37.4 5.4 27.1 26.4 18.1 17.6L144 387l-6.4 37.3 33.5-17.6 22.3-11.7 22.3 11.7 33.5 17.6L242.9 387l-4.3-24.9 18.1-17.6 27.1-26.4-37.4-5.4z\"/></svg>\n                Shop Now!</a>\n        </div>\n\n        <ul class=\"navigation-menu\">\n                            <li class=\"nav-locale dropdown dropdown-locales\">\n                    <button class=\"dropdown-toggle\" id=\"dropdownLanguage\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                        <i class=\"fa fa-fw fa-globe\" aria-hidden=\"true\"></i> <span class=\"caption d-none d-lg-inline-block\">English</span>\n                    </button>\n                    <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownLanguage\">\n                                                                                                                        <a href=\"https://refactoring.guru/design-patterns/flyweight\" class=\"dropdown-item locale-link active\" data-locale=\"en\" title=\"English\">English</a>\n                                                                                                                                <a href=\"https://refactoring.guru/es/design-patterns/flyweight\" class=\"dropdown-item locale-link \" data-locale=\"es\" title=\"Español\">Español</a>\n                                                                                                                                <a href=\"https://refactoring.guru/fr/design-patterns/flyweight\" class=\"dropdown-item locale-link \" data-locale=\"fr\" title=\"Français\">Français</a>\n                                                                                                                                <a href=\"https://refactoring.guru/ja/design-patterns/flyweight\" class=\"dropdown-item locale-link \" data-locale=\"ja\" title=\"日本語\">日本語</a>\n                                                                                                                                <a href=\"https://refactoring.guru/ko/design-patterns/flyweight\" class=\"dropdown-item locale-link \" data-locale=\"ko\" title=\"한국어\">한국어</a>\n                                                                                                                                <a href=\"https://refactoring.guru/pl/design-patterns/flyweight\" class=\"dropdown-item locale-link \" data-locale=\"pl\" title=\"Polski\">Polski</a>\n                                                                                                                                <a href=\"https://refactoring.guru/pt-br/design-patterns/flyweight\" class=\"dropdown-item locale-link \" data-locale=\"pt-br\" title=\"Português Brasileiro\">Português Brasileiro</a>\n                                                                                                                                <a href=\"https://refactoring.guru/ru/design-patterns/flyweight\" class=\"dropdown-item locale-link \" data-locale=\"ru\" title=\"Русский\">Русский</a>\n                                                                                                                                <a href=\"https://refactoring.guru/uk/design-patterns/flyweight\" class=\"dropdown-item locale-link \" data-locale=\"uk\" title=\"Українська\">Українська</a>\n                                                                                                                                <a href=\"https://refactoringguru.cn/design-patterns/flyweight\" class=\"dropdown-item locale-link \" data-locale=\"zh\" title=\"中文\">中文</a>\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        </div>\n                </li>\n                        <li class=\"nav-contacts\">\n                <a class=\"userecho-private\" href=\"https://feedback.refactoring.guru/?show_feedback_form_private=true\" rel=\"nofollow\" title=\"Contact us\">\n                    <i class=\"fa fa-fw fa-envelope\" aria-hidden=\"true\"></i> <span class=\"caption d-none d-xl-inline-block\">Contact us</span>\n                </a>\n            </li>\n                            <li class=\"nav-user\">\n                    <a href=\"https://refactoring.guru/login\" title=\"Sign in\"><span class=\"sign-in-icon\"><svg style=\"width: 24px; height: 24px; \" class=\"inline-block \"  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\"opacity=\"0.4\" d=\"M352.7 222.4c3.2 1 6.5 1.6 10 1.6l21.3 0c17.7 0 32 14.3 32 32s-14.3 32-32 32l-21.3 0c-.8 0-1.7 0-2.5 0c-.9 0-1.7-.1-2.5-.1c-1.7-.1-3.4-.2-5-.4C357.4 414 391.1 512 432 512c44.2 0 80-114.6 80-256S476.2 0 432 0c-40.6 0-74.2 96.9-79.3 222.4z\"/><path fill=\"currentColor\"class=\"fa-primary\" d=\"M320 48a48 48 0 1 0 -96 0 48 48 0 1 0 96 0zM125.7 175.5c9.9-9.9 23.4-15.5 37.5-15.5c1.9 0 3.8 .1 5.6 .3L137.6 254c-9.3 28 1.7 58.8 26.8 74.5l86.2 53.9-25.4 88.8c-4.9 17 5 34.7 22 39.6s34.7-5 39.6-22l28.7-100.4c5.9-20.6-2.6-42.6-20.7-53.9L238 299l30.9-82.4 5.1 12.3C289 264.7 323.9 288 362.7 288l21.3 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-21.3 0c-12.9 0-24.6-7.8-29.5-19.7l-6.3-15c-14.6-35.1-44.1-61.9-80.5-73.1l-48.7-15c-11.1-3.4-22.7-5.2-34.4-5.2c-31 0-60.8 12.3-82.7 34.3L57.4 153.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l23.1-23.1zM91.2 352L32 352c-17.7 0-32 14.3-32 32s14.3 32 32 32l69.6 0c19 0 36.2-11.2 43.9-28.5L157 361.6l-9.5-6c-17.5-10.9-30.5-26.8-37.9-44.9L91.2 352z\"/></svg></span> <span class=\"account-icon\" style=\"display:none\"><svg style=\"width: 24px; height: 24px; \" class=\"inline-block \"  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 576 512\"><path fill=\"currentColor\"opacity=\"0.4\" d=\"M64 270.5l224-196c74.7 65.4 149.4 130.7 224.1 196.1l.4 177.3c.1 35.4-28.6 64.1-64 64.1l-320.4 0c-35.3 0-64-28.6-64-64L64 270.5zM176.1 433.6c.1 .5 .1 1.1 .2 1.6c.2 1 .5 2 .9 3c.8 1.9 2 3.6 3.4 5.1c2.9 2.9 6.9 4.7 11.3 4.7l192 0c8.8 0 16-7.2 16-16c0-44.2-35.8-80-80-80l-64 0c-22.1 0-42.1 9-56.6 23.4c-7.2 7.2-13.1 15.9-17.1 25.4c-2 4.8-3.6 9.8-4.7 15c-.5 2.6-.9 5.3-1.2 7.9c-.1 1.3-.2 2.7-.3 4.1c-.1 1.4-.1 2.7-.1 4.1c0 .6 0 1.1 .1 1.6zm48.2-184.2c-.1 1.1-.2 2.2-.2 3.2c-.1 1.1-.1 2.2-.1 3.3s0 2.2 .1 3.3c.1 1.1 .1 2.2 .2 3.2c.2 2.1 .5 4.3 1 6.4c.9 4.2 2.1 8.2 3.7 12c3.2 7.7 7.9 14.6 13.7 20.3C254.3 312.8 270.3 320 288 320c35.3 0 64-28.7 64-64s-28.7-64-64-64c-17.7 0-33.7 7.2-45.3 18.7c-5.8 5.8-10.5 12.7-13.7 20.3c-1.6 3.8-2.9 7.8-3.7 12c-.4 2.1-.8 4.2-1 6.4z\"/><path fill=\"currentColor\"class=\"fa-primary\" d=\"M309.1 7.9C297-2.6 279-2.6 266.9 7.9l-256 224c-13.3 11.6-14.6 31.9-3 45.2s31.9 14.6 45.2 3L288 74.5 522.9 280.1c13.3 11.6 33.5 10.3 45.2-3s10.3-33.5-3-45.2L512 185.5 512 64c0-17.7-14.3-32-32-32l-32 0c-17.7 0-32 14.3-32 32l0 37.5L309.1 7.9zM352 256a64 64 0 1 0 -128 0 64 64 0 1 0 128 0zm-96 96c-44.2 0-80 35.8-80 80c0 8.8 7.2 16 16 16l192 0c8.8 0 16-7.2 16-16c0-44.2-35.8-80-80-80l-64 0z\"/></svg></span> <span class=\"sign-out-icon\" style=\"display:none\"><svg style=\"width: 24px; height: 24px; \" class=\"inline-block \"  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\"opacity=\"0.4\" d=\"M0 256C0 397.4 35.8 512 80 512c25.3 0 47.8-37.5 62.5-96L128 416c-.5 0-1.1 0-1.6 0c-.6 0-1.1-.1-1.6-.1c-1.1-.1-2.1-.3-3.2-.5c-2.1-.4-4.1-1.1-6-1.9c-3.8-1.6-7.3-4-10.2-6.9s-5.2-6.3-6.9-10.2c-.8-1.9-1.4-3.9-1.9-6c-.2-1.1-.4-2.3-.5-3.5c0-.3 0-.6-.1-.8c0-.2 0-.4 0-.7c0-.4 0-.7 0-.7c0-.5 0-.7 0-.9c0-.3 0-.6 0-.9c0 0 0-.3 0-.7c0-.2 0-.4 0-.7c0-.2 0-.4 .1-.8c0-.3 .1-.6 .1-.9c0-.2 .1-.4 .1-.7c.1-.8 .2-1.2 .3-1.7c.5-2.2 1.1-4.2 1.9-6.1c1.6-3.8 4-7.3 6.9-10.2c5.8-5.8 13.8-9.4 22.6-9.4l26.2 0c3.8-29.6 5.8-62.1 5.8-96c0-18.3-.6-36.1-1.7-53.4c-1.7-1.2-3.4-2.5-4.9-4c-.8-.8-1.6-1.6-2.2-2.5s-1.3-1.7-1.9-2.6c-1.2-1.8-2.1-3.6-2.9-5.5s-1.4-3.9-1.8-5.9c-.2-1-.3-2-.4-3s-.1-2-.2-3c0-8.3 3.1-16.5 9.4-22.8C141 63.1 112.8 0 80 0C35.8 0 0 114.6 0 256z\"/><path fill=\"currentColor\"class=\"fa-primary\" d=\"M416 48a48 48 0 1 0 -96 0 48 48 0 1 0 96 0zM221.7 175.5c9.9-9.9 23.4-15.5 37.5-15.5c1.9 0 3.8 .1 5.6 .3L233.6 254c-9.3 28 1.7 58.8 26.8 74.5l86.2 53.9-25.4 88.8c-4.9 17 5 34.7 22 39.6s34.7-5 39.6-22l28.7-100.4c5.9-20.6-2.6-42.6-20.7-53.9L334 299l30.9-82.4 5.1 12.3C385 264.7 419.9 288 458.7 288l21.3 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-21.3 0c-12.9 0-24.6-7.8-29.5-19.7l-6.3-15c-14.6-35.1-44.1-61.9-80.5-73.1l-48.7-15c-11.1-3.4-22.7-5.2-34.4-5.2c-31 0-60.8 12.3-82.7 34.3l-23.1 23.1c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l23.1-23.1zM187.2 352L128 352c-17.7 0-32 14.3-32 32s14.3 32 32 32l69.6 0c19 0 36.2-11.2 43.9-28.5L253 361.6l-9.5-6c-17.5-10.9-30.5-26.8-37.9-44.9L187.2 352z\"/></svg></span> <span class=\"caption d-none d-xl-inline-block\">Sign in</span></a>\n                </li>\n                        <li class=\"nav-menu\">\n                <button class=\"navigation-toggle\"><i class=\"fa fa-fw fa-bars\" aria-hidden=\"true\"></i></button>\n            </li>\n        </ul>\n    </div>\n</nav>\n\n    <footer class=\"footer center-content\">\n    <div class=\"footer-container center-content-container\">\n        <div class=\"footer-inner container-fluid\">\n            <div class=\"row\">\n                <div class=\"col-8 col-md-10\">\n                    <ul class=\"footer-list footer-list-horizontal\">\n                        <li><a href=\"/\">Home</a></li>\n                        <li><a href=\"/refactoring\">Refactoring</a></li>\n                        <li><a href=\"/design-patterns\">Design Patterns</a></li>\n                        <li><a href=\"/store\">Premium Content</a></li>\n                        <li><a href=\"https://gitbybit.com/\">Git Course</a></li>\n                        <li><a href=\"https://refactoring.userecho.com/\" rel=\"nofollow\" class=\"userecho-public\">Forum</a></li>\n                        <li><a href=\"https://refactoring.userecho.com/\" rel=\"nofollow\" class=\"userecho-private\">Contact us</a></li>\n                    </ul>\n                </div>\n                <div class=\"col-4 col-md-2\">\n                    <ul class=\"footer-list footer-list-iconic footer-list-right\">\n                                                    <li><a href=\"https://www.facebook.com/refactoring.guru\"><i class=\"fa fa-facebook-official\"></i></a></li>\n                                                <li><a href=\"/sendy/form\" rel=\"nofollow\"><i class=\"fa fa-envelope\" aria-hidden=\"true\"></i></a></li>\n                        <li><a href=\"https://github.com/RefactoringGuru\"><i class=\"fa fa-github-circled\"></i></a></li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"footer-second\">\n        <div class=\"footer-container center-content-container\">\n            <div class=\"footer-inner container-fluid\">\n                <div class=\"row\">\n                    <div class=\"col-12 col-sm-6\">\n                        <i class=\"fa fa-fw fa-copyright\"></i> 2014-2025 <a href=\"/\">Refactoring.Guru</a>. <span style=\"white-space: nowrap\">All rights reserved.</span><br>\n                        <i class=\"fa fa-fw fa-image\"></i> Illustrations by <a href=\"http://zhart.us/\" rel=\"nofollow\"><span style=\"white-space: nowrap\">Dmitry Zhart</span></a>\n                    </div>\n                    <div class=\"footer-links-right col-12 col-sm-6 mt-4 mt-sm-0\">\n                        <ul class=\"footer-list footer-list-horizontal footer-list-right\">\n                            <li><a href=\"/terms\"><span>Terms &amp; Conditions</span></a>\n                            </li>\n                            <li><a href=\"/privacy-policy\"><span>Privacy Policy</span></a>\n                            </li>\n                            <li><a href=\"/content-usage-policy\"><span>Content Usage Policy</span></a>\n                            </li>\n                            <li><a href=\"/site-about\"><span>About us</span></a>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n                                    <div class=\"row\">\n                        <div class=\"col-12 col-sm-4\">\n                            <div class=\"mt-4\">\n                                                                    <b>Ukrainian office:</b><br>\n                                    <object class=\"fa-fw\" style=\"height: 0.8rem; filter: invert(50%);\"  type=\"image/svg+xml\" data=\"/images/content-public/icons/fa-building.svg?id=afddb5806968b0a9acfc1df75a181234\">\n                                        <img class=\"fa-fw\" style=\"height: 0.8rem;\" src=\"/images/content-public/icons/fa-building.svg?id=afddb5806968b0a9acfc1df75a181234\" alt=\"Organization address\"/>\n                                    </object> FOP Olga Skobeleva<br>\n                                    <svg style=\"width: 16px; height: 16px; margin-right: 1px; fill: currentColor;\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\"><path d=\"M352 192c0-88.4-71.6-160-160-160S32 103.6 32 192c0 15.6 5.4 37 16.6 63.4c10.9 25.9 26.2 54 43.6 82.1c34.1 55.3 74.4 108.2 99.9 140c25.4-31.8 65.8-84.7 99.9-140c17.3-28.1 32.7-56.3 43.6-82.1C346.6 229 352 207.6 352 192zm32 0c0 87.4-117 243-168.3 307.2c-12.3 15.3-35.1 15.3-47.4 0C117 435 0 279.4 0 192C0 86 86 0 192 0S384 86 384 192zm-240 0a48 48 0 1 0 96 0 48 48 0 1 0 -96 0zm48 80a80 80 0 1 1 0-160 80 80 0 1 1 0 160z\"/></svg> Abolmasova 7<br>\n                                    <span style=\"margin-left: 21px;\">Kyiv, Ukraine, 02002</span><br>\n                                    <i class=\"fa fa-fw fa-envelope\"></i>  Email: support@refactoring.guru\n                                \n                            </div>\n                        </div>\n                        <div class=\"col-12 col-sm-4\">\n                            <div class=\"mt-4\">\n                                <b>Spanish office:</b><br>\n                                <object class=\"fa-fw\" style=\"height: 0.8rem; filter: invert(50%);\"  type=\"image/svg+xml\" data=\"/images/content-public/icons/fa-building.svg?id=afddb5806968b0a9acfc1df75a181234\">\n                                    <img class=\"fa-fw\" style=\"height: 0.8rem;\" src=\"/images/content-public/icons/fa-building.svg?id=afddb5806968b0a9acfc1df75a181234\" alt=\"Organization address\"/>\n                                </object> Oleksandr Shvets<br>\n                                <svg style=\"width: 16px; height: 16px; margin-right: 1px; fill: currentColor;\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\"><path d=\"M352 192c0-88.4-71.6-160-160-160S32 103.6 32 192c0 15.6 5.4 37 16.6 63.4c10.9 25.9 26.2 54 43.6 82.1c34.1 55.3 74.4 108.2 99.9 140c25.4-31.8 65.8-84.7 99.9-140c17.3-28.1 32.7-56.3 43.6-82.1C346.6 229 352 207.6 352 192zm32 0c0 87.4-117 243-168.3 307.2c-12.3 15.3-35.1 15.3-47.4 0C117 435 0 279.4 0 192C0 86 86 0 192 0S384 86 384 192zm-240 0a48 48 0 1 0 96 0 48 48 0 1 0 -96 0zm48 80a80 80 0 1 1 0-160 80 80 0 1 1 0 160z\"/></svg> Avda Pamplona 64<br>\n                                <span style=\"margin-left: 21px;\">Pamplona, Spain, 31009</span><br>\n                                <i class=\"fa fa-fw fa-envelope\"></i>  Email: support@refactoring.guru\n                            </div>\n                        </div>\n                    </div>\n                            </div>\n        </div>\n    </div>\n</footer>\n\n</div>\n\n\n    <script defer>\n    var CodeMirrorScripts = [\"/js/codemirror.min.js?id=f7ae4adf14bd00338caf8e95da733cc9\"];\n</script>\n\n\n\n    <script>window.loadContent = true;window.loadCart = true;</script>\n</body>\n</html>\n"},
{"title": null, "url": "https://refactoring.guru/design-patterns/facade", "raw_html": "<!DOCTYPE html>\n<html lang=\"en\" dir=\"ltr\">\n<head prefix=\"og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# website: http://ogp.me/ns/website#\">\n    <meta charset=\"utf-8\">\n    <title>Facade</title>\n\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n    <meta name=\"theme-color\" content=\"#A2E2FD\" />\n\n            <style>\n        .buy-widget-excl-local-taxes {\n            display: none;\n        }\n    </style>\n    \n    <link rel=\"preload\" href=\"/fonts/PTSans/ptsans-regular_en.woff2?1\" as=\"font\" type=\"font/woff2\" crossorigin>\n    <link rel=\"preload\" href=\"/fonts/PTSans/ptsans-bold_en.woff2?1\" as=\"font\" type=\"font/woff2\" crossorigin>\n        <link rel=\"preload\" href=\"/fonts/fontello/fontawesome.woff2?15843843\" as=\"font\" type=\"font/woff2\" crossorigin>\n    <link rel=\"preload\" href=\"/fonts/FiraCode/woff2/FiraCode-Regular_latin.woff2\" as=\"font\" type=\"font/woff2\" crossorigin>\n        <link rel=\"preconnect dns-prefetch\" href=\"https://cdn.paddle.com\">\n    <link rel=\"preconnect dns-prefetch\" href=\"https://www.googletagmanager.com\">\n\n    <link rel=\"alternate\" href=\"https://refactoring.guru/design-patterns/facade\" hreflang=\"x-default\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/es/design-patterns/facade\" hreflang=\"es\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/fr/design-patterns/facade\" hreflang=\"fr\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/ja/design-patterns/facade\" hreflang=\"ja\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/ko/design-patterns/facade\" hreflang=\"ko\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/pl/design-patterns/facade\" hreflang=\"pl\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/pt-br/design-patterns/facade\" hreflang=\"pt-br\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/ru/design-patterns/facade\" hreflang=\"ru\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/uk/design-patterns/facade\" hreflang=\"uk\"/>\n    <link rel=\"alternate\" href=\"https://refactoringguru.cn/design-patterns/facade\" hreflang=\"zh\"/>\n\n    <meta name=\"description\" content=\"Facade is a structural design pattern that provides a simplified interface to a library, a framework, or any other complex set of classes.\">\n\n    <link rel=\"canonical\" href=\"https://refactoring.guru/design-patterns/facade\"/>\n\n    <link rel=\"icon\" type=\"image/x-icon\" href=\"/favicon.png\"/>\n\n        <meta property=\"fb:app_id\" content=\"666819623386327\"/>\n        <meta property=\"og:type\" content=\"website\"/>\n        <meta property=\"og:image\" content=\"https://refactoring.guru/images/refactoring/social/facebook-share-preview.png?id=dbf9e98269595be86eb668f365be6868\"/>\n    \n                    <link rel=\"stylesheet\" href=\"/css/public-packed.min.css?id=aaefab4da343b914b8dda9973604a9e8\">\n        <style type=\"text/css\">\n                    @font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_cyrillic-ext.woff2?1) format(\"woff2\");unicode-range:U+0460-052F,U+1C80-1C88,U+20B4,U+2DE0-2DFF,U+A640-A69F,U+FE2E-FE2F}@font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_cyrillic.woff2?1) format(\"woff2\");unicode-range:U+0400-045F,U+0490-0491,U+04B0-04B1,U+2116}@font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_latin-ext.woff2?1) format(\"woff2\");unicode-range:U+0100-024F,U+0259,U+1E00-1EFF,U+2020,U+20A0-20AB,U+20AD-20CF,U+2113,U+2C60-2C7F,U+A720-A7FF}@font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_latin.woff2?1) format(\"woff2\");unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}@font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_en.woff2?1) format(\"woff2\");unicode-range:U+0-FF,U+131,U+142,U+152,U+153,U+2BB,U+2BC,U+2C6,U+2DA,U+2DC,U+420,U+423,U+430,U+438-43A,U+43D,U+440,U+441,U+443,U+44C,U+457,U+2000-206F,U+2074,U+20AA-20AC,U+20B4,U+20B9,U+20BA,U+20BD,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_cyrillic-ext.woff2?1) format(\"woff2\");unicode-range:U+0460-052F,U+1C80-1C88,U+20B4,U+2DE0-2DFF,U+A640-A69F,U+FE2E-FE2F}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_cyrillic.woff2?1) format(\"woff2\");unicode-range:U+0400-045F,U+0490-0491,U+04B0-04B1,U+2116}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_latin-ext.woff2?1) format(\"woff2\");unicode-range:U+0100-024F,U+0259,U+1E00-1EFF,U+2020,U+20A0-20AB,U+20AD-20CF,U+2113,U+2C60-2C7F,U+A720-A7FF}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_latin.woff2?1) format(\"woff2\");unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_en.woff2?1) format(\"woff2\");unicode-range:U+0-FF,U+131,U+142,U+152,U+153,U+2BB,U+2BC,U+2C6,U+2DA,U+2DC,U+420,U+423,U+430,U+438-43A,U+43D,U+440,U+441,U+443,U+44C,U+457,U+2000-206F,U+2074,U+20AA-20AC,U+20B4,U+20B9,U+20BA,U+20BD,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}\n            </style>\n\n    \n            <script defer src=\"/js/public.min.js?id=1f19fe18ffe0fc844ede8a0f2ee64202\"></script>\n        <script defer src=\"/js/checkout.min.js?id=b4da9c5bd8b1cf504447c07ae8b7cd44\"></script>\n            <script defer src=\"https://cdn.paddle.com/paddle/v2/paddle.js\"></script>\n    <script async src=\"https://www.googletagmanager.com/gtag/js?id=G-SR8Y3GYQYC\"></script>\n\n    <script type=\"application/ld+json\">\n        {\"@context\": \"http://schema.org\", \"@graph\": [{\"@type\":\"Person\",\"@id\":\"https://refactoring.guru/#founder\",\"name\":\"Alexander Shvets\"},{\"@type\":\"Organization\",\"@id\":\"https://refactoring.guru/#organization\",\"name\":\"Refactoring.Guru\",\"description\":\"Refactoring.Guru makes it easy for you to discover everything you need to know about refactoring, design patterns, SOLID principles, and other smart programming topics.\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https://refactoring.guru/#organizationlogo\",\"url\":\"https://refactoring.guru/images/content-public/logos/logo-plain.png\",\"caption\":\"Refactoring.Guru\"},\"logo\":{\"@id\":\"https://refactoring.guru/#organizationlogo\"},\"founder\":{\"@id\":\"https://refactoring.guru/#founder\"},\"sameAs\":[\"https://www.facebook.com/refactoring.guru\",\"https://twitter.com/RefactoringGuru\",\"https://github.com/RefactoringGuru\"]},{\"@type\":\"WebSite\",\"@id\":\"https://refactoring.guru/#website\",\"url\":\"https://refactoring.guru/\",\"name\":\"Refactoring.Guru\",\"description\":\"Refactoring.Guru makes it easy for you to discover everything you need to know about refactoring, design patterns, SOLID principles, and other smart programming topics.\",\"author\":{\"@id\":\"https://refactoring.guru/#founder\"},\"publisher\":{\"@id\":\"https://refactoring.guru/#organization\"},\"copyrightYear\":2014},{\"@type\":\"WebPage\",\"@id\":\"https://refactoring.guru/design-patterns/facade#webpage\",\"url\":\"https://refactoring.guru/design-patterns/facade\",\"inLanguage\":\"en\",\"name\":\"Facade\",\"description\":\"Facade is a structural design pattern that provides a simplified interface to a library, a framework, or any other complex set of classes.\",\"isPartOf\":{\"@id\":\"https://refactoring.guru#website\"},\"breadcrumb\":{\"@id\":\"https://refactoring.guru/design-patterns/facade#breadcrumb\"},\"primaryImageOfPage\":{\"@id\":\"https://refactoring.guru/design-patterns/facade#primaryimage\"},\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https://refactoring.guru/design-patterns/facade#primaryimage\",\"url\":\"https://refactoring.guru/images/patterns/content/facade/facade-3x.png\",\"width\":1920,\"height\":1200}},{\"@type\":\"Article\",\"@id\":\"https://refactoring.guru/design-patterns/facade#article\",\"isPartOf\":{\"@id\":\"https://refactoring.guru/design-patterns/facade#webpage\"},\"mainEntityOfPage\":{\"@id\":\"https://refactoring.guru/design-patterns/facade#webpage\"},\"author\":{\"@id\":\"https://refactoring.guru#founder\"},\"publisher\":{\"@id\":\"https://refactoring.guru#organization\"},\"headline\":\"Facade\",\"datePublished\":\"2024-01-01\",\"dateModified\":\"2025-01-01\",\"articleSection\":\"Design Patterns\",\"image\":{\"@id\":\"https://refactoring.guru/design-patterns/facade#primaryimage\"}},{\"@type\":\"BreadcrumbList\",\"@id\":\"https://refactoring.guru/design-patterns/facade#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https://refactoring.guru\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Design Patterns\",\"item\":\"https://refactoring.guru/design-patterns\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"Structural Patterns\",\"item\":\"https://refactoring.guru/design-patterns/structural-patterns\"}]}] }\n    </script>\n\n    <script>\nfunction extend(){var extended={};var deep=false;var i=0;var length=arguments[\"length\"];if(Object[\"prototype\"][\"toString\"][\"call\"](arguments[0])=== '[object Boolean]'){deep= arguments[0];i++};var merge=function(obj){for(var prop in obj){if(Object[\"prototype\"][\"hasOwnProperty\"][\"call\"](obj,prop)){if(deep&& Object[\"prototype\"][\"toString\"][\"call\"](obj[prop])=== '[object Object]'){extended[prop]= extend(true,extended[prop],obj[prop])}else {extended[prop]= obj[prop]}}}};for(;i< length;i++){var obj=arguments[i];merge(obj)};return extended}\nfunction defer(method) {if (window.jQuery) {method();} else {setTimeout(function() { defer(method) }, 50);}}\n</script>\n<script>\n+function(sd){sd = (typeof sd === \"string\") ? JSON.parse(atob(sd)) : sd;for(var property in sd){if(window[property]!== null&&  typeof window[property]=== 'object'){window[property]= extend(true,window[property],sd[property])}else {window[property]= sd[property]}}}(\"eyJsb2NhbGUiOiJlbiIsImxvY2FsZV9wcmVmaXgiOiIiLCJsb2NhbGl6ZWRfdXJsX3ByZWZpeCI6Imh0dHBzOlwvXC9yZWZhY3RvcmluZy5ndXJ1XC8iLCJ1cmxfcHJlZml4IjoiaHR0cHM6XC9cL3JlZmFjdG9yaW5nLmd1cnVcLyIsImxvY2FsaXplZF91cmxfcHJlZml4X20iOiJodHRwczpcL1wvcmVmYWN0b3JpbmcuZ3VydVwvIiwidXJsX3ByZWZpeF9tIjoiaHR0cHM6XC9cL3JlZmFjdG9yaW5nLmd1cnVcLyIsInVzZXJfZWNob19hbGlhcyI6InJlZmFjdG9yaW5nIiwidXNlcl9lY2hvX2hvc3QiOiJmZWVkYmFjay5yZWZhY3RvcmluZy5ndXJ1IiwidXNlcl9lY2hvX3ByaXZhdGVfZm9ydW0iOiIyIiwidXNlcl9lY2hvX2xvY2FsZSI6ImVuIiwidXNlcl9lY2hvX3B1YmxpY19mb3J1bSI6IjMiLCJ1c2VyX2VjaG9fcHVibGljX2ZvcnVtX3VybCI6Imh0dHBzOlwvXC9mZWVkYmFjay5yZWZhY3RvcmluZy5ndXJ1XC8iLCJ1c2VyX2VjaG9fc3NvX3Rva2VuIjoiIn0=\");\n</script>\n\n<script>\n    window.dataLayer = window.dataLayer || [];\n    function gtag(){dataLayer.push(arguments);}\n    gtag('js', new Date());\n            gtag('set', 'linker', {'domains': [\"refactoring.guru,refactoringguru.cn\"]});\n        gtag('config', 'G-SR8Y3GYQYC', {\n        // Disable default page view, because we're going to report them on our own.\n        // This is done to report traffic on localized domains as part of the main website traffic\n        // See the Chinese overrides below.\n        send_page_view: false,\n    });\n</script>\n\n<script>\n    (() => {\n        // On first page view after returning from social network, we need to send the social login event.\n        (function detectSocialLogin() {\n            let getCookie = function (name) {\n                var nameEQ = name + \"=\";\n                var ca = document.cookie.split(';');\n                for (var i = 0; i < ca.length; i++) {\n                    var c = ca[i];\n                    while (c.charAt(0) == ' ') c = c.substring(1, c.length);\n                    if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);\n                }\n                return null;\n            };\n            window.social_login_provider = window.social_login_provider || getCookie('social_login_provider');\n            if (window.social_login_provider) {\n                gtag('set', {referrer: null});\n                gtag('event', 'login', {\"method\": window.social_login_provider});\n                // Delete cookie.\n                document.cookie = 'social_login_provider=; Path=/; Max-Age=-99999999;';\n            }\n        })();\n\n        function trackPageView(location, title) {\n            location = location || document.location.href;\n            title = title || document.title;\n\n            // This is show on https://refactoringguru.cn/ and alike.\n            if (typeof window.analytics_path_prefix === 'string') {\n                if (/^(https?:\\/\\/[^\\/]+?)\\/$/.test(location)) {\n                    location = location.replace(/(https?:\\/\\/[^\\/]+?)\\//, '$1' + window.analytics_path_prefix);\n                } else {\n                    location = location.replace(/(https?:\\/\\/[^\\/]+?)\\//, '$1' + window.analytics_path_prefix + '/');\n                }\n                gtag('set', {\n                    'page_location': location\n                });\n            }\n\n            // This is show on https://refactoring.guru/zh/login and alike.\n            if (typeof window.analytics_location_prefix === 'string') {\n                location = location.replace(/(https?:\\/\\/[^\\/]+?)\\//, window.analytics_location_prefix);\n                gtag('set', {\n                    'page_location': location\n                });\n            }\n\n            gtag('event', 'page_view', {\n                page_location: location,\n                page_title: title,\n                locale: window.locale ?? 'en'\n            });\n        }\n\n        if (window.loadContent) {\n            window.onPageLoad = window.onPageLoad || [];\n            window.onPageLoad.push({\n                func: function (context) {\n                    trackPageView(window.location.origin + context.canonicalPath, context.title);\n                },\n                afterAll: true,\n            });\n        }\n        else {\n            trackPageView();\n        }\n    })();\n</script>\n\n\n</head>\n<body class=\"locale-en   announcement   facade\" data-body_class=\"facade\">\n\n<div class=\"body-holder\">\n\n            <div class=\"announcement-block announcement-block-summer prom\" data-id=\"DIDP-announcement\" data-creative-id=\"en\" data-position=\"top\">\n        <span class=\"beach-and-sea\">\n            <span class=\"a1\"></span>\n            <span class=\"a2\"><span class=\"wave\"></span></span>\n            <span class=\"yacht\"></span>\n        </span>\n        <a href=\"/store\">\n            <img src=\"/images/content-public/ann/summer/sunbed.svg?id=b1e7314a63715a13870a6bd1a43613f7\" loading=\"lazy\" style=\"width: 32px; height:32px;vertical-align: middle; scale: -1 1 1;\">\n            <span class=\"announcement-link-text\">Summer SALE</span>\n            <img src=\"/images/content-public/ann/summer/reading-book.svg?id=36006ea720df8c171968cf613e8ea164\" loading=\"lazy\" style=\"width: 32px; height:32px;vertical-align: middle;\">\n        </a>\n    </div>\n\n    \n    <div class=\"cart-placeholder\">\n    <div class=\"cart-block-container\" style=\"display:none\">\n        <div class=\"cart-block btn-group\">\n            <a href=\"#checkout\" class=\"btn cart open-checkout\">\n                <span class=\"cart-text\"></span>&nbsp;<strong class=\"cart-total font-money\"></strong>\n            </a><a href=\"#checkout\" class=\"btn btn-secondary checkout open-checkout\"><i class=\"fa fa-shopping-cart\" aria-hidden=\"true\"></i> <span class=\"btn-text-span d-none d-sm-inline-block d-lg-none d-hg-inline-block\"></span></a>\n        </div>\n    </div>\n</div>\n    <main role=\"main\" class=\"main-content top-content center-content \" data-page_class=\"\">\n        <div class=\"main-content-container center-content-container\">\n                        <div class=\"pattern page text\">\n<article>\n    <div class=\"breadcrumb\">\n                                    <a class=\"home\" href=\"/\"><i class=\"fa fa-home\" aria-hidden=\"true\"></i></a>\n                                                / <a class=\"type\" href=\"/design-patterns\">Design Patterns</a>\n                                                / <a class=\"type\" href=\"/design-patterns/structural-patterns\">Structural Patterns</a>\n                        </div>\n    <h1 class=\"title\">Facade</h1>\n\n    <script type=\"text/javascript\">\n        // Shorten examples titles for users.\n        var h1 = document.getElementsByTagName(\"H1\")[0];\n        if (h1.offsetHeight > 160) {\n            h1.className += ' smaller';\n        }\n\n        // Small beautification for pattern examples.\n        var title = h1.innerHTML;\n        title = title.replace(/^(Java|C\\+\\+|C#|PHP|Python|Ruby|Delphi): (.*)$/, '<strong>$1:</strong> $2');\n        h1.innerHTML = title;\n    </script>\n\n    \n    \n\n    <div class=\"section intent\">\n<h2 id=\"intent\"><i class=\"fa fa-flip-horizontal fa-comment-alt-dots\" aria-hidden=\"true\"></i> Intent</h2>\n<p><strong>Facade</strong> is a structural design pattern that provides a simplified interface to a library, a framework, or any other complex set of classes.</p>\n<figure class=\"image\"><img src=\"/images/patterns/content/facade/facade.png?id=1f4be17305b6316fbd548edf1937ac3b\" alt=\"Facade design pattern\" srcset=\"/images/patterns/content/facade/facade.png?id=1f4be17305b6316fbd548edf1937ac3b 640w,/images/patterns/content/facade/facade-1.5x.png?id=a6af5003b243b59990842d24bdaae2df 960w,/images/patterns/content/facade/facade-2x.png?id=b69fce5943703f5f07c0ba38e3baaed0 1280w\" sizes=\"(max-width: 720px) 100vw, 640px\" width=\"640\" style=\"aspect-ratio: 1.6;\" fetchpriority=\"high\" /></figure>\n</div>\n<div class=\"section problem\">\n<h2 id=\"problem\"><i class=\"fa fa-frown\" aria-hidden=\"true\"></i> Problem</h2>\n<p>Imagine that you must make your code work with a broad set of objects that belong to a sophisticated library or framework. Ordinarily, you’d need to initialize all of those objects, keep track of dependencies, execute methods in the correct order, and so on.</p>\n<p>As a result, the business logic of your classes would become tightly coupled to the implementation details of 3rd-party classes, making it hard to comprehend and maintain.</p>\n</div>\n<div class=\"section solution\">\n<h2 id=\"solution\"><i class=\"fa fa-smile-beam\" aria-hidden=\"true\"></i> Solution</h2>\n<p>A facade is a class that provides a simple interface to a complex subsystem which contains lots of moving parts. A facade might provide limited functionality in comparison to working with the subsystem directly. However, it includes only those features that clients really care about.</p>\n<p>Having a facade is handy when you need to integrate your app with a sophisticated library that has dozens of features, but you just need a tiny bit of its functionality.</p>\n<p>For instance, an app that uploads short funny videos with cats to social media could potentially use a professional video conversion library. However, all that it really needs is a class with the single method <code>encode(filename, format)</code>. After creating such a class and connecting it with the video conversion library, you’ll have your first facade.</p>\n</div>\n<div class=\"section analogy\">\n<h2 id=\"analogy\"><i class=\"fa fa-car-side\" aria-hidden=\"true\"></i> Real-World Analogy</h2>\n<figure class=\"image\"><img src=\"/images/patterns/diagrams/facade/live-example-en.png?id=461900f9fbacdd0ce981dcd24e121078\" alt=\"An example of taking a phone order\" srcset=\"/images/patterns/diagrams/facade/live-example-en.png?id=461900f9fbacdd0ce981dcd24e121078 490w,/images/patterns/diagrams/facade/live-example-en-1.5x.png?id=ab3b02c5e627f13e03de353604d5a2dd 735w,/images/patterns/diagrams/facade/live-example-en-2x.png?id=db1110e957a690955425d8cb6c0a0f8b 980w\" sizes=\"(max-width: 720px) 100vw, 490px\" width=\"490\" style=\"aspect-ratio: 2.58;\" loading=\"lazy\" /><figcaption>\n<p>Placing orders by phone.</p>\n</figcaption></figure>\n<p>When you call a shop to place a phone order, an operator is your facade to all services and departments of the shop. The operator provides you with a simple voice interface to the ordering system, payment gateways, and various delivery services.</p>\n</div>\n<div class=\"section structure-container\">\n<h2 id=\"structure\"><i class=\"fa fa-sitemap\" aria-hidden=\"true\"></i> Structure</h2>\n<div class=\"structure\">\n<div class=\"struct-image1 struct-image\">\n<figure class=\"image\"><img class=\"structure-img-non-indexed d-none d-xl-block\" src=\"/images/patterns/diagrams/facade/structure.png?id=258401362234ac77a2aaf1cde62339e7\" alt=\"Structure of the Facade design pattern\" srcset=\"/images/patterns/diagrams/facade/structure.png?id=258401362234ac77a2aaf1cde62339e7 560w,/images/patterns/diagrams/facade/structure-1.5x.png?id=98d134de0c368d382909ba162ec21767 840w,/images/patterns/diagrams/facade/structure-2x.png?id=528ca429555bce293b7c3bd90954e097 1120w\" sizes=\"(max-width: 720px) 100vw, 560px\" width=\"560\" style=\"aspect-ratio: 1.47;\" loading=\"lazy\" /><img class=\"structure-img-indexed d-xl-none\" src=\"/images/patterns/diagrams/facade/structure-indexed.png?id=2da06d6b850701ea15cf72f9d2642fb8\" alt=\"Structure of the Facade design pattern\" srcset=\"/images/patterns/diagrams/facade/structure-indexed.png?id=2da06d6b850701ea15cf72f9d2642fb8 600w,/images/patterns/diagrams/facade/structure-indexed-1.5x.png?id=fad7d667f4d8d9a7d522748bcd37dfde 900w,/images/patterns/diagrams/facade/structure-indexed-2x.png?id=4d181bcf1df5d58c533e6c92461e9571 1200w\" sizes=\"(max-width: 720px) 100vw, 600px\" width=\"600\" style=\"aspect-ratio: 1.58;\" loading=\"lazy\" /></figure>\n</div>\n<ol><li class=\"struct-li1\">\n<p>The <strong>Facade</strong> provides convenient access to a particular part of the subsystem’s functionality. It knows where to direct the client’s request and how to operate all the moving parts.</p>\n</li>\n<li class=\"struct-li2\">\n<p>An <strong>Additional Facade</strong> class can be created to prevent polluting a single facade with unrelated features that might make it yet another complex structure. Additional facades can be used by both clients and other facades.</p>\n</li>\n<li class=\"struct-li3\">\n<p>The <strong>Complex Subsystem</strong> consists of dozens of various objects. To make them all do something meaningful, you have to dive deep into the subsystem’s implementation details, such as initializing objects in the correct order and supplying them with data in the proper format.</p>\n<p>Subsystem classes aren’t aware of the facade’s existence. They operate within the system and work with each other directly.</p>\n</li>\n<li class=\"struct-li4\">\n<p>The <strong>Client</strong> uses the facade instead of calling the subsystem objects directly.</p>\n</li></ol>\n<style structure type=\"text/css\" >\n@media (min-width: 1200px) {\n.structure {\nmargin: 0;\nwidth: auto;\nheight: 500px;\n}\n\n.struct-image1 {\nleft: 60px;\ntop: 130px;\n}\n\n.struct-li1 {\nleft: 60px;\ntop: 10px;\nwidth: 350px;\n}\n\n.struct-li2 {\nleft: 450px;\ntop: 10px;\nwidth: 370px;\n}\n\n.struct-li3 {\nleft: 600px;\ntop: 280px;\nwidth: 310px;\n}\n\n.struct-li4 {\nleft: 10px;\ntop: 230px;\nwidth: 170px;\n}\n}\n\n</style>\n</div></div>\n<div class=\"section pseudocode\">\n<h2 id=\"pseudocode\"><i class=\"fa fa-hashtag\" aria-hidden=\"true\"></i> Pseudocode</h2>\n<p>In this example, the <strong>Facade</strong> pattern simplifies interaction with a complex video conversion framework.</p>\n<figure class=\"image\"><img src=\"/images/patterns/diagrams/facade/example.png?id=2249d134e3ff83819dfc19032f02eced\" alt=\"The structure of the Facade pattern example\" srcset=\"/images/patterns/diagrams/facade/example.png?id=2249d134e3ff83819dfc19032f02eced 570w,/images/patterns/diagrams/facade/example-1.5x.png?id=034ecbe0f3cc108f4ae49d05d1c77dbe 855w,/images/patterns/diagrams/facade/example-2x.png?id=f2c846d74041626c923ff3e8919b68a9 1140w\" sizes=\"(max-width: 720px) 100vw, 570px\" width=\"570\" style=\"aspect-ratio: 1.5;\" loading=\"lazy\" /><figcaption>\n<p>An example of isolating multiple dependencies within a single facade class.</p>\n</figcaption></figure>\n<p>Instead of making your code work with dozens of the framework classes directly, you create a facade class which encapsulates that functionality and hides it from the rest of the code. This structure also helps you to minimize the effort of upgrading to future versions of the framework or replacing it with another one. The only thing you’d need to change in your app would be the implementation of the facade’s methods.</p>\n<figure class=\"code\">\n<pre class=\"code\" lang=\"pseudocode\">// These are some of the classes of a complex 3rd-party video\n// conversion framework. We don't control that code, therefore\n// can't simplify it.\n\nclass VideoFile\n// ...\n\nclass OggCompressionCodec\n// ...\n\nclass MPEG4CompressionCodec\n// ...\n\nclass CodecFactory\n// ...\n\nclass BitrateReader\n// ...\n\nclass AudioMixer\n// ...\n\n\n// We create a facade class to hide the framework's complexity\n// behind a simple interface. It's a trade-off between\n// functionality and simplicity.\nclass VideoConverter is\n    method convert(filename, format):File is\n        file = new VideoFile(filename)\n        sourceCodec = (new CodecFactory).extract(file)\n        if (format == &quot;mp4&quot;)\n            destinationCodec = new MPEG4CompressionCodec()\n        else\n            destinationCodec = new OggCompressionCodec()\n        buffer = BitrateReader.read(filename, sourceCodec)\n        result = BitrateReader.convert(buffer, destinationCodec)\n        result = (new AudioMixer()).fix(result)\n        return new File(result)\n\n// Application classes don't depend on a billion classes\n// provided by the complex framework. Also, if you decide to\n// switch frameworks, you only need to rewrite the facade class.\nclass Application is\n    method main() is\n        convertor = new VideoConverter()\n        mp4 = convertor.convert(&quot;funny-cats-video.ogg&quot;, &quot;mp4&quot;)\n        mp4.save()\n</pre>\n</figure>\n</div>\n<div class=\"section applicability-container\">\n<h2 id=\"applicability\"><i class=\"fa fa-lightbulb-on\" aria-hidden=\"true\"></i> Applicability</h2>\n<div class=\"applicability\">\n<div class=\"applicability-problem\">\n<p><i class=\"fa fa-fw fa-bug\" aria-hidden=\"true\"></i> Use the Facade pattern when you need to have a limited but straightforward interface to a complex subsystem.</p>\n</div><div class=\"applicability-solution\">\n<p><i class=\"fa fa-fw fa-bolt\" aria-hidden=\"true\"></i> Often, subsystems get more complex over time. Even applying design patterns typically leads to creating more classes. A subsystem may become more flexible and easier to reuse in various contexts, but the amount of configuration and boilerplate code it demands from a client grows ever larger. The Facade attempts to fix this problem by providing a shortcut to the most-used features of the subsystem which fit most client requirements.</p>\n</div>\n<div class=\"applicability-problem\">\n<p><i class=\"fa fa-fw fa-bug\" aria-hidden=\"true\"></i> Use the Facade when you want to structure a subsystem into layers.</p>\n</div><div class=\"applicability-solution\">\n<p><i class=\"fa fa-fw fa-bolt\" aria-hidden=\"true\"></i> Create facades to define entry points to each level of a subsystem. You can reduce coupling between multiple subsystems by requiring them to communicate only through facades.</p>\n<p>For example, let’s return to our video conversion framework. It can be broken down into two layers: video- and audio-related. For each layer, you can create a facade and then make the classes of each layer communicate with each other via those facades. This approach looks very similar to the <a href=\"/design-patterns/mediator\">Mediator</a> pattern.</p>\n</div>\n</div></div>\n<div class=\"section checklist\">\n<h2 id=\"checklist\"><i class=\"fa fa-clipboard-list-check\" aria-hidden=\"true\"></i> How to Implement</h2>\n<ol>\n<li>\n<p>Check whether it’s possible to provide a simpler interface than what an existing subsystem already provides. You’re on the right track if this interface makes the client code independent from many of the subsystem’s classes.</p>\n</li>\n<li>\n<p>Declare and implement this interface in a new facade class. The facade should redirect the calls from the client code to appropriate objects of the subsystem. The facade should be responsible for initializing the subsystem and managing its further life cycle unless the client code already does this.</p>\n</li>\n<li>\n<p>To get the full benefit from the pattern, make all the client code communicate with the subsystem only via the facade. Now the client code is protected from any changes in the subsystem code. For example, when a subsystem gets upgraded to a new version, you will only need to modify the code in the facade.</p>\n</li>\n<li>\n<p>If the facade becomes <a href=\"/smells/large-class\">too big</a>, consider extracting part of its behavior to a new, refined facade class.</p>\n</li>\n</ol>\n</div>\n<div class=\"section pros-cons\">\n<h2 id=\"pros-cons\"><i class=\"fa fa-balance-scale\" aria-hidden=\"true\"></i> Pros and Cons</h2>\n<div class=\"row\"><div class=\"col-sm-6\">\n<ul>\n<li><i class=\"fa fa-fw fa-check\" aria-hidden=\"true\"></i> You can isolate your code from the complexity of a subsystem.</li>\n</ul>\n</div><div class=\"col-sm-6\">\n<ul>\n<li><i class=\"fa fa-fw fa-times\" aria-hidden=\"true\"></i> A facade can become <a href=\"/antipatterns/god-object\">a god object</a> coupled to all classes of an app.</li>\n</ul>\n</div></div></div>\n<div class=\"section relations\">\n<h2 id=\"relations\"><i class=\"fa fa-exchange-alt\" aria-hidden=\"true\"></i> Relations with Other Patterns</h2>\n<ul>\n<li>\n<p><a href=\"/design-patterns/facade\">Facade</a> defines a new interface for existing objects, whereas <a href=\"/design-patterns/adapter\">Adapter</a> tries to make the existing interface usable. <em>Adapter</em> usually wraps just one object, while <em>Facade</em> works with an entire subsystem of objects.</p>\n</li>\n<li>\n<p><a href=\"/design-patterns/abstract-factory\">Abstract Factory</a> can serve as an alternative to <a href=\"/design-patterns/facade\">Facade</a> when you only want to hide the way the subsystem objects are created from the client code.</p>\n</li>\n<li>\n<p><a href=\"/design-patterns/flyweight\">Flyweight</a> shows how to make lots of little objects, whereas <a href=\"/design-patterns/facade\">Facade</a> shows how to make a single object that represents an entire subsystem.</p>\n</li>\n<li>\n<p><a href=\"/design-patterns/facade\">Facade</a> and <a href=\"/design-patterns/mediator\">Mediator</a> have similar jobs: they try to organize collaboration between lots of tightly coupled classes.</p>\n<ul>\n<li><em>Facade</em> defines a simplified interface to a subsystem of objects, but it doesn’t introduce any new functionality. The subsystem itself is unaware of the facade. Objects within the subsystem can communicate directly.</li>\n<li><em>Mediator</em> centralizes communication between components of the system. The components only know about the mediator object and don’t communicate directly.</li>\n</ul>\n</li>\n<li>\n<p>A <a href=\"/design-patterns/facade\">Facade</a> class can often be transformed into a <a href=\"/design-patterns/singleton\">Singleton</a> since a single facade object is sufficient in most cases.</p>\n</li>\n<li>\n<p><a href=\"/design-patterns/facade\">Facade</a> is similar to <a href=\"/design-patterns/proxy\">Proxy</a> in that both buffer a complex entity and initialize it on its own. Unlike <em>Facade</em>, <em>Proxy</em> has the same interface as its service object, which makes them interchangeable.</p>\n</li>\n</ul>\n</div>\n<div class=\"section implementations\">\n<h2 id=\"implementations\"><i class=\"fa fa-code\" aria-hidden=\"true\"></i> Code Examples</h2>\n<p><a href=\"/design-patterns/facade/csharp/example\" title=\"Facade in C#\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/csharp.svg?id=da64592defc6e86d57c39c66e9de3e58\" alt=\"Facade in C#\" /></a>\n<a href=\"/design-patterns/facade/cpp/example\" title=\"Facade in C++\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/cpp.svg?id=f7782ed8b8666246bfcc3f8fefc3b858\" alt=\"Facade in C++\" /></a>\n<a href=\"/design-patterns/facade/go/example\" title=\"Facade in Go\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/go.svg?id=1a89927eb99b1ea3fde7701d97970aca\" alt=\"Facade in Go\" /></a>\n<a href=\"/design-patterns/facade/java/example\" title=\"Facade in Java\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/java.svg?id=e6d87e2dca08c953fe3acd1275ed4f4e\" alt=\"Facade in Java\" /></a>\n<a href=\"/design-patterns/facade/php/example\" title=\"Facade in PHP\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/php.svg?id=be1906eb26b71ec1d3b93720d6156618\" alt=\"Facade in PHP\" /></a>\n<a href=\"/design-patterns/facade/python/example\" title=\"Facade in Python\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/python.svg?id=6d815d43c0f7050a1151b43e51569c9f\" alt=\"Facade in Python\" /></a>\n<a href=\"/design-patterns/facade/ruby/example\" title=\"Facade in Ruby\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/ruby.svg?id=b065b718c914bf8e960ef731600be1eb\" alt=\"Facade in Ruby\" /></a>\n<a href=\"/design-patterns/facade/rust/example\" title=\"Facade in Rust\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/rust.svg?id=1f5698a4b5ae23fe79413511747e4a87\" alt=\"Facade in Rust\" /></a>\n<a href=\"/design-patterns/facade/swift/example\" title=\"Facade in Swift\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/swift.svg?id=0b716c2d52ec3a48fbe91ac031070c1d\" alt=\"Facade in Swift\" /></a>\n<a href=\"/design-patterns/facade/typescript/example\" title=\"Facade in TypeScript\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/typescript.svg?id=2239d0f16cb703540c205dd8cb0c0cb7\" alt=\"Facade in TypeScript\" /></a></p>\n</div>\n\n\n    <div class=\"banner-set2\" id=\"book-promo\">\n            <div class=\"prom banner-content banner-bg banner-striped banner-with-image\" data-id=\"DP: 1: Support our free website and own the eBook!\" data-creative-id=\"standard-en\" data-position=\"content_bottom\">\n                <div class=\"banner-image\">\n                    <a href=\"/design-patterns/book\">\n                        <img width=\"200\" height=\"200\" loading=\"lazy\" src=\"/images/patterns/banners/patterns-book-banner-3.png?id=7d445df13c80287beaab234b4f3b698c\" srcset=\"/images/patterns/banners/patterns-book-banner-3-2x.png?id=0cc3f77ab421d1a5c02ee46488231c3a 2x\">\n                    </a>\n                </div>\n\n                <div class=\"banner-text\">\n                    <h3 class=\"title\">Support our free website and own the eBook!</h3>\n                    <ul style=\"font-size: 14px;\">\n                        <li style=\"margin: 0;\">22 design patterns and 8 principles explained in depth.</li>\n                        <li style=\"margin: 0;\">409 well-structured, easy to read, jargon-free pages.</li>\n                        <li style=\"margin: 0;\">225 clear and helpful illustrations and diagrams.</li>\n                        <li style=\"margin: 0;\">An archive with code examples in 11 languages.</li>\n                        <li style=\"margin: 0;\">All devices supported: PDF/EPUB/MOBI/KFX formats.</li>\n                    </ul>\n                    <a class=\"btn btn-secondary\" href=\"/design-patterns/book\"><i class=\"fa fa-book\" aria-hidden=\"true\"></i> Learn more…</a>\n                </div>\n            </div>\n        </div>\n\n    </article>\n\n<nav class=\"prev-next\">\n                    <div class=\"next\">\n                <h4>Read next</h4>\n                <a rel=\"next\" href=\"/design-patterns/flyweight\" class=\"btn btn-primary\">Flyweight&nbsp;<span class=\"fa fa-arrow-right\"></span></a>\n            </div>\n                            <div class=\"prev\">\n                <h4>Return</h4>\n                <a rel=\"prev\" href=\"/design-patterns/decorator\" class=\"btn btn-default\"><span class=\"fa fa-arrow-left\"></span>&nbsp;Decorator </a>\n            </div>\n            </nav>\n</div>\n\n<aside class=\"feature content-secondary\">\n    <div class=\"prom banner-sidebar banner-removable banner-removable-patterns\" data-id=\"DP: Sidebar\" data-creative-id=\"standard-sidebar-en\" data-position=\"sidebar\">\n        <div class=\"banner-inner\">\n            <div class=\"image3d-book-right\">\n                <div class=\"image3d-cover\" style=\"background: #0b3752;\">\n                    <a href=\"/design-patterns/book\">\n                        <img width=\"250\" height=\"375\" loading=\"lazy\" src=\"/images/patterns/book/web-cover-en.png?id=328861769fd11617674e3b8a7e2dd9e7\" srcset=\"/images/patterns/book/web-cover-en-2x.png?id=02940141c5652ed5a426d87390b16366 2x\">\n                    </a>\n                </div>\n            </div>\n            <div style=\"margin-top: 1rem\">\n                <p class=\"text-center\" >This article is a part of our eBook<br/><strong>Dive Into Design Patterns</strong>.</p>\n                <a href=\"/design-patterns/book\" class=\"btn btn-secondary btn-block\"><i class=\"fa fa-book\" aria-hidden=\"true\"></i> Learn more…</a>\n            </div>\n        </div>\n    </div>\n\n\n</aside>\n                    </div>\n    </main>\n\n    <aside class=\"sidebar main-menu\">\n    <div class=\"main-menu-controls\">\n        <button class=\"navigation-toggle\"><i class=\"fa fa-fw fa-times\"></i></button>\n    </div>\n    <div class=\"main-menu-list-wrapper nano\">\n        <div class=\"main-menu-list nano-content\">\n            <a class=\"menu-brand\" href=\"/\">\n                                    <img width=200 height=241 loading=\"lazy\" alt=\"Refactoring.Guru\" src=\"/images/content-public/logos/logo-new.png?id=97d554614702483f31e38b32e82d8e34\" srcset=\"/images/content-public/logos/logo-new-2x.png?id=3bc33294e095bab1d6fe9ae421d07837 2x\">\n                            </a>\n\n            <div class=\"menu-container\" style=\"position: relative\">\n                                <ul class=\"menu-list trail\">\n                            <li class=\"featured\">\n            <a href=\"/store\">\n                <i class=\"fa fa-fw fa-star\" aria-hidden=\"true\"></i> Premium Content\n            </a>\n    \n            <ul >\n                            <li class=\"featured menu-fs15\">\n            <a href=\"/design-patterns/book\">\n                <i class=\"fa fa-fw fa-book\" aria-hidden=\"true\"></i> Design Patterns eBook\n            </a>\n    \n    \n            </li>\n                                <li class=\"featured menu-fs15\">\n            <a href=\"/refactoring/course\">\n                <i class=\"fa fa-fw fa-graduation-cap\" aria-hidden=\"true\"></i> Refactoring Course\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring\">\n                <i class=\"fa fa-fw fa-scissors\" aria-hidden=\"true\"></i> Refactoring\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/refactoring/what-is-refactoring\">\n                What is Refactoring\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/refactoring/what-is-refactoring\">\n                Clean code\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/technical-debt\">\n                Technical debt\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/when\">\n                When to refactor\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/how-to\">\n                How to refactor\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/catalog\">\n                Catalog\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells\">\n                Code Smells\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/refactoring/smells/bloaters\">\n                Bloaters\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/long-method\">\n                Long Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/large-class\">\n                Large Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/primitive-obsession\">\n                Primitive Obsession\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/long-parameter-list\">\n                Long Parameter List\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/data-clumps\">\n                Data Clumps\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/oo-abusers\">\n                Object-Orientation Abusers\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/switch-statements\">\n                Switch Statements\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/temporary-field\">\n                Temporary Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/refused-bequest\">\n                Refused Bequest\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/alternative-classes-with-different-interfaces\">\n                Alternative Classes with Different Interfaces\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/change-preventers\">\n                Change Preventers\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/divergent-change\">\n                Divergent Change\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/shotgun-surgery\">\n                Shotgun Surgery\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/parallel-inheritance-hierarchies\">\n                Parallel Inheritance Hierarchies\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/dispensables\">\n                Dispensables\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/comments\">\n                Comments\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/duplicate-code\">\n                Duplicate Code\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/lazy-class\">\n                Lazy Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/data-class\">\n                Data Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/dead-code\">\n                Dead Code\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/speculative-generality\">\n                Speculative Generality\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/couplers\">\n                Couplers\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/feature-envy\">\n                Feature Envy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/inappropriate-intimacy\">\n                Inappropriate Intimacy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/message-chains\">\n                Message Chains\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/middle-man\">\n                Middle Man\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/other\">\n                Other Smells\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/incomplete-library-class\">\n                Incomplete Library Class\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques\">\n                Refactorings\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/refactoring/techniques/composing-methods\">\n                Composing Methods\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/extract-method\">\n                Extract Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/inline-method\">\n                Inline Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-variable\">\n                Extract Variable\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/inline-temp\">\n                Inline Temp\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-temp-with-query\">\n                Replace Temp with Query\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/split-temporary-variable\">\n                Split Temporary Variable\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-assignments-to-parameters\">\n                Remove Assignments to Parameters\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-method-with-method-object\">\n                Replace Method with Method Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/substitute-algorithm\">\n                Substitute Algorithm\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/moving-features-between-objects\">\n                Moving Features between Objects\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/move-method\">\n                Move Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/move-field\">\n                Move Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-class\">\n                Extract Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/inline-class\">\n                Inline Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/hide-delegate\">\n                Hide Delegate\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-middle-man\">\n                Remove Middle Man\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-foreign-method\">\n                Introduce Foreign Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-local-extension\">\n                Introduce Local Extension\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/organizing-data\">\n                Organizing Data\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/self-encapsulate-field\">\n                Self Encapsulate Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-data-value-with-object\">\n                Replace Data Value with Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/change-value-to-reference\">\n                Change Value to Reference\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/change-reference-to-value\">\n                Change Reference to Value\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-array-with-object\">\n                Replace Array with Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/duplicate-observed-data\">\n                Duplicate Observed Data\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/change-unidirectional-association-to-bidirectional\">\n                Change Unidirectional Association to Bidirectional\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/change-bidirectional-association-to-unidirectional\">\n                Change Bidirectional Association to Unidirectional\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-magic-number-with-symbolic-constant\">\n                Replace Magic Number with Symbolic Constant\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/encapsulate-field\">\n                Encapsulate Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/encapsulate-collection\">\n                Encapsulate Collection\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-type-code-with-class\">\n                Replace Type Code with Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-type-code-with-subclasses\">\n                Replace Type Code with Subclasses\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-type-code-with-state-strategy\">\n                Replace Type Code with State/Strategy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-subclass-with-fields\">\n                Replace Subclass with Fields\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/simplifying-conditional-expressions\">\n                Simplifying Conditional Expressions\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/decompose-conditional\">\n                Decompose Conditional\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/consolidate-conditional-expression\">\n                Consolidate Conditional Expression\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/consolidate-duplicate-conditional-fragments\">\n                Consolidate Duplicate Conditional Fragments\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-control-flag\">\n                Remove Control Flag\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-nested-conditional-with-guard-clauses\">\n                Replace Nested Conditional with Guard Clauses\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-conditional-with-polymorphism\">\n                Replace Conditional with Polymorphism\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-null-object\">\n                Introduce Null Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-assertion\">\n                Introduce Assertion\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/simplifying-method-calls\">\n                Simplifying Method Calls\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/rename-method\">\n                Rename Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/add-parameter\">\n                Add Parameter\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-parameter\">\n                Remove Parameter\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/separate-query-from-modifier\">\n                Separate Query from Modifier\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/parameterize-method\">\n                Parameterize Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-parameter-with-explicit-methods\">\n                Replace Parameter with Explicit Methods\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/preserve-whole-object\">\n                Preserve Whole Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-parameter-with-method-call\">\n                Replace Parameter with Method Call\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-parameter-object\">\n                Introduce Parameter Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-setting-method\">\n                Remove Setting Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/hide-method\">\n                Hide Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-constructor-with-factory-method\">\n                Replace Constructor with Factory Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-error-code-with-exception\">\n                Replace Error Code with Exception\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-exception-with-test\">\n                Replace Exception with Test\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/dealing-with-generalization\">\n                Dealing with Generalization\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/pull-up-field\">\n                Pull Up Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/pull-up-method\">\n                Pull Up Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/pull-up-constructor-body\">\n                Pull Up Constructor Body\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/push-down-method\">\n                Push Down Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/push-down-field\">\n                Push Down Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-subclass\">\n                Extract Subclass\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-superclass\">\n                Extract Superclass\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-interface\">\n                Extract Interface\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/collapse-hierarchy\">\n                Collapse Hierarchy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/form-template-method\">\n                Form Template Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-inheritance-with-delegation\">\n                Replace Inheritance with Delegation\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-delegation-with-inheritance\">\n                Replace Delegation with Inheritance\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"trail\">\n            <a href=\"/design-patterns\">\n                <i class=\"fa fa-fw fa-puzzle-piece\" aria-hidden=\"true\"></i> Design Patterns\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/what-is-pattern\">\n                What is a Pattern\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/what-is-pattern\">\n                What's a design pattern?\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/history\">\n                History of patterns\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/why-learn-patterns\">\n                Why should I learn patterns?\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/criticism\">\n                Criticism of patterns\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/classification\">\n                Classification of patterns\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/catalog\">\n                Catalog\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-third-level\">\n            <a href=\"/design-patterns/creational-patterns\">\n                Creational Patterns\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/factory-method\">\n                Factory Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/abstract-factory\">\n                Abstract Factory\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/builder\">\n                Builder\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/prototype\">\n                Prototype\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/singleton\">\n                Singleton\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"menu-third-level trail\">\n            <a href=\"/design-patterns/structural-patterns\">\n                Structural Patterns\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/adapter\">\n                Adapter\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/bridge\">\n                Bridge\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/composite\">\n                Composite\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/decorator\">\n                Decorator\n            </a>\n    \n    \n            </li>\n                                <li class=\"trail active\">\n            <a href=\"/design-patterns/facade\">\n                Facade\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/flyweight\">\n                Flyweight\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/proxy\">\n                Proxy\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"menu-third-level\">\n            <a href=\"/design-patterns/behavioral-patterns\">\n                Behavioral Patterns\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/chain-of-responsibility\">\n                Chain of Responsibility\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/command\">\n                Command\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/iterator\">\n                Iterator\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/mediator\">\n                Mediator\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/memento\">\n                Memento\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/observer\">\n                Observer\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/state\">\n                State\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/strategy\">\n                Strategy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/template-method\">\n                Template Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/visitor\">\n                Visitor\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"menu-code-examples\">\n            <a href=\"/design-patterns/examples\">\n                Code Examples\n            </a>\n    \n            <ul >\n                            <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/csharp\">\n                C#\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/cpp\">\n                C++\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/go\">\n                Go\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/java\">\n                Java\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/php\">\n                PHP\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/python\">\n                Python\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/ruby\">\n                Ruby\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/rust\">\n                Rust\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/swift\">\n                Swift\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/typescript\">\n                TypeScript\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n                </div>\n\n            <div class=\"main-menu-aux-controls\">\n                <a href=\"https://refactoring.guru/login\" title=\"Sign in\" style=\" display: inline-flex; align-items: center; gap: 6px; \"><svg style=\"width: 16px; height: 16px; filter:drop-shadow(0 1px 1px #74261e)\" class=\"inline-block mx-0\"  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\"opacity=\"0.4\" d=\"M352.7 222.4c3.2 1 6.5 1.6 10 1.6l21.3 0c17.7 0 32 14.3 32 32s-14.3 32-32 32l-21.3 0c-.8 0-1.7 0-2.5 0c-.9 0-1.7-.1-2.5-.1c-1.7-.1-3.4-.2-5-.4C357.4 414 391.1 512 432 512c44.2 0 80-114.6 80-256S476.2 0 432 0c-40.6 0-74.2 96.9-79.3 222.4z\"/><path fill=\"currentColor\"class=\"fa-primary\" d=\"M320 48a48 48 0 1 0 -96 0 48 48 0 1 0 96 0zM125.7 175.5c9.9-9.9 23.4-15.5 37.5-15.5c1.9 0 3.8 .1 5.6 .3L137.6 254c-9.3 28 1.7 58.8 26.8 74.5l86.2 53.9-25.4 88.8c-4.9 17 5 34.7 22 39.6s34.7-5 39.6-22l28.7-100.4c5.9-20.6-2.6-42.6-20.7-53.9L238 299l30.9-82.4 5.1 12.3C289 264.7 323.9 288 362.7 288l21.3 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-21.3 0c-12.9 0-24.6-7.8-29.5-19.7l-6.3-15c-14.6-35.1-44.1-61.9-80.5-73.1l-48.7-15c-11.1-3.4-22.7-5.2-34.4-5.2c-31 0-60.8 12.3-82.7 34.3L57.4 153.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l23.1-23.1zM91.2 352L32 352c-17.7 0-32 14.3-32 32s14.3 32 32 32l69.6 0c19 0 36.2-11.2 43.9-28.5L157 361.6l-9.5-6c-17.5-10.9-30.5-26.8-37.9-44.9L91.2 352z\"/></svg> Sign in</a>\n                <a href=\"https://feedback.refactoring.guru/\" class=\"userecho-public\" rel=\"nofollow\" title=\"Contact us\"><i class=\"fa fa-fw fa-fw fa-envelope\" aria-hidden=\"true\"></i> Contact us</a>\n            </div>\n        </div>\n    </div>\n</aside>\n\n    <nav class=\"navigation\" role=\"navigation\">\n    <div class=\"navigation-container\">\n        <a class=\"navigation-brand\" href=\"/\">\n            <img alt=\"Refactoring.Guru\"\n                 src=\"/images/content-public/logos/logo-new-mobile.png?id=ea18aa9b032eaa92835ed6d472b03b4a\"\n                 srcset=\"/images/content-public/logos/logo-new-mobile-2x.png?id=7ad5648bfd86ae2e8524147a72877c64 2x\">\n        </a>\n\n        <div class=\"shop-link d-none d-lg-block\" style=\"display: none !important;\">\n            <a class=\"btn btn-md btn-primary btn-featured\" href=\"/store\"><svg style=\"width: 28px; height: 28px; fill: currentColor; display: inline-block; margin-top: -14px;\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><!--! Font Awesome Pro 6.3.0 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2023 Fonticons, Inc. --><path d=\"M356 60l60 20-60 20-20 60-20-60L256 80l60-20L336 0l20 60zM464 208l48 16-48 16-16 48-16-48-48-16 48-16 16-48 16 48zm-243.8-9.8l33 66.9 73.8 10.7 59.8 8.7-43.3 42.2-53.4 52.1 12.6 73.5L313 512l-53.5-28.1-66-34.7-66 34.7L73.9 512l10.2-59.6 12.6-73.5L43.3 326.8 0 284.6l59.8-8.7 73.8-10.7 33-66.9L193.5 144l26.8 54.2zm26.1 114.4l-25-3.6-11.2-22.6-16.7-33.9-16.7 33.9L165.6 309l-25 3.6-37.4 5.4 27.1 26.4 18.1 17.6L144 387l-6.4 37.3 33.5-17.6 22.3-11.7 22.3 11.7 33.5 17.6L242.9 387l-4.3-24.9 18.1-17.6 27.1-26.4-37.4-5.4z\"/></svg>\n                Shop Now!</a>\n        </div>\n\n        <ul class=\"navigation-menu\">\n                            <li class=\"nav-locale dropdown dropdown-locales\">\n                    <button class=\"dropdown-toggle\" id=\"dropdownLanguage\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                        <i class=\"fa fa-fw fa-globe\" aria-hidden=\"true\"></i> <span class=\"caption d-none d-lg-inline-block\">English</span>\n                    </button>\n                    <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownLanguage\">\n                                                                                                                        <a href=\"https://refactoring.guru/design-patterns/facade\" class=\"dropdown-item locale-link active\" data-locale=\"en\" title=\"English\">English</a>\n                                                                                                                                <a href=\"https://refactoring.guru/es/design-patterns/facade\" class=\"dropdown-item locale-link \" data-locale=\"es\" title=\"Español\">Español</a>\n                                                                                                                                <a href=\"https://refactoring.guru/fr/design-patterns/facade\" class=\"dropdown-item locale-link \" data-locale=\"fr\" title=\"Français\">Français</a>\n                                                                                                                                <a href=\"https://refactoring.guru/ja/design-patterns/facade\" class=\"dropdown-item locale-link \" data-locale=\"ja\" title=\"日本語\">日本語</a>\n                                                                                                                                <a href=\"https://refactoring.guru/ko/design-patterns/facade\" class=\"dropdown-item locale-link \" data-locale=\"ko\" title=\"한국어\">한국어</a>\n                                                                                                                                <a href=\"https://refactoring.guru/pl/design-patterns/facade\" class=\"dropdown-item locale-link \" data-locale=\"pl\" title=\"Polski\">Polski</a>\n                                                                                                                                <a href=\"https://refactoring.guru/pt-br/design-patterns/facade\" class=\"dropdown-item locale-link \" data-locale=\"pt-br\" title=\"Português Brasileiro\">Português Brasileiro</a>\n                                                                                                                                <a href=\"https://refactoring.guru/ru/design-patterns/facade\" class=\"dropdown-item locale-link \" data-locale=\"ru\" title=\"Русский\">Русский</a>\n                                                                                                                                <a href=\"https://refactoring.guru/uk/design-patterns/facade\" class=\"dropdown-item locale-link \" data-locale=\"uk\" title=\"Українська\">Українська</a>\n                                                                                                                                <a href=\"https://refactoringguru.cn/design-patterns/facade\" class=\"dropdown-item locale-link \" data-locale=\"zh\" title=\"中文\">中文</a>\ndiv>\n                </li>\n                        <li class=\"nav-contacts\">\n                <a class=\"userecho-private\" href=\"https://feedback.refactoring.guru/?show_feedback_form_private=true\" rel=\"nofollow\" title=\"Contact us\">\n                    <i class=\"fa fa-fw fa-envelope\" aria-hidden=\"true\"></i> <span class=\"caption d-none d-xl-inline-block\">Contact us</span>\n                </a>\n            </li>\n                            <li class=\"nav-user\">\n                    <a href=\"https://refactoring.guru/login\" title=\"Sign in\"><span class=\"sign-in-icon\"><svg style=\"width: 24px; height: 24px; \" class=\"inline-block \"  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\"opacity=\"0.4\" d=\"M352.7 222.4c3.2 1 6.5 1.6 10 1.6l21.3 0c17.7 0 32 14.3 32 32s-14.3 32-32 32l-21.3 0c-.8 0-1.7 0-2.5 0c-.9 0-1.7-.1-2.5-.1c-1.7-.1-3.4-.2-5-.4C357.4 414 391.1 512 432 512c44.2 0 80-114.6 80-256S476.2 0 432 0c-40.6 0-74.2 96.9-79.3 222.4z\"/><path fill=\"currentColor\"class=\"fa-primary\" d=\"M320 48a48 48 0 1 0 -96 0 48 48 0 1 0 96 0zM125.7 175.5c9.9-9.9 23.4-15.5 37.5-15.5c1.9 0 3.8 .1 5.6 .3L137.6 254c-9.3 28 1.7 58.8 26.8 74.5l86.2 53.9-25.4 88.8c-4.9 17 5 34.7 22 39.6s34.7-5 39.6-22l28.7-100.4c5.9-20.6-2.6-42.6-20.7-53.9L238 299l30.9-82.4 5.1 12.3C289 264.7 323.9 288 362.7 288l21.3 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-21.3 0c-12.9 0-24.6-7.8-29.5-19.7l-6.3-15c-14.6-35.1-44.1-61.9-80.5-73.1l-48.7-15c-11.1-3.4-22.7-5.2-34.4-5.2c-31 0-60.8 12.3-82.7 34.3L57.4 153.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l23.1-23.1zM91.2 352L32 352c-17.7 0-32 14.3-32 32s14.3 32 32 32l69.6 0c19 0 36.2-11.2 43.9-28.5L157 361.6l-9.5-6c-17.5-10.9-30.5-26.8-37.9-44.9L91.2 352z\"/></svg></span> <span class=\"account-icon\" style=\"display:none\"><svg style=\"width: 24px; height: 24px; \" class=\"inline-block \"  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 576 512\"><path fill=\"currentColor\"opacity=\"0.4\" d=\"M64 270.5l224-196c74.7 65.4 149.4 130.7 224.1 196.1l.4 177.3c.1 35.4-28.6 64.1-64 64.1l-320.4 0c-35.3 0-64-28.6-64-64L64 270.5zM176.1 433.6c.1 .5 .1 1.1 .2 1.6c.2 1 .5 2 .9 3c.8 1.9 2 3.6 3.4 5.1c2.9 2.9 6.9 4.7 11.3 4.7l192 0c8.8 0 16-7.2 16-16c0-44.2-35.8-80-80-80l-64 0c-22.1 0-42.1 9-56.6 23.4c-7.2 7.2-13.1 15.9-17.1 25.4c-2 4.8-3.6 9.8-4.7 15c-.5 2.6-.9 5.3-1.2 7.9c-.1 1.3-.2 2.7-.3 4.1c-.1 1.4-.1 2.7-.1 4.1c0 .6 0 1.1 .1 1.6zm48.2-184.2c-.1 1.1-.2 2.2-.2 3.2c-.1 1.1-.1 2.2-.1 3.3s0 2.2 .1 3.3c.1 1.1 .1 2.2 .2 3.2c.2 2.1 .5 4.3 1 6.4c.9 4.2 2.1 8.2 3.7 12c3.2 7.7 7.9 14.6 13.7 20.3C254.3 312.8 270.3 320 288 320c35.3 0 64-28.7 64-64s-28.7-64-64-64c-17.7 0-33.7 7.2-45.3 18.7c-5.8 5.8-10.5 12.7-13.7 20.3c-1.6 3.8-2.9 7.8-3.7 12c-.4 2.1-.8 4.2-1 6.4z\"/><path fill=\"currentColor\"class=\"fa-primary\" d=\"M309.1 7.9C297-2.6 279-2.6 266.9 7.9l-256 224c-13.3 11.6-14.6 31.9-3 45.2s31.9 14.6 45.2 3L288 74.5 522.9 280.1c13.3 11.6 33.5 10.3 45.2-3s10.3-33.5-3-45.2L512 185.5 512 64c0-17.7-14.3-32-32-32l-32 0c-17.7 0-32 14.3-32 32l0 37.5L309.1 7.9zM352 256a64 64 0 1 0 -128 0 64 64 0 1 0 128 0zm-96 96c-44.2 0-80 35.8-80 80c0 8.8 7.2 16 16 16l192 0c8.8 0 16-7.2 16-16c0-44.2-35.8-80-80-80l-64 0z\"/></svg></span> <span class=\"sign-out-icon\" style=\"display:none\"><svg style=\"width: 24px; height: 24px; \" class=\"inline-block \"  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\"opacity=\"0.4\" d=\"M0 256C0 397.4 35.8 512 80 512c25.3 0 47.8-37.5 62.5-96L128 416c-.5 0-1.1 0-1.6 0c-.6 0-1.1-.1-1.6-.1c-1.1-.1-2.1-.3-3.2-.5c-2.1-.4-4.1-1.1-6-1.9c-3.8-1.6-7.3-4-10.2-6.9s-5.2-6.3-6.9-10.2c-.8-1.9-1.4-3.9-1.9-6c-.2-1.1-.4-2.3-.5-3.5c0-.3 0-.6-.1-.8c0-.2 0-.4 0-.7c0-.4 0-.7 0-.7c0-.5 0-.7 0-.9c0-.3 0-.6 0-.9c0 0 0-.3 0-.7c0-.2 0-.4 0-.7c0-.2 0-.4 .1-.8c0-.3 .1-.6 .1-.9c0-.2 .1-.4 .1-.7c.1-.8 .2-1.2 .3-1.7c.5-2.2 1.1-4.2 1.9-6.1c1.6-3.8 4-7.3 6.9-10.2c5.8-5.8 13.8-9.4 22.6-9.4l26.2 0c3.8-29.6 5.8-62.1 5.8-96c0-18.3-.6-36.1-1.7-53.4c-1.7-1.2-3.4-2.5-4.9-4c-.8-.8-1.6-1.6-2.2-2.5s-1.3-1.7-1.9-2.6c-1.2-1.8-2.1-3.6-2.9-5.5s-1.4-3.9-1.8-5.9c-.2-1-.3-2-.4-3s-.1-2-.2-3c0-8.3 3.1-16.5 9.4-22.8C141 63.1 112.8 0 80 0C35.8 0 0 114.6 0 256z\"/><path fill=\"currentColor\"class=\"fa-primary\" d=\"M416 48a48 48 0 1 0 -96 0 48 48 0 1 0 96 0zM221.7 175.5c9.9-9.9 23.4-15.5 37.5-15.5c1.9 0 3.8 .1 5.6 .3L233.6 254c-9.3 28 1.7 58.8 26.8 74.5l86.2 53.9-25.4 88.8c-4.9 17 5 34.7 22 39.6s34.7-5 39.6-22l28.7-100.4c5.9-20.6-2.6-42.6-20.7-53.9L334 299l30.9-82.4 5.1 12.3C385 264.7 419.9 288 458.7 288l21.3 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-21.3 0c-12.9 0-24.6-7.8-29.5-19.7l-6.3-15c-14.6-35.1-44.1-61.9-80.5-73.1l-48.7-15c-11.1-3.4-22.7-5.2-34.4-5.2c-31 0-60.8 12.3-82.7 34.3l-23.1 23.1c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l23.1-23.1zM187.2 352L128 352c-17.7 0-32 14.3-32 32s14.3 32 32 32l69.6 0c19 0 36.2-11.2 43.9-28.5L253 361.6l-9.5-6c-17.5-10.9-30.5-26.8-37.9-44.9L187.2 352z\"/></svg></span> <span class=\"caption d-none d-xl-inline-block\">Sign in</span></a>\n                </li>\n                        <li class=\"nav-menu\">\n                <button class=\"navigation-toggle\"><i class=\"fa fa-fw fa-bars\" aria-hidden=\"true\"></i></button>\n            </li>\n        </ul>\n    </div>\n</nav>\n\n    <footer class=\"footer center-content\">\n    <div class=\"footer-container center-content-container\">\n        <div class=\"footer-inner container-fluid\">\n            <div class=\"row\">\n                <div class=\"col-8 col-md-10\">\n                    <ul class=\"footer-list footer-list-horizontal\">\n                        <li><a href=\"/\">Home</a></li>\n                        <li><a href=\"/refactoring\">Refactoring</a></li>\n                        <li><a href=\"/design-patterns\">Design Patterns</a></li>\n                        <li><a href=\"/store\">Premium Content</a></li>\n                        <li><a href=\"https://gitbybit.com/\">Git Course</a></li>\n                        <li><a href=\"https://refactoring.userecho.com/\" rel=\"nofollow\" class=\"userecho-public\">Forum</a></li>\n                        <li><a href=\"https://refactoring.userecho.com/\" rel=\"nofollow\" class=\"userecho-private\">Contact us</a></li>\n                    </ul>\n                </div>\n                <div class=\"col-4 col-md-2\">\n                    <ul class=\"footer-list footer-list-iconic footer-list-right\">\n                                                    <li><a href=\"https://www.facebook.com/refactoring.guru\"><i class=\"fa fa-facebook-official\"></i></a></li>\n                                                <li><a href=\"/sendy/form\" rel=\"nofollow\"><i class=\"fa fa-envelope\" aria-hidden=\"true\"></i></a></li>\n                        <li><a href=\"https://github.com/RefactoringGuru\"><i class=\"fa fa-github-circled\"></i></a></li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"footer-second\">\n        <div class=\"footer-container center-content-container\">\n            <div class=\"footer-inner container-fluid\">\n                <div class=\"row\">\n                    <div class=\"col-12 col-sm-6\">\n                        <i class=\"fa fa-fw fa-copyright\"></i> 2014-2025 <a href=\"/\">Refactoring.Guru</a>. <span style=\"white-space: nowrap\">All rights reserved.</span><br>\n                        <i class=\"fa fa-fw fa-image\"></i> Illustrations by <a href=\"http://zhart.us/\" rel=\"nofollow\"><span style=\"white-space: nowrap\">Dmitry Zhart</span></a>\n                    </div>\n                    <div class=\"footer-links-right col-12 col-sm-6 mt-4 mt-sm-0\">\n                        <ul class=\"footer-list footer-list-horizontal footer-list-right\">\n                            <li><a href=\"/terms\"><span>Terms &amp; Conditions</span></a>\n                            </li>\n                            <li><a href=\"/privacy-policy\"><span>Privacy Policy</span></a>\n                            </li>\n                            <li><a href=\"/content-usage-policy\"><span>Content Usage Policy</span></a>\n                            </li>\n                            <li><a href=\"/site-about\"><span>About us</span></a>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n                                    <div class=\"row\">\n                        <div class=\"col-12 col-sm-4\">\n                            <div class=\"mt-4\">\n                                                                    <b>Ukrainian office:</b><br>\n                                    <object class=\"fa-fw\" style=\"height: 0.8rem; filter: invert(50%);\"  type=\"image/svg+xml\" data=\"/images/content-public/icons/fa-building.svg?id=afddb5806968b0a9acfc1df75a181234\">\n                                        <img class=\"fa-fw\" style=\"height: 0.8rem;\" src=\"/images/content-public/icons/fa-building.svg?id=afddb5806968b0a9acfc1df75a181234\" alt=\"Organization address\"/>\n                                    </object> FOP Olga Skobeleva<br>\n                                    <svg style=\"width: 16px; height: 16px; margin-right: 1px; fill: currentColor;\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\"><path d=\"M352 192c0-88.4-71.6-160-160-160S32 103.6 32 192c0 15.6 5.4 37 16.6 63.4c10.9 25.9 26.2 54 43.6 82.1c34.1 55.3 74.4 108.2 99.9 140c25.4-31.8 65.8-84.7 99.9-140c17.3-28.1 32.7-56.3 43.6-82.1C346.6 229 352 207.6 352 192zm32 0c0 87.4-117 243-168.3 307.2c-12.3 15.3-35.1 15.3-47.4 0C117 435 0 279.4 0 192C0 86 86 0 192 0S384 86 384 192zm-240 0a48 48 0 1 0 96 0 48 48 0 1 0 -96 0zm48 80a80 80 0 1 1 0-160 80 80 0 1 1 0 160z\"/></svg> Abolmasova 7<br>\n                                    <span style=\"margin-left: 21px;\">Kyiv, Ukraine, 02002</span><br>\n                                    <i class=\"fa fa-fw fa-envelope\"></i>  Email: support@refactoring.guru\n                                \n                            </div>\n                        </div>\n                        <div class=\"col-12 col-sm-4\">\n                            <div class=\"mt-4\">\n                                <b>Spanish office:</b><br>\n                                <object class=\"fa-fw\" style=\"height: 0.8rem; filter: invert(50%);\"  type=\"image/svg+xml\" data=\"/images/content-public/icons/fa-building.svg?id=afddb5806968b0a9acfc1df75a181234\">\n                                    <img class=\"fa-fw\" style=\"height: 0.8rem;\" src=\"/images/content-public/icons/fa-building.svg?id=afddb5806968b0a9acfc1df75a181234\" alt=\"Organization address\"/>\n                                </object> Oleksandr Shvets<br>\n                                <svg style=\"width: 16px; height: 16px; margin-right: 1px; fill: currentColor;\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\"><path d=\"M352 192c0-88.4-71.6-160-160-160S32 103.6 32 192c0 15.6 5.4 37 16.6 63.4c10.9 25.9 26.2 54 43.6 82.1c34.1 55.3 74.4 108.2 99.9 140c25.4-31.8 65.8-84.7 99.9-140c17.3-28.1 32.7-56.3 43.6-82.1C346.6 229 352 207.6 352 192zm32 0c0 87.4-117 243-168.3 307.2c-12.3 15.3-35.1 15.3-47.4 0C117 435 0 279.4 0 192C0 86 86 0 192 0S384 86 384 192zm-240 0a48 48 0 1 0 96 0 48 48 0 1 0 -96 0zm48 80a80 80 0 1 1 0-160 80 80 0 1 1 0 160z\"/></svg> Avda Pamplona 64<br>\n                                <span style=\"margin-left: 21px;\">Pamplona, Spain, 31009</span><br>\n                                <i class=\"fa fa-fw fa-envelope\"></i>  Email: support@refactoring.guru\n                            </div>\n                        </div>\n                    </div>\n                            </div>\n        </div>\n    </div>\n</footer>\n\n</div>\n\n\n    <script defer>\n    var CodeMirrorScripts = [\"/js/codemirror.min.js?id=f7ae4adf14bd00338caf8e95da733cc9\"];\n</script>\n\n\n\n    <script>window.loadContent = true;window.loadCart = true;</script>\n</body>\n</html>\n"},
{"title": null, "url": "https://refactoring.guru/design-patterns/decorator", "raw_html": "<!DOCTYPE html>\n<html lang=\"en\" dir=\"ltr\">\n<head prefix=\"og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# website: http://ogp.me/ns/website#\">\n    <meta charset=\"utf-8\">\n    <title>Decorator</title>\n\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n    <meta name=\"theme-color\" content=\"#A2E2FD\" />\n\n            <style>\n        .buy-widget-excl-local-taxes {\n            display: none;\n        }\n    </style>\n    \n    <link rel=\"preload\" href=\"/fonts/PTSans/ptsans-regular_en.woff2?1\" as=\"font\" type=\"font/woff2\" crossorigin>\n    <link rel=\"preload\" href=\"/fonts/PTSans/ptsans-bold_en.woff2?1\" as=\"font\" type=\"font/woff2\" crossorigin>\n        <link rel=\"preload\" href=\"/fonts/fontello/fontawesome.woff2?15843843\" as=\"font\" type=\"font/woff2\" crossorigin>\n    <link rel=\"preload\" href=\"/fonts/FiraCode/woff2/FiraCode-Regular_latin.woff2\" as=\"font\" type=\"font/woff2\" crossorigin>\n        <link rel=\"preconnect dns-prefetch\" href=\"https://cdn.paddle.com\">\n    <link rel=\"preconnect dns-prefetch\" href=\"https://www.googletagmanager.com\">\n\n    <link rel=\"alternate\" href=\"https://refactoring.guru/design-patterns/decorator\" hreflang=\"x-default\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/es/design-patterns/decorator\" hreflang=\"es\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/fr/design-patterns/decorator\" hreflang=\"fr\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/ja/design-patterns/decorator\" hreflang=\"ja\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/ko/design-patterns/decorator\" hreflang=\"ko\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/pl/design-patterns/decorator\" hreflang=\"pl\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/pt-br/design-patterns/decorator\" hreflang=\"pt-br\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/ru/design-patterns/decorator\" hreflang=\"ru\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/uk/design-patterns/decorator\" hreflang=\"uk\"/>\n    <link rel=\"alternate\" href=\"https://refactoringguru.cn/design-patterns/decorator\" hreflang=\"zh\"/>\n\n    <meta name=\"description\" content=\"Decorator is a structural design pattern that lets you attach new behaviors to objects by placing these objects inside special wrapper objects that contain the behaviors.\">\n\n    <link rel=\"canonical\" href=\"https://refactoring.guru/design-patterns/decorator\"/>\n\n    <link rel=\"icon\" type=\"image/x-icon\" href=\"/favicon.png\"/>\n\n        <meta property=\"fb:app_id\" content=\"666819623386327\"/>\n        <meta property=\"og:type\" content=\"website\"/>\n        <meta property=\"og:image\" content=\"https://refactoring.guru/images/refactoring/social/facebook-share-preview.png?id=dbf9e98269595be86eb668f365be6868\"/>\n    \n                    <link rel=\"stylesheet\" href=\"/css/public-packed.min.css?id=aaefab4da343b914b8dda9973604a9e8\">\n        <style type=\"text/css\">\n                    @font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_cyrillic-ext.woff2?1) format(\"woff2\");unicode-range:U+0460-052F,U+1C80-1C88,U+20B4,U+2DE0-2DFF,U+A640-A69F,U+FE2E-FE2F}@font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_cyrillic.woff2?1) format(\"woff2\");unicode-range:U+0400-045F,U+0490-0491,U+04B0-04B1,U+2116}@font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_latin-ext.woff2?1) format(\"woff2\");unicode-range:U+0100-024F,U+0259,U+1E00-1EFF,U+2020,U+20A0-20AB,U+20AD-20CF,U+2113,U+2C60-2C7F,U+A720-A7FF}@font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_latin.woff2?1) format(\"woff2\");unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}@font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_en.woff2?1) format(\"woff2\");unicode-range:U+0-FF,U+131,U+142,U+152,U+153,U+2BB,U+2BC,U+2C6,U+2DA,U+2DC,U+420,U+423,U+430,U+438-43A,U+43D,U+440,U+441,U+443,U+44C,U+457,U+2000-206F,U+2074,U+20AA-20AC,U+20B4,U+20B9,U+20BA,U+20BD,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_cyrillic-ext.woff2?1) format(\"woff2\");unicode-range:U+0460-052F,U+1C80-1C88,U+20B4,U+2DE0-2DFF,U+A640-A69F,U+FE2E-FE2F}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_cyrillic.woff2?1) format(\"woff2\");unicode-range:U+0400-045F,U+0490-0491,U+04B0-04B1,U+2116}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_latin-ext.woff2?1) format(\"woff2\");unicode-range:U+0100-024F,U+0259,U+1E00-1EFF,U+2020,U+20A0-20AB,U+20AD-20CF,U+2113,U+2C60-2C7F,U+A720-A7FF}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_latin.woff2?1) format(\"woff2\");unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_en.woff2?1) format(\"woff2\");unicode-range:U+0-FF,U+131,U+142,U+152,U+153,U+2BB,U+2BC,U+2C6,U+2DA,U+2DC,U+420,U+423,U+430,U+438-43A,U+43D,U+440,U+441,U+443,U+44C,U+457,U+2000-206F,U+2074,U+20AA-20AC,U+20B4,U+20B9,U+20BA,U+20BD,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}\n            </style>\n\n    \n            <script defer src=\"/js/public.min.js?id=1f19fe18ffe0fc844ede8a0f2ee64202\"></script>\n        <script defer src=\"/js/checkout.min.js?id=b4da9c5bd8b1cf504447c07ae8b7cd44\"></script>\n            <script defer src=\"https://cdn.paddle.com/paddle/v2/paddle.js\"></script>\n    <script async src=\"https://www.googletagmanager.com/gtag/js?id=G-SR8Y3GYQYC\"></script>\n\n    <script type=\"application/ld+json\">\n        {\"@context\": \"http://schema.org\", \"@graph\": [{\"@type\":\"Person\",\"@id\":\"https://refactoring.guru/#founder\",\"name\":\"Alexander Shvets\"},{\"@type\":\"Organization\",\"@id\":\"https://refactoring.guru/#organization\",\"name\":\"Refactoring.Guru\",\"description\":\"Refactoring.Guru makes it easy for you to discover everything you need to know about refactoring, design patterns, SOLID principles, and other smart programming topics.\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https://refactoring.guru/#organizationlogo\",\"url\":\"https://refactoring.guru/images/content-public/logos/logo-plain.png\",\"caption\":\"Refactoring.Guru\"},\"logo\":{\"@id\":\"https://refactoring.guru/#organizationlogo\"},\"founder\":{\"@id\":\"https://refactoring.guru/#founder\"},\"sameAs\":[\"https://www.facebook.com/refactoring.guru\",\"https://twitter.com/RefactoringGuru\",\"https://github.com/RefactoringGuru\"]},{\"@type\":\"WebSite\",\"@id\":\"https://refactoring.guru/#website\",\"url\":\"https://refactoring.guru/\",\"name\":\"Refactoring.Guru\",\"description\":\"Refactoring.Guru makes it easy for you to discover everything you need to know about refactoring, design patterns, SOLID principles, and other smart programming topics.\",\"author\":{\"@id\":\"https://refactoring.guru/#founder\"},\"publisher\":{\"@id\":\"https://refactoring.guru/#organization\"},\"copyrightYear\":2014},{\"@type\":\"WebPage\",\"@id\":\"https://refactoring.guru/design-patterns/decorator#webpage\",\"url\":\"https://refactoring.guru/design-patterns/decorator\",\"inLanguage\":\"en\",\"name\":\"Decorator\",\"description\":\"Decorator is a structural design pattern that lets you attach new behaviors to objects by placing these objects inside special wrapper objects that contain the behaviors.\",\"isPartOf\":{\"@id\":\"https://refactoring.guru#website\"},\"breadcrumb\":{\"@id\":\"https://refactoring.guru/design-patterns/decorator#breadcrumb\"},\"primaryImageOfPage\":{\"@id\":\"https://refactoring.guru/design-patterns/decorator#primaryimage\"},\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https://refactoring.guru/design-patterns/decorator#primaryimage\",\"url\":\"https://refactoring.guru/images/patterns/content/decorator/decorator-3x.png\",\"width\":1920,\"height\":1200}},{\"@type\":\"Article\",\"@id\":\"https://refactoring.guru/design-patterns/decorator#article\",\"isPartOf\":{\"@id\":\"https://refactoring.guru/design-patterns/decorator#webpage\"},\"mainEntityOfPage\":{\"@id\":\"https://refactoring.guru/design-patterns/decorator#webpage\"},\"author\":{\"@id\":\"https://refactoring.guru#founder\"},\"publisher\":{\"@id\":\"https://refactoring.guru#organization\"},\"headline\":\"Decorator\",\"datePublished\":\"2024-01-01\",\"dateModified\":\"2025-01-01\",\"articleSection\":\"Design Patterns\",\"image\":{\"@id\":\"https://refactoring.guru/design-patterns/decorator#primaryimage\"}},{\"@type\":\"BreadcrumbList\",\"@id\":\"https://refactoring.guru/design-patterns/decorator#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https://refactoring.guru\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Design Patterns\",\"item\":\"https://refactoring.guru/design-patterns\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"Structural Patterns\",\"item\":\"https://refactoring.guru/design-patterns/structural-patterns\"}]}] }\n    </script>\n\n    <script>\nfunction extend(){var extended={};var deep=false;var i=0;var length=arguments[\"length\"];if(Object[\"prototype\"][\"toString\"][\"call\"](arguments[0])=== '[object Boolean]'){deep= arguments[0];i++};var merge=function(obj){for(var prop in obj){if(Object[\"prototype\"][\"hasOwnProperty\"][\"call\"](obj,prop)){if(deep&& Object[\"prototype\"][\"toString\"][\"call\"](obj[prop])=== '[object Object]'){extended[prop]= extend(true,extended[prop],obj[prop])}else {extended[prop]= obj[prop]}}}};for(;i< length;i++){var obj=arguments[i];merge(obj)};return extended}\nfunction defer(method) {if (window.jQuery) {method();} else {setTimeout(function() { defer(method) }, 50);}}\n</script>\n<script>\n+function(sd){sd = (typeof sd === \"string\") ? JSON.parse(atob(sd)) : sd;for(var property in sd){if(window[property]!== null&&  typeof window[property]=== 'object'){window[property]= extend(true,window[property],sd[property])}else {window[property]= sd[property]}}}(\"eyJsb2NhbGUiOiJlbiIsImxvY2FsZV9wcmVmaXgiOiIiLCJsb2NhbGl6ZWRfdXJsX3ByZWZpeCI6Imh0dHBzOlwvXC9yZWZhY3RvcmluZy5ndXJ1XC8iLCJ1cmxfcHJlZml4IjoiaHR0cHM6XC9cL3JlZmFjdG9yaW5nLmd1cnVcLyIsImxvY2FsaXplZF91cmxfcHJlZml4X20iOiJodHRwczpcL1wvcmVmYWN0b3JpbmcuZ3VydVwvIiwidXJsX3ByZWZpeF9tIjoiaHR0cHM6XC9cL3JlZmFjdG9yaW5nLmd1cnVcLyIsInVzZXJfZWNob19hbGlhcyI6InJlZmFjdG9yaW5nIiwidXNlcl9lY2hvX2hvc3QiOiJmZWVkYmFjay5yZWZhY3RvcmluZy5ndXJ1IiwidXNlcl9lY2hvX3ByaXZhdGVfZm9ydW0iOiIyIiwidXNlcl9lY2hvX2xvY2FsZSI6ImVuIiwidXNlcl9lY2hvX3B1YmxpY19mb3J1bSI6IjMiLCJ1c2VyX2VjaG9fcHVibGljX2ZvcnVtX3VybCI6Imh0dHBzOlwvXC9mZWVkYmFjay5yZWZhY3RvcmluZy5ndXJ1XC8iLCJ1c2VyX2VjaG9fc3NvX3Rva2VuIjoiIn0=\");\n</script>\n\n<script>\n    window.dataLayer = window.dataLayer || [];\n    function gtag(){dataLayer.push(arguments);}\n    gtag('js', new Date());\n            gtag('set', 'linker', {'domains': [\"refactoring.guru,refactoringguru.cn\"]});\n        gtag('config', 'G-SR8Y3GYQYC', {\n        // Disable default page view, because we're going to report them on our own.\n        // This is done to report traffic on localized domains as part of the main website traffic\n        // See the Chinese overrides below.\n        send_page_view: false,\n    });\n</script>\n\n<script>\n    (() => {\n        // On first page view after returning from social network, we need to send the social login event.\n        (function detectSocialLogin() {\n            let getCookie = function (name) {\n                var nameEQ = name + \"=\";\n                var ca = document.cookie.split(';');\n                for (var i = 0; i < ca.length; i++) {\n                    var c = ca[i];\n                    while (c.charAt(0) == ' ') c = c.substring(1, c.length);\n                    if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);\n                }\n                return null;\n            };\n            window.social_login_provider = window.social_login_provider || getCookie('social_login_provider');\n            if (window.social_login_provider) {\n                gtag('set', {referrer: null});\n                gtag('event', 'login', {\"method\": window.social_login_provider});\n                // Delete cookie.\n                document.cookie = 'social_login_provider=; Path=/; Max-Age=-99999999;';\n            }\n        })();\n\n        function trackPageView(location, title) {\n            location = location || document.location.href;\n            title = title || document.title;\n\n            // This is show on https://refactoringguru.cn/ and alike.\n            if (typeof window.analytics_path_prefix === 'string') {\n                if (/^(https?:\\/\\/[^\\/]+?)\\/$/.test(location)) {\n                    location = location.replace(/(https?:\\/\\/[^\\/]+?)\\//, '$1' + window.analytics_path_prefix);\n                } else {\n                    location = location.replace(/(https?:\\/\\/[^\\/]+?)\\//, '$1' + window.analytics_path_prefix + '/');\n                }\n                gtag('set', {\n                    'page_location': location\n                });\n            }\n\n            // This is show on https://refactoring.guru/zh/login and alike.\n            if (typeof window.analytics_location_prefix === 'string') {\n                location = location.replace(/(https?:\\/\\/[^\\/]+?)\\//, window.analytics_location_prefix);\n                gtag('set', {\n                    'page_location': location\n                });\n            }\n\n            gtag('event', 'page_view', {\n                page_location: location,\n                page_title: title,\n                locale: window.locale ?? 'en'\n            });\n        }\n\n        if (window.loadContent) {\n            window.onPageLoad = window.onPageLoad || [];\n            window.onPageLoad.push({\n                func: function (context) {\n                    trackPageView(window.location.origin + context.canonicalPath, context.title);\n                },\n                afterAll: true,\n            });\n        }\n        else {\n            trackPageView();\n        }\n    })();\n</script>\n\n\n</head>\n<body class=\"locale-en   announcement   decorator\" data-body_class=\"decorator\">\n\n<div class=\"body-holder\">\n\n            <div class=\"announcement-block announcement-block-summer prom\" data-id=\"DIDP-announcement\" data-creative-id=\"en\" data-position=\"top\">\n        <span class=\"beach-and-sea\">\n            <span class=\"a1\"></span>\n            <span class=\"a2\"><span class=\"wave\"></span></span>\n            <span class=\"yacht\"></span>\n        </span>\n        <a href=\"/store\">\n            <img src=\"/images/content-public/ann/summer/sunbed.svg?id=b1e7314a63715a13870a6bd1a43613f7\" loading=\"lazy\" style=\"width: 32px; height:32px;vertical-align: middle; scale: -1 1 1;\">\n            <span class=\"announcement-link-text\">Summer SALE</span>\n            <img src=\"/images/content-public/ann/summer/reading-book.svg?id=36006ea720df8c171968cf613e8ea164\" loading=\"lazy\" style=\"width: 32px; height:32px;vertical-align: middle;\">\n        </a>\n    </div>\n\n    \n    <div class=\"cart-placeholder\">\n    <div class=\"cart-block-container\" style=\"display:none\">\n        <div class=\"cart-block btn-group\">\n            <a href=\"#checkout\" class=\"btn cart open-checkout\">\n                <span class=\"cart-text\"></span>&nbsp;<strong class=\"cart-total font-money\"></strong>\n            </a><a href=\"#checkout\" class=\"btn btn-secondary checkout open-checkout\"><i class=\"fa fa-shopping-cart\" aria-hidden=\"true\"></i> <span class=\"btn-text-span d-none d-sm-inline-block d-lg-none d-hg-inline-block\"></span></a>\n        </div>\n    </div>\n</div>\n    <main role=\"main\" class=\"main-content top-content center-content \" data-page_class=\"\">\n        <div class=\"main-content-container center-content-container\">\n                        <div class=\"pattern page text\">\n<article>\n    <div class=\"breadcrumb\">\n                                    <a class=\"home\" href=\"/\"><i class=\"fa fa-home\" aria-hidden=\"true\"></i></a>\n                                                / <a class=\"type\" href=\"/design-patterns\">Design Patterns</a>\n                                                / <a class=\"type\" href=\"/design-patterns/structural-patterns\">Structural Patterns</a>\n                        </div>\n    <h1 class=\"title\">Decorator</h1>\n\n    <script type=\"text/javascript\">\n        // Shorten examples titles for users.\n        var h1 = document.getElementsByTagName(\"H1\")[0];\n        if (h1.offsetHeight > 160) {\n            h1.className += ' smaller';\n        }\n\n        // Small beautification for pattern examples.\n        var title = h1.innerHTML;\n        title = title.replace(/^(Java|C\\+\\+|C#|PHP|Python|Ruby|Delphi): (.*)$/, '<strong>$1:</strong> $2');\n        h1.innerHTML = title;\n    </script>\n\n            <div class=\"aka\">\n            Also known as: <span style=\"display:inline-block\">Wrapper</span>\n        </div>\n    \n    \n\n    <div class=\"section intent\">\n<h2 id=\"intent\"><i class=\"fa fa-flip-horizontal fa-comment-alt-dots\" aria-hidden=\"true\"></i> Intent</h2>\n<p><strong>Decorator</strong> is a structural design pattern that lets you attach new behaviors to objects by placing these objects inside special wrapper objects that contain the behaviors.</p>\n<figure class=\"image\"><img src=\"/images/patterns/content/decorator/decorator.png?id=710c66670c7123e0928d3b3758aea79e\" alt=\"Decorator design pattern\" srcset=\"/images/patterns/content/decorator/decorator.png?id=710c66670c7123e0928d3b3758aea79e 640w,/images/patterns/content/decorator/decorator-1.5x.png?id=72aafc603a289fc64e028e83e8aa843b 960w,/images/patterns/content/decorator/decorator-2x.png?id=736ab07b1d8920ab2c7a70c9cb1305cc 1280w\" sizes=\"(max-width: 720px) 100vw, 640px\" width=\"640\" style=\"aspect-ratio: 1.6;\" fetchpriority=\"high\" /></figure>\n</div>\n<div class=\"section problem\">\n<h2 id=\"problem\"><i class=\"fa fa-frown\" aria-hidden=\"true\"></i> Problem</h2>\n<p>Imagine that you’re working on a notification library which lets other programs notify their users about important events.</p>\n<p>The initial version of the library was based on the <code>Notifier</code> class that had only a few fields, a constructor and a single <code>send</code> method. The method could accept a message argument from a client and send the message to a list of emails that were passed to the notifier via its constructor. A third-party app which acted as a client was supposed to create and configure the notifier object once, and then use it each time something important happened.</p>\n<figure class=\"image\"><img src=\"/images/patterns/diagrams/decorator/problem1-en.png?id=7658efddaaf43acb64ac63a92025cc1e\" alt=\"Structure of the library before applying the Decorator pattern\" srcset=\"/images/patterns/diagrams/decorator/problem1-en.png?id=7658efddaaf43acb64ac63a92025cc1e 540w,/images/patterns/diagrams/decorator/problem1-en-1.5x.png?id=484df9e28899cb97fdd0816e087815d3 810w,/images/patterns/diagrams/decorator/problem1-en-2x.png?id=0bf0496ca959de8698bee735e4e62aac 1080w\" sizes=\"(max-width: 720px) 100vw, 540px\" width=\"540\" style=\"aspect-ratio: 2.45;\" loading=\"lazy\" /><figcaption>\n<p>A program could use the notifier class to send notifications about important events to a predefined set of emails.</p>\n</figcaption></figure>\n<p>At some point, you realize that users of the library expect more than just email notifications. Many of them would like to receive an SMS about critical issues. Others would like to be notified on Facebook and, of course, the corporate users would love to get Slack notifications.</p>\n<figure class=\"image\"><img src=\"/images/patterns/diagrams/decorator/problem2.png?id=ba5d5e106ea8c4848d60e230feca9135\" alt=\"Structure of the library after implementing other notification types\" srcset=\"/images/patterns/diagrams/decorator/problem2.png?id=ba5d5e106ea8c4848d60e230feca9135 440w,/images/patterns/diagrams/decorator/problem2-1.5x.png?id=4f15b6208533188dd09e7da7dd6b509a 660w,/images/patterns/diagrams/decorator/problem2-2x.png?id=28b2c8509b4e78c031d728424b876ebc 880w\" sizes=\"(max-width: 720px) 100vw, 440px\" width=\"440\" style=\"aspect-ratio: 2.59;\" loading=\"lazy\" /><figcaption>\n<p>Each notification type is implemented as a notifier’s subclass.</p>\n</figcaption></figure>\n<p>How hard can that be? You extended the <code>Notifier</code> class and put the additional notification methods into new subclasses. Now the client was supposed to instantiate the desired notification class and use it for all further notifications.</p>\n<p>But then someone reasonably asked you, “Why can’t you use several notification types at once? If your house is on fire, you’d probably want to be informed through every channel.”</p>\n<p>You tried to address that problem by creating special subclasses which combined several notification methods within one class. However, it quickly became apparent that this approach would bloat the code immensely, not only the library code but the client code as well.</p>\n<figure class=\"image\"><img src=\"/images/patterns/diagrams/decorator/problem3.png?id=f3b3e7a107d870871f2c3167adcb7ccb\" alt=\"Structure of the library after creating class combinations\" srcset=\"/images/patterns/diagrams/decorator/problem3.png?id=f3b3e7a107d870871f2c3167adcb7ccb 630w,/images/patterns/diagrams/decorator/problem3-1.5x.png?id=f4ef9d367df838c77121e9f84260b09c 945w,/images/patterns/diagrams/decorator/problem3-2x.png?id=abb7a87b521ce97d7661dd9c0b988cc3 1260w\" sizes=\"(max-width: 720px) 100vw, 630px\" width=\"630\" style=\"aspect-ratio: 1.85;\" loading=\"lazy\" /><figcaption>\n<p>Combinatorial explosion of subclasses.</p>\n</figcaption></figure>\n<p>You have to find some other way to structure notifications classes so that their number won’t accidentally break some Guinness record.</p>\n</div>\n<div class=\"section solution\">\n<h2 id=\"solution\"><i class=\"fa fa-smile-beam\" aria-hidden=\"true\"></i> Solution</h2>\n<p>Extending a class is the first thing that comes to mind when you need to alter an object’s behavior. However, inheritance has several serious caveats that you need to be aware of.</p>\n<ul>\n<li>Inheritance is static. You can’t alter the behavior of an existing object at runtime. You can only replace the whole object with another one that’s created from a different subclass.</li>\n<li>Subclasses can have just one parent class. In most languages, inheritance doesn’t let a class inherit behaviors of multiple classes at the same time.</li>\n</ul>\n<p>One of the ways to overcome these caveats is by using <em>Aggregation</em> or <em>Composition</em>&nbsp;<button class=\"pop\"><span class=\"pop-i\"><i class=\"fa fa-info-circle\" aria-hidden=\"true\"></i></span><span class=\"pop-content\"><em>Aggregation</em>: object A contains objects B; B can live without A.<br/><em>Composition</em>: object A consists of objects B; A manages life cycle of B; B can’t live without A.</span></button> instead of <em>Inheritance</em>. Both of the alternatives work almost the same way: one object <em>has a</em> reference to another and delegates it some work, whereas with inheritance, the object itself <em>is</em> able to do that work, inheriting the behavior from its superclass.</p>\n<p>With this new approach you can easily substitute the linked “helper” object with another, changing the behavior of the container at runtime. An object can use the behavior of various classes, having references to multiple objects and delegating them all kinds of work. Aggregation/composition is the key principle behind many design patterns, including Decorator. On that note, let’s return to the pattern discussion.</p>\n<figure class=\"image\"><img src=\"/images/patterns/diagrams/decorator/solution1-en.png?id=468e68f1e9ae21649d63dd454500741d\" alt=\"Inheritance vs. Aggregation\" srcset=\"/images/patterns/diagrams/decorator/solution1-en.png?id=468e68f1e9ae21649d63dd454500741d 550w,/images/patterns/diagrams/decorator/solution1-en-1.5x.png?id=7c9b30ff8e2af1f6354cb144a67f38d5 825w,/images/patterns/diagrams/decorator/solution1-en-2x.png?id=0acaa7d75290a1647f5402bc5d1c03e7 1100w\" sizes=\"(max-width: 720px) 100vw, 550px\" width=\"550\" style=\"aspect-ratio: 3.44;\" loading=\"lazy\" /><figcaption>\n<p>Inheritance vs. Aggregation</p>\n</figcaption></figure>\n<p>“Wrapper” is the alternative nickname for the Decorator pattern that clearly expresses the main idea of the pattern. A <em>wrapper</em> is an object that can be linked with some <em>target</em> object. The wrapper contains the same set of methods as the target and delegates to it all requests it receives. However, the wrapper may alter the result by doing something either before or after it passes the request to the target.</p>\n<p>When does a simple wrapper become the real decorator? As I mentioned, the wrapper implements the same interface as the wrapped object. That’s why from the client’s perspective these objects are identical. Make the wrapper’s reference field accept any object that follows that interface. This will let you cover an object in multiple wrappers, adding the combined behavior of all the wrappers to it.</p>\n<p>In our notifications example, let’s leave the simple email notification behavior inside the base <code>Notifier</code> class, but turn all other notification methods into decorators.</p>\n<figure class=\"image\"><img src=\"/images/patterns/diagrams/decorator/solution2.png?id=cbee4a27080ce3a0bf773482613e1347\" alt=\"The solution with the Decorator pattern\" srcset=\"/images/patterns/diagrams/decorator/solution2.png?id=cbee4a27080ce3a0bf773482613e1347 640w,/images/patterns/diagrams/decorator/solution2-1.5x.png?id=d2fa0c0b9bf5cba0e38be7aff7e7b7a8 960w,/images/patterns/diagrams/decorator/solution2-2x.png?id=7775f76b94dbd5cd25f711ce81f59262 1280w\" sizes=\"(max-width: 720px) 100vw, 640px\" width=\"640\" style=\"aspect-ratio: 1.39;\" loading=\"lazy\" /><figcaption>\n<p>Various notification methods become decorators.</p>\n</figcaption></figure>\n<p>The client code would need to wrap a basic notifier object into a set of decorators that match the client’s preferences. The resulting objects will be structured as a stack.</p>\n<figure class=\"image\"><img src=\"/images/patterns/diagrams/decorator/solution3-en.png?id=b7e2e2036435265350ba0c6796162ab5\" alt=\"Apps might configure complex stacks of notification decorators\" srcset=\"/images/patterns/diagrams/decorator/solution3-en.png?id=b7e2e2036435265350ba0c6796162ab5 300w,/images/patterns/diagrams/decorator/solution3-en-1.5x.png?id=3c9b7a4aec3a8d2f68d64bffb79fa4f7 450w,/images/patterns/diagrams/decorator/solution3-en-2x.png?id=9a4ef2b4267685a83d0233d78775497b 600w\" sizes=\"(max-width: 720px) 100vw, 300px\" width=\"300\" style=\"aspect-ratio: 1.03;\" loading=\"lazy\" /><figcaption>\n<p>Apps might configure complex stacks of notification decorators.</p>\n</figcaption></figure>\n<p>The last decorator in the stack would be the object that the client actually works with. Since all decorators implement the same interface as the base notifier, the rest of the client code won’t care whether it works with the “pure” notifier object or the decorated one.</p>\n<p>We could apply the same approach to other behaviors such as formatting messages or composing the recipient list. The client can decorate the object with any custom decorators, as long as they follow the same interface as the others.</p>\n</div>\n<div class=\"section analogy\">\n<h2 id=\"analogy\"><i class=\"fa fa-car-side\" aria-hidden=\"true\"></i> Real-World Analogy</h2>\n<figure class=\"image\"><img src=\"/images/patterns/content/decorator/decorator-comic-1.png?id=80d95baacbfb91f5bcdbdc7814b0c64d\" alt=\"Example of the Decorator pattern\" srcset=\"/images/patterns/content/decorator/decorator-comic-1.png?id=80d95baacbfb91f5bcdbdc7814b0c64d 600w,/images/patterns/content/decorator/decorator-comic-1-1.5x.png?id=490ef9754d7554c2046b69f6f213c6da 900w,/images/patterns/content/decorator/decorator-comic-1-2x.png?id=ba869f621b6e0ea173fdc2b535fc7eed 1200w\" sizes=\"(max-width: 720px) 100vw, 600px\" width=\"600\" style=\"aspect-ratio: 2;\" loading=\"lazy\" /><figcaption>\n<p>You get a combined effect from wearing multiple pieces of clothing.</p>\n</figcaption></figure>\n<p>Wearing clothes is an example of using decorators. When you’re cold, you wrap yourself in a sweater. If you’re still cold with a sweater, you can wear a jacket on top. If it’s raining, you can put on a raincoat. All of these garments “extend” your basic behavior but aren’t part of you, and you can easily take off any piece of clothing whenever you don’t need it.</p>\n</div>\n<div class=\"section structure-container\">\n<h2 id=\"structure\"><i class=\"fa fa-sitemap\" aria-hidden=\"true\"></i> Structure</h2>\n<div class=\"structure\">\n<div class=\"struct-image1 struct-image\">\n<figure class=\"image\"><img class=\"structure-img-non-indexed d-none d-xl-block\" src=\"/images/patterns/diagrams/decorator/structure.png?id=8c95d894aecce5315cc1b12093a7ea0c\" alt=\"Structure of the Decorator design pattern\" srcset=\"/images/patterns/diagrams/decorator/structure.png?id=8c95d894aecce5315cc1b12093a7ea0c 480w,/images/patterns/diagrams/decorator/structure-1.5x.png?id=4b2cd91d4483d9e3bba725f0e45d281d 720w,/images/patterns/diagrams/decorator/structure-2x.png?id=3cfa1f10417a4ef0c12580bc4a63b80d 960w\" sizes=\"(max-width: 720px) 100vw, 480px\" width=\"480\" style=\"aspect-ratio: 0.92;\" loading=\"lazy\" /><img class=\"structure-img-indexed d-xl-none\" src=\"/images/patterns/diagrams/decorator/structure-indexed.png?id=09401b230a58f2249e4c9a1195d485a0\" alt=\"Structure of the Decorator design pattern\" srcset=\"/images/patterns/diagrams/decorator/structure-indexed.png?id=09401b230a58f2249e4c9a1195d485a0 500w,/images/patterns/diagrams/decorator/structure-indexed-1.5x.png?id=dccc54182965078ccb4cfdeee41acbe5 750w,/images/patterns/diagrams/decorator/structure-indexed-2x.png?id=2733e7d0e322bfb2f150ccf8a878dbf6 1000w\" sizes=\"(max-width: 720px) 100vw, 500px\" width=\"500\" style=\"aspect-ratio: 0.98;\" loading=\"lazy\" /></figure>\n</div>\n<ol><li class=\"struct-li1\">\n<p>The <strong>Component</strong> declares the common interface for both wrappers and wrapped objects.</p>\n</li>\n<li class=\"struct-li2\">\n<p><strong>Concrete Component</strong> is a class of objects being wrapped. It defines the basic behavior, which can be altered by decorators.</p>\n</li>\n<li class=\"struct-li3\">\n<p>The <strong>Base Decorator</strong> class has a field for referencing a wrapped object. The field’s type should be declared as the component interface so it can contain both concrete components and decorators. The base decorator delegates all operations to the wrapped object.</p>\n</li>\n<li class=\"struct-li4\">\n<p><strong>Concrete Decorators</strong> define extra behaviors that can be added to components dynamically. Concrete decorators override methods of the base decorator and execute their behavior either before or after calling the parent method.</p>\n</li>\n<li class=\"struct-li5\">\n<p>The <strong>Client</strong> can wrap components in multiple layers of decorators, as long as it works with all objects via the component interface.</p>\n</li></ol>\n<style structure type=\"text/css\" >\n@media (min-width: 1200px) {\n.structure {\nmargin: 0;\nwidth: auto;\nheight: 540px;\n}\n\n.struct-image1 {\nleft: 200px;\ntop: 10px;\n}\n\n.struct-li1 {\nleft: 0px;\ntop: 70px;\nwidth: 190px;\n}\n\n.struct-li2 {\nleft: 0px;\ntop: 210px;\nwidth: 190px;\n}\n\n.struct-li3 {\nleft: 690px;\ntop: 190px;\nwidth: 230px;\n}\n\n.struct-li4 {\nleft: 40px;\ntop: 380px;\nwidth: 320px;\n}\n\n.struct-li5 {\nleft: 610px;\ntop: 20px;\nwidth: 310px;\n}\n}\n\n</style>\n</div></div>\n<div class=\"section pseudocode\">\n<h2 id=\"pseudocode\"><i class=\"fa fa-hashtag\" aria-hidden=\"true\"></i> Pseudocode</h2>\n<p>In this example, the <strong>Decorator</strong> pattern lets you compress and encrypt sensitive data independently from the code that actually uses this data.</p>\n<figure class=\"image\"><img src=\"/images/patterns/diagrams/decorator/example.png?id=eec9dc488f00c85f50e764323baa723e\" alt=\"Structure of the Decorator pattern example\" srcset=\"/images/patterns/diagrams/decorator/example.png?id=eec9dc488f00c85f50e764323baa723e 540w,/images/patterns/diagrams/decorator/example-1.5x.png?id=40ccaba4f5a8e6a2ebac697f04b9f10a 810w,/images/patterns/diagrams/decorator/example-2x.png?id=4891323a27d5601a174eec366187d833 1080w\" sizes=\"(max-width: 720px) 100vw, 540px\" width=\"540\" style=\"aspect-ratio: 0.98;\" loading=\"lazy\" /><figcaption>\n<p>The encryption and compression decorators example.</p>\n</figcaption></figure>\n<p>The application wraps the data source object with a pair of decorators. Both wrappers change the way the data is written to and read from the disk:</p>\n<ul>\n<li>\n<p>Just before the data is <strong>written to disk</strong>, the decorators encrypt and compress it. The original class writes the encrypted and protected data to the file without knowing about the change.</p>\n</li>\n<li>\n<p>Right after the data is <strong>read from disk</strong>, it goes through the same decorators, which decompress and decode it.</p>\n</li>\n</ul>\n<p>The decorators and the data source class implement the same interface, which makes them all interchangeable in the client code.</p>\n<figure class=\"code\">\n<pre class=\"code\" lang=\"pseudocode\">// The component interface defines operations that can be\n// altered by decorators.\ninterface DataSource is\n    method writeData(data)\n    method readData():data\n\n// Concrete components provide default implementations for the\n// operations. There might be several variations of these\n// classes in a program.\nclass FileDataSource implements DataSource is\n    constructor FileDataSource(filename) { ... }\n\n    method writeData(data) is\n        // Write data to file.\n\n    method readData():data is\n        // Read data from file.\n\n// The base decorator class follows the same interface as the\n// other components. The primary purpose of this class is to\n// define the wrapping interface for all concrete decorators.\n// The default implementation of the wrapping code might include\n// a field for storing a wrapped component and the means to\n// initialize it.\nclass DataSourceDecorator implements DataSource is\n    protected field wrappee: DataSource\n\n    constructor DataSourceDecorator(source: DataSource) is\n        wrappee = source\n\n    // The base decorator simply delegates all work to the\n    // wrapped component. Extra behaviors can be added in\n    // concrete decorators.\n    method writeData(data) is\n        wrappee.writeData(data)\n\n    // Concrete decorators may call the parent implementation of\n    // the operation instead of calling the wrapped object\n    // directly. This approach simplifies extension of decorator\n    // classes.\n    method readData():data is\n        return wrappee.readData()\n\n// Concrete decorators must call methods on the wrapped object,\n// but may add something of their own to the result. Decorators\n// can execute the added behavior either before or after the\n// call to a wrapped object.\nclass EncryptionDecorator extends DataSourceDecorator is\n    method writeData(data) is\n        // 1. Encrypt passed data.\n        // 2. Pass encrypted data to the wrappee's writeData\n        // method.\n\n    method readData():data is\n        // 1. Get data from the wrappee's readData method.\n        // 2. Try to decrypt it if it's encrypted.\n        // 3. Return the result.\n\n// You can wrap objects in several layers of decorators.\nclass CompressionDecorator extends DataSourceDecorator is\n    method writeData(data) is\n        // 1. Compress passed data.\n        // 2. Pass compressed data to the wrappee's writeData\n        // method.\n\n    method readData():data is\n        // 1. Get data from the wrappee's readData method.\n        // 2. Try to decompress it if it's compressed.\n        // 3. Return the result.\n\n\n// Option 1. A simple example of a decorator assembly.\nclass Application is\n    method dumbUsageExample() is\n        source = new FileDataSource(&quot;somefile.dat&quot;)\n        source.writeData(salaryRecords)\n        // The target file has been written with plain data.\n\n        source = new CompressionDecorator(source)\n        source.writeData(salaryRecords)\n        // The target file has been written with compressed\n        // data.\n\n        source = new EncryptionDecorator(source)\n        // The source variable now contains this:\n        // Encryption &gt; Compression &gt; FileDataSource\n        source.writeData(salaryRecords)\n        // The file has been written with compressed and\n        // encrypted data.\n\n\n// Option 2. Client code that uses an external data source.\n// SalaryManager objects neither know nor care about data\n// storage specifics. They work with a pre-configured data\n// source received from the app configurator.\nclass SalaryManager is\n    field source: DataSource\n\n    constructor SalaryManager(source: DataSource) { ... }\n\n    method load() is\n        return source.readData()\n\n    method save() is\n        source.writeData(salaryRecords)\n    // ...Other useful methods...\n\n\n// The app can assemble different stacks of decorators at\n// runtime, depending on the configuration or environment.\nclass ApplicationConfigurator is\n    method configurationExample() is\n        source = new FileDataSource(&quot;salary.dat&quot;)\n        if (enabledEncryption)\n            source = new EncryptionDecorator(source)\n        if (enabledCompression)\n            source = new CompressionDecorator(source)\n\n        logger = new SalaryManager(source)\n        salary = logger.load()\n    // ...\n</pre>\n</figure>\n</div>\n<div class=\"section applicability-container\">\n<h2 id=\"applicability\"><i class=\"fa fa-lightbulb-on\" aria-hidden=\"true\"></i> Applicability</h2>\n<div class=\"applicability\">\n<div class=\"applicability-problem\">\n<p><i class=\"fa fa-fw fa-bug\" aria-hidden=\"true\"></i> Use the Decorator pattern when you need to be able to assign extra behaviors to objects at runtime without breaking the code that uses these objects.</p>\n</div><div class=\"applicability-solution\">\n<p><i class=\"fa fa-fw fa-bolt\" aria-hidden=\"true\"></i> The Decorator lets you structure your business logic into layers, create a decorator for each layer and compose objects with various combinations of this logic at runtime. The client code can treat all these objects in the same way, since they all follow a common interface.</p>\n</div>\n<div class=\"applicability-problem\">\n<p><i class=\"fa fa-fw fa-bug\" aria-hidden=\"true\"></i> Use the pattern when it’s awkward or not possible to extend an object’s behavior using inheritance.</p>\n</div><div class=\"applicability-solution\">\n<p><i class=\"fa fa-fw fa-bolt\" aria-hidden=\"true\"></i> Many programming languages have the <code>final</code> keyword that can be used to prevent further extension of a class. For a final class, the only way to reuse the existing behavior would be to wrap the class with your own wrapper, using the Decorator pattern.</p>\n</div>\n</div></div>\n<div class=\"section checklist\">\n<h2 id=\"checklist\"><i class=\"fa fa-clipboard-list-check\" aria-hidden=\"true\"></i> How to Implement</h2>\n<ol>\n<li>\n<p>Make sure your business domain can be represented as a primary component with multiple optional layers over it.</p>\n</li>\n<li>\n<p>Figure out what methods are common to both the primary component and the optional layers. Create a component interface and declare those methods there.</p>\n</li>\n<li>\n<p>Create a concrete component class and define the base behavior in it.</p>\n</li>\n<li>\n<p>Create a base decorator class. It should have a field for storing a reference to a wrapped object. The field should be declared with the component interface type to allow linking to concrete components as well as decorators. The base decorator must delegate all work to the wrapped object.</p>\n</li>\n<li>\n<p>Make sure all classes implement the component interface.</p>\n</li>\n<li>\n<p>Create concrete decorators by extending them from the base decorator. A concrete decorator must execute its behavior before or after the call to the parent method (which always delegates to the wrapped object).</p>\n</li>\n<li>\n<p>The client code must be responsible for creating decorators and composing them in the way the client needs.</p>\n</li>\n</ol>\n</div>\n<div class=\"section pros-cons\">\n<h2 id=\"pros-cons\"><i class=\"fa fa-balance-scale\" aria-hidden=\"true\"></i> Pros and Cons</h2>\n<div class=\"row\"><div class=\"col-sm-6\">\n<ul>\n<li><i class=\"fa fa-fw fa-check\" aria-hidden=\"true\"></i> You can extend an object’s behavior without making a new subclass.</li>\n<li><i class=\"fa fa-fw fa-check\" aria-hidden=\"true\"></i> You can add or remove responsibilities from an object at runtime.</li>\n<li><i class=\"fa fa-fw fa-check\" aria-hidden=\"true\"></i> You can combine several behaviors by wrapping an object into multiple decorators.</li>\n<li><i class=\"fa fa-fw fa-check\" aria-hidden=\"true\"></i> <em>Single Responsibility Principle</em>. You can divide a monolithic class that implements many possible variants of behavior into several smaller classes.</li>\n</ul>\n</div><div class=\"col-sm-6\">\n<ul>\n<li><i class=\"fa fa-fw fa-times\" aria-hidden=\"true\"></i> It’s hard to remove a specific wrapper from the wrappers stack.</li>\n<li><i class=\"fa fa-fw fa-times\" aria-hidden=\"true\"></i> It’s hard to implement a decorator in such a way that its behavior doesn’t depend on the order in the decorators stack.</li>\n<li><i class=\"fa fa-fw fa-times\" aria-hidden=\"true\"></i> The initial configuration code of layers might look pretty ugly.</li>\n</ul>\n</div></div></div>\n<div class=\"section relations\">\n<h2 id=\"relations\"><i class=\"fa fa-exchange-alt\" aria-hidden=\"true\"></i> Relations with Other Patterns</h2>\n<ul>\n<li>\n<p><a href=\"/design-patterns/adapter\">Adapter</a> provides a completely different interface for accessing an existing object. On the other hand, with the <a href=\"/design-patterns/decorator\">Decorator</a> pattern the interface either stays the same or gets extended. In addition, <em>Decorator</em> supports recursive composition, which isn’t possible when you use <em>Adapter</em>.</p>\n</li>\n<li>\n<p>With <a href=\"/design-patterns/adapter\">Adapter</a> you access an existing object via different interface. With <a href=\"/design-patterns/proxy\">Proxy</a>, the interface stays the same. With <a href=\"/design-patterns/decorator\">Decorator</a> you access the object via an enhanced interface.</p>\n</li>\n<li>\n<p><a href=\"/design-patterns/chain-of-responsibility\">Chain of Responsibility</a> and <a href=\"/design-patterns/decorator\">Decorator</a> have very similar class structures. Both patterns rely on recursive composition to pass the execution through a series of objects. However, there are several crucial differences.</p>\n<p>The <em>CoR</em> handlers can execute arbitrary operations independently of each other. They can also stop passing the request further at any point. On the other hand, various <em>Decorators</em> can extend the object’s behavior while keeping it consistent with the base interface. In addition, decorators aren’t allowed to break the flow of the request.</p>\n</li>\n<li>\n<p><a href=\"/design-patterns/composite\">Composite</a> and <a href=\"/design-patterns/decorator\">Decorator</a> have similar structure diagrams since both rely on recursive composition to organize an open-ended number of objects.</p>\n<p>A <em>Decorator</em> is like a <em>Composite</em> but only has one child component. There’s another significant difference: <em>Decorator</em> adds additional responsibilities to the wrapped object, while <em>Composite</em> just “sums up” its children’s results.</p>\n<p>However, the patterns can also cooperate: you can use <em>Decorator</em> to extend the behavior of a specific object in the <em>Composite</em> tree.</p>\n</li>\n<li>\n<p>Designs that make heavy use of <a href=\"/design-patterns/composite\">Composite</a> and <a href=\"/design-patterns/decorator\">Decorator</a> can often benefit from using <a href=\"/design-patterns/prototype\">Prototype</a>. Applying the pattern lets you clone complex structures instead of re-constructing them from scratch.</p>\n</li>\n<li>\n<p><a href=\"/design-patterns/decorator\">Decorator</a> lets you change the skin of an object, while <a href=\"/design-patterns/strategy\">Strategy</a> lets you change the guts.</p>\n</li>\n<li>\n<p><a href=\"/design-patterns/decorator\">Decorator</a> and <a href=\"/design-patterns/proxy\">Proxy</a> have similar structures, but very different intents. Both patterns are built on the composition principle, where one object is supposed to delegate some of the work to another. The difference is that a <em>Proxy</em> usually manages the life cycle of its service object on its own, whereas the composition of <em>Decorators</em> is always controlled by the client.</p>\n</li>\n</ul>\n</div>\n<div class=\"section implementations\">\n<h2 id=\"implementations\"><i class=\"fa fa-code\" aria-hidden=\"true\"></i> Code Examples</h2>\n<p><a href=\"/design-patterns/decorator/csharp/example\" title=\"Decorator in C#\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/csharp.svg?id=da64592defc6e86d57c39c66e9de3e58\" alt=\"Decorator in C#\" /></a>\n<a href=\"/design-patterns/decorator/cpp/example\" title=\"Decorator in C++\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/cpp.svg?id=f7782ed8b8666246bfcc3f8fefc3b858\" alt=\"Decorator in C++\" /></a>\n<a href=\"/design-patterns/decorator/go/example\" title=\"Decorator in Go\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/go.svg?id=1a89927eb99b1ea3fde7701d97970aca\" alt=\"Decorator in Go\" /></a>\n<a href=\"/design-patterns/decorator/java/example\" title=\"Decorator in Java\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/java.svg?id=e6d87e2dca08c953fe3acd1275ed4f4e\" alt=\"Decorator in Java\" /></a>\n<a href=\"/design-patterns/decorator/php/example\" title=\"Decorator in PHP\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/php.svg?id=be1906eb26b71ec1d3b93720d6156618\" alt=\"Decorator in PHP\" /></a>\n<a href=\"/design-patterns/decorator/python/example\" title=\"Decorator in Python\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/python.svg?id=6d815d43c0f7050a1151b43e51569c9f\" alt=\"Decorator in Python\" /></a>\n<a href=\"/design-patterns/decorator/ruby/example\" title=\"Decorator in Ruby\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/ruby.svg?id=b065b718c914bf8e960ef731600be1eb\" alt=\"Decorator in Ruby\" /></a>\n<a href=\"/design-patterns/decorator/rust/example\" title=\"Decorator in Rust\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/rust.svg?id=1f5698a4b5ae23fe79413511747e4a87\" alt=\"Decorator in Rust\" /></a>\n<a href=\"/design-patterns/decorator/swift/example\" title=\"Decorator in Swift\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/swift.svg?id=0b716c2d52ec3a48fbe91ac031070c1d\" alt=\"Decorator in Swift\" /></a>\n<a href=\"/design-patterns/decorator/typescript/example\" title=\"Decorator in TypeScript\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/typescript.svg?id=2239d0f16cb703540c205dd8cb0c0cb7\" alt=\"Decorator in TypeScript\" /></a></p>\n</div>\n\n\n    <div class=\"banner-set2\" id=\"book-promo\">\n            <div class=\"prom banner-content banner-bg banner-striped banner-with-image\" data-id=\"DP: 1: Support our free website and own the eBook!\" data-creative-id=\"standard-en\" data-position=\"content_bottom\">\n                <div class=\"banner-image\">\n                    <a href=\"/design-patterns/book\">\n                        <img width=\"200\" height=\"200\" loading=\"lazy\" src=\"/images/patterns/banners/patterns-book-banner-3.png?id=7d445df13c80287beaab234b4f3b698c\" srcset=\"/images/patterns/banners/patterns-book-banner-3-2x.png?id=0cc3f77ab421d1a5c02ee46488231c3a 2x\">\n                    </a>\n                </div>\n\n                <div class=\"banner-text\">\n                    <h3 class=\"title\">Support our free website and own the eBook!</h3>\n                    <ul style=\"font-size: 14px;\">\n                        <li style=\"margin: 0;\">22 design patterns and 8 principles explained in depth.</li>\n                        <li style=\"margin: 0;\">409 well-structured, easy to read, jargon-free pages.</li>\n                        <li style=\"margin: 0;\">225 clear and helpful illustrations and diagrams.</li>\n                        <li style=\"margin: 0;\">An archive with code examples in 11 languages.</li>\n                        <li style=\"margin: 0;\">All devices supported: PDF/EPUB/MOBI/KFX formats.</li>\n                    </ul>\n                    <a class=\"btn btn-secondary\" href=\"/design-patterns/book\"><i class=\"fa fa-book\" aria-hidden=\"true\"></i> Learn more…</a>\n                </div>\n            </div>\n        </div>\n\n    </article>\n\n<nav class=\"prev-next\">\n                    <div class=\"next\">\n                <h4>Read next</h4>\n                <a rel=\"next\" href=\"/design-patterns/facade\" class=\"btn btn-primary\">Facade&nbsp;<span class=\"fa fa-arrow-right\"></span></a>\n            </div>\n                            <div class=\"prev\">\n                <h4>Return</h4>\n                <a rel=\"prev\" href=\"/design-patterns/composite\" class=\"btn btn-default\"><span class=\"fa fa-arrow-left\"></span>&nbsp;Composite </a>\n            </div>\n            </nav>\n</div>\n\n<aside class=\"feature content-secondary\">\n    <div class=\"prom banner-sidebar banner-removable banner-removable-patterns\" data-id=\"DP: Sidebar\" data-creative-id=\"standard-sidebar-en\" data-position=\"sidebar\">\n        <div class=\"banner-inner\">\n            <div class=\"image3d-book-right\">\n                <div class=\"image3d-cover\" style=\"background: #0b3752;\">\n                    <a href=\"/design-patterns/book\">\n                        <img width=\"250\" height=\"375\" loading=\"lazy\" src=\"/images/patterns/book/web-cover-en.png?id=328861769fd11617674e3b8a7e2dd9e7\" srcset=\"/images/patterns/book/web-cover-en-2x.png?id=02940141c5652ed5a426d87390b16366 2x\">\n                    </a>\n                </div>\n            </div>\n            <div style=\"margin-top: 1rem\">\n                <p class=\"text-center\" >This article is a part of our eBook<br/><strong>Dive Into Design Patterns</strong>.</p>\n                <a href=\"/design-patterns/book\" class=\"btn btn-secondary btn-block\"><i class=\"fa fa-book\" aria-hidden=\"true\"></i> Learn more…</a>\n            </div>\n        </div>\n    </div>\n\n\n</aside>\n                    </div>\n    </main>\n\n    <aside class=\"sidebar main-menu\">\n    <div class=\"main-menu-controls\">\n        <button class=\"navigation-toggle\"><i class=\"fa fa-fw fa-times\"></i></button>\n    </div>\n    <div class=\"main-menu-list-wrapper nano\">\n        <div class=\"main-menu-list nano-content\">\n            <a class=\"menu-brand\" href=\"/\">\n                                    <img width=200 height=241 loading=\"lazy\" alt=\"Refactoring.Guru\" src=\"/images/content-public/logos/logo-new.png?id=97d554614702483f31e38b32e82d8e34\" srcset=\"/images/content-public/logos/logo-new-2x.png?id=3bc33294e095bab1d6fe9ae421d07837 2x\">\n                            </a>\n\n            <div class=\"menu-container\" style=\"position: relative\">\n                                <ul class=\"menu-list trail\">\n                            <li class=\"featured\">\n            <a href=\"/store\">\n                <i class=\"fa fa-fw fa-star\" aria-hidden=\"true\"></i> Premium Content\n            </a>\n    \n            <ul >\n                            <li class=\"featured menu-fs15\">\n            <a href=\"/design-patterns/book\">\n                <i class=\"fa fa-fw fa-book\" aria-hidden=\"true\"></i> Design Patterns eBook\n            </a>\n    \n    \n            </li>\n                                <li class=\"featured menu-fs15\">\n            <a href=\"/refactoring/course\">\n                <i class=\"fa fa-fw fa-graduation-cap\" aria-hidden=\"true\"></i> Refactoring Course\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring\">\n                <i class=\"fa fa-fw fa-scissors\" aria-hidden=\"true\"></i> Refactoring\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/refactoring/what-is-refactoring\">\n                What is Refactoring\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/refactoring/what-is-refactoring\">\n                Clean code\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/technical-debt\">\n                Technical debt\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/when\">\n                When to refactor\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/how-to\">\n                How to refactor\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/catalog\">\n                Catalog\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells\">\n                Code Smells\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/refactoring/smells/bloaters\">\n                Bloaters\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/long-method\">\n                Long Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/large-class\">\n                Large Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/primitive-obsession\">\n                Primitive Obsession\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/long-parameter-list\">\n                Long Parameter List\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/data-clumps\">\n                Data Clumps\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/oo-abusers\">\n                Object-Orientation Abusers\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/switch-statements\">\n                Switch Statements\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/temporary-field\">\n                Temporary Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/refused-bequest\">\n                Refused Bequest\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/alternative-classes-with-different-interfaces\">\n                Alternative Classes with Different Interfaces\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/change-preventers\">\n                Change Preventers\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/divergent-change\">\n                Divergent Change\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/shotgun-surgery\">\n                Shotgun Surgery\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/parallel-inheritance-hierarchies\">\n                Parallel Inheritance Hierarchies\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/dispensables\">\n                Dispensables\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/comments\">\n                Comments\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/duplicate-code\">\n                Duplicate Code\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/lazy-class\">\n                Lazy Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/data-class\">\n                Data Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/dead-code\">\n                Dead Code\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/speculative-generality\">\n                Speculative Generality\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/couplers\">\n                Couplers\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/feature-envy\">\n                Feature Envy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/inappropriate-intimacy\">\n                Inappropriate Intimacy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/message-chains\">\n                Message Chains\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/middle-man\">\n                Middle Man\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/other\">\n                Other Smells\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/incomplete-library-class\">\n                Incomplete Library Class\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques\">\n                Refactorings\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/refactoring/techniques/composing-methods\">\n                Composing Methods\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/extract-method\">\n                Extract Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/inline-method\">\n                Inline Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-variable\">\n                Extract Variable\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/inline-temp\">\n                Inline Temp\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-temp-with-query\">\n                Replace Temp with Query\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/split-temporary-variable\">\n                Split Temporary Variable\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-assignments-to-parameters\">\n                Remove Assignments to Parameters\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-method-with-method-object\">\n                Replace Method with Method Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/substitute-algorithm\">\n                Substitute Algorithm\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/moving-features-between-objects\">\n                Moving Features between Objects\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/move-method\">\n                Move Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/move-field\">\n                Move Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-class\">\n                Extract Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/inline-class\">\n                Inline Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/hide-delegate\">\n                Hide Delegate\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-middle-man\">\n                Remove Middle Man\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-foreign-method\">\n                Introduce Foreign Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-local-extension\">\n                Introduce Local Extension\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/organizing-data\">\n                Organizing Data\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/self-encapsulate-field\">\n                Self Encapsulate Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-data-value-with-object\">\n                Replace Data Value with Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/change-value-to-reference\">\n                Change Value to Reference\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/change-reference-to-value\">\n                Change Reference to Value\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-array-with-object\">\n                Replace Array with Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/duplicate-observed-data\">\n                Duplicate Observed Data\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/change-unidirectional-association-to-bidirectional\">\n                Change Unidirectional Association to Bidirectional\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/change-bidirectional-association-to-unidirectional\">\n                Change Bidirectional Association to Unidirectional\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-magic-number-with-symbolic-constant\">\n                Replace Magic Number with Symbolic Constant\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/encapsulate-field\">\n                Encapsulate Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/encapsulate-collection\">\n                Encapsulate Collection\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-type-code-with-class\">\n                Replace Type Code with Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-type-code-with-subclasses\">\n                Replace Type Code with Subclasses\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-type-code-with-state-strategy\">\n                Replace Type Code with State/Strategy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-subclass-with-fields\">\n                Replace Subclass with Fields\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/simplifying-conditional-expressions\">\n                Simplifying Conditional Expressions\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/decompose-conditional\">\n                Decompose Conditional\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/consolidate-conditional-expression\">\n                Consolidate Conditional Expression\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/consolidate-duplicate-conditional-fragments\">\n                Consolidate Duplicate Conditional Fragments\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-control-flag\">\n                Remove Control Flag\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-nested-conditional-with-guard-clauses\">\n                Replace Nested Conditional with Guard Clauses\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-conditional-with-polymorphism\">\n                Replace Conditional with Polymorphism\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-null-object\">\n                Introduce Null Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-assertion\">\n                Introduce Assertion\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/simplifying-method-calls\">\n                Simplifying Method Calls\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/rename-method\">\n                Rename Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/add-parameter\">\n                Add Parameter\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-parameter\">\n                Remove Parameter\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/separate-query-from-modifier\">\n                Separate Query from Modifier\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/parameterize-method\">\n                Parameterize Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-parameter-with-explicit-methods\">\n                Replace Parameter with Explicit Methods\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/preserve-whole-object\">\n                Preserve Whole Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-parameter-with-method-call\">\n                Replace Parameter with Method Call\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-parameter-object\">\n                Introduce Parameter Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-setting-method\">\n                Remove Setting Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/hide-method\">\n                Hide Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-constructor-with-factory-method\">\n                Replace Constructor with Factory Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-error-code-with-exception\">\n                Replace Error Code with Exception\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-exception-with-test\">\n                Replace Exception with Test\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/dealing-with-generalization\">\n                Dealing with Generalization\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/pull-up-field\">\n                Pull Up Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/pull-up-method\">\n                Pull Up Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/pull-up-constructor-body\">\n                Pull Up Constructor Body\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/push-down-method\">\n                Push Down Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/push-down-field\">\n                Push Down Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-subclass\">\n                Extract Subclass\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-superclass\">\n                Extract Superclass\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-interface\">\n                Extract Interface\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/collapse-hierarchy\">\n                Collapse Hierarchy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/form-template-method\">\n                Form Template Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-inheritance-with-delegation\">\n                Replace Inheritance with Delegation\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-delegation-with-inheritance\">\n                Replace Delegation with Inheritance\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"trail\">\n            <a href=\"/design-patterns\">\n                <i class=\"fa fa-fw fa-puzzle-piece\" aria-hidden=\"true\"></i> Design Patterns\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/what-is-pattern\">\n                What is a Pattern\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/what-is-pattern\">\n                What's a design pattern?\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/history\">\n                History of patterns\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/why-learn-patterns\">\n                Why should I learn patterns?\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/criticism\">\n                Criticism of patterns\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/classification\">\n                Classification of patterns\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/catalog\">\n                Catalog\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-third-level\">\n            <a href=\"/design-patterns/creational-patterns\">\n                Creational Patterns\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/factory-method\">\n                Factory Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/abstract-factory\">\n                Abstract Factory\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/builder\">\n                Builder\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/prototype\">\n                Prototype\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/singleton\">\n                Singleton\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"menu-third-level trail\">\n            <a href=\"/design-patterns/structural-patterns\">\n                Structural Patterns\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/adapter\">\n                Adapter\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/bridge\">\n                Bridge\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/composite\">\n                Composite\n            </a>\n    \n    \n            </li>\n                                <li class=\"trail active\">\n            <a href=\"/design-patterns/decorator\">\n                Decorator\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/facade\">\n                Facade\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/flyweight\">\n                Flyweight\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/proxy\">\n                Proxy\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"menu-third-level\">\n            <a href=\"/design-patterns/behavioral-patterns\">\n                Behavioral Patterns\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/chain-of-responsibility\">\n                Chain of Responsibility\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/command\">\n                Command\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/iterator\">\n                Iterator\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/mediator\">\n                Mediator\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/memento\">\n                Memento\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/observer\">\n                Observer\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/state\">\n                State\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/strategy\">\n                Strategy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/template-method\">\n                Template Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/visitor\">\n                Visitor\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"menu-code-examples\">\n            <a href=\"/design-patterns/examples\">\n                Code Examples\n            </a>\n    \n            <ul >\n                            <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/csharp\">\n                C#\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/cpp\">\n                C++\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/go\">\n                Go\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/java\">\n                Java\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/php\">\n                PHP\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/python\">\n                Python\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/ruby\">\n                Ruby\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/rust\">\n                Rust\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/swift\">\n                Swift\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/typescript\">\n                TypeScript\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n                </div>\n\n            <div class=\"main-menu-aux-controls\">\n                <a href=\"https://refactoring.guru/login\" title=\"Sign in\" style=\" display: inline-flex; align-items: center; gap: 6px; \"><svg style=\"width: 16px; height: 16px; filter:drop-shadow(0 1px 1px #74261e)\" class=\"inline-block mx-0\"  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\"opacity=\"0.4\" d=\"M352.7 222.4c3.2 1 6.5 1.6 10 1.6l21.3 0c17.7 0 32 14.3 32 32s-14.3 32-32 32l-21.3 0c-.8 0-1.7 0-2.5 0c-.9 0-1.7-.1-2.5-.1c-1.7-.1-3.4-.2-5-.4C357.4 414 391.1 512 432 512c44.2 0 80-114.6 80-256S476.2 0 432 0c-40.6 0-74.2 96.9-79.3 222.4z\"/><path fill=\"currentColor\"class=\"fa-primary\" d=\"M320 48a48 48 0 1 0 -96 0 48 48 0 1 0 96 0zM125.7 175.5c9.9-9.9 23.4-15.5 37.5-15.5c1.9 0 3.8 .1 5.6 .3L137.6 254c-9.3 28 1.7 58.8 26.8 74.5l86.2 53.9-25.4 88.8c-4.9 17 5 34.7 22 39.6s34.7-5 39.6-22l28.7-100.4c5.9-20.6-2.6-42.6-20.7-53.9L238 299l30.9-82.4 5.1 12.3C289 264.7 323.9 288 362.7 288l21.3 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-21.3 0c-12.9 0-24.6-7.8-29.5-19.7l-6.3-15c-14.6-35.1-44.1-61.9-80.5-73.1l-48.7-15c-11.1-3.4-22.7-5.2-34.4-5.2c-31 0-60.8 12.3-82.7 34.3L57.4 153.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l23.1-23.1zM91.2 352L32 352c-17.7 0-32 14.3-32 32s14.3 32 32 32l69.6 0c19 0 36.2-11.2 43.9-28.5L157 361.6l-9.5-6c-17.5-10.9-30.5-26.8-37.9-44.9L91.2 352z\"/></svg> Sign in</a>\n                <a href=\"https://feedback.refactoring.guru/\" class=\"userecho-public\" rel=\"nofollow\" title=\"Contact us\"><i class=\"fa fa-fw fa-fw fa-envelope\" aria-hidden=\"true\"></i> Contact us</a>\n            </div>\n        </div>\n    </div>\n</aside>\n\n    <nav class=\"navigation\" role=\"navigation\">\n    <div class=\"navigation-container\">\n        <a class=\"navigation-brand\" href=\"/\">\n            <img alt=\"Refactoring.Guru\"\n                 src=\"/images/content-public/logos/logo-new-mobile.png?id=ea18aa9b032eaa92835ed6d472b03b4a\"\n                 srcset=\"/images/content-public/logos/logo-new-mobile-2x.png?id=7ad5648bfd86ae2e8524147a72877c64 2x\">\n        </a>\n\n        <div class=\"shop-link d-none d-lg-block\" style=\"display: none !important;\">\n            <a class=\"btn btn-md btn-primary btn-featured\" href=\"/store\"><svg style=\"width: 28px; height: 28px; fill: currentColor; display: inline-block; margin-top: -14px;\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><!--! Font Awesome Pro 6.3.0 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2023 Fonticons, Inc. --><path d=\"M356 60l60 20-60 20-20 60-20-60L256 80l60-20L336 0l20 60zM464 208l48 16-48 16-16 48-16-48-48-16 48-16 16-48 16 48zm-243.8-9.8l33 66.9 73.8 10.7 59.8 8.7-43.3 42.2-53.4 52.1 12.6 73.5L313 512l-53.5-28.1-66-34.7-66 34.7L73.9 512l10.2-59.6 12.6-73.5L43.3 326.8 0 284.6l59.8-8.7 73.8-10.7 33-66.9L193.5 144l26.8 54.2zm26.1 114.4l-25-3.6-11.2-22.6-16.7-33.9-16.7 33.9L165.6 309l-25 3.6-37.4 5.4 27.1 26.4 18.1 17.6L144 387l-6.4 37.3 33.5-17.6 22.3-11.7 22.3 11.7 33.5 17.6L242.9 387l-4.3-24.9 18.1-17.6 27.1-26.4-37.4-5.4z\"/></svg>\n                Shop Now!</a>\n        </div>\n\n        <ul class=\"navigation-menu\">\n                            <li class=\"nav-locale dropdown dropdown-locales\">\n                    <button class=\"dropdown-toggle\" id=\"dropdownLanguage\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                        <i class=\"fa fa-fw fa-globe\" aria-hidden=\"true\"></i> <span class=\"caption d-none d-lg-inline-block\">English</span>\n                    </button>\n                    <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownLanguage\">\n                                                                                                                        <a href=\"https://refactoring.guru/design-patterns/decorator\" class=\"dropdown-item locale-link active\" data-locale=\"en\" title=\"English\">English</a>\n                                                                                                                                <a href=\"https://refactoring.guru/es/design-patterns/decorator\" class=\"dropdown-item locale-link \" data-locale=\"es\" title=\"Español\">Español</a>\n                                                                                                                                <a href=\"https://refactoring.guru/fr/design-patterns/decorator\" class=\"dropdown-item locale-link \" data-locale=\"fr\" title=\"Français\">Français</a>\n                                                                                                                                <a href=\"https://refactoring.guru/ja/design-patterns/decorator\" class=\"dropdown-item locale-link \" data-locale=\"ja\" title=\"日本語\">日本語</a>\n                                                                                                                                <a href=\"https://refactoring.guru/ko/design-patterns/decorator\" class=\"dropdown-item locale-link \" data-locale=\"ko\" title=\"한국어\">한국어</a>\n                                                                                                                                <a href=\"https://refactoring.guru/pl/design-patterns/decorator\" class=\"dropdown-item locale-link \" data-locale=\"pl\" title=\"Polski\">Polski</a>\n                                                                                                                                <a href=\"https://refactoring.guru/pt-br/design-patterns/decorator\" class=\"dropdown-item locale-link \" data-locale=\"pt-br\" title=\"Português Brasileiro\">Português Brasileiro</a>\n                                                                                                                                <a href=\"https://refactoring.guru/ru/design-patterns/decorator\" class=\"dropdown-item locale-link \" data-locale=\"ru\" title=\"Русский\">Русский</a>\n                                                                                                                                <a href=\"https://refactoring.guru/uk/design-patterns/decorator\" class=\"dropdown-item locale-link \" data-locale=\"uk\" title=\"Українська\">Українська</a>\n                                                                                                                                <a href=\"https://refactoringguru.cn/design-patterns/decorator\" class=\"dropdown-item locale-link \" data-locale=\"zh\" title=\"中文\">中文</a>\ndiv>\n                </li>\n                        <li class=\"nav-contacts\">\n                <a class=\"userecho-private\" href=\"https://feedback.refactoring.guru/?show_feedback_form_private=true\" rel=\"nofollow\" title=\"Contact us\">\n                    <i class=\"fa fa-fw fa-envelope\" aria-hidden=\"true\"></i> <span class=\"caption d-none d-xl-inline-block\">Contact us</span>\n                </a>\n            </li>\n                            <li class=\"nav-user\">\n                    <a href=\"https://refactoring.guru/login\" title=\"Sign in\"><span class=\"sign-in-icon\"><svg style=\"width: 24px; height: 24px; \" class=\"inline-block \"  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\"opacity=\"0.4\" d=\"M352.7 222.4c3.2 1 6.5 1.6 10 1.6l21.3 0c17.7 0 32 14.3 32 32s-14.3 32-32 32l-21.3 0c-.8 0-1.7 0-2.5 0c-.9 0-1.7-.1-2.5-.1c-1.7-.1-3.4-.2-5-.4C357.4 414 391.1 512 432 512c44.2 0 80-114.6 80-256S476.2 0 432 0c-40.6 0-74.2 96.9-79.3 222.4z\"/><path fill=\"currentColor\"class=\"fa-primary\" d=\"M320 48a48 48 0 1 0 -96 0 48 48 0 1 0 96 0zM125.7 175.5c9.9-9.9 23.4-15.5 37.5-15.5c1.9 0 3.8 .1 5.6 .3L137.6 254c-9.3 28 1.7 58.8 26.8 74.5l86.2 53.9-25.4 88.8c-4.9 17 5 34.7 22 39.6s34.7-5 39.6-22l28.7-100.4c5.9-20.6-2.6-42.6-20.7-53.9L238 299l30.9-82.4 5.1 12.3C289 264.7 323.9 288 362.7 288l21.3 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-21.3 0c-12.9 0-24.6-7.8-29.5-19.7l-6.3-15c-14.6-35.1-44.1-61.9-80.5-73.1l-48.7-15c-11.1-3.4-22.7-5.2-34.4-5.2c-31 0-60.8 12.3-82.7 34.3L57.4 153.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l23.1-23.1zM91.2 352L32 352c-17.7 0-32 14.3-32 32s14.3 32 32 32l69.6 0c19 0 36.2-11.2 43.9-28.5L157 361.6l-9.5-6c-17.5-10.9-30.5-26.8-37.9-44.9L91.2 352z\"/></svg></span> <span class=\"account-icon\" style=\"display:none\"><svg style=\"width: 24px; height: 24px; \" class=\"inline-block \"  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 576 512\"><path fill=\"currentColor\"opacity=\"0.4\" d=\"M64 270.5l224-196c74.7 65.4 149.4 130.7 224.1 196.1l.4 177.3c.1 35.4-28.6 64.1-64 64.1l-320.4 0c-35.3 0-64-28.6-64-64L64 270.5zM176.1 433.6c.1 .5 .1 1.1 .2 1.6c.2 1 .5 2 .9 3c.8 1.9 2 3.6 3.4 5.1c2.9 2.9 6.9 4.7 11.3 4.7l192 0c8.8 0 16-7.2 16-16c0-44.2-35.8-80-80-80l-64 0c-22.1 0-42.1 9-56.6 23.4c-7.2 7.2-13.1 15.9-17.1 25.4c-2 4.8-3.6 9.8-4.7 15c-.5 2.6-.9 5.3-1.2 7.9c-.1 1.3-.2 2.7-.3 4.1c-.1 1.4-.1 2.7-.1 4.1c0 .6 0 1.1 .1 1.6zm48.2-184.2c-.1 1.1-.2 2.2-.2 3.2c-.1 1.1-.1 2.2-.1 3.3s0 2.2 .1 3.3c.1 1.1 .1 2.2 .2 3.2c.2 2.1 .5 4.3 1 6.4c.9 4.2 2.1 8.2 3.7 12c3.2 7.7 7.9 14.6 13.7 20.3C254.3 312.8 270.3 320 288 320c35.3 0 64-28.7 64-64s-28.7-64-64-64c-17.7 0-33.7 7.2-45.3 18.7c-5.8 5.8-10.5 12.7-13.7 20.3c-1.6 3.8-2.9 7.8-3.7 12c-.4 2.1-.8 4.2-1 6.4z\"/><path fill=\"currentColor\"class=\"fa-primary\" d=\"M309.1 7.9C297-2.6 279-2.6 266.9 7.9l-256 224c-13.3 11.6-14.6 31.9-3 45.2s31.9 14.6 45.2 3L288 74.5 522.9 280.1c13.3 11.6 33.5 10.3 45.2-3s10.3-33.5-3-45.2L512 185.5 512 64c0-17.7-14.3-32-32-32l-32 0c-17.7 0-32 14.3-32 32l0 37.5L309.1 7.9zM352 256a64 64 0 1 0 -128 0 64 64 0 1 0 128 0zm-96 96c-44.2 0-80 35.8-80 80c0 8.8 7.2 16 16 16l192 0c8.8 0 16-7.2 16-16c0-44.2-35.8-80-80-80l-64 0z\"/></svg></span> <span class=\"sign-out-icon\" style=\"display:none\"><svg style=\"width: 24px; height: 24px; \" class=\"inline-block \"  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\"opacity=\"0.4\" d=\"M0 256C0 397.4 35.8 512 80 512c25.3 0 47.8-37.5 62.5-96L128 416c-.5 0-1.1 0-1.6 0c-.6 0-1.1-.1-1.6-.1c-1.1-.1-2.1-.3-3.2-.5c-2.1-.4-4.1-1.1-6-1.9c-3.8-1.6-7.3-4-10.2-6.9s-5.2-6.3-6.9-10.2c-.8-1.9-1.4-3.9-1.9-6c-.2-1.1-.4-2.3-.5-3.5c0-.3 0-.6-.1-.8c0-.2 0-.4 0-.7c0-.4 0-.7 0-.7c0-.5 0-.7 0-.9c0-.3 0-.6 0-.9c0 0 0-.3 0-.7c0-.2 0-.4 0-.7c0-.2 0-.4 .1-.8c0-.3 .1-.6 .1-.9c0-.2 .1-.4 .1-.7c.1-.8 .2-1.2 .3-1.7c.5-2.2 1.1-4.2 1.9-6.1c1.6-3.8 4-7.3 6.9-10.2c5.8-5.8 13.8-9.4 22.6-9.4l26.2 0c3.8-29.6 5.8-62.1 5.8-96c0-18.3-.6-36.1-1.7-53.4c-1.7-1.2-3.4-2.5-4.9-4c-.8-.8-1.6-1.6-2.2-2.5s-1.3-1.7-1.9-2.6c-1.2-1.8-2.1-3.6-2.9-5.5s-1.4-3.9-1.8-5.9c-.2-1-.3-2-.4-3s-.1-2-.2-3c0-8.3 3.1-16.5 9.4-22.8C141 63.1 112.8 0 80 0C35.8 0 0 114.6 0 256z\"/><path fill=\"currentColor\"class=\"fa-primary\" d=\"M416 48a48 48 0 1 0 -96 0 48 48 0 1 0 96 0zM221.7 175.5c9.9-9.9 23.4-15.5 37.5-15.5c1.9 0 3.8 .1 5.6 .3L233.6 254c-9.3 28 1.7 58.8 26.8 74.5l86.2 53.9-25.4 88.8c-4.9 17 5 34.7 22 39.6s34.7-5 39.6-22l28.7-100.4c5.9-20.6-2.6-42.6-20.7-53.9L334 299l30.9-82.4 5.1 12.3C385 264.7 419.9 288 458.7 288l21.3 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-21.3 0c-12.9 0-24.6-7.8-29.5-19.7l-6.3-15c-14.6-35.1-44.1-61.9-80.5-73.1l-48.7-15c-11.1-3.4-22.7-5.2-34.4-5.2c-31 0-60.8 12.3-82.7 34.3l-23.1 23.1c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l23.1-23.1zM187.2 352L128 352c-17.7 0-32 14.3-32 32s14.3 32 32 32l69.6 0c19 0 36.2-11.2 43.9-28.5L253 361.6l-9.5-6c-17.5-10.9-30.5-26.8-37.9-44.9L187.2 352z\"/></svg></span> <span class=\"caption d-none d-xl-inline-block\">Sign in</span></a>\n                </li>\n                        <li class=\"nav-menu\">\n                <button class=\"navigation-toggle\"><i class=\"fa fa-fw fa-bars\" aria-hidden=\"true\"></i></button>\n            </li>\n        </ul>\n    </div>\n</nav>\n\n    <footer class=\"footer center-content\">\n    <div class=\"footer-container center-content-container\">\n        <div class=\"footer-inner container-fluid\">\n            <div class=\"row\">\n                <div class=\"col-8 col-md-10\">\n                    <ul class=\"footer-list footer-list-horizontal\">\n                        <li><a href=\"/\">Home</a></li>\n                        <li><a href=\"/refactoring\">Refactoring</a></li>\n                        <li><a href=\"/design-patterns\">Design Patterns</a></li>\n                        <li><a href=\"/store\">Premium Content</a></li>\n                        <li><a href=\"https://gitbybit.com/\">Git Course</a></li>\n                        <li><a href=\"https://refactoring.userecho.com/\" rel=\"nofollow\" class=\"userecho-public\">Forum</a></li>\n                        <li><a href=\"https://refactoring.userecho.com/\" rel=\"nofollow\" class=\"userecho-private\">Contact us</a></li>\n                    </ul>\n                </div>\n                <div class=\"col-4 col-md-2\">\n                    <ul class=\"footer-list footer-list-iconic footer-list-right\">\n                                                    <li><a href=\"https://www.facebook.com/refactoring.guru\"><i class=\"fa fa-facebook-official\"></i></a></li>\n                                                <li><a href=\"/sendy/form\" rel=\"nofollow\"><i class=\"fa fa-envelope\" aria-hidden=\"true\"></i></a></li>\n                        <li><a href=\"https://github.com/RefactoringGuru\"><i class=\"fa fa-github-circled\"></i></a></li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"footer-second\">\n        <div class=\"footer-container center-content-container\">\n            <div class=\"footer-inner container-fluid\">\n                <div class=\"row\">\n                    <div class=\"col-12 col-sm-6\">\n                        <i class=\"fa fa-fw fa-copyright\"></i> 2014-2025 <a href=\"/\">Refactoring.Guru</a>. <span style=\"white-space: nowrap\">All rights reserved.</span><br>\n                        <i class=\"fa fa-fw fa-image\"></i> Illustrations by <a href=\"http://zhart.us/\" rel=\"nofollow\"><span style=\"white-space: nowrap\">Dmitry Zhart</span></a>\n                    </div>\n                    <div class=\"footer-links-right col-12 col-sm-6 mt-4 mt-sm-0\">\n                        <ul class=\"footer-list footer-list-horizontal footer-list-right\">\n                            <li><a href=\"/terms\"><span>Terms &amp; Conditions</span></a>\n                            </li>\n                            <li><a href=\"/privacy-policy\"><span>Privacy Policy</span></a>\n                            </li>\n                            <li><a href=\"/content-usage-policy\"><span>Content Usage Policy</span></a>\n                            </li>\n                            <li><a href=\"/site-about\"><span>About us</span></a>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n                                    <div class=\"row\">\n                        <div class=\"col-12 col-sm-4\">\n                            <div class=\"mt-4\">\n                                                                    <b>Ukrainian office:</b><br>\n                                    <object class=\"fa-fw\" style=\"height: 0.8rem; filter: invert(50%);\"  type=\"image/svg+xml\" data=\"/images/content-public/icons/fa-building.svg?id=afddb5806968b0a9acfc1df75a181234\">\n                                        <img class=\"fa-fw\" style=\"height: 0.8rem;\" src=\"/images/content-public/icons/fa-building.svg?id=afddb5806968b0a9acfc1df75a181234\" alt=\"Organization address\"/>\n                                    </object> FOP Olga Skobeleva<br>\n                                    <svg style=\"width: 16px; height: 16px; margin-right: 1px; fill: currentColor;\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\"><path d=\"M352 192c0-88.4-71.6-160-160-160S32 103.6 32 192c0 15.6 5.4 37 16.6 63.4c10.9 25.9 26.2 54 43.6 82.1c34.1 55.3 74.4 108.2 99.9 140c25.4-31.8 65.8-84.7 99.9-140c17.3-28.1 32.7-56.3 43.6-82.1C346.6 229 352 207.6 352 192zm32 0c0 87.4-117 243-168.3 307.2c-12.3 15.3-35.1 15.3-47.4 0C117 435 0 279.4 0 192C0 86 86 0 192 0S384 86 384 192zm-240 0a48 48 0 1 0 96 0 48 48 0 1 0 -96 0zm48 80a80 80 0 1 1 0-160 80 80 0 1 1 0 160z\"/></svg> Abolmasova 7<br>\n                                    <span style=\"margin-left: 21px;\">Kyiv, Ukraine, 02002</span><br>\n                                    <i class=\"fa fa-fw fa-envelope\"></i>  Email: support@refactoring.guru\n                                \n                            </div>\n                        </div>\n                        <div class=\"col-12 col-sm-4\">\n                            <div class=\"mt-4\">\n                                <b>Spanish office:</b><br>\n                                <object class=\"fa-fw\" style=\"height: 0.8rem; filter: invert(50%);\"  type=\"image/svg+xml\" data=\"/images/content-public/icons/fa-building.svg?id=afddb5806968b0a9acfc1df75a181234\">\n                                    <img class=\"fa-fw\" style=\"height: 0.8rem;\" src=\"/images/content-public/icons/fa-building.svg?id=afddb5806968b0a9acfc1df75a181234\" alt=\"Organization address\"/>\n                                </object> Oleksandr Shvets<br>\n                                <svg style=\"width: 16px; height: 16px; margin-right: 1px; fill: currentColor;\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\"><path d=\"M352 192c0-88.4-71.6-160-160-160S32 103.6 32 192c0 15.6 5.4 37 16.6 63.4c10.9 25.9 26.2 54 43.6 82.1c34.1 55.3 74.4 108.2 99.9 140c25.4-31.8 65.8-84.7 99.9-140c17.3-28.1 32.7-56.3 43.6-82.1C346.6 229 352 207.6 352 192zm32 0c0 87.4-117 243-168.3 307.2c-12.3 15.3-35.1 15.3-47.4 0C117 435 0 279.4 0 192C0 86 86 0 192 0S384 86 384 192zm-240 0a48 48 0 1 0 96 0 48 48 0 1 0 -96 0zm48 80a80 80 0 1 1 0-160 80 80 0 1 1 0 160z\"/></svg> Avda Pamplona 64<br>\n                                <span style=\"margin-left: 21px;\">Pamplona, Spain, 31009</span><br>\n                                <i class=\"fa fa-fw fa-envelope\"></i>  Email: support@refactoring.guru\n                            </div>\n                        </div>\n                    </div>\n                            </div>\n        </div>\n    </div>\n</footer>\n\n</div>\n\n\n    <script defer>\n    var CodeMirrorScripts = [\"/js/codemirror.min.js?id=f7ae4adf14bd00338caf8e95da733cc9\"];\n</script>\n\n\n\n    <script>window.loadContent = true;window.loadCart = true;</script>\n</body>\n</html>\n"},
{"title": null, "url": "https://refactoring.guru/design-patterns/composite", "raw_html": "<!DOCTYPE html>\n<html lang=\"en\" dir=\"ltr\">\n<head prefix=\"og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# website: http://ogp.me/ns/website#\">\n    <meta charset=\"utf-8\">\n    <title>Composite</title>\n\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n    <meta name=\"theme-color\" content=\"#A2E2FD\" />\n\n            <style>\n        .buy-widget-excl-local-taxes {\n            display: none;\n        }\n    </style>\n    \n    <link rel=\"preload\" href=\"/fonts/PTSans/ptsans-regular_en.woff2?1\" as=\"font\" type=\"font/woff2\" crossorigin>\n    <link rel=\"preload\" href=\"/fonts/PTSans/ptsans-bold_en.woff2?1\" as=\"font\" type=\"font/woff2\" crossorigin>\n        <link rel=\"preload\" href=\"/fonts/fontello/fontawesome.woff2?15843843\" as=\"font\" type=\"font/woff2\" crossorigin>\n    <link rel=\"preload\" href=\"/fonts/FiraCode/woff2/FiraCode-Regular_latin.woff2\" as=\"font\" type=\"font/woff2\" crossorigin>\n        <link rel=\"preconnect dns-prefetch\" href=\"https://cdn.paddle.com\">\n    <link rel=\"preconnect dns-prefetch\" href=\"https://www.googletagmanager.com\">\n\n    <link rel=\"alternate\" href=\"https://refactoring.guru/design-patterns/composite\" hreflang=\"x-default\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/es/design-patterns/composite\" hreflang=\"es\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/fr/design-patterns/composite\" hreflang=\"fr\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/ja/design-patterns/composite\" hreflang=\"ja\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/ko/design-patterns/composite\" hreflang=\"ko\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/pl/design-patterns/composite\" hreflang=\"pl\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/pt-br/design-patterns/composite\" hreflang=\"pt-br\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/ru/design-patterns/composite\" hreflang=\"ru\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/uk/design-patterns/composite\" hreflang=\"uk\"/>\n    <link rel=\"alternate\" href=\"https://refactoringguru.cn/design-patterns/composite\" hreflang=\"zh\"/>\n\n    <meta name=\"description\" content=\"Composite is a structural design pattern that lets you compose objects into tree structures and then work with these structures as if they were individual objects.\">\n\n    <link rel=\"canonical\" href=\"https://refactoring.guru/design-patterns/composite\"/>\n\n    <link rel=\"icon\" type=\"image/x-icon\" href=\"/favicon.png\"/>\n\n        <meta property=\"fb:app_id\" content=\"666819623386327\"/>\n        <meta property=\"og:type\" content=\"website\"/>\n        <meta property=\"og:image\" content=\"https://refactoring.guru/images/refactoring/social/facebook-share-preview.png?id=dbf9e98269595be86eb668f365be6868\"/>\n    \n                    <link rel=\"stylesheet\" href=\"/css/public-packed.min.css?id=aaefab4da343b914b8dda9973604a9e8\">\n        <style type=\"text/css\">\n                    @font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_cyrillic-ext.woff2?1) format(\"woff2\");unicode-range:U+0460-052F,U+1C80-1C88,U+20B4,U+2DE0-2DFF,U+A640-A69F,U+FE2E-FE2F}@font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_cyrillic.woff2?1) format(\"woff2\");unicode-range:U+0400-045F,U+0490-0491,U+04B0-04B1,U+2116}@font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_latin-ext.woff2?1) format(\"woff2\");unicode-range:U+0100-024F,U+0259,U+1E00-1EFF,U+2020,U+20A0-20AB,U+20AD-20CF,U+2113,U+2C60-2C7F,U+A720-A7FF}@font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_latin.woff2?1) format(\"woff2\");unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}@font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_en.woff2?1) format(\"woff2\");unicode-range:U+0-FF,U+131,U+142,U+152,U+153,U+2BB,U+2BC,U+2C6,U+2DA,U+2DC,U+420,U+423,U+430,U+438-43A,U+43D,U+440,U+441,U+443,U+44C,U+457,U+2000-206F,U+2074,U+20AA-20AC,U+20B4,U+20B9,U+20BA,U+20BD,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_cyrillic-ext.woff2?1) format(\"woff2\");unicode-range:U+0460-052F,U+1C80-1C88,U+20B4,U+2DE0-2DFF,U+A640-A69F,U+FE2E-FE2F}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_cyrillic.woff2?1) format(\"woff2\");unicode-range:U+0400-045F,U+0490-0491,U+04B0-04B1,U+2116}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_latin-ext.woff2?1) format(\"woff2\");unicode-range:U+0100-024F,U+0259,U+1E00-1EFF,U+2020,U+20A0-20AB,U+20AD-20CF,U+2113,U+2C60-2C7F,U+A720-A7FF}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_latin.woff2?1) format(\"woff2\");unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_en.woff2?1) format(\"woff2\");unicode-range:U+0-FF,U+131,U+142,U+152,U+153,U+2BB,U+2BC,U+2C6,U+2DA,U+2DC,U+420,U+423,U+430,U+438-43A,U+43D,U+440,U+441,U+443,U+44C,U+457,U+2000-206F,U+2074,U+20AA-20AC,U+20B4,U+20B9,U+20BA,U+20BD,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}\n            </style>\n\n    \n            <script defer src=\"/js/public.min.js?id=1f19fe18ffe0fc844ede8a0f2ee64202\"></script>\n        <script defer src=\"/js/checkout.min.js?id=b4da9c5bd8b1cf504447c07ae8b7cd44\"></script>\n            <script defer src=\"https://cdn.paddle.com/paddle/v2/paddle.js\"></script>\n    <script async src=\"https://www.googletagmanager.com/gtag/js?id=G-SR8Y3GYQYC\"></script>\n\n    <script type=\"application/ld+json\">\n        {\"@context\": \"http://schema.org\", \"@graph\": [{\"@type\":\"Person\",\"@id\":\"https://refactoring.guru/#founder\",\"name\":\"Alexander Shvets\"},{\"@type\":\"Organization\",\"@id\":\"https://refactoring.guru/#organization\",\"name\":\"Refactoring.Guru\",\"description\":\"Refactoring.Guru makes it easy for you to discover everything you need to know about refactoring, design patterns, SOLID principles, and other smart programming topics.\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https://refactoring.guru/#organizationlogo\",\"url\":\"https://refactoring.guru/images/content-public/logos/logo-plain.png\",\"caption\":\"Refactoring.Guru\"},\"logo\":{\"@id\":\"https://refactoring.guru/#organizationlogo\"},\"founder\":{\"@id\":\"https://refactoring.guru/#founder\"},\"sameAs\":[\"https://www.facebook.com/refactoring.guru\",\"https://twitter.com/RefactoringGuru\",\"https://github.com/RefactoringGuru\"]},{\"@type\":\"WebSite\",\"@id\":\"https://refactoring.guru/#website\",\"url\":\"https://refactoring.guru/\",\"name\":\"Refactoring.Guru\",\"description\":\"Refactoring.Guru makes it easy for you to discover everything you need to know about refactoring, design patterns, SOLID principles, and other smart programming topics.\",\"author\":{\"@id\":\"https://refactoring.guru/#founder\"},\"publisher\":{\"@id\":\"https://refactoring.guru/#organization\"},\"copyrightYear\":2014},{\"@type\":\"WebPage\",\"@id\":\"https://refactoring.guru/design-patterns/composite#webpage\",\"url\":\"https://refactoring.guru/design-patterns/composite\",\"inLanguage\":\"en\",\"name\":\"Composite\",\"description\":\"Composite is a structural design pattern that lets you compose objects into tree structures and then work with these structures as if they were individual objects.\",\"isPartOf\":{\"@id\":\"https://refactoring.guru#website\"},\"breadcrumb\":{\"@id\":\"https://refactoring.guru/design-patterns/composite#breadcrumb\"},\"primaryImageOfPage\":{\"@id\":\"https://refactoring.guru/design-patterns/composite#primaryimage\"},\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https://refactoring.guru/design-patterns/composite#primaryimage\",\"url\":\"https://refactoring.guru/images/patterns/content/composite/composite-3x.png\",\"width\":1920,\"height\":1200}},{\"@type\":\"Article\",\"@id\":\"https://refactoring.guru/design-patterns/composite#article\",\"isPartOf\":{\"@id\":\"https://refactoring.guru/design-patterns/composite#webpage\"},\"mainEntityOfPage\":{\"@id\":\"https://refactoring.guru/design-patterns/composite#webpage\"},\"author\":{\"@id\":\"https://refactoring.guru#founder\"},\"publisher\":{\"@id\":\"https://refactoring.guru#organization\"},\"headline\":\"Composite\",\"datePublished\":\"2024-01-01\",\"dateModified\":\"2025-01-01\",\"articleSection\":\"Design Patterns\",\"image\":{\"@id\":\"https://refactoring.guru/design-patterns/composite#primaryimage\"}},{\"@type\":\"BreadcrumbList\",\"@id\":\"https://refactoring.guru/design-patterns/composite#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https://refactoring.guru\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Design Patterns\",\"item\":\"https://refactoring.guru/design-patterns\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"Structural Patterns\",\"item\":\"https://refactoring.guru/design-patterns/structural-patterns\"}]}] }\n    </script>\n\n    <script>\nfunction extend(){var extended={};var deep=false;var i=0;var length=arguments[\"length\"];if(Object[\"prototype\"][\"toString\"][\"call\"](arguments[0])=== '[object Boolean]'){deep= arguments[0];i++};var merge=function(obj){for(var prop in obj){if(Object[\"prototype\"][\"hasOwnProperty\"][\"call\"](obj,prop)){if(deep&& Object[\"prototype\"][\"toString\"][\"call\"](obj[prop])=== '[object Object]'){extended[prop]= extend(true,extended[prop],obj[prop])}else {extended[prop]= obj[prop]}}}};for(;i< length;i++){var obj=arguments[i];merge(obj)};return extended}\nfunction defer(method) {if (window.jQuery) {method();} else {setTimeout(function() { defer(method) }, 50);}}\n</script>\n<script>\n+function(sd){sd = (typeof sd === \"string\") ? JSON.parse(atob(sd)) : sd;for(var property in sd){if(window[property]!== null&&  typeof window[property]=== 'object'){window[property]= extend(true,window[property],sd[property])}else {window[property]= sd[property]}}}(\"eyJsb2NhbGUiOiJlbiIsImxvY2FsZV9wcmVmaXgiOiIiLCJsb2NhbGl6ZWRfdXJsX3ByZWZpeCI6Imh0dHBzOlwvXC9yZWZhY3RvcmluZy5ndXJ1XC8iLCJ1cmxfcHJlZml4IjoiaHR0cHM6XC9cL3JlZmFjdG9yaW5nLmd1cnVcLyIsImxvY2FsaXplZF91cmxfcHJlZml4X20iOiJodHRwczpcL1wvcmVmYWN0b3JpbmcuZ3VydVwvIiwidXJsX3ByZWZpeF9tIjoiaHR0cHM6XC9cL3JlZmFjdG9yaW5nLmd1cnVcLyIsInVzZXJfZWNob19hbGlhcyI6InJlZmFjdG9yaW5nIiwidXNlcl9lY2hvX2hvc3QiOiJmZWVkYmFjay5yZWZhY3RvcmluZy5ndXJ1IiwidXNlcl9lY2hvX3ByaXZhdGVfZm9ydW0iOiIyIiwidXNlcl9lY2hvX2xvY2FsZSI6ImVuIiwidXNlcl9lY2hvX3B1YmxpY19mb3J1bSI6IjMiLCJ1c2VyX2VjaG9fcHVibGljX2ZvcnVtX3VybCI6Imh0dHBzOlwvXC9mZWVkYmFjay5yZWZhY3RvcmluZy5ndXJ1XC8iLCJ1c2VyX2VjaG9fc3NvX3Rva2VuIjoiIn0=\");\n</script>\n\n<script>\n    window.dataLayer = window.dataLayer || [];\n    function gtag(){dataLayer.push(arguments);}\n    gtag('js', new Date());\n            gtag('set', 'linker', {'domains': [\"refactoring.guru,refactoringguru.cn\"]});\n        gtag('config', 'G-SR8Y3GYQYC', {\n        // Disable default page view, because we're going to report them on our own.\n        // This is done to report traffic on localized domains as part of the main website traffic\n        // See the Chinese overrides below.\n        send_page_view: false,\n    });\n</script>\n\n<script>\n    (() => {\n        // On first page view after returning from social network, we need to send the social login event.\n        (function detectSocialLogin() {\n            let getCookie = function (name) {\n                var nameEQ = name + \"=\";\n                var ca = document.cookie.split(';');\n                for (var i = 0; i < ca.length; i++) {\n                    var c = ca[i];\n                    while (c.charAt(0) == ' ') c = c.substring(1, c.length);\n                    if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);\n                }\n                return null;\n            };\n            window.social_login_provider = window.social_login_provider || getCookie('social_login_provider');\n            if (window.social_login_provider) {\n                gtag('set', {referrer: null});\n                gtag('event', 'login', {\"method\": window.social_login_provider});\n                // Delete cookie.\n                document.cookie = 'social_login_provider=; Path=/; Max-Age=-99999999;';\n            }\n        })();\n\n        function trackPageView(location, title) {\n            location = location || document.location.href;\n            title = title || document.title;\n\n            // This is show on https://refactoringguru.cn/ and alike.\n            if (typeof window.analytics_path_prefix === 'string') {\n                if (/^(https?:\\/\\/[^\\/]+?)\\/$/.test(location)) {\n                    location = location.replace(/(https?:\\/\\/[^\\/]+?)\\//, '$1' + window.analytics_path_prefix);\n                } else {\n                    location = location.replace(/(https?:\\/\\/[^\\/]+?)\\//, '$1' + window.analytics_path_prefix + '/');\n                }\n                gtag('set', {\n                    'page_location': location\n                });\n            }\n\n            // This is show on https://refactoring.guru/zh/login and alike.\n            if (typeof window.analytics_location_prefix === 'string') {\n                location = location.replace(/(https?:\\/\\/[^\\/]+?)\\//, window.analytics_location_prefix);\n                gtag('set', {\n                    'page_location': location\n                });\n            }\n\n            gtag('event', 'page_view', {\n                page_location: location,\n                page_title: title,\n                locale: window.locale ?? 'en'\n            });\n        }\n\n        if (window.loadContent) {\n            window.onPageLoad = window.onPageLoad || [];\n            window.onPageLoad.push({\n                func: function (context) {\n                    trackPageView(window.location.origin + context.canonicalPath, context.title);\n                },\n                afterAll: true,\n            });\n        }\n        else {\n            trackPageView();\n        }\n    })();\n</script>\n\n\n</head>\n<body class=\"locale-en   announcement   composite\" data-body_class=\"composite\">\n\n<div class=\"body-holder\">\n\n            <div class=\"announcement-block announcement-block-summer prom\" data-id=\"DIDP-announcement\" data-creative-id=\"en\" data-position=\"top\">\n        <span class=\"beach-and-sea\">\n            <span class=\"a1\"></span>\n            <span class=\"a2\"><span class=\"wave\"></span></span>\n            <span class=\"yacht\"></span>\n        </span>\n        <a href=\"/store\">\n            <img src=\"/images/content-public/ann/summer/sunbed.svg?id=b1e7314a63715a13870a6bd1a43613f7\" loading=\"lazy\" style=\"width: 32px; height:32px;vertical-align: middle; scale: -1 1 1;\">\n            <span class=\"announcement-link-text\">Summer SALE</span>\n            <img src=\"/images/content-public/ann/summer/reading-book.svg?id=36006ea720df8c171968cf613e8ea164\" loading=\"lazy\" style=\"width: 32px; height:32px;vertical-align: middle;\">\n        </a>\n    </div>\n\n    \n    <div class=\"cart-placeholder\">\n    <div class=\"cart-block-container\" style=\"display:none\">\n        <div class=\"cart-block btn-group\">\n            <a href=\"#checkout\" class=\"btn cart open-checkout\">\n                <span class=\"cart-text\"></span>&nbsp;<strong class=\"cart-total font-money\"></strong>\n            </a><a href=\"#checkout\" class=\"btn btn-secondary checkout open-checkout\"><i class=\"fa fa-shopping-cart\" aria-hidden=\"true\"></i> <span class=\"btn-text-span d-none d-sm-inline-block d-lg-none d-hg-inline-block\"></span></a>\n        </div>\n    </div>\n</div>\n    <main role=\"main\" class=\"main-content top-content center-content \" data-page_class=\"\">\n        <div class=\"main-content-container center-content-container\">\n                        <div class=\"pattern page text\">\n<article>\n    <div class=\"breadcrumb\">\n                                    <a class=\"home\" href=\"/\"><i class=\"fa fa-home\" aria-hidden=\"true\"></i></a>\n                                                / <a class=\"type\" href=\"/design-patterns\">Design Patterns</a>\n                                                / <a class=\"type\" href=\"/design-patterns/structural-patterns\">Structural Patterns</a>\n                        </div>\n    <h1 class=\"title\">Composite</h1>\n\n    <script type=\"text/javascript\">\n        // Shorten examples titles for users.\n        var h1 = document.getElementsByTagName(\"H1\")[0];\n        if (h1.offsetHeight > 160) {\n            h1.className += ' smaller';\n        }\n\n        // Small beautification for pattern examples.\n        var title = h1.innerHTML;\n        title = title.replace(/^(Java|C\\+\\+|C#|PHP|Python|Ruby|Delphi): (.*)$/, '<strong>$1:</strong> $2');\n        h1.innerHTML = title;\n    </script>\n\n            <div class=\"aka\">\n            Also known as: <span style=\"display:inline-block\">Object Tree</span>\n        </div>\n    \n    \n\n    <div class=\"section intent\">\n<h2 id=\"intent\"><i class=\"fa fa-flip-horizontal fa-comment-alt-dots\" aria-hidden=\"true\"></i> Intent</h2>\n<p><strong>Composite</strong> is a structural design pattern that lets you compose objects into tree structures and then work with these structures as if they were individual objects.</p>\n<figure class=\"image\"><img src=\"/images/patterns/content/composite/composite.png?id=73bcf0d94db360b636cd745f710d19db\" alt=\"Composite design pattern\" srcset=\"/images/patterns/content/composite/composite.png?id=73bcf0d94db360b636cd745f710d19db 640w,/images/patterns/content/composite/composite-1.5x.png?id=098acddafae70b1ec1cb1b05e833c3ae 960w,/images/patterns/content/composite/composite-2x.png?id=8847e6f8e2cb892ed2229faba83bd1b7 1280w\" sizes=\"(max-width: 720px) 100vw, 640px\" width=\"640\" style=\"aspect-ratio: 1.6;\" fetchpriority=\"high\" /></figure>\n</div>\n<div class=\"section problem\">\n<h2 id=\"problem\"><i class=\"fa fa-frown\" aria-hidden=\"true\"></i> Problem</h2>\n<p>Using the Composite pattern makes sense only when the core model of your app can be represented as a tree.</p>\n<p>For example, imagine that you have two types of objects: <code>Products</code> and <code>Boxes</code>. A <code>Box</code> can contain several <code>Products</code> as well as a number of smaller <code>Boxes</code>. These little <code>Boxes</code> can also hold some <code>Products</code> or even smaller <code>Boxes</code>, and so on.</p>\n<p>Say you decide to create an ordering system that uses these classes. Orders could contain simple products without any wrapping, as well as boxes stuffed with products...and other boxes. How would you determine the total price of such an order?</p>\n<figure class=\"image\"><img src=\"/images/patterns/diagrams/composite/problem-en.png?id=3320d7ddc5bdc3e43752bb4393710794\" alt=\"Structure of a complex order\" srcset=\"/images/patterns/diagrams/composite/problem-en.png?id=3320d7ddc5bdc3e43752bb4393710794 370w,/images/patterns/diagrams/composite/problem-en-1.5x.png?id=4e1e6d2b8d6c7aefeead44809bb1aa6a 555w,/images/patterns/diagrams/composite/problem-en-2x.png?id=5c7d443ccce3e46c4308d43fd1e51cca 740w\" sizes=\"(max-width: 720px) 100vw, 370px\" width=\"370\" style=\"aspect-ratio: 1;\" loading=\"lazy\" /><figcaption>\n<p>An order might comprise various products, packaged in boxes, which are packaged in bigger boxes and so on. The whole structure looks like an upside down tree.</p>\n</figcaption></figure>\n<p>You could try the direct approach: unwrap all the boxes, go over all the products and then calculate the total. That would be doable in the real world; but in a program, it’s not as simple as running a loop. You have to know the classes of <code>Products</code> and <code>Boxes</code> you’re going through, the nesting level of the boxes and other nasty details beforehand. All of this makes the direct approach either too awkward or even impossible.</p>\n</div>\n<div class=\"section solution\">\n<h2 id=\"solution\"><i class=\"fa fa-smile-beam\" aria-hidden=\"true\"></i> Solution</h2>\n<p>The Composite pattern suggests that you work with <code>Products</code> and <code>Boxes</code> through a common interface which declares a method for calculating the total price.</p>\n<p>How would this method work? For a product, it’d simply return the product’s price. For a box, it’d go over each item the box contains, ask its price and then return a total for this box. If one of these items were a smaller box, that box would also start going over its contents and so on, until the prices of all inner components were calculated. A box could even add some extra cost to the final price, such as packaging cost.</p>\n<figure class=\"image\"><img src=\"/images/patterns/content/composite/composite-comic-1-en.png?id=5510969e5584e7c0cb65d533901bb8f6\" alt=\"Solution suggested by the Composite pattern\" srcset=\"/images/patterns/content/composite/composite-comic-1-en.png?id=5510969e5584e7c0cb65d533901bb8f6 600w,/images/patterns/content/composite/composite-comic-1-en-1.5x.png?id=ef596364925e02ba34081737c2c58332 900w,/images/patterns/content/composite/composite-comic-1-en-2x.png?id=e2f3fb69d636c211520c2528be94f251 1200w\" sizes=\"(max-width: 720px) 100vw, 600px\" width=\"600\" style=\"aspect-ratio: 2;\" loading=\"lazy\" /><figcaption>\n<p>The Composite pattern lets you run a behavior recursively over all components of an object tree.</p>\n</figcaption></figure>\n<p>The greatest benefit of this approach is that you don’t need to care about the concrete classes of objects that compose the tree. You don’t need to know whether an object is a simple product or a sophisticated box. You can treat them all the same via the common interface. When you call a method, the objects themselves pass the request down the tree.</p>\n</div>\n<div class=\"section analogy\">\n<h2 id=\"analogy\"><i class=\"fa fa-car-side\" aria-hidden=\"true\"></i> Real-World Analogy</h2>\n<figure class=\"image\"><img src=\"/images/patterns/diagrams/composite/live-example.png?id=548a7cec45b493af66e8bfe524a137d3\" alt=\"An example of a military structure\" srcset=\"/images/patterns/diagrams/composite/live-example.png?id=548a7cec45b493af66e8bfe524a137d3 280w,/images/patterns/diagrams/composite/live-example-1.5x.png?id=2129195f4103a5a4d3440a086ce3dc87 420w,/images/patterns/diagrams/composite/live-example-2x.png?id=b555458f20fc30425ae6dada5da492af 560w\" sizes=\"(max-width: 720px) 100vw, 280px\" width=\"280\" style=\"aspect-ratio: 1.22;\" loading=\"lazy\" /><figcaption>\n<p>An example of a military structure.</p>\n</figcaption></figure>\n<p>Armies of most countries are structured as hierarchies. An army consists of several divisions; a division is a set of brigades, and a brigade consists of platoons, which can be broken down into squads. Finally, a squad is a small group of real soldiers. Orders are given at the top of the hierarchy and passed down onto each level until every soldier knows what needs to be done.</p>\n</div>\n<div class=\"section structure-container\">\n<h2 id=\"structure\"><i class=\"fa fa-sitemap\" aria-hidden=\"true\"></i> Structure</h2>\n<div class=\"structure\">\n<div class=\"struct-image1 struct-image\">\n<figure class=\"image\"><img class=\"structure-img-non-indexed d-none d-xl-block\" src=\"/images/patterns/diagrams/composite/structure-en.png?id=b7f114558b594dfb220d225398b2b744\" alt=\"Structure of the Composite design pattern\" srcset=\"/images/patterns/diagrams/composite/structure-en.png?id=b7f114558b594dfb220d225398b2b744 360w,/images/patterns/diagrams/composite/structure-en-1.5x.png?id=8e06210d59cadf817621d810accfa5f6 540w,/images/patterns/diagrams/composite/structure-en-2x.png?id=fc41be8ae17c7250ea6d29632a239ba4 720w\" sizes=\"(max-width: 720px) 100vw, 360px\" width=\"360\" style=\"aspect-ratio: 0.82;\" loading=\"lazy\" /><img class=\"structure-img-indexed d-xl-none\" src=\"/images/patterns/diagrams/composite/structure-en-indexed.png?id=9fbce571969f4bc9bb57ee4a7d786852\" alt=\"Structure of the Composite design pattern\" srcset=\"/images/patterns/diagrams/composite/structure-en-indexed.png?id=9fbce571969f4bc9bb57ee4a7d786852 400w,/images/patterns/diagrams/composite/structure-en-indexed-1.5x.png?id=34c97ed1cf5615a6b680ee23264dbf29 600w,/images/patterns/diagrams/composite/structure-en-indexed-2x.png?id=a5bbb62b1bc218bc52615bacf3fb3b73 800w\" sizes=\"(max-width: 720px) 100vw, 400px\" width=\"400\" style=\"aspect-ratio: 0.85;\" loading=\"lazy\" /></figure>\n</div>\n<ol><li class=\"struct-li1\">\n<p>The <strong>Component</strong> interface describes operations that are common to both simple and complex elements of the tree.</p>\n</li>\n<li class=\"struct-li2\">\n<p>The <strong>Leaf</strong> is a basic element of a tree that doesn’t have sub-elements.</p>\n<p>Usually, leaf components end up doing most of the real work, since they don’t have anyone to delegate the work to.</p>\n</li>\n<li class=\"struct-li3\">\n<p>The <strong>Container</strong> (aka <em>composite</em>) is an element that has sub-elements: leaves or other containers. A container doesn’t know the concrete classes of its children. It works with all sub-elements only via the component interface.</p>\n<p>Upon receiving a request, a container delegates the work to its sub-elements, processes intermediate results and then returns the final result to the client.</p>\n</li>\n<li class=\"struct-li4\">\n<p>The <strong>Client</strong> works with all elements through the component interface. As a result, the client can work in the same way with both simple or complex elements of the tree.</p>\n</li></ol>\n<style structure type=\"text/css\" >\n@media (min-width: 1200px) {\n.structure {\nmargin: 0;\nwidth: auto;\nheight: 480px;\n}\n\n.struct-image1 {\nleft: 230px;\ntop: 10px;\n}\n\n.struct-li1 {\nleft: 0px;\ntop: 90px;\nwidth: 220px;\n}\n\n.struct-li2 {\nleft: 0px;\ntop: 230px;\nwidth: 220px;\n}\n\n.struct-li3 {\nleft: 600px;\ntop: 170px;\nwidth: 250px;\n}\n\n.struct-li4 {\nleft: 360px;\ntop: -10px;\nwidth: 210px;\n}\n}\n\n</style>\n</div></div>\n<div class=\"section pseudocode\">\n<h2 id=\"pseudocode\"><i class=\"fa fa-hashtag\" aria-hidden=\"true\"></i> Pseudocode</h2>\n<p>In this example, the <strong>Composite</strong> pattern lets you implement stacking of geometric shapes in a graphical editor.</p>\n<figure class=\"image\"><img src=\"/images/patterns/diagrams/composite/example.png?id=98ba81d07c979038dd2ebf3c83a2e19f\" alt=\"Structure of the Composite example\" srcset=\"/images/patterns/diagrams/composite/example.png?id=98ba81d07c979038dd2ebf3c83a2e19f 370w,/images/patterns/diagrams/composite/example-1.5x.png?id=ae008efd4146628cd7303925d4ce90be 555w,/images/patterns/diagrams/composite/example-2x.png?id=d21edef39d3792e8a4c6736727ac7305 740w\" sizes=\"(max-width: 720px) 100vw, 370px\" width=\"370\" style=\"aspect-ratio: 0.84;\" loading=\"lazy\" /><figcaption>\n<p>The geometric shapes editor example.</p>\n</figcaption></figure>\n<p>The <code>CompoundGraphic</code> class is a container that can comprise any number of sub-shapes, including other compound shapes. A compound shape has the same methods as a simple shape. However, instead of doing something on its own, a compound shape passes the request recursively to all its children and “sums up” the result.</p>\n<p>The client code works with all shapes through the single interface common to all shape classes. Thus, the client doesn’t know whether it’s working with a simple shape or a compound one. The client can work with very complex object structures without being coupled to concrete classes that form that structure.</p>\n<figure class=\"code\">\n<pre class=\"code\" lang=\"pseudocode\">// The component interface declares common operations for both\n// simple and complex objects of a composition.\ninterface Graphic is\n    method move(x, y)\n    method draw()\n\n// The leaf class represents end objects of a composition. A\n// leaf object can't have any sub-objects. Usually, it's leaf\n// objects that do the actual work, while composite objects only\n// delegate to their sub-components.\nclass Dot implements Graphic is\n    field x, y\n\n    constructor Dot(x, y) { ... }\n\n    method move(x, y) is\n        this.x += x, this.y += y\n\n    method draw() is\n        // Draw a dot at X and Y.\n\n// All component classes can extend other components.\nclass Circle extends Dot is\n    field radius\n\n    constructor Circle(x, y, radius) { ... }\n\n    method draw() is\n        // Draw a circle at X and Y with radius R.\n\n// The composite class represents complex components that may\n// have children. Composite objects usually delegate the actual\n// work to their children and then &quot;sum up&quot; the result.\nclass CompoundGraphic implements Graphic is\n    field children: array of Graphic\n\n    // A composite object can add or remove other components\n    // (both simple or complex) to or from its child list.\n    method add(child: Graphic) is\n        // Add a child to the array of children.\n\n    method remove(child: Graphic) is\n        // Remove a child from the array of children.\n\n    method move(x, y) is\n        foreach (child in children) do\n            child.move(x, y)\n\n    // A composite executes its primary logic in a particular\n    // way. It traverses recursively through all its children,\n    // collecting and summing up their results. Since the\n    // composite's children pass these calls to their own\n    // children and so forth, the whole object tree is traversed\n    // as a result.\n    method draw() is\n        // 1. For each child component:\n        //     - Draw the component.\n        //     - Update the bounding rectangle.\n        // 2. Draw a dashed rectangle using the bounding\n        // coordinates.\n\n\n// The client code works with all the components via their base\n// interface. This way the client code can support simple leaf\n// components as well as complex composites.\nclass ImageEditor is\n    field all: CompoundGraphic\n\n    method load() is\n        all = new CompoundGraphic()\n        all.add(new Dot(1, 2))\n        all.add(new Circle(5, 3, 10))\n        // ...\n\n    // Combine selected components into one complex composite\n    // component.\n    method groupSelected(components: array of Graphic) is\n        group = new CompoundGraphic()\n        foreach (component in components) do\n            group.add(component)\n            all.remove(component)\n        all.add(group)\n        // All components will be drawn.\n        all.draw()\n</pre>\n</figure>\n</div>\n<div class=\"section applicability-container\">\n<h2 id=\"applicability\"><i class=\"fa fa-lightbulb-on\" aria-hidden=\"true\"></i> Applicability</h2>\n<div class=\"applicability\">\n<div class=\"applicability-problem\">\n<p><i class=\"fa fa-fw fa-bug\" aria-hidden=\"true\"></i> Use the Composite pattern when you have to implement a tree-like object structure.</p>\n</div><div class=\"applicability-solution\">\n<p><i class=\"fa fa-fw fa-bolt\" aria-hidden=\"true\"></i> The Composite pattern provides you with two basic element types that share a common interface: simple leaves and complex containers. A container can be composed of both leaves and other containers. This lets you construct a nested recursive object structure that resembles a tree.</p>\n</div>\n<div class=\"applicability-problem\">\n<p><i class=\"fa fa-fw fa-bug\" aria-hidden=\"true\"></i> Use the pattern when you want the client code to treat both simple and complex elements uniformly.</p>\n</div><div class=\"applicability-solution\">\n<p><i class=\"fa fa-fw fa-bolt\" aria-hidden=\"true\"></i> All elements defined by the Composite pattern share a common interface. Using this interface, the client doesn’t have to worry about the concrete class of the objects it works with.</p>\n</div>\n</div></div>\n<div class=\"section checklist\">\n<h2 id=\"checklist\"><i class=\"fa fa-clipboard-list-check\" aria-hidden=\"true\"></i> How to Implement</h2>\n<ol>\n<li>\n<p>Make sure that the core model of your app can be represented as a tree structure. Try to break it down into simple elements and containers. Remember that containers must be able to contain both simple elements and other containers.</p>\n</li>\n<li>\n<p>Declare the component interface with a list of methods that make sense for both simple and complex components.</p>\n</li>\n<li>\n<p>Create a leaf class to represent simple elements. A program may have multiple different leaf classes.</p>\n</li>\n<li>\n<p>Create a container class to represent complex elements. In this class, provide an array field for storing references to sub-elements. The array must be able to store both leaves and containers, so make sure it’s declared with the component interface type.</p>\n<p>While implementing the methods of the component interface, remember that a container is supposed to be delegating most of the work to sub-elements.</p>\n</li>\n<li>\n<p>Finally, define the methods for adding and removal of child elements in the container.</p>\n<p>Keep in mind that these operations can be declared in the component interface. This would violate the <em>Interface Segregation Principle</em> because the methods will be empty in the leaf class. However, the client will be able to treat all the elements equally, even when composing the tree.</p>\n</li>\n</ol>\n</div>\n<div class=\"section pros-cons\">\n<h2 id=\"pros-cons\"><i class=\"fa fa-balance-scale\" aria-hidden=\"true\"></i> Pros and Cons</h2>\n<div class=\"row\"><div class=\"col-sm-6\">\n<ul>\n<li><i class=\"fa fa-fw fa-check\" aria-hidden=\"true\"></i> You can work with complex tree structures more conveniently: use polymorphism and recursion to your advantage.</li>\n<li><i class=\"fa fa-fw fa-check\" aria-hidden=\"true\"></i> <em>Open/Closed Principle</em>. You can introduce new element types into the app without breaking the existing code, which now works with the object tree.</li>\n</ul>\n</div><div class=\"col-sm-6\">\n<ul>\n<li><i class=\"fa fa-fw fa-times\" aria-hidden=\"true\"></i> It might be difficult to provide a common interface for classes whose functionality differs too much. In certain scenarios, you’d need to overgeneralize the component interface, making it harder to comprehend.</li>\n</ul>\n</div></div></div>\n<div class=\"section relations\">\n<h2 id=\"relations\"><i class=\"fa fa-exchange-alt\" aria-hidden=\"true\"></i> Relations with Other Patterns</h2>\n<ul>\n<li>\n<p>You can use <a href=\"/design-patterns/builder\">Builder</a> when creating complex <a href=\"/design-patterns/composite\">Composite</a> trees because you can program its construction steps to work recursively.</p>\n</li>\n<li>\n<p><a href=\"/design-patterns/chain-of-responsibility\">Chain of Responsibility</a> is often used in conjunction with <a href=\"/design-patterns/composite\">Composite</a>. In this case, when a leaf component gets a request, it may pass it through the chain of all of the parent components down to the root of the object tree.</p>\n</li>\n<li>\n<p>You can use <a href=\"/design-patterns/iterator\">Iterators</a> to traverse <a href=\"/design-patterns/composite\">Composite</a> trees.</p>\n</li>\n<li>\n<p>You can use <a href=\"/design-patterns/visitor\">Visitor</a> to execute an operation over an entire <a href=\"/design-patterns/composite\">Composite</a> tree.</p>\n</li>\n<li>\n<p>You can implement shared leaf nodes of the <a href=\"/design-patterns/composite\">Composite</a> tree as <a href=\"/design-patterns/flyweight\">Flyweights</a> to save some RAM.</p>\n</li>\n<li>\n<p><a href=\"/design-patterns/composite\">Composite</a> and <a href=\"/design-patterns/decorator\">Decorator</a> have similar structure diagrams since both rely on recursive composition to organize an open-ended number of objects.</p>\n<p>A <em>Decorator</em> is like a <em>Composite</em> but only has one child component. There’s another significant difference: <em>Decorator</em> adds additional responsibilities to the wrapped object, while <em>Composite</em> just “sums up” its children’s results.</p>\n<p>However, the patterns can also cooperate: you can use <em>Decorator</em> to extend the behavior of a specific object in the <em>Composite</em> tree.</p>\n</li>\n<li>\n<p>Designs that make heavy use of <a href=\"/design-patterns/composite\">Composite</a> and <a href=\"/design-patterns/decorator\">Decorator</a> can often benefit from using <a href=\"/design-patterns/prototype\">Prototype</a>. Applying the pattern lets you clone complex structures instead of re-constructing them from scratch.</p>\n</li>\n</ul>\n</div>\n<div class=\"section implementations\">\n<h2 id=\"implementations\"><i class=\"fa fa-code\" aria-hidden=\"true\"></i> Code Examples</h2>\n<p><a href=\"/design-patterns/composite/csharp/example\" title=\"Composite in C#\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/csharp.svg?id=da64592defc6e86d57c39c66e9de3e58\" alt=\"Composite in C#\" /></a>\n<a href=\"/design-patterns/composite/cpp/example\" title=\"Composite in C++\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/cpp.svg?id=f7782ed8b8666246bfcc3f8fefc3b858\" alt=\"Composite in C++\" /></a>\n<a href=\"/design-patterns/composite/go/example\" title=\"Composite in Go\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/go.svg?id=1a89927eb99b1ea3fde7701d97970aca\" alt=\"Composite in Go\" /></a>\n<a href=\"/design-patterns/composite/java/example\" title=\"Composite in Java\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/java.svg?id=e6d87e2dca08c953fe3acd1275ed4f4e\" alt=\"Composite in Java\" /></a>\n<a href=\"/design-patterns/composite/php/example\" title=\"Composite in PHP\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/php.svg?id=be1906eb26b71ec1d3b93720d6156618\" alt=\"Composite in PHP\" /></a>\n<a href=\"/design-patterns/composite/python/example\" title=\"Composite in Python\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/python.svg?id=6d815d43c0f7050a1151b43e51569c9f\" alt=\"Composite in Python\" /></a>\n<a href=\"/design-patterns/composite/ruby/example\" title=\"Composite in Ruby\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/ruby.svg?id=b065b718c914bf8e960ef731600be1eb\" alt=\"Composite in Ruby\" /></a>\n<a href=\"/design-patterns/composite/rust/example\" title=\"Composite in Rust\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/rust.svg?id=1f5698a4b5ae23fe79413511747e4a87\" alt=\"Composite in Rust\" /></a>\n<a href=\"/design-patterns/composite/swift/example\" title=\"Composite in Swift\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/swift.svg?id=0b716c2d52ec3a48fbe91ac031070c1d\" alt=\"Composite in Swift\" /></a>\n<a href=\"/design-patterns/composite/typescript/example\" title=\"Composite in TypeScript\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/typescript.svg?id=2239d0f16cb703540c205dd8cb0c0cb7\" alt=\"Composite in TypeScript\" /></a></p>\n</div>\n\n\n    <div class=\"banner-set2\" id=\"book-promo\">\n            <div class=\"prom banner-content banner-bg banner-striped banner-with-image\" data-id=\"DP: 1: Support our free website and own the eBook!\" data-creative-id=\"standard-en\" data-position=\"content_bottom\">\n                <div class=\"banner-image\">\n                    <a href=\"/design-patterns/book\">\n                        <img width=\"200\" height=\"200\" loading=\"lazy\" src=\"/images/patterns/banners/patterns-book-banner-3.png?id=7d445df13c80287beaab234b4f3b698c\" srcset=\"/images/patterns/banners/patterns-book-banner-3-2x.png?id=0cc3f77ab421d1a5c02ee46488231c3a 2x\">\n                    </a>\n                </div>\n\n                <div class=\"banner-text\">\n                    <h3 class=\"title\">Support our free website and own the eBook!</h3>\n                    <ul style=\"font-size: 14px;\">\n                        <li style=\"margin: 0;\">22 design patterns and 8 principles explained in depth.</li>\n                        <li style=\"margin: 0;\">409 well-structured, easy to read, jargon-free pages.</li>\n                        <li style=\"margin: 0;\">225 clear and helpful illustrations and diagrams.</li>\n                        <li style=\"margin: 0;\">An archive with code examples in 11 languages.</li>\n                        <li style=\"margin: 0;\">All devices supported: PDF/EPUB/MOBI/KFX formats.</li>\n                    </ul>\n                    <a class=\"btn btn-secondary\" href=\"/design-patterns/book\"><i class=\"fa fa-book\" aria-hidden=\"true\"></i> Learn more…</a>\n                </div>\n            </div>\n        </div>\n\n    </article>\n\n<nav class=\"prev-next\">\n                    <div class=\"next\">\n                <h4>Read next</h4>\n                <a rel=\"next\" href=\"/design-patterns/decorator\" class=\"btn btn-primary\">Decorator&nbsp;<span class=\"fa fa-arrow-right\"></span></a>\n            </div>\n                            <div class=\"prev\">\n                <h4>Return</h4>\n                <a rel=\"prev\" href=\"/design-patterns/bridge\" class=\"btn btn-default\"><span class=\"fa fa-arrow-left\"></span>&nbsp;Bridge </a>\n            </div>\n            </nav>\n</div>\n\n<aside class=\"feature content-secondary\">\n    <div class=\"prom banner-sidebar banner-removable banner-removable-patterns\" data-id=\"DP: Sidebar\" data-creative-id=\"standard-sidebar-en\" data-position=\"sidebar\">\n        <div class=\"banner-inner\">\n            <div class=\"image3d-book-right\">\n                <div class=\"image3d-cover\" style=\"background: #0b3752;\">\n                    <a href=\"/design-patterns/book\">\n                        <img width=\"250\" height=\"375\" loading=\"lazy\" src=\"/images/patterns/book/web-cover-en.png?id=328861769fd11617674e3b8a7e2dd9e7\" srcset=\"/images/patterns/book/web-cover-en-2x.png?id=02940141c5652ed5a426d87390b16366 2x\">\n                    </a>\n                </div>\n            </div>\n            <div style=\"margin-top: 1rem\">\n                <p class=\"text-center\" >This article is a part of our eBook<br/><strong>Dive Into Design Patterns</strong>.</p>\n                <a href=\"/design-patterns/book\" class=\"btn btn-secondary btn-block\"><i class=\"fa fa-book\" aria-hidden=\"true\"></i> Learn more…</a>\n            </div>\n        </div>\n    </div>\n\n\n</aside>\n                    </div>\n    </main>\n\n    <aside class=\"sidebar main-menu\">\n    <div class=\"main-menu-controls\">\n        <button class=\"navigation-toggle\"><i class=\"fa fa-fw fa-times\"></i></button>\n    </div>\n    <div class=\"main-menu-list-wrapper nano\">\n        <div class=\"main-menu-list nano-content\">\n            <a class=\"menu-brand\" href=\"/\">\n                                    <img width=200 height=241 loading=\"lazy\" alt=\"Refactoring.Guru\" src=\"/images/content-public/logos/logo-new.png?id=97d554614702483f31e38b32e82d8e34\" srcset=\"/images/content-public/logos/logo-new-2x.png?id=3bc33294e095bab1d6fe9ae421d07837 2x\">\n                            </a>\n\n            <div class=\"menu-container\" style=\"position: relative\">\n                                <ul class=\"menu-list trail\">\n                            <li class=\"featured\">\n            <a href=\"/store\">\n                <i class=\"fa fa-fw fa-star\" aria-hidden=\"true\"></i> Premium Content\n            </a>\n    \n            <ul >\n                            <li class=\"featured menu-fs15\">\n            <a href=\"/design-patterns/book\">\n                <i class=\"fa fa-fw fa-book\" aria-hidden=\"true\"></i> Design Patterns eBook\n            </a>\n    \n    \n            </li>\n                                <li class=\"featured menu-fs15\">\n            <a href=\"/refactoring/course\">\n                <i class=\"fa fa-fw fa-graduation-cap\" aria-hidden=\"true\"></i> Refactoring Course\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring\">\n                <i class=\"fa fa-fw fa-scissors\" aria-hidden=\"true\"></i> Refactoring\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/refactoring/what-is-refactoring\">\n                What is Refactoring\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/refactoring/what-is-refactoring\">\n                Clean code\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/technical-debt\">\n                Technical debt\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/when\">\n                When to refactor\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/how-to\">\n                How to refactor\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/catalog\">\n                Catalog\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells\">\n                Code Smells\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/refactoring/smells/bloaters\">\n                Bloaters\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/long-method\">\n                Long Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/large-class\">\n                Large Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/primitive-obsession\">\n                Primitive Obsession\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/long-parameter-list\">\n                Long Parameter List\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/data-clumps\">\n                Data Clumps\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/oo-abusers\">\n                Object-Orientation Abusers\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/switch-statements\">\n                Switch Statements\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/temporary-field\">\n                Temporary Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/refused-bequest\">\n                Refused Bequest\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/alternative-classes-with-different-interfaces\">\n                Alternative Classes with Different Interfaces\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/change-preventers\">\n                Change Preventers\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/divergent-change\">\n                Divergent Change\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/shotgun-surgery\">\n                Shotgun Surgery\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/parallel-inheritance-hierarchies\">\n                Parallel Inheritance Hierarchies\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/dispensables\">\n                Dispensables\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/comments\">\n                Comments\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/duplicate-code\">\n                Duplicate Code\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/lazy-class\">\n                Lazy Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/data-class\">\n                Data Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/dead-code\">\n                Dead Code\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/speculative-generality\">\n                Speculative Generality\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/couplers\">\n                Couplers\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/feature-envy\">\n                Feature Envy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/inappropriate-intimacy\">\n                Inappropriate Intimacy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/message-chains\">\n                Message Chains\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/middle-man\">\n                Middle Man\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/other\">\n                Other Smells\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/incomplete-library-class\">\n                Incomplete Library Class\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques\">\n                Refactorings\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/refactoring/techniques/composing-methods\">\n                Composing Methods\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/extract-method\">\n                Extract Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/inline-method\">\n                Inline Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-variable\">\n                Extract Variable\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/inline-temp\">\n                Inline Temp\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-temp-with-query\">\n                Replace Temp with Query\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/split-temporary-variable\">\n                Split Temporary Variable\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-assignments-to-parameters\">\n                Remove Assignments to Parameters\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-method-with-method-object\">\n                Replace Method with Method Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/substitute-algorithm\">\n                Substitute Algorithm\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/moving-features-between-objects\">\n                Moving Features between Objects\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/move-method\">\n                Move Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/move-field\">\n                Move Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-class\">\n                Extract Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/inline-class\">\n                Inline Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/hide-delegate\">\n                Hide Delegate\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-middle-man\">\n                Remove Middle Man\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-foreign-method\">\n                Introduce Foreign Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-local-extension\">\n                Introduce Local Extension\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/organizing-data\">\n                Organizing Data\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/self-encapsulate-field\">\n                Self Encapsulate Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-data-value-with-object\">\n                Replace Data Value with Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/change-value-to-reference\">\n                Change Value to Reference\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/change-reference-to-value\">\n                Change Reference to Value\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-array-with-object\">\n                Replace Array with Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/duplicate-observed-data\">\n                Duplicate Observed Data\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/change-unidirectional-association-to-bidirectional\">\n                Change Unidirectional Association to Bidirectional\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/change-bidirectional-association-to-unidirectional\">\n                Change Bidirectional Association to Unidirectional\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-magic-number-with-symbolic-constant\">\n                Replace Magic Number with Symbolic Constant\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/encapsulate-field\">\n                Encapsulate Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/encapsulate-collection\">\n                Encapsulate Collection\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-type-code-with-class\">\n                Replace Type Code with Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-type-code-with-subclasses\">\n                Replace Type Code with Subclasses\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-type-code-with-state-strategy\">\n                Replace Type Code with State/Strategy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-subclass-with-fields\">\n                Replace Subclass with Fields\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/simplifying-conditional-expressions\">\n                Simplifying Conditional Expressions\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/decompose-conditional\">\n                Decompose Conditional\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/consolidate-conditional-expression\">\n                Consolidate Conditional Expression\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/consolidate-duplicate-conditional-fragments\">\n                Consolidate Duplicate Conditional Fragments\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-control-flag\">\n                Remove Control Flag\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-nested-conditional-with-guard-clauses\">\n                Replace Nested Conditional with Guard Clauses\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-conditional-with-polymorphism\">\n                Replace Conditional with Polymorphism\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-null-object\">\n                Introduce Null Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-assertion\">\n                Introduce Assertion\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/simplifying-method-calls\">\n                Simplifying Method Calls\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/rename-method\">\n                Rename Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/add-parameter\">\n                Add Parameter\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-parameter\">\n                Remove Parameter\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/separate-query-from-modifier\">\n                Separate Query from Modifier\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/parameterize-method\">\n                Parameterize Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-parameter-with-explicit-methods\">\n                Replace Parameter with Explicit Methods\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/preserve-whole-object\">\n                Preserve Whole Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-parameter-with-method-call\">\n                Replace Parameter with Method Call\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-parameter-object\">\n                Introduce Parameter Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-setting-method\">\n                Remove Setting Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/hide-method\">\n                Hide Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-constructor-with-factory-method\">\n                Replace Constructor with Factory Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-error-code-with-exception\">\n                Replace Error Code with Exception\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-exception-with-test\">\n                Replace Exception with Test\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/dealing-with-generalization\">\n                Dealing with Generalization\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/pull-up-field\">\n                Pull Up Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/pull-up-method\">\n                Pull Up Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/pull-up-constructor-body\">\n                Pull Up Constructor Body\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/push-down-method\">\n                Push Down Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/push-down-field\">\n                Push Down Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-subclass\">\n                Extract Subclass\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-superclass\">\n                Extract Superclass\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-interface\">\n                Extract Interface\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/collapse-hierarchy\">\n                Collapse Hierarchy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/form-template-method\">\n                Form Template Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-inheritance-with-delegation\">\n                Replace Inheritance with Delegation\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-delegation-with-inheritance\">\n                Replace Delegation with Inheritance\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"trail\">\n            <a href=\"/design-patterns\">\n                <i class=\"fa fa-fw fa-puzzle-piece\" aria-hidden=\"true\"></i> Design Patterns\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/what-is-pattern\">\n                What is a Pattern\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/what-is-pattern\">\n                What's a design pattern?\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/history\">\n                History of patterns\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/why-learn-patterns\">\n                Why should I learn patterns?\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/criticism\">\n                Criticism of patterns\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/classification\">\n                Classification of patterns\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/catalog\">\n                Catalog\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-third-level\">\n            <a href=\"/design-patterns/creational-patterns\">\n                Creational Patterns\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/factory-method\">\n                Factory Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/abstract-factory\">\n                Abstract Factory\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/builder\">\n                Builder\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/prototype\">\n                Prototype\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/singleton\">\n                Singleton\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"menu-third-level trail\">\n            <a href=\"/design-patterns/structural-patterns\">\n                Structural Patterns\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/adapter\">\n                Adapter\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/bridge\">\n                Bridge\n            </a>\n    \n    \n            </li>\n                                <li class=\"trail active\">\n            <a href=\"/design-patterns/composite\">\n                Composite\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/decorator\">\n                Decorator\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/facade\">\n                Facade\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/flyweight\">\n                Flyweight\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/proxy\">\n                Proxy\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"menu-third-level\">\n            <a href=\"/design-patterns/behavioral-patterns\">\n                Behavioral Patterns\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/chain-of-responsibility\">\n                Chain of Responsibility\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/command\">\n                Command\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/iterator\">\n                Iterator\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/mediator\">\n                Mediator\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/memento\">\n                Memento\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/observer\">\n                Observer\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/state\">\n                State\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/strategy\">\n                Strategy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/template-method\">\n                Template Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/visitor\">\n                Visitor\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"menu-code-examples\">\n            <a href=\"/design-patterns/examples\">\n                Code Examples\n            </a>\n    \n            <ul >\n                            <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/csharp\">\n                C#\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/cpp\">\n                C++\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/go\">\n                Go\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/java\">\n                Java\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/php\">\n                PHP\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/python\">\n                Python\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/ruby\">\n                Ruby\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/rust\">\n                Rust\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/swift\">\n                Swift\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/typescript\">\n                TypeScript\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n                </div>\n\n            <div class=\"main-menu-aux-controls\">\n                <a href=\"https://refactoring.guru/login\" title=\"Sign in\" style=\" display: inline-flex; align-items: center; gap: 6px; \"><svg style=\"width: 16px; height: 16px; filter:drop-shadow(0 1px 1px #74261e)\" class=\"inline-block mx-0\"  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\"opacity=\"0.4\" d=\"M352.7 222.4c3.2 1 6.5 1.6 10 1.6l21.3 0c17.7 0 32 14.3 32 32s-14.3 32-32 32l-21.3 0c-.8 0-1.7 0-2.5 0c-.9 0-1.7-.1-2.5-.1c-1.7-.1-3.4-.2-5-.4C357.4 414 391.1 512 432 512c44.2 0 80-114.6 80-256S476.2 0 432 0c-40.6 0-74.2 96.9-79.3 222.4z\"/><path fill=\"currentColor\"class=\"fa-primary\" d=\"M320 48a48 48 0 1 0 -96 0 48 48 0 1 0 96 0zM125.7 175.5c9.9-9.9 23.4-15.5 37.5-15.5c1.9 0 3.8 .1 5.6 .3L137.6 254c-9.3 28 1.7 58.8 26.8 74.5l86.2 53.9-25.4 88.8c-4.9 17 5 34.7 22 39.6s34.7-5 39.6-22l28.7-100.4c5.9-20.6-2.6-42.6-20.7-53.9L238 299l30.9-82.4 5.1 12.3C289 264.7 323.9 288 362.7 288l21.3 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-21.3 0c-12.9 0-24.6-7.8-29.5-19.7l-6.3-15c-14.6-35.1-44.1-61.9-80.5-73.1l-48.7-15c-11.1-3.4-22.7-5.2-34.4-5.2c-31 0-60.8 12.3-82.7 34.3L57.4 153.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l23.1-23.1zM91.2 352L32 352c-17.7 0-32 14.3-32 32s14.3 32 32 32l69.6 0c19 0 36.2-11.2 43.9-28.5L157 361.6l-9.5-6c-17.5-10.9-30.5-26.8-37.9-44.9L91.2 352z\"/></svg> Sign in</a>\n                <a href=\"https://feedback.refactoring.guru/\" class=\"userecho-public\" rel=\"nofollow\" title=\"Contact us\"><i class=\"fa fa-fw fa-fw fa-envelope\" aria-hidden=\"true\"></i> Contact us</a>\n            </div>\n        </div>\n    </div>\n</aside>\n\n    <nav class=\"navigation\" role=\"navigation\">\n    <div class=\"navigation-container\">\n        <a class=\"navigation-brand\" href=\"/\">\n            <img alt=\"Refactoring.Guru\"\n                 src=\"/images/content-public/logos/logo-new-mobile.png?id=ea18aa9b032eaa92835ed6d472b03b4a\"\n                 srcset=\"/images/content-public/logos/logo-new-mobile-2x.png?id=7ad5648bfd86ae2e8524147a72877c64 2x\">\n        </a>\n\n        <div class=\"shop-link d-none d-lg-block\" style=\"display: none !important;\">\n            <a class=\"btn btn-md btn-primary btn-featured\" href=\"/store\"><svg style=\"width: 28px; height: 28px; fill: currentColor; display: inline-block; margin-top: -14px;\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><!--! Font Awesome Pro 6.3.0 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2023 Fonticons, Inc. --><path d=\"M356 60l60 20-60 20-20 60-20-60L256 80l60-20L336 0l20 60zM464 208l48 16-48 16-16 48-16-48-48-16 48-16 16-48 16 48zm-243.8-9.8l33 66.9 73.8 10.7 59.8 8.7-43.3 42.2-53.4 52.1 12.6 73.5L313 512l-53.5-28.1-66-34.7-66 34.7L73.9 512l10.2-59.6 12.6-73.5L43.3 326.8 0 284.6l59.8-8.7 73.8-10.7 33-66.9L193.5 144l26.8 54.2zm26.1 114.4l-25-3.6-11.2-22.6-16.7-33.9-16.7 33.9L165.6 309l-25 3.6-37.4 5.4 27.1 26.4 18.1 17.6L144 387l-6.4 37.3 33.5-17.6 22.3-11.7 22.3 11.7 33.5 17.6L242.9 387l-4.3-24.9 18.1-17.6 27.1-26.4-37.4-5.4z\"/></svg>\n                Shop Now!</a>\n        </div>\n\n        <ul class=\"navigation-menu\">\n                            <li class=\"nav-locale dropdown dropdown-locales\">\n                    <button class=\"dropdown-toggle\" id=\"dropdownLanguage\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                        <i class=\"fa fa-fw fa-globe\" aria-hidden=\"true\"></i> <span class=\"caption d-none d-lg-inline-block\">English</span>\n                    </button>\n                    <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownLanguage\">\n                                                                                                                        <a href=\"https://refactoring.guru/design-patterns/composite\" class=\"dropdown-item locale-link active\" data-locale=\"en\" title=\"English\">English</a>\n                                                                                                                                <a href=\"https://refactoring.guru/es/design-patterns/composite\" class=\"dropdown-item locale-link \" data-locale=\"es\" title=\"Español\">Español</a>\n                                                                                                                                <a href=\"https://refactoring.guru/fr/design-patterns/composite\" class=\"dropdown-item locale-link \" data-locale=\"fr\" title=\"Français\">Français</a>\n                                                                                                                                <a href=\"https://refactoring.guru/ja/design-patterns/composite\" class=\"dropdown-item locale-link \" data-locale=\"ja\" title=\"日本語\">日本語</a>\n                                                                                                                                <a href=\"https://refactoring.guru/ko/design-patterns/composite\" class=\"dropdown-item locale-link \" data-locale=\"ko\" title=\"한국어\">한국어</a>\n                                                                                                                                <a href=\"https://refactoring.guru/pl/design-patterns/composite\" class=\"dropdown-item locale-link \" data-locale=\"pl\" title=\"Polski\">Polski</a>\n                                                                                                                                <a href=\"https://refactoring.guru/pt-br/design-patterns/composite\" class=\"dropdown-item locale-link \" data-locale=\"pt-br\" title=\"Português Brasileiro\">Português Brasileiro</a>\n                                                                                                                                <a href=\"https://refactoring.guru/ru/design-patterns/composite\" class=\"dropdown-item locale-link \" data-locale=\"ru\" title=\"Русский\">Русский</a>\n                                                                                                                                <a href=\"https://refactoring.guru/uk/design-patterns/composite\" class=\"dropdown-item locale-link \" data-locale=\"uk\" title=\"Українська\">Українська</a>\n                                                                                                                                <a href=\"https://refactoringguru.cn/design-patterns/composite\" class=\"dropdown-item locale-link \" data-locale=\"zh\" title=\"中文\">中文</a>\ndiv>\n                </li>\n                        <li class=\"nav-contacts\">\n                <a class=\"userecho-private\" href=\"https://feedback.refactoring.guru/?show_feedback_form_private=true\" rel=\"nofollow\" title=\"Contact us\">\n                    <i class=\"fa fa-fw fa-envelope\" aria-hidden=\"true\"></i> <span class=\"caption d-none d-xl-inline-block\">Contact us</span>\n                </a>\n            </li>\n                            <li class=\"nav-user\">\n                    <a href=\"https://refactoring.guru/login\" title=\"Sign in\"><span class=\"sign-in-icon\"><svg style=\"width: 24px; height: 24px; \" class=\"inline-block \"  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\"opacity=\"0.4\" d=\"M352.7 222.4c3.2 1 6.5 1.6 10 1.6l21.3 0c17.7 0 32 14.3 32 32s-14.3 32-32 32l-21.3 0c-.8 0-1.7 0-2.5 0c-.9 0-1.7-.1-2.5-.1c-1.7-.1-3.4-.2-5-.4C357.4 414 391.1 512 432 512c44.2 0 80-114.6 80-256S476.2 0 432 0c-40.6 0-74.2 96.9-79.3 222.4z\"/><path fill=\"currentColor\"class=\"fa-primary\" d=\"M320 48a48 48 0 1 0 -96 0 48 48 0 1 0 96 0zM125.7 175.5c9.9-9.9 23.4-15.5 37.5-15.5c1.9 0 3.8 .1 5.6 .3L137.6 254c-9.3 28 1.7 58.8 26.8 74.5l86.2 53.9-25.4 88.8c-4.9 17 5 34.7 22 39.6s34.7-5 39.6-22l28.7-100.4c5.9-20.6-2.6-42.6-20.7-53.9L238 299l30.9-82.4 5.1 12.3C289 264.7 323.9 288 362.7 288l21.3 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-21.3 0c-12.9 0-24.6-7.8-29.5-19.7l-6.3-15c-14.6-35.1-44.1-61.9-80.5-73.1l-48.7-15c-11.1-3.4-22.7-5.2-34.4-5.2c-31 0-60.8 12.3-82.7 34.3L57.4 153.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l23.1-23.1zM91.2 352L32 352c-17.7 0-32 14.3-32 32s14.3 32 32 32l69.6 0c19 0 36.2-11.2 43.9-28.5L157 361.6l-9.5-6c-17.5-10.9-30.5-26.8-37.9-44.9L91.2 352z\"/></svg></span> <span class=\"account-icon\" style=\"display:none\"><svg style=\"width: 24px; height: 24px; \" class=\"inline-block \"  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 576 512\"><path fill=\"currentColor\"opacity=\"0.4\" d=\"M64 270.5l224-196c74.7 65.4 149.4 130.7 224.1 196.1l.4 177.3c.1 35.4-28.6 64.1-64 64.1l-320.4 0c-35.3 0-64-28.6-64-64L64 270.5zM176.1 433.6c.1 .5 .1 1.1 .2 1.6c.2 1 .5 2 .9 3c.8 1.9 2 3.6 3.4 5.1c2.9 2.9 6.9 4.7 11.3 4.7l192 0c8.8 0 16-7.2 16-16c0-44.2-35.8-80-80-80l-64 0c-22.1 0-42.1 9-56.6 23.4c-7.2 7.2-13.1 15.9-17.1 25.4c-2 4.8-3.6 9.8-4.7 15c-.5 2.6-.9 5.3-1.2 7.9c-.1 1.3-.2 2.7-.3 4.1c-.1 1.4-.1 2.7-.1 4.1c0 .6 0 1.1 .1 1.6zm48.2-184.2c-.1 1.1-.2 2.2-.2 3.2c-.1 1.1-.1 2.2-.1 3.3s0 2.2 .1 3.3c.1 1.1 .1 2.2 .2 3.2c.2 2.1 .5 4.3 1 6.4c.9 4.2 2.1 8.2 3.7 12c3.2 7.7 7.9 14.6 13.7 20.3C254.3 312.8 270.3 320 288 320c35.3 0 64-28.7 64-64s-28.7-64-64-64c-17.7 0-33.7 7.2-45.3 18.7c-5.8 5.8-10.5 12.7-13.7 20.3c-1.6 3.8-2.9 7.8-3.7 12c-.4 2.1-.8 4.2-1 6.4z\"/><path fill=\"currentColor\"class=\"fa-primary\" d=\"M309.1 7.9C297-2.6 279-2.6 266.9 7.9l-256 224c-13.3 11.6-14.6 31.9-3 45.2s31.9 14.6 45.2 3L288 74.5 522.9 280.1c13.3 11.6 33.5 10.3 45.2-3s10.3-33.5-3-45.2L512 185.5 512 64c0-17.7-14.3-32-32-32l-32 0c-17.7 0-32 14.3-32 32l0 37.5L309.1 7.9zM352 256a64 64 0 1 0 -128 0 64 64 0 1 0 128 0zm-96 96c-44.2 0-80 35.8-80 80c0 8.8 7.2 16 16 16l192 0c8.8 0 16-7.2 16-16c0-44.2-35.8-80-80-80l-64 0z\"/></svg></span> <span class=\"sign-out-icon\" style=\"display:none\"><svg style=\"width: 24px; height: 24px; \" class=\"inline-block \"  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\"opacity=\"0.4\" d=\"M0 256C0 397.4 35.8 512 80 512c25.3 0 47.8-37.5 62.5-96L128 416c-.5 0-1.1 0-1.6 0c-.6 0-1.1-.1-1.6-.1c-1.1-.1-2.1-.3-3.2-.5c-2.1-.4-4.1-1.1-6-1.9c-3.8-1.6-7.3-4-10.2-6.9s-5.2-6.3-6.9-10.2c-.8-1.9-1.4-3.9-1.9-6c-.2-1.1-.4-2.3-.5-3.5c0-.3 0-.6-.1-.8c0-.2 0-.4 0-.7c0-.4 0-.7 0-.7c0-.5 0-.7 0-.9c0-.3 0-.6 0-.9c0 0 0-.3 0-.7c0-.2 0-.4 0-.7c0-.2 0-.4 .1-.8c0-.3 .1-.6 .1-.9c0-.2 .1-.4 .1-.7c.1-.8 .2-1.2 .3-1.7c.5-2.2 1.1-4.2 1.9-6.1c1.6-3.8 4-7.3 6.9-10.2c5.8-5.8 13.8-9.4 22.6-9.4l26.2 0c3.8-29.6 5.8-62.1 5.8-96c0-18.3-.6-36.1-1.7-53.4c-1.7-1.2-3.4-2.5-4.9-4c-.8-.8-1.6-1.6-2.2-2.5s-1.3-1.7-1.9-2.6c-1.2-1.8-2.1-3.6-2.9-5.5s-1.4-3.9-1.8-5.9c-.2-1-.3-2-.4-3s-.1-2-.2-3c0-8.3 3.1-16.5 9.4-22.8C141 63.1 112.8 0 80 0C35.8 0 0 114.6 0 256z\"/><path fill=\"currentColor\"class=\"fa-primary\" d=\"M416 48a48 48 0 1 0 -96 0 48 48 0 1 0 96 0zM221.7 175.5c9.9-9.9 23.4-15.5 37.5-15.5c1.9 0 3.8 .1 5.6 .3L233.6 254c-9.3 28 1.7 58.8 26.8 74.5l86.2 53.9-25.4 88.8c-4.9 17 5 34.7 22 39.6s34.7-5 39.6-22l28.7-100.4c5.9-20.6-2.6-42.6-20.7-53.9L334 299l30.9-82.4 5.1 12.3C385 264.7 419.9 288 458.7 288l21.3 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-21.3 0c-12.9 0-24.6-7.8-29.5-19.7l-6.3-15c-14.6-35.1-44.1-61.9-80.5-73.1l-48.7-15c-11.1-3.4-22.7-5.2-34.4-5.2c-31 0-60.8 12.3-82.7 34.3l-23.1 23.1c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l23.1-23.1zM187.2 352L128 352c-17.7 0-32 14.3-32 32s14.3 32 32 32l69.6 0c19 0 36.2-11.2 43.9-28.5L253 361.6l-9.5-6c-17.5-10.9-30.5-26.8-37.9-44.9L187.2 352z\"/></svg></span> <span class=\"caption d-none d-xl-inline-block\">Sign in</span></a>\n                </li>\n                        <li class=\"nav-menu\">\n                <button class=\"navigation-toggle\"><i class=\"fa fa-fw fa-bars\" aria-hidden=\"true\"></i></button>\n            </li>\n        </ul>\n    </div>\n</nav>\n\n    <footer class=\"footer center-content\">\n    <div class=\"footer-container center-content-container\">\n        <div class=\"footer-inner container-fluid\">\n            <div class=\"row\">\n                <div class=\"col-8 col-md-10\">\n                    <ul class=\"footer-list footer-list-horizontal\">\n                        <li><a href=\"/\">Home</a></li>\n                        <li><a href=\"/refactoring\">Refactoring</a></li>\n                        <li><a href=\"/design-patterns\">Design Patterns</a></li>\n                        <li><a href=\"/store\">Premium Content</a></li>\n                        <li><a href=\"https://gitbybit.com/\">Git Course</a></li>\n                        <li><a href=\"https://refactoring.userecho.com/\" rel=\"nofollow\" class=\"userecho-public\">Forum</a></li>\n                        <li><a href=\"https://refactoring.userecho.com/\" rel=\"nofollow\" class=\"userecho-private\">Contact us</a></li>\n                    </ul>\n                </div>\n                <div class=\"col-4 col-md-2\">\n                    <ul class=\"footer-list footer-list-iconic footer-list-right\">\n                                                    <li><a href=\"https://www.facebook.com/refactoring.guru\"><i class=\"fa fa-facebook-official\"></i></a></li>\n                                                <li><a href=\"/sendy/form\" rel=\"nofollow\"><i class=\"fa fa-envelope\" aria-hidden=\"true\"></i></a></li>\n                        <li><a href=\"https://github.com/RefactoringGuru\"><i class=\"fa fa-github-circled\"></i></a></li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"footer-second\">\n        <div class=\"footer-container center-content-container\">\n            <div class=\"footer-inner container-fluid\">\n                <div class=\"row\">\n                    <div class=\"col-12 col-sm-6\">\n                        <i class=\"fa fa-fw fa-copyright\"></i> 2014-2025 <a href=\"/\">Refactoring.Guru</a>. <span style=\"white-space: nowrap\">All rights reserved.</span><br>\n                        <i class=\"fa fa-fw fa-image\"></i> Illustrations by <a href=\"http://zhart.us/\" rel=\"nofollow\"><span style=\"white-space: nowrap\">Dmitry Zhart</span></a>\n                    </div>\n                    <div class=\"footer-links-right col-12 col-sm-6 mt-4 mt-sm-0\">\n                        <ul class=\"footer-list footer-list-horizontal footer-list-right\">\n                            <li><a href=\"/terms\"><span>Terms &amp; Conditions</span></a>\n                            </li>\n                            <li><a href=\"/privacy-policy\"><span>Privacy Policy</span></a>\n                            </li>\n                            <li><a href=\"/content-usage-policy\"><span>Content Usage Policy</span></a>\n                            </li>\n                            <li><a href=\"/site-about\"><span>About us</span></a>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n                                    <div class=\"row\">\n                        <div class=\"col-12 col-sm-4\">\n                            <div class=\"mt-4\">\n                                                                    <b>Ukrainian office:</b><br>\n                                    <object class=\"fa-fw\" style=\"height: 0.8rem; filter: invert(50%);\"  type=\"image/svg+xml\" data=\"/images/content-public/icons/fa-building.svg?id=afddb5806968b0a9acfc1df75a181234\">\n                                        <img class=\"fa-fw\" style=\"height: 0.8rem;\" src=\"/images/content-public/icons/fa-building.svg?id=afddb5806968b0a9acfc1df75a181234\" alt=\"Organization address\"/>\n                                    </object> FOP Olga Skobeleva<br>\n                                    <svg style=\"width: 16px; height: 16px; margin-right: 1px; fill: currentColor;\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\"><path d=\"M352 192c0-88.4-71.6-160-160-160S32 103.6 32 192c0 15.6 5.4 37 16.6 63.4c10.9 25.9 26.2 54 43.6 82.1c34.1 55.3 74.4 108.2 99.9 140c25.4-31.8 65.8-84.7 99.9-140c17.3-28.1 32.7-56.3 43.6-82.1C346.6 229 352 207.6 352 192zm32 0c0 87.4-117 243-168.3 307.2c-12.3 15.3-35.1 15.3-47.4 0C117 435 0 279.4 0 192C0 86 86 0 192 0S384 86 384 192zm-240 0a48 48 0 1 0 96 0 48 48 0 1 0 -96 0zm48 80a80 80 0 1 1 0-160 80 80 0 1 1 0 160z\"/></svg> Abolmasova 7<br>\n                                    <span style=\"margin-left: 21px;\">Kyiv, Ukraine, 02002</span><br>\n                                    <i class=\"fa fa-fw fa-envelope\"></i>  Email: support@refactoring.guru\n                                \n                            </div>\n                        </div>\n                        <div class=\"col-12 col-sm-4\">\n                            <div class=\"mt-4\">\n                                <b>Spanish office:</b><br>\n                                <object class=\"fa-fw\" style=\"height: 0.8rem; filter: invert(50%);\"  type=\"image/svg+xml\" data=\"/images/content-public/icons/fa-building.svg?id=afddb5806968b0a9acfc1df75a181234\">\n                                    <img class=\"fa-fw\" style=\"height: 0.8rem;\" src=\"/images/content-public/icons/fa-building.svg?id=afddb5806968b0a9acfc1df75a181234\" alt=\"Organization address\"/>\n                                </object> Oleksandr Shvets<br>\n                                <svg style=\"width: 16px; height: 16px; margin-right: 1px; fill: currentColor;\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\"><path d=\"M352 192c0-88.4-71.6-160-160-160S32 103.6 32 192c0 15.6 5.4 37 16.6 63.4c10.9 25.9 26.2 54 43.6 82.1c34.1 55.3 74.4 108.2 99.9 140c25.4-31.8 65.8-84.7 99.9-140c17.3-28.1 32.7-56.3 43.6-82.1C346.6 229 352 207.6 352 192zm32 0c0 87.4-117 243-168.3 307.2c-12.3 15.3-35.1 15.3-47.4 0C117 435 0 279.4 0 192C0 86 86 0 192 0S384 86 384 192zm-240 0a48 48 0 1 0 96 0 48 48 0 1 0 -96 0zm48 80a80 80 0 1 1 0-160 80 80 0 1 1 0 160z\"/></svg> Avda Pamplona 64<br>\n                                <span style=\"margin-left: 21px;\">Pamplona, Spain, 31009</span><br>\n                                <i class=\"fa fa-fw fa-envelope\"></i>  Email: support@refactoring.guru\n                            </div>\n                        </div>\n                    </div>\n                            </div>\n        </div>\n    </div>\n</footer>\n\n</div>\n\n\n    <script defer>\n    var CodeMirrorScripts = [\"/js/codemirror.min.js?id=f7ae4adf14bd00338caf8e95da733cc9\"];\n</script>\n\n\n\n    <script>window.loadContent = true;window.loadCart = true;</script>\n</body>\n</html>\n"},
{"title": null, "url": "https://refactoring.guru/design-patterns/bridge", "raw_html": "<!DOCTYPE html>\n<html lang=\"en\" dir=\"ltr\">\n<head prefix=\"og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# website: http://ogp.me/ns/website#\">\n    <meta charset=\"utf-8\">\n    <title>Bridge</title>\n\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n    <meta name=\"theme-color\" content=\"#A2E2FD\" />\n\n            <style>\n        .buy-widget-excl-local-taxes {\n            display: none;\n        }\n    </style>\n    \n    <link rel=\"preload\" href=\"/fonts/PTSans/ptsans-regular_en.woff2?1\" as=\"font\" type=\"font/woff2\" crossorigin>\n    <link rel=\"preload\" href=\"/fonts/PTSans/ptsans-bold_en.woff2?1\" as=\"font\" type=\"font/woff2\" crossorigin>\n        <link rel=\"preload\" href=\"/fonts/fontello/fontawesome.woff2?15843843\" as=\"font\" type=\"font/woff2\" crossorigin>\n    <link rel=\"preload\" href=\"/fonts/FiraCode/woff2/FiraCode-Regular_latin.woff2\" as=\"font\" type=\"font/woff2\" crossorigin>\n        <link rel=\"preconnect dns-prefetch\" href=\"https://cdn.paddle.com\">\n    <link rel=\"preconnect dns-prefetch\" href=\"https://www.googletagmanager.com\">\n\n    <link rel=\"alternate\" href=\"https://refactoring.guru/design-patterns/bridge\" hreflang=\"x-default\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/es/design-patterns/bridge\" hreflang=\"es\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/fr/design-patterns/bridge\" hreflang=\"fr\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/ja/design-patterns/bridge\" hreflang=\"ja\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/ko/design-patterns/bridge\" hreflang=\"ko\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/pl/design-patterns/bridge\" hreflang=\"pl\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/pt-br/design-patterns/bridge\" hreflang=\"pt-br\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/ru/design-patterns/bridge\" hreflang=\"ru\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/uk/design-patterns/bridge\" hreflang=\"uk\"/>\n    <link rel=\"alternate\" href=\"https://refactoringguru.cn/design-patterns/bridge\" hreflang=\"zh\"/>\n\n    <meta name=\"description\" content=\"Bridge is a structural design pattern that lets you split a large class or a set of closely related classes into two separate hierarchies—abstraction and implementation—which can be developed independently of each other.\">\n\n    <link rel=\"canonical\" href=\"https://refactoring.guru/design-patterns/bridge\"/>\n\n    <link rel=\"icon\" type=\"image/x-icon\" href=\"/favicon.png\"/>\n\n        <meta property=\"fb:app_id\" content=\"666819623386327\"/>\n        <meta property=\"og:type\" content=\"website\"/>\n        <meta property=\"og:image\" content=\"https://refactoring.guru/images/refactoring/social/facebook-share-preview.png?id=dbf9e98269595be86eb668f365be6868\"/>\n    \n                    <link rel=\"stylesheet\" href=\"/css/public-packed.min.css?id=aaefab4da343b914b8dda9973604a9e8\">\n        <style type=\"text/css\">\n                    @font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_cyrillic-ext.woff2?1) format(\"woff2\");unicode-range:U+0460-052F,U+1C80-1C88,U+20B4,U+2DE0-2DFF,U+A640-A69F,U+FE2E-FE2F}@font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_cyrillic.woff2?1) format(\"woff2\");unicode-range:U+0400-045F,U+0490-0491,U+04B0-04B1,U+2116}@font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_latin-ext.woff2?1) format(\"woff2\");unicode-range:U+0100-024F,U+0259,U+1E00-1EFF,U+2020,U+20A0-20AB,U+20AD-20CF,U+2113,U+2C60-2C7F,U+A720-A7FF}@font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_latin.woff2?1) format(\"woff2\");unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}@font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_en.woff2?1) format(\"woff2\");unicode-range:U+0-FF,U+131,U+142,U+152,U+153,U+2BB,U+2BC,U+2C6,U+2DA,U+2DC,U+420,U+423,U+430,U+438-43A,U+43D,U+440,U+441,U+443,U+44C,U+457,U+2000-206F,U+2074,U+20AA-20AC,U+20B4,U+20B9,U+20BA,U+20BD,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_cyrillic-ext.woff2?1) format(\"woff2\");unicode-range:U+0460-052F,U+1C80-1C88,U+20B4,U+2DE0-2DFF,U+A640-A69F,U+FE2E-FE2F}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_cyrillic.woff2?1) format(\"woff2\");unicode-range:U+0400-045F,U+0490-0491,U+04B0-04B1,U+2116}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_latin-ext.woff2?1) format(\"woff2\");unicode-range:U+0100-024F,U+0259,U+1E00-1EFF,U+2020,U+20A0-20AB,U+20AD-20CF,U+2113,U+2C60-2C7F,U+A720-A7FF}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_latin.woff2?1) format(\"woff2\");unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_en.woff2?1) format(\"woff2\");unicode-range:U+0-FF,U+131,U+142,U+152,U+153,U+2BB,U+2BC,U+2C6,U+2DA,U+2DC,U+420,U+423,U+430,U+438-43A,U+43D,U+440,U+441,U+443,U+44C,U+457,U+2000-206F,U+2074,U+20AA-20AC,U+20B4,U+20B9,U+20BA,U+20BD,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}\n            </style>\n\n    \n            <script defer src=\"/js/public.min.js?id=1f19fe18ffe0fc844ede8a0f2ee64202\"></script>\n        <script defer src=\"/js/checkout.min.js?id=b4da9c5bd8b1cf504447c07ae8b7cd44\"></script>\n            <script defer src=\"https://cdn.paddle.com/paddle/v2/paddle.js\"></script>\n    <script async src=\"https://www.googletagmanager.com/gtag/js?id=G-SR8Y3GYQYC\"></script>\n\n    <script type=\"application/ld+json\">\n        {\"@context\": \"http://schema.org\", \"@graph\": [{\"@type\":\"Person\",\"@id\":\"https://refactoring.guru/#founder\",\"name\":\"Alexander Shvets\"},{\"@type\":\"Organization\",\"@id\":\"https://refactoring.guru/#organization\",\"name\":\"Refactoring.Guru\",\"description\":\"Refactoring.Guru makes it easy for you to discover everything you need to know about refactoring, design patterns, SOLID principles, and other smart programming topics.\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https://refactoring.guru/#organizationlogo\",\"url\":\"https://refactoring.guru/images/content-public/logos/logo-plain.png\",\"caption\":\"Refactoring.Guru\"},\"logo\":{\"@id\":\"https://refactoring.guru/#organizationlogo\"},\"founder\":{\"@id\":\"https://refactoring.guru/#founder\"},\"sameAs\":[\"https://www.facebook.com/refactoring.guru\",\"https://twitter.com/RefactoringGuru\",\"https://github.com/RefactoringGuru\"]},{\"@type\":\"WebSite\",\"@id\":\"https://refactoring.guru/#website\",\"url\":\"https://refactoring.guru/\",\"name\":\"Refactoring.Guru\",\"description\":\"Refactoring.Guru makes it easy for you to discover everything you need to know about refactoring, design patterns, SOLID principles, and other smart programming topics.\",\"author\":{\"@id\":\"https://refactoring.guru/#founder\"},\"publisher\":{\"@id\":\"https://refactoring.guru/#organization\"},\"copyrightYear\":2014},{\"@type\":\"WebPage\",\"@id\":\"https://refactoring.guru/design-patterns/bridge#webpage\",\"url\":\"https://refactoring.guru/design-patterns/bridge\",\"inLanguage\":\"en\",\"name\":\"Bridge\",\"description\":\"Bridge is a structural design pattern that lets you split a large class or a set of closely related classes into two separate hierarchies—abstraction and implementation—which can be developed independently of each other.\",\"isPartOf\":{\"@id\":\"https://refactoring.guru#website\"},\"breadcrumb\":{\"@id\":\"https://refactoring.guru/design-patterns/bridge#breadcrumb\"},\"primaryImageOfPage\":{\"@id\":\"https://refactoring.guru/design-patterns/bridge#primaryimage\"},\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https://refactoring.guru/design-patterns/bridge#primaryimage\",\"url\":\"https://refactoring.guru/images/patterns/content/bridge/bridge-3x.png\",\"width\":1920,\"height\":1200}},{\"@type\":\"Article\",\"@id\":\"https://refactoring.guru/design-patterns/bridge#article\",\"isPartOf\":{\"@id\":\"https://refactoring.guru/design-patterns/bridge#webpage\"},\"mainEntityOfPage\":{\"@id\":\"https://refactoring.guru/design-patterns/bridge#webpage\"},\"author\":{\"@id\":\"https://refactoring.guru#founder\"},\"publisher\":{\"@id\":\"https://refactoring.guru#organization\"},\"headline\":\"Bridge\",\"datePublished\":\"2024-01-01\",\"dateModified\":\"2025-01-01\",\"articleSection\":\"Design Patterns\",\"image\":{\"@id\":\"https://refactoring.guru/design-patterns/bridge#primaryimage\"}},{\"@type\":\"BreadcrumbList\",\"@id\":\"https://refactoring.guru/design-patterns/bridge#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https://refactoring.guru\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Design Patterns\",\"item\":\"https://refactoring.guru/design-patterns\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"Structural Patterns\",\"item\":\"https://refactoring.guru/design-patterns/structural-patterns\"}]}] }\n    </script>\n\n    <script>\nfunction extend(){var extended={};var deep=false;var i=0;var length=arguments[\"length\"];if(Object[\"prototype\"][\"toString\"][\"call\"](arguments[0])=== '[object Boolean]'){deep= arguments[0];i++};var merge=function(obj){for(var prop in obj){if(Object[\"prototype\"][\"hasOwnProperty\"][\"call\"](obj,prop)){if(deep&& Object[\"prototype\"][\"toString\"][\"call\"](obj[prop])=== '[object Object]'){extended[prop]= extend(true,extended[prop],obj[prop])}else {extended[prop]= obj[prop]}}}};for(;i< length;i++){var obj=arguments[i];merge(obj)};return extended}\nfunction defer(method) {if (window.jQuery) {method();} else {setTimeout(function() { defer(method) }, 50);}}\n</script>\n<script>\n+function(sd){sd = (typeof sd === \"string\") ? JSON.parse(atob(sd)) : sd;for(var property in sd){if(window[property]!== null&&  typeof window[property]=== 'object'){window[property]= extend(true,window[property],sd[property])}else {window[property]= sd[property]}}}(\"eyJsb2NhbGUiOiJlbiIsImxvY2FsZV9wcmVmaXgiOiIiLCJsb2NhbGl6ZWRfdXJsX3ByZWZpeCI6Imh0dHBzOlwvXC9yZWZhY3RvcmluZy5ndXJ1XC8iLCJ1cmxfcHJlZml4IjoiaHR0cHM6XC9cL3JlZmFjdG9yaW5nLmd1cnVcLyIsImxvY2FsaXplZF91cmxfcHJlZml4X20iOiJodHRwczpcL1wvcmVmYWN0b3JpbmcuZ3VydVwvIiwidXJsX3ByZWZpeF9tIjoiaHR0cHM6XC9cL3JlZmFjdG9yaW5nLmd1cnVcLyIsInVzZXJfZWNob19hbGlhcyI6InJlZmFjdG9yaW5nIiwidXNlcl9lY2hvX2hvc3QiOiJmZWVkYmFjay5yZWZhY3RvcmluZy5ndXJ1IiwidXNlcl9lY2hvX3ByaXZhdGVfZm9ydW0iOiIyIiwidXNlcl9lY2hvX2xvY2FsZSI6ImVuIiwidXNlcl9lY2hvX3B1YmxpY19mb3J1bSI6IjMiLCJ1c2VyX2VjaG9fcHVibGljX2ZvcnVtX3VybCI6Imh0dHBzOlwvXC9mZWVkYmFjay5yZWZhY3RvcmluZy5ndXJ1XC8iLCJ1c2VyX2VjaG9fc3NvX3Rva2VuIjoiIn0=\");\n</script>\n\n<script>\n    window.dataLayer = window.dataLayer || [];\n    function gtag(){dataLayer.push(arguments);}\n    gtag('js', new Date());\n            gtag('set', 'linker', {'domains': [\"refactoring.guru,refactoringguru.cn\"]});\n        gtag('config', 'G-SR8Y3GYQYC', {\n        // Disable default page view, because we're going to report them on our own.\n        // This is done to report traffic on localized domains as part of the main website traffic\n        // See the Chinese overrides below.\n        send_page_view: false,\n    });\n</script>\n\n<script>\n    (() => {\n        // On first page view after returning from social network, we need to send the social login event.\n        (function detectSocialLogin() {\n            let getCookie = function (name) {\n                var nameEQ = name + \"=\";\n                var ca = document.cookie.split(';');\n                for (var i = 0; i < ca.length; i++) {\n                    var c = ca[i];\n                    while (c.charAt(0) == ' ') c = c.substring(1, c.length);\n                    if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);\n                }\n                return null;\n            };\n            window.social_login_provider = window.social_login_provider || getCookie('social_login_provider');\n            if (window.social_login_provider) {\n                gtag('set', {referrer: null});\n                gtag('event', 'login', {\"method\": window.social_login_provider});\n                // Delete cookie.\n                document.cookie = 'social_login_provider=; Path=/; Max-Age=-99999999;';\n            }\n        })();\n\n        function trackPageView(location, title) {\n            location = location || document.location.href;\n            title = title || document.title;\n\n            // This is show on https://refactoringguru.cn/ and alike.\n            if (typeof window.analytics_path_prefix === 'string') {\n                if (/^(https?:\\/\\/[^\\/]+?)\\/$/.test(location)) {\n                    location = location.replace(/(https?:\\/\\/[^\\/]+?)\\//, '$1' + window.analytics_path_prefix);\n                } else {\n                    location = location.replace(/(https?:\\/\\/[^\\/]+?)\\//, '$1' + window.analytics_path_prefix + '/');\n                }\n                gtag('set', {\n                    'page_location': location\n                });\n            }\n\n            // This is show on https://refactoring.guru/zh/login and alike.\n            if (typeof window.analytics_location_prefix === 'string') {\n                location = location.replace(/(https?:\\/\\/[^\\/]+?)\\//, window.analytics_location_prefix);\n                gtag('set', {\n                    'page_location': location\n                });\n            }\n\n            gtag('event', 'page_view', {\n                page_location: location,\n                page_title: title,\n                locale: window.locale ?? 'en'\n            });\n        }\n\n        if (window.loadContent) {\n            window.onPageLoad = window.onPageLoad || [];\n            window.onPageLoad.push({\n                func: function (context) {\n                    trackPageView(window.location.origin + context.canonicalPath, context.title);\n                },\n                afterAll: true,\n            });\n        }\n        else {\n            trackPageView();\n        }\n    })();\n</script>\n\n\n</head>\n<body class=\"locale-en   announcement   bridge\" data-body_class=\"bridge\">\n\n<div class=\"body-holder\">\n\n            <div class=\"announcement-block announcement-block-summer prom\" data-id=\"DIDP-announcement\" data-creative-id=\"en\" data-position=\"top\">\n        <span class=\"beach-and-sea\">\n            <span class=\"a1\"></span>\n            <span class=\"a2\"><span class=\"wave\"></span></span>\n            <span class=\"yacht\"></span>\n        </span>\n        <a href=\"/store\">\n            <img src=\"/images/content-public/ann/summer/sunbed.svg?id=b1e7314a63715a13870a6bd1a43613f7\" loading=\"lazy\" style=\"width: 32px; height:32px;vertical-align: middle; scale: -1 1 1;\">\n            <span class=\"announcement-link-text\">Summer SALE</span>\n            <img src=\"/images/content-public/ann/summer/reading-book.svg?id=36006ea720df8c171968cf613e8ea164\" loading=\"lazy\" style=\"width: 32px; height:32px;vertical-align: middle;\">\n        </a>\n    </div>\n\n    \n    <div class=\"cart-placeholder\">\n    <div class=\"cart-block-container\" style=\"display:none\">\n        <div class=\"cart-block btn-group\">\n            <a href=\"#checkout\" class=\"btn cart open-checkout\">\n                <span class=\"cart-text\"></span>&nbsp;<strong class=\"cart-total font-money\"></strong>\n            </a><a href=\"#checkout\" class=\"btn btn-secondary checkout open-checkout\"><i class=\"fa fa-shopping-cart\" aria-hidden=\"true\"></i> <span class=\"btn-text-span d-none d-sm-inline-block d-lg-none d-hg-inline-block\"></span></a>\n        </div>\n    </div>\n</div>\n    <main role=\"main\" class=\"main-content top-content center-content \" data-page_class=\"\">\n        <div class=\"main-content-container center-content-container\">\n                        <div class=\"pattern page text\">\n<article>\n    <div class=\"breadcrumb\">\n                                    <a class=\"home\" href=\"/\"><i class=\"fa fa-home\" aria-hidden=\"true\"></i></a>\n                                                / <a class=\"type\" href=\"/design-patterns\">Design Patterns</a>\n                                                / <a class=\"type\" href=\"/design-patterns/structural-patterns\">Structural Patterns</a>\n                        </div>\n    <h1 class=\"title\">Bridge</h1>\n\n    <script type=\"text/javascript\">\n        // Shorten examples titles for users.\n        var h1 = document.getElementsByTagName(\"H1\")[0];\n        if (h1.offsetHeight > 160) {\n            h1.className += ' smaller';\n        }\n\n        // Small beautification for pattern examples.\n        var title = h1.innerHTML;\n        title = title.replace(/^(Java|C\\+\\+|C#|PHP|Python|Ruby|Delphi): (.*)$/, '<strong>$1:</strong> $2');\n        h1.innerHTML = title;\n    </script>\n\n    \n    \n\n    <div class=\"section intent\">\n<h2 id=\"intent\"><i class=\"fa fa-flip-horizontal fa-comment-alt-dots\" aria-hidden=\"true\"></i> Intent</h2>\n<p><strong>Bridge</strong> is a structural design pattern that lets you split a large class or a set of closely related classes into two separate hierarchies—abstraction and implementation—which can be developed independently of each other.</p>\n<figure class=\"image\"><img src=\"/images/patterns/content/bridge/bridge.png?id=bd543d4fb32e11647767301581a5ad54\" alt=\"Bridge design pattern\" srcset=\"/images/patterns/content/bridge/bridge.png?id=bd543d4fb32e11647767301581a5ad54 640w,/images/patterns/content/bridge/bridge-1.5x.png?id=8ef07b78d61cc3830b7e2b783c76c775 960w,/images/patterns/content/bridge/bridge-2x.png?id=1e905ae5742e5cd10a7eb0e3175ef00d 1280w\" sizes=\"(max-width: 720px) 100vw, 640px\" width=\"640\" style=\"aspect-ratio: 1.6;\" fetchpriority=\"high\" /></figure>\n</div>\n<div class=\"section problem\">\n<h2 id=\"problem\"><i class=\"fa fa-frown\" aria-hidden=\"true\"></i> Problem</h2>\n<p><em>Abstraction?</em> <em>Implementation?</em> Sound scary? Stay calm and let’s consider a simple example.</p>\n<p>Say you have a geometric <code>Shape</code> class with a pair of subclasses: <code>Circle</code> and <code>Square</code>. You want to extend this class hierarchy to incorporate colors, so you plan to create <code>Red</code> and <code>Blue</code> shape subclasses. However, since you already have two subclasses, you’ll need to create four class combinations such as <code>BlueCircle</code> and <code>RedSquare</code>.</p>\n<figure class=\"image\"><img src=\"/images/patterns/diagrams/bridge/problem-en.png?id=81f8ed6e6f5d673e15203b22a7a3c502\" alt=\"Bridge pattern problem\" srcset=\"/images/patterns/diagrams/bridge/problem-en.png?id=81f8ed6e6f5d673e15203b22a7a3c502 480w,/images/patterns/diagrams/bridge/problem-en-1.5x.png?id=a24f6ae98a0ecced40e8f3feeab058d5 720w,/images/patterns/diagrams/bridge/problem-en-2x.png?id=c67b62720e0465821bbcb84debbbaab0 960w\" sizes=\"(max-width: 720px) 100vw, 480px\" width=\"480\" style=\"aspect-ratio: 1.41;\" loading=\"lazy\" /><figcaption>\n<p>Number of class combinations grows in geometric progression.</p>\n</figcaption></figure>\n<p>Adding new shape types and colors to the hierarchy will grow it exponentially. For example, to add a triangle shape you’d need to introduce two subclasses, one for each color. And after that, adding a new color would require creating three subclasses, one for each shape type. The further we go, the worse it becomes.</p>\n</div>\n<div class=\"section solution\">\n<h2 id=\"solution\"><i class=\"fa fa-smile-beam\" aria-hidden=\"true\"></i> Solution</h2>\n<p>This problem occurs because we’re trying to extend the shape classes in two independent dimensions: by form and by color. That’s a very common issue with class inheritance.</p>\n<p>The Bridge pattern attempts to solve this problem by switching from inheritance to the object composition. What this means is that you extract one of the dimensions into a separate class hierarchy, so that the original classes will reference an object of the new hierarchy, instead of having all of its state and behaviors within one class.</p>\n<figure class=\"image\"><img src=\"/images/patterns/diagrams/bridge/solution-en.png?id=b72caae18c400d6088072f2f3adda7cd\" alt=\"Solution suggested by the Bridge pattern\" srcset=\"/images/patterns/diagrams/bridge/solution-en.png?id=b72caae18c400d6088072f2f3adda7cd 460w,/images/patterns/diagrams/bridge/solution-en-1.5x.png?id=18771f23c35b4614eac048975a5f3167 690w,/images/patterns/diagrams/bridge/solution-en-2x.png?id=9439c9a85ac3db0399844b45fbbaecf6 920w\" sizes=\"(max-width: 720px) 100vw, 460px\" width=\"460\" style=\"aspect-ratio: 2.3;\" loading=\"lazy\" /><figcaption>\n<p>You can prevent the explosion of a class hierarchy by transforming it into several related hierarchies.</p>\n</figcaption></figure>\n<p>Following this approach, we can extract the color-related code into its own class with two subclasses: <code>Red</code> and <code>Blue</code>. The <code>Shape</code> class then gets a reference field pointing to one of the color objects. Now the shape can delegate any color-related work to the linked color object. That reference will act as a bridge between the <code>Shape</code> and <code>Color</code> classes. From now on, adding new colors won’t require changing the shape hierarchy, and vice versa.</p>\n<h4>Abstraction and Implementation</h4>\n<p>The GoF book&nbsp;<button class=\"pop\"><span class=\"pop-i\"><i class=\"fa fa-info-circle\" aria-hidden=\"true\"></i></span><span class=\"pop-content\">“Gang of Four” is a nickname given to the four authors of the original book about design patterns: <em>Design Patterns: Elements of Reusable Object-Oriented Software</em> <a href=\"https://refactoring.guru/gof-book\">https://refactoring.guru/gof-book</a>.</span></button> introduces the terms <em>Abstraction</em> and <em>Implementation</em> as part of the Bridge definition. In my opinion, the terms sound too academic and make the pattern seem more complicated than it really is. Having read the simple example with shapes and colors, let’s decipher the meaning behind the GoF book’s scary words.</p>\n<p><em>Abstraction</em> (also called <em>interface</em>) is a high-level control layer for some entity. This layer isn’t supposed to do any real work on its own. It should delegate the work to the <em>implementation</em> layer (also called <em>platform</em>).</p>\n<p>Note that we’re not talking about <em>interfaces</em> or <em>abstract classes</em> from your programming language. These aren’t the same things.</p>\n<p>When talking about real applications, the abstraction can be represented by a graphical user interface (GUI), and the implementation could be the underlying operating system code (API) which the GUI layer calls in response to user interactions.</p>\n<p>Generally speaking, you can extend such an app in two independent directions:</p>\n<ul>\n<li>Have several different GUIs (for instance, tailored for regular customers or admins).</li>\n<li>Support several different APIs (for example, to be able to launch the app under Windows, Linux, and macOS).</li>\n</ul>\n<p>In a worst-case scenario, this app might look like a giant spaghetti bowl, where hundreds of conditionals connect different types of GUI with various APIs all over the code.</p>\n<figure class=\"image\"><img src=\"/images/patterns/content/bridge/bridge-3-en.png?id=15b8262114938f7bef6602af33f0a62e\" alt=\"Managing changes is much easier in modular code\" srcset=\"/images/patterns/content/bridge/bridge-3-en.png?id=15b8262114938f7bef6602af33f0a62e 600w,/images/patterns/content/bridge/bridge-3-en-1.5x.png?id=1c4de58902d1030a13b786480def264a 900w,/images/patterns/content/bridge/bridge-3-en-2x.png?id=65f98465cec6c4c7e38a635689943822 1200w\" sizes=\"(max-width: 720px) 100vw, 600px\" width=\"600\" style=\"aspect-ratio: 2;\" loading=\"lazy\" /><figcaption>\n<p>Making even a simple change to a monolithic codebase is pretty hard because you must understand the <em>entire thing</em> very well. Making changes to smaller, well-defined modules is much easier.</p>\n</figcaption></figure>\n<p>You can bring order to this chaos by extracting the code related to specific interface-platform combinations into separate classes. However, soon you’ll discover that there are <em>lots</em> of these classes. The class hierarchy will grow exponentially because adding a new GUI or supporting a different API would require creating more and more classes.</p>\n<p>Let’s try to solve this issue with the Bridge pattern. It suggests that we divide the classes into two hierarchies:</p>\n<ul>\n<li>Abstraction: the GUI layer of the app.</li>\n<li>Implementation: the operating systems’ APIs.</li>\n</ul>\n<figure class=\"image\"><img src=\"/images/patterns/content/bridge/bridge-2-en.png?id=5c5aef57ca6aa8c3c97fd8922fc8bb58\" alt=\"Cross-platform architecture\" srcset=\"/images/patterns/content/bridge/bridge-2-en.png?id=5c5aef57ca6aa8c3c97fd8922fc8bb58 640w,/images/patterns/content/bridge/bridge-2-en-1.5x.png?id=72ed90c886ed6ed2bb3b9dd45f7724bb 960w,/images/patterns/content/bridge/bridge-2-en-2x.png?id=bbd64c96e6711636356944b3564ad67e 1280w\" sizes=\"(max-width: 720px) 100vw, 640px\" width=\"640\" style=\"aspect-ratio: 1.6;\" loading=\"lazy\" /><figcaption>\n<p>One of the ways to structure a cross-platform application.</p>\n</figcaption></figure>\n<p>The abstraction object controls the appearance of the app, delegating the actual work to the linked implementation object. Different implementations are interchangeable as long as they follow a common interface, enabling the same GUI to work under Windows and Linux.</p>\n<p>As a result, you can change the GUI classes without touching the API-related classes. Moreover, adding support for another operating system only requires creating a subclass in the implementation hierarchy.</p>\n</div>\n<div class=\"section structure-container\">\n<h2 id=\"structure\"><i class=\"fa fa-sitemap\" aria-hidden=\"true\"></i> Structure</h2>\n<div class=\"structure\">\n<div class=\"struct-image1 struct-image\">\n<figure class=\"image\"><img class=\"structure-img-non-indexed d-none d-xl-block\" src=\"/images/patterns/diagrams/bridge/structure-en.png?id=827afa4b40008dc29d26fe0f4d41b9cc\" alt=\"Bridge design pattern\" srcset=\"/images/patterns/diagrams/bridge/structure-en.png?id=827afa4b40008dc29d26fe0f4d41b9cc 560w,/images/patterns/diagrams/bridge/structure-en-1.5x.png?id=b1968bfca1fece32e9cb65cd151dacdd 840w,/images/patterns/diagrams/bridge/structure-en-2x.png?id=77e749744fb5375839b1cf1aa1061648 1120w\" sizes=\"(max-width: 720px) 100vw, 560px\" width=\"560\" style=\"aspect-ratio: 1.47;\" loading=\"lazy\" /><img class=\"structure-img-indexed d-xl-none\" src=\"/images/patterns/diagrams/bridge/structure-en-indexed.png?id=0461ee029a15b02e03e9735f2ca576d4\" alt=\"Bridge design pattern\" srcset=\"/images/patterns/diagrams/bridge/structure-en-indexed.png?id=0461ee029a15b02e03e9735f2ca576d4 560w,/images/patterns/diagrams/bridge/structure-en-indexed-1.5x.png?id=648521378ae7eac370e7e25ccd52c607 840w,/images/patterns/diagrams/bridge/structure-en-indexed-2x.png?id=99713473c8ba3c08ce6a3540f1453ebc 1120w\" sizes=\"(max-width: 720px) 100vw, 560px\" width=\"560\" style=\"aspect-ratio: 1.44;\" loading=\"lazy\" /></figure>\n</div>\n<ol><li class=\"struct-li1\">\n<p>The <strong>Abstraction</strong> provides high-level control logic. It relies on the implementation object to do the actual low-level work.</p>\n</li>\n<li class=\"struct-li2\">\n<p>The <strong>Implementation</strong> declares the interface that’s common for all concrete implementations. An abstraction can only communicate with an implementation object via methods that are declared here.</p>\n<p>The abstraction may list the same methods as the implementation, but usually the abstraction declares some complex behaviors that rely on a wide variety of primitive operations declared by the implementation.</p>\n</li>\n<li class=\"struct-li3\">\n<p><strong>Concrete Implementations</strong> contain platform-specific code.</p>\n</li>\n<li class=\"struct-li4\">\n<p><strong>Refined Abstractions</strong> provide variants of control logic. Like their parent, they work with different implementations via the general implementation interface.</p>\n</li>\n<li class=\"struct-li5\">\n<p>Usually, the <strong>Client</strong> is only interested in working with the abstraction. However, it’s the client’s job to link the abstraction object with one of the implementation objects.</p>\n</li></ol>\n<style structure type=\"text/css\" >\n@media (min-width: 1200px) {\n.structure {\nmargin: 0;\nwidth: auto;\nheight: 620px;\n}\n\n.struct-image1 {\nleft: 60px;\ntop: 130px;\n}\n\n.struct-li1 {\nleft: 0px;\ntop: 90px;\nwidth: 170px;\n}\n\n.struct-li2 {\nleft: 640px;\ntop: 50px;\nwidth: 190px;\n}\n\n.struct-li3 {\nleft: 420px;\ntop: 480px;\nwidth: 220px;\n}\n\n.struct-li4 {\nleft: 110px;\ntop: 520px;\nwidth: 280px;\n}\n\n.struct-li5 {\nleft: 200px;\ntop: 30px;\nwidth: 390px;\n}\n\n}\n\n</style>\n</div></div>\n<div class=\"section pseudocode\">\n<h2 id=\"pseudocode\"><i class=\"fa fa-hashtag\" aria-hidden=\"true\"></i> Pseudocode</h2>\n<p>This example illustrates how the <strong>Bridge</strong> pattern can help divide the monolithic code of an app that manages devices and their remote controls. The <code>Device</code> classes act as the implementation, whereas the <code>Remote</code>s act as the abstraction.</p>\n<figure class=\"image\"><img src=\"/images/patterns/diagrams/bridge/example-en.png?id=89c406a189c45885004d7fa094f616b1\" alt=\"Structure of the Bridge pattern example\" srcset=\"/images/patterns/diagrams/bridge/example-en.png?id=89c406a189c45885004d7fa094f616b1 640w,/images/patterns/diagrams/bridge/example-en-1.5x.png?id=bb870a109edc52920a51b3fc9110e7f4 960w,/images/patterns/diagrams/bridge/example-en-2x.png?id=19bb8272b4082c5f47c4d047e6cb9967 1280w\" sizes=\"(max-width: 720px) 100vw, 640px\" width=\"640\" style=\"aspect-ratio: 1.33;\" loading=\"lazy\" /><figcaption>\n<p>The original class hierarchy is divided into two parts: devices and remote controls.</p>\n</figcaption></figure>\n<p>The base remote control class declares a reference field that links it with a device object. All remotes work with the devices via the general device interface, which lets the same remote support multiple device types.</p>\n<p>You can develop the remote control classes independently from the device classes. All that’s needed is to create a new remote subclass. For example, a basic remote control might only have two buttons, but you could extend it with additional features, such as an extra battery or a touchscreen.</p>\n<p>The client code links the desired type of remote control with a specific device object via the remote’s constructor.</p>\n<figure class=\"code\">\n<pre class=\"code\" lang=\"pseudocode\">// The &quot;abstraction&quot; defines the interface for the &quot;control&quot;\n// part of the two class hierarchies. It maintains a reference\n// to an object of the &quot;implementation&quot; hierarchy and delegates\n// all of the real work to this object.\nclass RemoteControl is\n    protected field device: Device\n    constructor RemoteControl(device: Device) is\n        this.device = device\n    method togglePower() is\n        if (device.isEnabled()) then\n            device.disable()\n        else\n            device.enable()\n    method volumeDown() is\n        device.setVolume(device.getVolume() - 10)\n    method volumeUp() is\n        device.setVolume(device.getVolume() + 10)\n    method channelDown() is\n        device.setChannel(device.getChannel() - 1)\n    method channelUp() is\n        device.setChannel(device.getChannel() + 1)\n\n\n// You can extend classes from the abstraction hierarchy\n// independently from device classes.\nclass AdvancedRemoteControl extends RemoteControl is\n    method mute() is\n        device.setVolume(0)\n\n\n// The &quot;implementation&quot; interface declares methods common to all\n// concrete implementation classes. It doesn't have to match the\n// abstraction's interface. In fact, the two interfaces can be\n// entirely different. Typically the implementation interface\n// provides only primitive operations, while the abstraction\n// defines higher-level operations based on those primitives.\ninterface Device is\n    method isEnabled()\n    method enable()\n    method disable()\n    method getVolume()\n    method setVolume(percent)\n    method getChannel()\n    method setChannel(channel)\n\n\n// All devices follow the same interface.\nclass Tv implements Device is\n    // ...\n\nclass Radio implements Device is\n    // ...\n\n\n// Somewhere in client code.\ntv = new Tv()\nremote = new RemoteControl(tv)\nremote.togglePower()\n\nradio = new Radio()\nremote = new AdvancedRemoteControl(radio)\n</pre>\n</figure>\n</div>\n<div class=\"section applicability-container\">\n<h2 id=\"applicability\"><i class=\"fa fa-lightbulb-on\" aria-hidden=\"true\"></i> Applicability</h2>\n<div class=\"applicability\">\n<div class=\"applicability-problem\">\n<p><i class=\"fa fa-fw fa-bug\" aria-hidden=\"true\"></i> Use the Bridge pattern when you want to divide and organize a monolithic class that has several variants of some functionality (for example, if the class can work with various database servers).</p>\n</div><div class=\"applicability-solution\">\n<p><i class=\"fa fa-fw fa-bolt\" aria-hidden=\"true\"></i> The bigger a class becomes, the harder it is to figure out how it works, and the longer it takes to make a change. The changes made to one of the variations of functionality may require making changes across the whole class, which often results in making errors or not addressing some critical side effects.</p>\n<p>The Bridge pattern lets you split the monolithic class into several class hierarchies. After this, you can change the classes in each hierarchy independently of the classes in the others. This approach simplifies code maintenance and minimizes the risk of breaking existing code.</p>\n</div>\n<div class=\"applicability-problem\">\n<p><i class=\"fa fa-fw fa-bug\" aria-hidden=\"true\"></i> Use the pattern when you need to extend a class in several orthogonal (independent) dimensions.</p>\n</div><div class=\"applicability-solution\">\n<p><i class=\"fa fa-fw fa-bolt\" aria-hidden=\"true\"></i> The Bridge suggests that you extract a separate class hierarchy for each of the dimensions. The original class delegates the related work to the objects belonging to those hierarchies instead of doing everything on its own.</p>\n</div>\n<div class=\"applicability-problem\">\n<p><i class=\"fa fa-fw fa-bug\" aria-hidden=\"true\"></i> Use the Bridge if you need to be able to switch implementations at runtime.</p>\n</div><div class=\"applicability-solution\">\n<p><i class=\"fa fa-fw fa-bolt\" aria-hidden=\"true\"></i> Although it’s optional, the Bridge pattern lets you replace the implementation object inside the abstraction. It’s as easy as assigning a new value to a field.</p>\n<p>By the way, this last item is the main reason why so many people confuse the Bridge with the <a href=\"/design-patterns/strategy\">Strategy</a> pattern. Remember that a pattern is more than just a certain way to structure your classes. It may also communicate intent and a problem being addressed.</p>\n</div>\n</div></div>\n<div class=\"section checklist\">\n<h2 id=\"checklist\"><i class=\"fa fa-clipboard-list-check\" aria-hidden=\"true\"></i> How to Implement</h2>\n<ol>\n<li>\n<p>Identify the orthogonal dimensions in your classes. These independent concepts could be: abstraction/platform, domain/infrastructure, front-end/back-end, or interface/implementation.</p>\n</li>\n<li>\n<p>See what operations the client needs and define them in the base abstraction class.</p>\n</li>\n<li>\n<p>Determine the operations available on all platforms. Declare the ones that the abstraction needs in the general implementation interface.</p>\n</li>\n<li>\n<p>For all platforms in your domain create concrete implementation classes, but make sure they all follow the implementation interface.</p>\n</li>\n<li>\n<p>Inside the abstraction class, add a reference field for the implementation type. The abstraction delegates most of the work to the implementation object that’s referenced in that field.</p>\n</li>\n<li>\n<p>If you have several variants of high-level logic, create refined abstractions for each variant by extending the base abstraction class.</p>\n</li>\n<li>\n<p>The client code should pass an implementation object to the abstraction’s constructor to associate one with the other. After that, the client can forget about the implementation and work only with the abstraction object.</p>\n</li>\n</ol>\n</div>\n<div class=\"section pros-cons\">\n<h2 id=\"pros-cons\"><i class=\"fa fa-balance-scale\" aria-hidden=\"true\"></i> Pros and Cons</h2>\n<div class=\"row\"><div class=\"col-sm-6\">\n<ul>\n<li><i class=\"fa fa-fw fa-check\" aria-hidden=\"true\"></i> You can create platform-independent classes and apps.</li>\n<li><i class=\"fa fa-fw fa-check\" aria-hidden=\"true\"></i> The client code works with high-level abstractions. It isn’t exposed to the platform details.</li>\n<li><i class=\"fa fa-fw fa-check\" aria-hidden=\"true\"></i> <em>Open/Closed Principle</em>. You can introduce new abstractions and implementations independently from each other.</li>\n<li><i class=\"fa fa-fw fa-check\" aria-hidden=\"true\"></i> <em>Single Responsibility Principle</em>. You can focus on high-level logic in the abstraction and on platform details in the implementation.</li>\n</ul>\n</div><div class=\"col-sm-6\">\n<ul>\n<li><i class=\"fa fa-fw fa-times\" aria-hidden=\"true\"></i> You might make the code more complicated by applying the pattern to a highly cohesive class.</li>\n</ul>\n</div></div></div>\n<div class=\"section relations\">\n<h2 id=\"relations\"><i class=\"fa fa-exchange-alt\" aria-hidden=\"true\"></i> Relations with Other Patterns</h2>\n<ul>\n<li>\n<p><a href=\"/design-patterns/bridge\">Bridge</a> is usually designed up-front, letting you develop parts of an application independently of each other. On the other hand, <a href=\"/design-patterns/adapter\">Adapter</a> is commonly used with an existing app to make some otherwise-incompatible classes work together nicely.</p>\n</li>\n<li>\n<p><a href=\"/design-patterns/bridge\">Bridge</a>, <a href=\"/design-patterns/state\">State</a>, <a href=\"/design-patterns/strategy\">Strategy</a> (and to some degree <a href=\"/design-patterns/adapter\">Adapter</a>) have very similar structures. Indeed, all of these patterns are based on composition, which is delegating work to other objects. However, they all solve different problems. A pattern isn’t just a recipe for structuring your code in a specific way. It can also communicate to other developers the problem the pattern solves.</p>\n</li>\n<li>\n<p>You can use <a href=\"/design-patterns/abstract-factory\">Abstract Factory</a> along with <a href=\"/design-patterns/bridge\">Bridge</a>. This pairing is useful when some abstractions defined by <em>Bridge</em> can only work with specific implementations. In this case, <em>Abstract Factory</em> can encapsulate these relations and hide the complexity from the client code.</p>\n</li>\n<li>\n<p>You can combine <a href=\"/design-patterns/builder\">Builder</a> with <a href=\"/design-patterns/bridge\">Bridge</a>: the director class plays the role of the abstraction, while different builders act as implementations.</p>\n</li>\n</ul>\n</div>\n<div class=\"section implementations\">\n<h2 id=\"implementations\"><i class=\"fa fa-code\" aria-hidden=\"true\"></i> Code Examples</h2>\n<p><a href=\"/design-patterns/bridge/csharp/example\" title=\"Bridge in C#\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/csharp.svg?id=da64592defc6e86d57c39c66e9de3e58\" alt=\"Bridge in C#\" /></a>\n<a href=\"/design-patterns/bridge/cpp/example\" title=\"Bridge in C++\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/cpp.svg?id=f7782ed8b8666246bfcc3f8fefc3b858\" alt=\"Bridge in C++\" /></a>\n<a href=\"/design-patterns/bridge/go/example\" title=\"Bridge in Go\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/go.svg?id=1a89927eb99b1ea3fde7701d97970aca\" alt=\"Bridge in Go\" /></a>\n<a href=\"/design-patterns/bridge/java/example\" title=\"Bridge in Java\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/java.svg?id=e6d87e2dca08c953fe3acd1275ed4f4e\" alt=\"Bridge in Java\" /></a>\n<a href=\"/design-patterns/bridge/php/example\" title=\"Bridge in PHP\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/php.svg?id=be1906eb26b71ec1d3b93720d6156618\" alt=\"Bridge in PHP\" /></a>\n<a href=\"/design-patterns/bridge/python/example\" title=\"Bridge in Python\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/python.svg?id=6d815d43c0f7050a1151b43e51569c9f\" alt=\"Bridge in Python\" /></a>\n<a href=\"/design-patterns/bridge/ruby/example\" title=\"Bridge in Ruby\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/ruby.svg?id=b065b718c914bf8e960ef731600be1eb\" alt=\"Bridge in Ruby\" /></a>\n<a href=\"/design-patterns/bridge/rust/example\" title=\"Bridge in Rust\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/rust.svg?id=1f5698a4b5ae23fe79413511747e4a87\" alt=\"Bridge in Rust\" /></a>\n<a href=\"/design-patterns/bridge/swift/example\" title=\"Bridge in Swift\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/swift.svg?id=0b716c2d52ec3a48fbe91ac031070c1d\" alt=\"Bridge in Swift\" /></a>\n<a href=\"/design-patterns/bridge/typescript/example\" title=\"Bridge in TypeScript\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/typescript.svg?id=2239d0f16cb703540c205dd8cb0c0cb7\" alt=\"Bridge in TypeScript\" /></a></p>\n</div>\n\n\n    <div class=\"banner-set2\" id=\"book-promo\">\n            <div class=\"prom banner-content banner-bg banner-striped banner-with-image\" data-id=\"DP: 1: Support our free website and own the eBook!\" data-creative-id=\"standard-en\" data-position=\"content_bottom\">\n                <div class=\"banner-image\">\n                    <a href=\"/design-patterns/book\">\n                        <img width=\"200\" height=\"200\" loading=\"lazy\" src=\"/images/patterns/banners/patterns-book-banner-3.png?id=7d445df13c80287beaab234b4f3b698c\" srcset=\"/images/patterns/banners/patterns-book-banner-3-2x.png?id=0cc3f77ab421d1a5c02ee46488231c3a 2x\">\n                    </a>\n                </div>\n\n                <div class=\"banner-text\">\n                    <h3 class=\"title\">Support our free website and own the eBook!</h3>\n                    <ul style=\"font-size: 14px;\">\n                        <li style=\"margin: 0;\">22 design patterns and 8 principles explained in depth.</li>\n                        <li style=\"margin: 0;\">409 well-structured, easy to read, jargon-free pages.</li>\n                        <li style=\"margin: 0;\">225 clear and helpful illustrations and diagrams.</li>\n                        <li style=\"margin: 0;\">An archive with code examples in 11 languages.</li>\n                        <li style=\"margin: 0;\">All devices supported: PDF/EPUB/MOBI/KFX formats.</li>\n                    </ul>\n                    <a class=\"btn btn-secondary\" href=\"/design-patterns/book\"><i class=\"fa fa-book\" aria-hidden=\"true\"></i> Learn more…</a>\n                </div>\n            </div>\n        </div>\n\n    </article>\n\n<nav class=\"prev-next\">\n                    <div class=\"next\">\n                <h4>Read next</h4>\n                <a rel=\"next\" href=\"/design-patterns/composite\" class=\"btn btn-primary\">Composite&nbsp;<span class=\"fa fa-arrow-right\"></span></a>\n            </div>\n                            <div class=\"prev\">\n                <h4>Return</h4>\n                <a rel=\"prev\" href=\"/design-patterns/adapter\" class=\"btn btn-default\"><span class=\"fa fa-arrow-left\"></span>&nbsp;Adapter </a>\n            </div>\n            </nav>\n</div>\n\n<aside class=\"feature content-secondary\">\n    <div class=\"prom banner-sidebar banner-removable banner-removable-patterns\" data-id=\"DP: Sidebar\" data-creative-id=\"standard-sidebar-en\" data-position=\"sidebar\">\n        <div class=\"banner-inner\">\n            <div class=\"image3d-book-right\">\n                <div class=\"image3d-cover\" style=\"background: #0b3752;\">\n                    <a href=\"/design-patterns/book\">\n                        <img width=\"250\" height=\"375\" loading=\"lazy\" src=\"/images/patterns/book/web-cover-en.png?id=328861769fd11617674e3b8a7e2dd9e7\" srcset=\"/images/patterns/book/web-cover-en-2x.png?id=02940141c5652ed5a426d87390b16366 2x\">\n                    </a>\n                </div>\n            </div>\n            <div style=\"margin-top: 1rem\">\n                <p class=\"text-center\" >This article is a part of our eBook<br/><strong>Dive Into Design Patterns</strong>.</p>\n                <a href=\"/design-patterns/book\" class=\"btn btn-secondary btn-block\"><i class=\"fa fa-book\" aria-hidden=\"true\"></i> Learn more…</a>\n            </div>\n        </div>\n    </div>\n\n\n</aside>\n                    </div>\n    </main>\n\n    <aside class=\"sidebar main-menu\">\n    <div class=\"main-menu-controls\">\n        <button class=\"navigation-toggle\"><i class=\"fa fa-fw fa-times\"></i></button>\n    </div>\n    <div class=\"main-menu-list-wrapper nano\">\n        <div class=\"main-menu-list nano-content\">\n            <a class=\"menu-brand\" href=\"/\">\n                                    <img width=200 height=241 loading=\"lazy\" alt=\"Refactoring.Guru\" src=\"/images/content-public/logos/logo-new.png?id=97d554614702483f31e38b32e82d8e34\" srcset=\"/images/content-public/logos/logo-new-2x.png?id=3bc33294e095bab1d6fe9ae421d07837 2x\">\n                            </a>\n\n            <div class=\"menu-container\" style=\"position: relative\">\n                                <ul class=\"menu-list trail\">\n                            <li class=\"featured\">\n            <a href=\"/store\">\n                <i class=\"fa fa-fw fa-star\" aria-hidden=\"true\"></i> Premium Content\n            </a>\n    \n            <ul >\n                            <li class=\"featured menu-fs15\">\n            <a href=\"/design-patterns/book\">\n                <i class=\"fa fa-fw fa-book\" aria-hidden=\"true\"></i> Design Patterns eBook\n            </a>\n    \n    \n            </li>\n                                <li class=\"featured menu-fs15\">\n            <a href=\"/refactoring/course\">\n                <i class=\"fa fa-fw fa-graduation-cap\" aria-hidden=\"true\"></i> Refactoring Course\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring\">\n                <i class=\"fa fa-fw fa-scissors\" aria-hidden=\"true\"></i> Refactoring\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/refactoring/what-is-refactoring\">\n                What is Refactoring\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/refactoring/what-is-refactoring\">\n                Clean code\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/technical-debt\">\n                Technical debt\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/when\">\n                When to refactor\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/how-to\">\n                How to refactor\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/catalog\">\n                Catalog\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells\">\n                Code Smells\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/refactoring/smells/bloaters\">\n                Bloaters\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/long-method\">\n                Long Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/large-class\">\n                Large Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/primitive-obsession\">\n                Primitive Obsession\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/long-parameter-list\">\n                Long Parameter List\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/data-clumps\">\n                Data Clumps\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/oo-abusers\">\n                Object-Orientation Abusers\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/switch-statements\">\n                Switch Statements\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/temporary-field\">\n                Temporary Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/refused-bequest\">\n                Refused Bequest\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/alternative-classes-with-different-interfaces\">\n                Alternative Classes with Different Interfaces\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/change-preventers\">\n                Change Preventers\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/divergent-change\">\n                Divergent Change\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/shotgun-surgery\">\n                Shotgun Surgery\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/parallel-inheritance-hierarchies\">\n                Parallel Inheritance Hierarchies\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/dispensables\">\n                Dispensables\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/comments\">\n                Comments\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/duplicate-code\">\n                Duplicate Code\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/lazy-class\">\n                Lazy Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/data-class\">\n                Data Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/dead-code\">\n                Dead Code\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/speculative-generality\">\n                Speculative Generality\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/couplers\">\n                Couplers\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/feature-envy\">\n                Feature Envy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/inappropriate-intimacy\">\n                Inappropriate Intimacy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/message-chains\">\n                Message Chains\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/middle-man\">\n                Middle Man\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/other\">\n                Other Smells\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/incomplete-library-class\">\n                Incomplete Library Class\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques\">\n                Refactorings\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/refactoring/techniques/composing-methods\">\n                Composing Methods\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/extract-method\">\n                Extract Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/inline-method\">\n                Inline Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-variable\">\n                Extract Variable\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/inline-temp\">\n                Inline Temp\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-temp-with-query\">\n                Replace Temp with Query\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/split-temporary-variable\">\n                Split Temporary Variable\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-assignments-to-parameters\">\n                Remove Assignments to Parameters\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-method-with-method-object\">\n                Replace Method with Method Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/substitute-algorithm\">\n                Substitute Algorithm\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/moving-features-between-objects\">\n                Moving Features between Objects\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/move-method\">\n                Move Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/move-field\">\n                Move Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-class\">\n                Extract Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/inline-class\">\n                Inline Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/hide-delegate\">\n                Hide Delegate\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-middle-man\">\n                Remove Middle Man\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-foreign-method\">\n                Introduce Foreign Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-local-extension\">\n                Introduce Local Extension\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/organizing-data\">\n                Organizing Data\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/self-encapsulate-field\">\n                Self Encapsulate Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-data-value-with-object\">\n                Replace Data Value with Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/change-value-to-reference\">\n                Change Value to Reference\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/change-reference-to-value\">\n                Change Reference to Value\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-array-with-object\">\n                Replace Array with Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/duplicate-observed-data\">\n                Duplicate Observed Data\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/change-unidirectional-association-to-bidirectional\">\n                Change Unidirectional Association to Bidirectional\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/change-bidirectional-association-to-unidirectional\">\n                Change Bidirectional Association to Unidirectional\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-magic-number-with-symbolic-constant\">\n                Replace Magic Number with Symbolic Constant\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/encapsulate-field\">\n                Encapsulate Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/encapsulate-collection\">\n                Encapsulate Collection\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-type-code-with-class\">\n                Replace Type Code with Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-type-code-with-subclasses\">\n                Replace Type Code with Subclasses\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-type-code-with-state-strategy\">\n                Replace Type Code with State/Strategy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-subclass-with-fields\">\n                Replace Subclass with Fields\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/simplifying-conditional-expressions\">\n                Simplifying Conditional Expressions\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/decompose-conditional\">\n                Decompose Conditional\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/consolidate-conditional-expression\">\n                Consolidate Conditional Expression\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/consolidate-duplicate-conditional-fragments\">\n                Consolidate Duplicate Conditional Fragments\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-control-flag\">\n                Remove Control Flag\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-nested-conditional-with-guard-clauses\">\n                Replace Nested Conditional with Guard Clauses\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-conditional-with-polymorphism\">\n                Replace Conditional with Polymorphism\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-null-object\">\n                Introduce Null Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-assertion\">\n                Introduce Assertion\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/simplifying-method-calls\">\n                Simplifying Method Calls\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/rename-method\">\n                Rename Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/add-parameter\">\n                Add Parameter\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-parameter\">\n                Remove Parameter\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/separate-query-from-modifier\">\n                Separate Query from Modifier\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/parameterize-method\">\n                Parameterize Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-parameter-with-explicit-methods\">\n                Replace Parameter with Explicit Methods\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/preserve-whole-object\">\n                Preserve Whole Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-parameter-with-method-call\">\n                Replace Parameter with Method Call\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-parameter-object\">\n                Introduce Parameter Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-setting-method\">\n                Remove Setting Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/hide-method\">\n                Hide Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-constructor-with-factory-method\">\n                Replace Constructor with Factory Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-error-code-with-exception\">\n                Replace Error Code with Exception\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-exception-with-test\">\n                Replace Exception with Test\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/dealing-with-generalization\">\n                Dealing with Generalization\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/pull-up-field\">\n                Pull Up Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/pull-up-method\">\n                Pull Up Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/pull-up-constructor-body\">\n                Pull Up Constructor Body\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/push-down-method\">\n                Push Down Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/push-down-field\">\n                Push Down Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-subclass\">\n                Extract Subclass\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-superclass\">\n                Extract Superclass\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-interface\">\n                Extract Interface\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/collapse-hierarchy\">\n                Collapse Hierarchy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/form-template-method\">\n                Form Template Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-inheritance-with-delegation\">\n                Replace Inheritance with Delegation\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-delegation-with-inheritance\">\n                Replace Delegation with Inheritance\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"trail\">\n            <a href=\"/design-patterns\">\n                <i class=\"fa fa-fw fa-puzzle-piece\" aria-hidden=\"true\"></i> Design Patterns\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/what-is-pattern\">\n                What is a Pattern\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/what-is-pattern\">\n                What's a design pattern?\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/history\">\n                History of patterns\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/why-learn-patterns\">\n                Why should I learn patterns?\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/criticism\">\n                Criticism of patterns\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/classification\">\n                Classification of patterns\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/catalog\">\n                Catalog\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-third-level\">\n            <a href=\"/design-patterns/creational-patterns\">\n                Creational Patterns\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/factory-method\">\n                Factory Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/abstract-factory\">\n                Abstract Factory\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/builder\">\n                Builder\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/prototype\">\n                Prototype\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/singleton\">\n                Singleton\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"menu-third-level trail\">\n            <a href=\"/design-patterns/structural-patterns\">\n                Structural Patterns\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/adapter\">\n                Adapter\n            </a>\n    \n    \n            </li>\n                                <li class=\"trail active\">\n            <a href=\"/design-patterns/bridge\">\n                Bridge\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/composite\">\n                Composite\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/decorator\">\n                Decorator\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/facade\">\n                Facade\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/flyweight\">\n                Flyweight\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/proxy\">\n                Proxy\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"menu-third-level\">\n            <a href=\"/design-patterns/behavioral-patterns\">\n                Behavioral Patterns\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/chain-of-responsibility\">\n                Chain of Responsibility\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/command\">\n                Command\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/iterator\">\n                Iterator\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/mediator\">\n                Mediator\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/memento\">\n                Memento\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/observer\">\n                Observer\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/state\">\n                State\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/strategy\">\n                Strategy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/template-method\">\n                Template Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/visitor\">\n                Visitor\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"menu-code-examples\">\n            <a href=\"/design-patterns/examples\">\n                Code Examples\n            </a>\n    \n            <ul >\n                            <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/csharp\">\n                C#\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/cpp\">\n                C++\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/go\">\n                Go\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/java\">\n                Java\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/php\">\n                PHP\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/python\">\n                Python\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/ruby\">\n                Ruby\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/rust\">\n                Rust\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/swift\">\n                Swift\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/typescript\">\n                TypeScript\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n                </div>\n\n            <div class=\"main-menu-aux-controls\">\n                <a href=\"https://refactoring.guru/login\" title=\"Sign in\" style=\" display: inline-flex; align-items: center; gap: 6px; \"><svg style=\"width: 16px; height: 16px; filter:drop-shadow(0 1px 1px #74261e)\" class=\"inline-block mx-0\"  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\"opacity=\"0.4\" d=\"M352.7 222.4c3.2 1 6.5 1.6 10 1.6l21.3 0c17.7 0 32 14.3 32 32s-14.3 32-32 32l-21.3 0c-.8 0-1.7 0-2.5 0c-.9 0-1.7-.1-2.5-.1c-1.7-.1-3.4-.2-5-.4C357.4 414 391.1 512 432 512c44.2 0 80-114.6 80-256S476.2 0 432 0c-40.6 0-74.2 96.9-79.3 222.4z\"/><path fill=\"currentColor\"class=\"fa-primary\" d=\"M320 48a48 48 0 1 0 -96 0 48 48 0 1 0 96 0zM125.7 175.5c9.9-9.9 23.4-15.5 37.5-15.5c1.9 0 3.8 .1 5.6 .3L137.6 254c-9.3 28 1.7 58.8 26.8 74.5l86.2 53.9-25.4 88.8c-4.9 17 5 34.7 22 39.6s34.7-5 39.6-22l28.7-100.4c5.9-20.6-2.6-42.6-20.7-53.9L238 299l30.9-82.4 5.1 12.3C289 264.7 323.9 288 362.7 288l21.3 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-21.3 0c-12.9 0-24.6-7.8-29.5-19.7l-6.3-15c-14.6-35.1-44.1-61.9-80.5-73.1l-48.7-15c-11.1-3.4-22.7-5.2-34.4-5.2c-31 0-60.8 12.3-82.7 34.3L57.4 153.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l23.1-23.1zM91.2 352L32 352c-17.7 0-32 14.3-32 32s14.3 32 32 32l69.6 0c19 0 36.2-11.2 43.9-28.5L157 361.6l-9.5-6c-17.5-10.9-30.5-26.8-37.9-44.9L91.2 352z\"/></svg> Sign in</a>\n                <a href=\"https://feedback.refactoring.guru/\" class=\"userecho-public\" rel=\"nofollow\" title=\"Contact us\"><i class=\"fa fa-fw fa-fw fa-envelope\" aria-hidden=\"true\"></i> Contact us</a>\n            </div>\n        </div>\n    </div>\n</aside>\n\n    <nav class=\"navigation\" role=\"navigation\">\n    <div class=\"navigation-container\">\n        <a class=\"navigation-brand\" href=\"/\">\n            <img alt=\"Refactoring.Guru\"\n                 src=\"/images/content-public/logos/logo-new-mobile.png?id=ea18aa9b032eaa92835ed6d472b03b4a\"\n                 srcset=\"/images/content-public/logos/logo-new-mobile-2x.png?id=7ad5648bfd86ae2e8524147a72877c64 2x\">\n        </a>\n\n        <div class=\"shop-link d-none d-lg-block\" style=\"display: none !important;\">\n            <a class=\"btn btn-md btn-primary btn-featured\" href=\"/store\"><svg style=\"width: 28px; height: 28px; fill: currentColor; display: inline-block; margin-top: -14px;\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><!--! Font Awesome Pro 6.3.0 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2023 Fonticons, Inc. --><path d=\"M356 60l60 20-60 20-20 60-20-60L256 80l60-20L336 0l20 60zM464 208l48 16-48 16-16 48-16-48-48-16 48-16 16-48 16 48zm-243.8-9.8l33 66.9 73.8 10.7 59.8 8.7-43.3 42.2-53.4 52.1 12.6 73.5L313 512l-53.5-28.1-66-34.7-66 34.7L73.9 512l10.2-59.6 12.6-73.5L43.3 326.8 0 284.6l59.8-8.7 73.8-10.7 33-66.9L193.5 144l26.8 54.2zm26.1 114.4l-25-3.6-11.2-22.6-16.7-33.9-16.7 33.9L165.6 309l-25 3.6-37.4 5.4 27.1 26.4 18.1 17.6L144 387l-6.4 37.3 33.5-17.6 22.3-11.7 22.3 11.7 33.5 17.6L242.9 387l-4.3-24.9 18.1-17.6 27.1-26.4-37.4-5.4z\"/></svg>\n                Shop Now!</a>\n        </div>\n\n        <ul class=\"navigation-menu\">\n                            <li class=\"nav-locale dropdown dropdown-locales\">\n                    <button class=\"dropdown-toggle\" id=\"dropdownLanguage\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                        <i class=\"fa fa-fw fa-globe\" aria-hidden=\"true\"></i> <span class=\"caption d-none d-lg-inline-block\">English</span>\n                    </button>\n                    <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownLanguage\">\n                                                                                                                        <a href=\"https://refactoring.guru/design-patterns/bridge\" class=\"dropdown-item locale-link active\" data-locale=\"en\" title=\"English\">English</a>\n                                                                                                                                <a href=\"https://refactoring.guru/es/design-patterns/bridge\" class=\"dropdown-item locale-link \" data-locale=\"es\" title=\"Español\">Español</a>\n                                                                                                                                <a href=\"https://refactoring.guru/fr/design-patterns/bridge\" class=\"dropdown-item locale-link \" data-locale=\"fr\" title=\"Français\">Français</a>\n                                                                                                                                <a href=\"https://refactoring.guru/ja/design-patterns/bridge\" class=\"dropdown-item locale-link \" data-locale=\"ja\" title=\"日本語\">日本語</a>\n                                                                                                                                <a href=\"https://refactoring.guru/ko/design-patterns/bridge\" class=\"dropdown-item locale-link \" data-locale=\"ko\" title=\"한국어\">한국어</a>\n                                                                                                                                <a href=\"https://refactoring.guru/pl/design-patterns/bridge\" class=\"dropdown-item locale-link \" data-locale=\"pl\" title=\"Polski\">Polski</a>\n                                                                                                                                <a href=\"https://refactoring.guru/pt-br/design-patterns/bridge\" class=\"dropdown-item locale-link \" data-locale=\"pt-br\" title=\"Português Brasileiro\">Português Brasileiro</a>\n                                                                                                                                <a href=\"https://refactoring.guru/ru/design-patterns/bridge\" class=\"dropdown-item locale-link \" data-locale=\"ru\" title=\"Русский\">Русский</a>\n                                                                                                                                <a href=\"https://refactoring.guru/uk/design-patterns/bridge\" class=\"dropdown-item locale-link \" data-locale=\"uk\" title=\"Українська\">Українська</a>\n                                                                                                                                <a href=\"https://refactoringguru.cn/design-patterns/bridge\" class=\"dropdown-item locale-link \" data-locale=\"zh\" title=\"中文\">中文</a>\ndiv>\n                </li>\n                        <li class=\"nav-contacts\">\n                <a class=\"userecho-private\" href=\"https://feedback.refactoring.guru/?show_feedback_form_private=true\" rel=\"nofollow\" title=\"Contact us\">\n                    <i class=\"fa fa-fw fa-envelope\" aria-hidden=\"true\"></i> <span class=\"caption d-none d-xl-inline-block\">Contact us</span>\n                </a>\n            </li>\n                            <li class=\"nav-user\">\n                    <a href=\"https://refactoring.guru/login\" title=\"Sign in\"><span class=\"sign-in-icon\"><svg style=\"width: 24px; height: 24px; \" class=\"inline-block \"  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\"opacity=\"0.4\" d=\"M352.7 222.4c3.2 1 6.5 1.6 10 1.6l21.3 0c17.7 0 32 14.3 32 32s-14.3 32-32 32l-21.3 0c-.8 0-1.7 0-2.5 0c-.9 0-1.7-.1-2.5-.1c-1.7-.1-3.4-.2-5-.4C357.4 414 391.1 512 432 512c44.2 0 80-114.6 80-256S476.2 0 432 0c-40.6 0-74.2 96.9-79.3 222.4z\"/><path fill=\"currentColor\"class=\"fa-primary\" d=\"M320 48a48 48 0 1 0 -96 0 48 48 0 1 0 96 0zM125.7 175.5c9.9-9.9 23.4-15.5 37.5-15.5c1.9 0 3.8 .1 5.6 .3L137.6 254c-9.3 28 1.7 58.8 26.8 74.5l86.2 53.9-25.4 88.8c-4.9 17 5 34.7 22 39.6s34.7-5 39.6-22l28.7-100.4c5.9-20.6-2.6-42.6-20.7-53.9L238 299l30.9-82.4 5.1 12.3C289 264.7 323.9 288 362.7 288l21.3 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-21.3 0c-12.9 0-24.6-7.8-29.5-19.7l-6.3-15c-14.6-35.1-44.1-61.9-80.5-73.1l-48.7-15c-11.1-3.4-22.7-5.2-34.4-5.2c-31 0-60.8 12.3-82.7 34.3L57.4 153.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l23.1-23.1zM91.2 352L32 352c-17.7 0-32 14.3-32 32s14.3 32 32 32l69.6 0c19 0 36.2-11.2 43.9-28.5L157 361.6l-9.5-6c-17.5-10.9-30.5-26.8-37.9-44.9L91.2 352z\"/></svg></span> <span class=\"account-icon\" style=\"display:none\"><svg style=\"width: 24px; height: 24px; \" class=\"inline-block \"  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 576 512\"><path fill=\"currentColor\"opacity=\"0.4\" d=\"M64 270.5l224-196c74.7 65.4 149.4 130.7 224.1 196.1l.4 177.3c.1 35.4-28.6 64.1-64 64.1l-320.4 0c-35.3 0-64-28.6-64-64L64 270.5zM176.1 433.6c.1 .5 .1 1.1 .2 1.6c.2 1 .5 2 .9 3c.8 1.9 2 3.6 3.4 5.1c2.9 2.9 6.9 4.7 11.3 4.7l192 0c8.8 0 16-7.2 16-16c0-44.2-35.8-80-80-80l-64 0c-22.1 0-42.1 9-56.6 23.4c-7.2 7.2-13.1 15.9-17.1 25.4c-2 4.8-3.6 9.8-4.7 15c-.5 2.6-.9 5.3-1.2 7.9c-.1 1.3-.2 2.7-.3 4.1c-.1 1.4-.1 2.7-.1 4.1c0 .6 0 1.1 .1 1.6zm48.2-184.2c-.1 1.1-.2 2.2-.2 3.2c-.1 1.1-.1 2.2-.1 3.3s0 2.2 .1 3.3c.1 1.1 .1 2.2 .2 3.2c.2 2.1 .5 4.3 1 6.4c.9 4.2 2.1 8.2 3.7 12c3.2 7.7 7.9 14.6 13.7 20.3C254.3 312.8 270.3 320 288 320c35.3 0 64-28.7 64-64s-28.7-64-64-64c-17.7 0-33.7 7.2-45.3 18.7c-5.8 5.8-10.5 12.7-13.7 20.3c-1.6 3.8-2.9 7.8-3.7 12c-.4 2.1-.8 4.2-1 6.4z\"/><path fill=\"currentColor\"class=\"fa-primary\" d=\"M309.1 7.9C297-2.6 279-2.6 266.9 7.9l-256 224c-13.3 11.6-14.6 31.9-3 45.2s31.9 14.6 45.2 3L288 74.5 522.9 280.1c13.3 11.6 33.5 10.3 45.2-3s10.3-33.5-3-45.2L512 185.5 512 64c0-17.7-14.3-32-32-32l-32 0c-17.7 0-32 14.3-32 32l0 37.5L309.1 7.9zM352 256a64 64 0 1 0 -128 0 64 64 0 1 0 128 0zm-96 96c-44.2 0-80 35.8-80 80c0 8.8 7.2 16 16 16l192 0c8.8 0 16-7.2 16-16c0-44.2-35.8-80-80-80l-64 0z\"/></svg></span> <span class=\"sign-out-icon\" style=\"display:none\"><svg style=\"width: 24px; height: 24px; \" class=\"inline-block \"  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\"opacity=\"0.4\" d=\"M0 256C0 397.4 35.8 512 80 512c25.3 0 47.8-37.5 62.5-96L128 416c-.5 0-1.1 0-1.6 0c-.6 0-1.1-.1-1.6-.1c-1.1-.1-2.1-.3-3.2-.5c-2.1-.4-4.1-1.1-6-1.9c-3.8-1.6-7.3-4-10.2-6.9s-5.2-6.3-6.9-10.2c-.8-1.9-1.4-3.9-1.9-6c-.2-1.1-.4-2.3-.5-3.5c0-.3 0-.6-.1-.8c0-.2 0-.4 0-.7c0-.4 0-.7 0-.7c0-.5 0-.7 0-.9c0-.3 0-.6 0-.9c0 0 0-.3 0-.7c0-.2 0-.4 0-.7c0-.2 0-.4 .1-.8c0-.3 .1-.6 .1-.9c0-.2 .1-.4 .1-.7c.1-.8 .2-1.2 .3-1.7c.5-2.2 1.1-4.2 1.9-6.1c1.6-3.8 4-7.3 6.9-10.2c5.8-5.8 13.8-9.4 22.6-9.4l26.2 0c3.8-29.6 5.8-62.1 5.8-96c0-18.3-.6-36.1-1.7-53.4c-1.7-1.2-3.4-2.5-4.9-4c-.8-.8-1.6-1.6-2.2-2.5s-1.3-1.7-1.9-2.6c-1.2-1.8-2.1-3.6-2.9-5.5s-1.4-3.9-1.8-5.9c-.2-1-.3-2-.4-3s-.1-2-.2-3c0-8.3 3.1-16.5 9.4-22.8C141 63.1 112.8 0 80 0C35.8 0 0 114.6 0 256z\"/><path fill=\"currentColor\"class=\"fa-primary\" d=\"M416 48a48 48 0 1 0 -96 0 48 48 0 1 0 96 0zM221.7 175.5c9.9-9.9 23.4-15.5 37.5-15.5c1.9 0 3.8 .1 5.6 .3L233.6 254c-9.3 28 1.7 58.8 26.8 74.5l86.2 53.9-25.4 88.8c-4.9 17 5 34.7 22 39.6s34.7-5 39.6-22l28.7-100.4c5.9-20.6-2.6-42.6-20.7-53.9L334 299l30.9-82.4 5.1 12.3C385 264.7 419.9 288 458.7 288l21.3 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-21.3 0c-12.9 0-24.6-7.8-29.5-19.7l-6.3-15c-14.6-35.1-44.1-61.9-80.5-73.1l-48.7-15c-11.1-3.4-22.7-5.2-34.4-5.2c-31 0-60.8 12.3-82.7 34.3l-23.1 23.1c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l23.1-23.1zM187.2 352L128 352c-17.7 0-32 14.3-32 32s14.3 32 32 32l69.6 0c19 0 36.2-11.2 43.9-28.5L253 361.6l-9.5-6c-17.5-10.9-30.5-26.8-37.9-44.9L187.2 352z\"/></svg></span> <span class=\"caption d-none d-xl-inline-block\">Sign in</span></a>\n                </li>\n                        <li class=\"nav-menu\">\n                <button class=\"navigation-toggle\"><i class=\"fa fa-fw fa-bars\" aria-hidden=\"true\"></i></button>\n            </li>\n        </ul>\n    </div>\n</nav>\n\n    <footer class=\"footer center-content\">\n    <div class=\"footer-container center-content-container\">\n        <div class=\"footer-inner container-fluid\">\n            <div class=\"row\">\n                <div class=\"col-8 col-md-10\">\n                    <ul class=\"footer-list footer-list-horizontal\">\n                        <li><a href=\"/\">Home</a></li>\n                        <li><a href=\"/refactoring\">Refactoring</a></li>\n                        <li><a href=\"/design-patterns\">Design Patterns</a></li>\n                        <li><a href=\"/store\">Premium Content</a></li>\n                        <li><a href=\"https://gitbybit.com/\">Git Course</a></li>\n                        <li><a href=\"https://refactoring.userecho.com/\" rel=\"nofollow\" class=\"userecho-public\">Forum</a></li>\n                        <li><a href=\"https://refactoring.userecho.com/\" rel=\"nofollow\" class=\"userecho-private\">Contact us</a></li>\n                    </ul>\n                </div>\n                <div class=\"col-4 col-md-2\">\n                    <ul class=\"footer-list footer-list-iconic footer-list-right\">\n                                                    <li><a href=\"https://www.facebook.com/refactoring.guru\"><i class=\"fa fa-facebook-official\"></i></a></li>\n                                                <li><a href=\"/sendy/form\" rel=\"nofollow\"><i class=\"fa fa-envelope\" aria-hidden=\"true\"></i></a></li>\n                        <li><a href=\"https://github.com/RefactoringGuru\"><i class=\"fa fa-github-circled\"></i></a></li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"footer-second\">\n        <div class=\"footer-container center-content-container\">\n            <div class=\"footer-inner container-fluid\">\n                <div class=\"row\">\n                    <div class=\"col-12 col-sm-6\">\n                        <i class=\"fa fa-fw fa-copyright\"></i> 2014-2025 <a href=\"/\">Refactoring.Guru</a>. <span style=\"white-space: nowrap\">All rights reserved.</span><br>\n                        <i class=\"fa fa-fw fa-image\"></i> Illustrations by <a href=\"http://zhart.us/\" rel=\"nofollow\"><span style=\"white-space: nowrap\">Dmitry Zhart</span></a>\n                    </div>\n                    <div class=\"footer-links-right col-12 col-sm-6 mt-4 mt-sm-0\">\n                        <ul class=\"footer-list footer-list-horizontal footer-list-right\">\n                            <li><a href=\"/terms\"><span>Terms &amp; Conditions</span></a>\n                            </li>\n                            <li><a href=\"/privacy-policy\"><span>Privacy Policy</span></a>\n                            </li>\n                            <li><a href=\"/content-usage-policy\"><span>Content Usage Policy</span></a>\n                            </li>\n                            <li><a href=\"/site-about\"><span>About us</span></a>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n                                    <div class=\"row\">\n                        <div class=\"col-12 col-sm-4\">\n                            <div class=\"mt-4\">\n                                                                    <b>Ukrainian office:</b><br>\n                                    <object class=\"fa-fw\" style=\"height: 0.8rem; filter: invert(50%);\"  type=\"image/svg+xml\" data=\"/images/content-public/icons/fa-building.svg?id=afddb5806968b0a9acfc1df75a181234\">\n                                        <img class=\"fa-fw\" style=\"height: 0.8rem;\" src=\"/images/content-public/icons/fa-building.svg?id=afddb5806968b0a9acfc1df75a181234\" alt=\"Organization address\"/>\n                                    </object> FOP Olga Skobeleva<br>\n                                    <svg style=\"width: 16px; height: 16px; margin-right: 1px; fill: currentColor;\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\"><path d=\"M352 192c0-88.4-71.6-160-160-160S32 103.6 32 192c0 15.6 5.4 37 16.6 63.4c10.9 25.9 26.2 54 43.6 82.1c34.1 55.3 74.4 108.2 99.9 140c25.4-31.8 65.8-84.7 99.9-140c17.3-28.1 32.7-56.3 43.6-82.1C346.6 229 352 207.6 352 192zm32 0c0 87.4-117 243-168.3 307.2c-12.3 15.3-35.1 15.3-47.4 0C117 435 0 279.4 0 192C0 86 86 0 192 0S384 86 384 192zm-240 0a48 48 0 1 0 96 0 48 48 0 1 0 -96 0zm48 80a80 80 0 1 1 0-160 80 80 0 1 1 0 160z\"/></svg> Abolmasova 7<br>\n                                    <span style=\"margin-left: 21px;\">Kyiv, Ukraine, 02002</span><br>\n                                    <i class=\"fa fa-fw fa-envelope\"></i>  Email: support@refactoring.guru\n                                \n                            </div>\n                        </div>\n                        <div class=\"col-12 col-sm-4\">\n                            <div class=\"mt-4\">\n                                <b>Spanish office:</b><br>\n                                <object class=\"fa-fw\" style=\"height: 0.8rem; filter: invert(50%);\"  type=\"image/svg+xml\" data=\"/images/content-public/icons/fa-building.svg?id=afddb5806968b0a9acfc1df75a181234\">\n                                    <img class=\"fa-fw\" style=\"height: 0.8rem;\" src=\"/images/content-public/icons/fa-building.svg?id=afddb5806968b0a9acfc1df75a181234\" alt=\"Organization address\"/>\n                                </object> Oleksandr Shvets<br>\n                                <svg style=\"width: 16px; height: 16px; margin-right: 1px; fill: currentColor;\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\"><path d=\"M352 192c0-88.4-71.6-160-160-160S32 103.6 32 192c0 15.6 5.4 37 16.6 63.4c10.9 25.9 26.2 54 43.6 82.1c34.1 55.3 74.4 108.2 99.9 140c25.4-31.8 65.8-84.7 99.9-140c17.3-28.1 32.7-56.3 43.6-82.1C346.6 229 352 207.6 352 192zm32 0c0 87.4-117 243-168.3 307.2c-12.3 15.3-35.1 15.3-47.4 0C117 435 0 279.4 0 192C0 86 86 0 192 0S384 86 384 192zm-240 0a48 48 0 1 0 96 0 48 48 0 1 0 -96 0zm48 80a80 80 0 1 1 0-160 80 80 0 1 1 0 160z\"/></svg> Avda Pamplona 64<br>\n                                <span style=\"margin-left: 21px;\">Pamplona, Spain, 31009</span><br>\n                                <i class=\"fa fa-fw fa-envelope\"></i>  Email: support@refactoring.guru\n                            </div>\n                        </div>\n                    </div>\n                            </div>\n        </div>\n    </div>\n</footer>\n\n</div>\n\n\n    <script defer>\n    var CodeMirrorScripts = [\"/js/codemirror.min.js?id=f7ae4adf14bd00338caf8e95da733cc9\"];\n</script>\n\n\n\n    <script>window.loadContent = true;window.loadCart = true;</script>\n</body>\n</html>\n"},
{"title": null, "url": "https://refactoring.guru/design-patterns/adapter", "raw_html": "<!DOCTYPE html>\n<html lang=\"en\" dir=\"ltr\">\n<head prefix=\"og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# website: http://ogp.me/ns/website#\">\n    <meta charset=\"utf-8\">\n    <title>Adapter</title>\n\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n    <meta name=\"theme-color\" content=\"#A2E2FD\" />\n\n            <style>\n        .buy-widget-excl-local-taxes {\n            display: none;\n        }\n    </style>\n    \n    <link rel=\"preload\" href=\"/fonts/PTSans/ptsans-regular_en.woff2?1\" as=\"font\" type=\"font/woff2\" crossorigin>\n    <link rel=\"preload\" href=\"/fonts/PTSans/ptsans-bold_en.woff2?1\" as=\"font\" type=\"font/woff2\" crossorigin>\n        <link rel=\"preload\" href=\"/fonts/fontello/fontawesome.woff2?15843843\" as=\"font\" type=\"font/woff2\" crossorigin>\n    <link rel=\"preload\" href=\"/fonts/FiraCode/woff2/FiraCode-Regular_latin.woff2\" as=\"font\" type=\"font/woff2\" crossorigin>\n        <link rel=\"preconnect dns-prefetch\" href=\"https://cdn.paddle.com\">\n    <link rel=\"preconnect dns-prefetch\" href=\"https://www.googletagmanager.com\">\n\n    <link rel=\"alternate\" href=\"https://refactoring.guru/design-patterns/adapter\" hreflang=\"x-default\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/es/design-patterns/adapter\" hreflang=\"es\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/fr/design-patterns/adapter\" hreflang=\"fr\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/ja/design-patterns/adapter\" hreflang=\"ja\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/ko/design-patterns/adapter\" hreflang=\"ko\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/pl/design-patterns/adapter\" hreflang=\"pl\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/pt-br/design-patterns/adapter\" hreflang=\"pt-br\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/ru/design-patterns/adapter\" hreflang=\"ru\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/uk/design-patterns/adapter\" hreflang=\"uk\"/>\n    <link rel=\"alternate\" href=\"https://refactoringguru.cn/design-patterns/adapter\" hreflang=\"zh\"/>\n\n    <meta name=\"description\" content=\"Adapter is a structural design pattern that allows objects with incompatible interfaces to collaborate.\">\n\n    <link rel=\"canonical\" href=\"https://refactoring.guru/design-patterns/adapter\"/>\n\n    <link rel=\"icon\" type=\"image/x-icon\" href=\"/favicon.png\"/>\n\n        <meta property=\"fb:app_id\" content=\"666819623386327\"/>\n        <meta property=\"og:type\" content=\"website\"/>\n        <meta property=\"og:image\" content=\"https://refactoring.guru/images/refactoring/social/facebook-share-preview.png?id=dbf9e98269595be86eb668f365be6868\"/>\n    \n                    <link rel=\"stylesheet\" href=\"/css/public-packed.min.css?id=aaefab4da343b914b8dda9973604a9e8\">\n        <style type=\"text/css\">\n                    @font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_cyrillic-ext.woff2?1) format(\"woff2\");unicode-range:U+0460-052F,U+1C80-1C88,U+20B4,U+2DE0-2DFF,U+A640-A69F,U+FE2E-FE2F}@font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_cyrillic.woff2?1) format(\"woff2\");unicode-range:U+0400-045F,U+0490-0491,U+04B0-04B1,U+2116}@font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_latin-ext.woff2?1) format(\"woff2\");unicode-range:U+0100-024F,U+0259,U+1E00-1EFF,U+2020,U+20A0-20AB,U+20AD-20CF,U+2113,U+2C60-2C7F,U+A720-A7FF}@font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_latin.woff2?1) format(\"woff2\");unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}@font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_en.woff2?1) format(\"woff2\");unicode-range:U+0-FF,U+131,U+142,U+152,U+153,U+2BB,U+2BC,U+2C6,U+2DA,U+2DC,U+420,U+423,U+430,U+438-43A,U+43D,U+440,U+441,U+443,U+44C,U+457,U+2000-206F,U+2074,U+20AA-20AC,U+20B4,U+20B9,U+20BA,U+20BD,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_cyrillic-ext.woff2?1) format(\"woff2\");unicode-range:U+0460-052F,U+1C80-1C88,U+20B4,U+2DE0-2DFF,U+A640-A69F,U+FE2E-FE2F}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_cyrillic.woff2?1) format(\"woff2\");unicode-range:U+0400-045F,U+0490-0491,U+04B0-04B1,U+2116}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_latin-ext.woff2?1) format(\"woff2\");unicode-range:U+0100-024F,U+0259,U+1E00-1EFF,U+2020,U+20A0-20AB,U+20AD-20CF,U+2113,U+2C60-2C7F,U+A720-A7FF}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_latin.woff2?1) format(\"woff2\");unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_en.woff2?1) format(\"woff2\");unicode-range:U+0-FF,U+131,U+142,U+152,U+153,U+2BB,U+2BC,U+2C6,U+2DA,U+2DC,U+420,U+423,U+430,U+438-43A,U+43D,U+440,U+441,U+443,U+44C,U+457,U+2000-206F,U+2074,U+20AA-20AC,U+20B4,U+20B9,U+20BA,U+20BD,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}\n            </style>\n\n    \n            <script defer src=\"/js/public.min.js?id=1f19fe18ffe0fc844ede8a0f2ee64202\"></script>\n        <script defer src=\"/js/checkout.min.js?id=b4da9c5bd8b1cf504447c07ae8b7cd44\"></script>\n            <script defer src=\"https://cdn.paddle.com/paddle/v2/paddle.js\"></script>\n    <script async src=\"https://www.googletagmanager.com/gtag/js?id=G-SR8Y3GYQYC\"></script>\n\n    <script type=\"application/ld+json\">\n        {\"@context\": \"http://schema.org\", \"@graph\": [{\"@type\":\"Person\",\"@id\":\"https://refactoring.guru/#founder\",\"name\":\"Alexander Shvets\"},{\"@type\":\"Organization\",\"@id\":\"https://refactoring.guru/#organization\",\"name\":\"Refactoring.Guru\",\"description\":\"Refactoring.Guru makes it easy for you to discover everything you need to know about refactoring, design patterns, SOLID principles, and other smart programming topics.\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https://refactoring.guru/#organizationlogo\",\"url\":\"https://refactoring.guru/images/content-public/logos/logo-plain.png\",\"caption\":\"Refactoring.Guru\"},\"logo\":{\"@id\":\"https://refactoring.guru/#organizationlogo\"},\"founder\":{\"@id\":\"https://refactoring.guru/#founder\"},\"sameAs\":[\"https://www.facebook.com/refactoring.guru\",\"https://twitter.com/RefactoringGuru\",\"https://github.com/RefactoringGuru\"]},{\"@type\":\"WebSite\",\"@id\":\"https://refactoring.guru/#website\",\"url\":\"https://refactoring.guru/\",\"name\":\"Refactoring.Guru\",\"description\":\"Refactoring.Guru makes it easy for you to discover everything you need to know about refactoring, design patterns, SOLID principles, and other smart programming topics.\",\"author\":{\"@id\":\"https://refactoring.guru/#founder\"},\"publisher\":{\"@id\":\"https://refactoring.guru/#organization\"},\"copyrightYear\":2014},{\"@type\":\"WebPage\",\"@id\":\"https://refactoring.guru/design-patterns/adapter#webpage\",\"url\":\"https://refactoring.guru/design-patterns/adapter\",\"inLanguage\":\"en\",\"name\":\"Adapter\",\"description\":\"Adapter is a structural design pattern that allows objects with incompatible interfaces to collaborate.\",\"isPartOf\":{\"@id\":\"https://refactoring.guru#website\"},\"breadcrumb\":{\"@id\":\"https://refactoring.guru/design-patterns/adapter#breadcrumb\"},\"primaryImageOfPage\":{\"@id\":\"https://refactoring.guru/design-patterns/adapter#primaryimage\"},\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https://refactoring.guru/design-patterns/adapter#primaryimage\",\"url\":\"https://refactoring.guru/images/patterns/content/adapter/adapter-en-3x.png\",\"width\":1920,\"height\":1200}},{\"@type\":\"Article\",\"@id\":\"https://refactoring.guru/design-patterns/adapter#article\",\"isPartOf\":{\"@id\":\"https://refactoring.guru/design-patterns/adapter#webpage\"},\"mainEntityOfPage\":{\"@id\":\"https://refactoring.guru/design-patterns/adapter#webpage\"},\"author\":{\"@id\":\"https://refactoring.guru#founder\"},\"publisher\":{\"@id\":\"https://refactoring.guru#organization\"},\"headline\":\"Adapter\",\"datePublished\":\"2024-01-01\",\"dateModified\":\"2025-01-01\",\"articleSection\":\"Design Patterns\",\"image\":{\"@id\":\"https://refactoring.guru/design-patterns/adapter#primaryimage\"}},{\"@type\":\"BreadcrumbList\",\"@id\":\"https://refactoring.guru/design-patterns/adapter#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https://refactoring.guru\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Design Patterns\",\"item\":\"https://refactoring.guru/design-patterns\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"Structural Patterns\",\"item\":\"https://refactoring.guru/design-patterns/structural-patterns\"}]}] }\n    </script>\n\n    <script>\nfunction extend(){var extended={};var deep=false;var i=0;var length=arguments[\"length\"];if(Object[\"prototype\"][\"toString\"][\"call\"](arguments[0])=== '[object Boolean]'){deep= arguments[0];i++};var merge=function(obj){for(var prop in obj){if(Object[\"prototype\"][\"hasOwnProperty\"][\"call\"](obj,prop)){if(deep&& Object[\"prototype\"][\"toString\"][\"call\"](obj[prop])=== '[object Object]'){extended[prop]= extend(true,extended[prop],obj[prop])}else {extended[prop]= obj[prop]}}}};for(;i< length;i++){var obj=arguments[i];merge(obj)};return extended}\nfunction defer(method) {if (window.jQuery) {method();} else {setTimeout(function() { defer(method) }, 50);}}\n</script>\n<script>\n+function(sd){sd = (typeof sd === \"string\") ? JSON.parse(atob(sd)) : sd;for(var property in sd){if(window[property]!== null&&  typeof window[property]=== 'object'){window[property]= extend(true,window[property],sd[property])}else {window[property]= sd[property]}}}(\"eyJsb2NhbGUiOiJlbiIsImxvY2FsZV9wcmVmaXgiOiIiLCJsb2NhbGl6ZWRfdXJsX3ByZWZpeCI6Imh0dHBzOlwvXC9yZWZhY3RvcmluZy5ndXJ1XC8iLCJ1cmxfcHJlZml4IjoiaHR0cHM6XC9cL3JlZmFjdG9yaW5nLmd1cnVcLyIsImxvY2FsaXplZF91cmxfcHJlZml4X20iOiJodHRwczpcL1wvcmVmYWN0b3JpbmcuZ3VydVwvIiwidXJsX3ByZWZpeF9tIjoiaHR0cHM6XC9cL3JlZmFjdG9yaW5nLmd1cnVcLyIsInVzZXJfZWNob19hbGlhcyI6InJlZmFjdG9yaW5nIiwidXNlcl9lY2hvX2hvc3QiOiJmZWVkYmFjay5yZWZhY3RvcmluZy5ndXJ1IiwidXNlcl9lY2hvX3ByaXZhdGVfZm9ydW0iOiIyIiwidXNlcl9lY2hvX2xvY2FsZSI6ImVuIiwidXNlcl9lY2hvX3B1YmxpY19mb3J1bSI6IjMiLCJ1c2VyX2VjaG9fcHVibGljX2ZvcnVtX3VybCI6Imh0dHBzOlwvXC9mZWVkYmFjay5yZWZhY3RvcmluZy5ndXJ1XC8iLCJ1c2VyX2VjaG9fc3NvX3Rva2VuIjoiIn0=\");\n</script>\n\n<script>\n    window.dataLayer = window.dataLayer || [];\n    function gtag(){dataLayer.push(arguments);}\n    gtag('js', new Date());\n            gtag('set', 'linker', {'domains': [\"refactoring.guru,refactoringguru.cn\"]});\n        gtag('config', 'G-SR8Y3GYQYC', {\n        // Disable default page view, because we're going to report them on our own.\n        // This is done to report traffic on localized domains as part of the main website traffic\n        // See the Chinese overrides below.\n        send_page_view: false,\n    });\n</script>\n\n<script>\n    (() => {\n        // On first page view after returning from social network, we need to send the social login event.\n        (function detectSocialLogin() {\n            let getCookie = function (name) {\n                var nameEQ = name + \"=\";\n                var ca = document.cookie.split(';');\n                for (var i = 0; i < ca.length; i++) {\n                    var c = ca[i];\n                    while (c.charAt(0) == ' ') c = c.substring(1, c.length);\n                    if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);\n                }\n                return null;\n            };\n            window.social_login_provider = window.social_login_provider || getCookie('social_login_provider');\n            if (window.social_login_provider) {\n                gtag('set', {referrer: null});\n                gtag('event', 'login', {\"method\": window.social_login_provider});\n                // Delete cookie.\n                document.cookie = 'social_login_provider=; Path=/; Max-Age=-99999999;';\n            }\n        })();\n\n        function trackPageView(location, title) {\n            location = location || document.location.href;\n            title = title || document.title;\n\n            // This is show on https://refactoringguru.cn/ and alike.\n            if (typeof window.analytics_path_prefix === 'string') {\n                if (/^(https?:\\/\\/[^\\/]+?)\\/$/.test(location)) {\n                    location = location.replace(/(https?:\\/\\/[^\\/]+?)\\//, '$1' + window.analytics_path_prefix);\n                } else {\n                    location = location.replace(/(https?:\\/\\/[^\\/]+?)\\//, '$1' + window.analytics_path_prefix + '/');\n                }\n                gtag('set', {\n                    'page_location': location\n                });\n            }\n\n            // This is show on https://refactoring.guru/zh/login and alike.\n            if (typeof window.analytics_location_prefix === 'string') {\n                location = location.replace(/(https?:\\/\\/[^\\/]+?)\\//, window.analytics_location_prefix);\n                gtag('set', {\n                    'page_location': location\n                });\n            }\n\n            gtag('event', 'page_view', {\n                page_location: location,\n                page_title: title,\n                locale: window.locale ?? 'en'\n            });\n        }\n\n        if (window.loadContent) {\n            window.onPageLoad = window.onPageLoad || [];\n            window.onPageLoad.push({\n                func: function (context) {\n                    trackPageView(window.location.origin + context.canonicalPath, context.title);\n                },\n                afterAll: true,\n            });\n        }\n        else {\n            trackPageView();\n        }\n    })();\n</script>\n\n\n</head>\n<body class=\"locale-en   announcement   adapter\" data-body_class=\"adapter\">\n\n<div class=\"body-holder\">\n\n            <div class=\"announcement-block announcement-block-summer prom\" data-id=\"DIDP-announcement\" data-creative-id=\"en\" data-position=\"top\">\n        <span class=\"beach-and-sea\">\n            <span class=\"a1\"></span>\n            <span class=\"a2\"><span class=\"wave\"></span></span>\n            <span class=\"yacht\"></span>\n        </span>\n        <a href=\"/store\">\n            <img src=\"/images/content-public/ann/summer/sunbed.svg?id=b1e7314a63715a13870a6bd1a43613f7\" loading=\"lazy\" style=\"width: 32px; height:32px;vertical-align: middle; scale: -1 1 1;\">\n            <span class=\"announcement-link-text\">Summer SALE</span>\n            <img src=\"/images/content-public/ann/summer/reading-book.svg?id=36006ea720df8c171968cf613e8ea164\" loading=\"lazy\" style=\"width: 32px; height:32px;vertical-align: middle;\">\n        </a>\n    </div>\n\n    \n    <div class=\"cart-placeholder\">\n    <div class=\"cart-block-container\" style=\"display:none\">\n        <div class=\"cart-block btn-group\">\n            <a href=\"#checkout\" class=\"btn cart open-checkout\">\n                <span class=\"cart-text\"></span>&nbsp;<strong class=\"cart-total font-money\"></strong>\n            </a><a href=\"#checkout\" class=\"btn btn-secondary checkout open-checkout\"><i class=\"fa fa-shopping-cart\" aria-hidden=\"true\"></i> <span class=\"btn-text-span d-none d-sm-inline-block d-lg-none d-hg-inline-block\"></span></a>\n        </div>\n    </div>\n</div>\n    <main role=\"main\" class=\"main-content top-content center-content \" data-page_class=\"\">\n        <div class=\"main-content-container center-content-container\">\n                        <div class=\"pattern page text\">\n<article>\n    <div class=\"breadcrumb\">\n                                    <a class=\"home\" href=\"/\"><i class=\"fa fa-home\" aria-hidden=\"true\"></i></a>\n                                                / <a class=\"type\" href=\"/design-patterns\">Design Patterns</a>\n                                                / <a class=\"type\" href=\"/design-patterns/structural-patterns\">Structural Patterns</a>\n                        </div>\n    <h1 class=\"title\">Adapter</h1>\n\n    <script type=\"text/javascript\">\n        // Shorten examples titles for users.\n        var h1 = document.getElementsByTagName(\"H1\")[0];\n        if (h1.offsetHeight > 160) {\n            h1.className += ' smaller';\n        }\n\n        // Small beautification for pattern examples.\n        var title = h1.innerHTML;\n        title = title.replace(/^(Java|C\\+\\+|C#|PHP|Python|Ruby|Delphi): (.*)$/, '<strong>$1:</strong> $2');\n        h1.innerHTML = title;\n    </script>\n\n            <div class=\"aka\">\n            Also known as: <span style=\"display:inline-block\">Wrapper</span>\n        </div>\n    \n    \n\n    <div class=\"section intent\">\n<h2 id=\"intent\"><i class=\"fa fa-flip-horizontal fa-comment-alt-dots\" aria-hidden=\"true\"></i> Intent</h2>\n<p><strong>Adapter</strong> is a structural design pattern that allows objects with incompatible interfaces to collaborate.</p>\n<figure class=\"image\"><img src=\"/images/patterns/content/adapter/adapter-en.png?id=11ef6ae6177291834323e3f918c47cd2\" alt=\"Adapter design pattern\" srcset=\"/images/patterns/content/adapter/adapter-en.png?id=11ef6ae6177291834323e3f918c47cd2 640w,/images/patterns/content/adapter/adapter-en-1.5x.png?id=ad30c3ed32ca2da3eb6b8d9116506764 960w,/images/patterns/content/adapter/adapter-en-2x.png?id=e0ab0f6103b0b7b0648a8fda592ffab8 1280w\" sizes=\"(max-width: 720px) 100vw, 640px\" width=\"640\" style=\"aspect-ratio: 1.6;\" fetchpriority=\"high\" /></figure>\n</div>\n<div class=\"section problem\">\n<h2 id=\"problem\"><i class=\"fa fa-frown\" aria-hidden=\"true\"></i> Problem</h2>\n<p>Imagine that you’re creating a stock market monitoring app. The app downloads the stock data from multiple sources in XML format and then displays nice-looking charts and diagrams for the user.</p>\n<p>At some point, you decide to improve the app by integrating a smart 3rd-party analytics library. But there’s a catch: the analytics library only works with data in JSON format.</p>\n<figure class=\"image\"><img src=\"/images/patterns/diagrams/adapter/problem-en.png?id=60d01f6c72ba85030cd52d5955caa3d8\" alt=\"The structure of the app before integration with the analytics library\" srcset=\"/images/patterns/diagrams/adapter/problem-en.png?id=60d01f6c72ba85030cd52d5955caa3d8 530w,/images/patterns/diagrams/adapter/problem-en-1.5x.png?id=9d1ebfe5843bea44ad4025d4c648b34a 795w,/images/patterns/diagrams/adapter/problem-en-2x.png?id=f6f4bfbd2d6136a5ae4fb8c899e9854e 1060w\" sizes=\"(max-width: 720px) 100vw, 530px\" width=\"530\" style=\"aspect-ratio: 2.41;\" loading=\"lazy\" /><figcaption>\n<p>You can’t use the analytics library “as is” because it expects the data in a format that’s incompatible with your app.</p>\n</figcaption></figure>\n<p>You could change the library to work with XML. However, this might break some existing code that relies on the library. And worse, you might not have access to the library’s source code in the first place, making this approach impossible.</p>\n</div>\n<div class=\"section solution\">\n<h2 id=\"solution\"><i class=\"fa fa-smile-beam\" aria-hidden=\"true\"></i> Solution</h2>\n<p>You can create an <em>adapter</em>. This is a special object that converts the interface of one object so that another object can understand it.</p>\n<p>An adapter wraps one of the objects to hide the complexity of conversion happening behind the scenes. The wrapped object isn’t even aware of the adapter. For example, you can wrap an object that operates in meters and kilometers with an adapter that converts all of the data to imperial units such as feet and miles.</p>\n<p>Adapters can not only convert data into various formats but can also help objects with different interfaces collaborate. Here’s how it works:</p>\n<ol>\n<li>The adapter gets an interface, compatible with one of the existing objects.</li>\n<li>Using this interface, the existing object can safely call the adapter’s methods.</li>\n<li>Upon receiving a call, the adapter passes the request to the second object, but in a format and order that the second object expects.</li>\n</ol>\n<p>Sometimes it’s even possible to create a two-way adapter that can convert the calls in both directions.</p>\n<figure class=\"image\"><img src=\"/images/patterns/diagrams/adapter/solution-en.png?id=5f4f1b4575236a3853f274b690bd6656\" alt=\"Adapter&#039;s solution\" srcset=\"/images/patterns/diagrams/adapter/solution-en.png?id=5f4f1b4575236a3853f274b690bd6656 530w,/images/patterns/diagrams/adapter/solution-en-1.5x.png?id=40da8d488b9776aca5011c6ca96c5da4 795w,/images/patterns/diagrams/adapter/solution-en-2x.png?id=5846ed9b88cad0220993f79bdfe817a8 1060w\" sizes=\"(max-width: 720px) 100vw, 530px\" width=\"530\" style=\"aspect-ratio: 1.51;\" loading=\"lazy\" /></figure>\n<p>Let’s get back to our stock market app. To solve the dilemma of incompatible formats, you can create XML-to-JSON adapters for every class of the analytics library that your code works with directly. Then you adjust your code to communicate with the library only via these adapters. When an adapter receives a call, it translates the incoming XML data into a JSON structure and passes the call to the appropriate methods of a wrapped analytics object.</p>\n</div>\n<div class=\"section analogy\">\n<h2 id=\"analogy\"><i class=\"fa fa-car-side\" aria-hidden=\"true\"></i> Real-World Analogy</h2>\n<figure class=\"image\"><img src=\"/images/patterns/content/adapter/adapter-comic-1-en.png?id=c3842e3fff878a5b93e3186606998fc6\" alt=\"The Adapter pattern example\" srcset=\"/images/patterns/content/adapter/adapter-comic-1-en.png?id=c3842e3fff878a5b93e3186606998fc6 533w,/images/patterns/content/adapter/adapter-comic-1-en-1.5x.png?id=e49d135aedcd98e64ffea2b5ec0e4b9a 800w,/images/patterns/content/adapter/adapter-comic-1-en-2x.png?id=9bc31312da9412ed2ea8ae8d5d83984f 1067w\" sizes=\"(max-width: 720px) 100vw, 533px\" width=\"533\" style=\"aspect-ratio: 1.78;\" loading=\"lazy\" /><figcaption>\n<p>A suitcase before and after a trip abroad.</p>\n</figcaption></figure>\n<p>When you travel from the US to Europe for the first time, you may get a surprise when trying to charge your laptop. The power plug and sockets standards are different in different countries. That’s why your US plug won’t fit a German socket. The problem can be solved by using a power plug adapter that has the American-style socket and the European-style plug.</p>\n</div>\n<div class=\"section structure-container\">\n<h2 id=\"structure\"><i class=\"fa fa-sitemap\" aria-hidden=\"true\"></i> Structure</h2>\n<div class=\"structure\">\n<h4>Object adapter</h4>\n<p>This implementation uses the object composition principle: the adapter implements the interface of one object and wraps the other one. It can be implemented in all popular programming languages.</p>\n<div class=\"adapter-object\">\n<div class=\"struct-image1 struct-image\">\n<figure class=\"image\"><img class=\"structure-img-non-indexed d-none d-xl-block\" src=\"/images/patterns/diagrams/adapter/structure-object-adapter.png?id=33dffbe3aece294162440c7ddd3d5d4f\" alt=\"Structure of the Adapter design pattern (the object adapter)\" srcset=\"/images/patterns/diagrams/adapter/structure-object-adapter.png?id=33dffbe3aece294162440c7ddd3d5d4f 580w,/images/patterns/diagrams/adapter/structure-object-adapter-1.5x.png?id=c1b8a87b74fc4ce5639212fe19ee06fe 870w,/images/patterns/diagrams/adapter/structure-object-adapter-2x.png?id=03e8052e168c962d6bc369bbb13b0945 1160w\" sizes=\"(max-width: 720px) 100vw, 580px\" width=\"580\" style=\"aspect-ratio: 1.81;\" loading=\"lazy\" /><img class=\"structure-img-indexed d-xl-none\" src=\"/images/patterns/diagrams/adapter/structure-object-adapter-indexed.png?id=a20b311948b361a058097e5bcdbf067a\" alt=\"Structure of the Adapter design pattern (the object adapter)\" srcset=\"/images/patterns/diagrams/adapter/structure-object-adapter-indexed.png?id=a20b311948b361a058097e5bcdbf067a 600w,/images/patterns/diagrams/adapter/structure-object-adapter-indexed-1.5x.png?id=72a1c8fde064c4915379fb34a1a66881 900w,/images/patterns/diagrams/adapter/structure-object-adapter-indexed-2x.png?id=759771515f08d74d53cf4fe500f814a3 1200w\" sizes=\"(max-width: 720px) 100vw, 600px\" width=\"600\" style=\"aspect-ratio: 1.76;\" loading=\"lazy\" /></figure>\n</div>\n</div>\n<ol><li class=\"struct-li1\">\n<p>The <strong>Client</strong> is a class that contains the existing business logic of the program.</p>\n</li>\n<li class=\"struct-li2\">\n<p>The <strong>Client Interface</strong> describes a protocol that other classes must follow to be able to collaborate with the client code.</p>\n</li>\n<li class=\"struct-li3\">\n<p>The <strong>Service</strong> is some useful class (usually 3rd-party or legacy). The client can’t use this class directly because it has an incompatible interface.</p>\n</li>\n<li class=\"struct-li4\">\n<p>The <strong>Adapter</strong> is a class that’s able to work with both the client and the service: it implements the client interface, while wrapping the service object. The adapter receives calls from the client via the client interface and translates them into calls to the wrapped service object in a format it can understand.</p>\n</li>\n<li class=\"struct-li5\">\n<p>The client code doesn’t get coupled to the concrete adapter class as long as it works with the adapter via the client interface. Thanks to this, you can introduce new types of adapters into the program without breaking the existing client code. This can be useful when the interface of the service class gets changed or replaced: you can just create a new adapter class without changing the client code.</p>\n</li></ol>\n<h4>Class adapter</h4>\n<p>This implementation uses inheritance: the adapter inherits interfaces from both objects at the same time. Note that this approach can only be implemented in programming languages that support multiple inheritance, such as C++.</p>\n<div class=\"adapter-class\">\n<div class=\"struct-image2 struct-image\">\n<figure class=\"image\"><img class=\"structure-img-non-indexed d-none d-xl-block\" src=\"/images/patterns/diagrams/adapter/structure-class-adapter.png?id=e1c60240508146ed3b98ac562cc8e510\" alt=\"Adapter design pattern (class adapter)\" srcset=\"/images/patterns/diagrams/adapter/structure-class-adapter.png?id=e1c60240508146ed3b98ac562cc8e510 550w,/images/patterns/diagrams/adapter/structure-class-adapter-1.5x.png?id=299a79bdfa10ac53213ba02408255430 825w,/images/patterns/diagrams/adapter/structure-class-adapter-2x.png?id=ddca3e3e4d972b7c58207daba8d24866 1100w\" sizes=\"(max-width: 720px) 100vw, 550px\" width=\"550\" style=\"aspect-ratio: 1.72;\" loading=\"lazy\" /><img class=\"structure-img-indexed d-xl-none\" src=\"/images/patterns/diagrams/adapter/structure-class-adapter-indexed.png?id=250b5c485a7dfba7c16b89a9201538fb\" alt=\"Adapter design pattern (class adapter)\" srcset=\"/images/patterns/diagrams/adapter/structure-class-adapter-indexed.png?id=250b5c485a7dfba7c16b89a9201538fb 550w,/images/patterns/diagrams/adapter/structure-class-adapter-indexed-1.5x.png?id=b56d736f8076d34b1896de0a2b22a219 825w,/images/patterns/diagrams/adapter/structure-class-adapter-indexed-2x.png?id=9ae1182ef2a34d2ea65f4b4f94a4019e 1100w\" sizes=\"(max-width: 720px) 100vw, 550px\" width=\"550\" style=\"aspect-ratio: 1.72;\" loading=\"lazy\" /></figure>\n</div>\n</div>\n<ol><li class=\"struct-li6\">\n<p>The <strong>Class Adapter</strong> doesn’t need to wrap any objects because it inherits behaviors from both the client and the service. The adaptation happens within the overridden methods. The resulting adapter can be used in place of an existing client class.</p>\n</li></ol>\n<style structure type=\"text/css\" >\n@media (min-width: 1200px) {\n.structure {\nmargin: 0;\nwidth: auto;\nheight: 1240px;\n}\n\n.adapter-object {\nheight: 590px;\n}\n\n.adapter-class {\nheight: 300px;\n}\n\n.struct-image1 {\nleft: 160px;\ntop: 270px;\n}\n\n.struct-li1 {\nleft: 0px;\ntop: 230px;\nwidth: 160px;\n}\n\n.struct-li2 {\nleft: 230px;\ntop: 150px;\nwidth: 230px;\n}\n\n.struct-li3 {\nleft: 510px;\ntop: 270px;\nwidth: 220px;\n}\n\n.struct-li4 {\nleft: 260px;\ntop: 600px;\nwidth: 420px;\n}\n\n.struct-li5 {\nleft: 0px;\ntop: 390px;\nwidth: 230px;\n}\n\n.struct-image2 {\nleft: 100px;\ntop: 920px;\n}\n\n.struct-li6 {\nleft: 0px;\ntop: 1020px;\nwidth: 230px;\n}\n\n}\n\n</style>\n</div></div>\n<div class=\"section pseudocode\">\n<h2 id=\"pseudocode\"><i class=\"fa fa-hashtag\" aria-hidden=\"true\"></i> Pseudocode</h2>\n<p>This example of the <strong>Adapter</strong> pattern is based on the classic conflict between square pegs and round holes.</p>\n<figure class=\"image\"><img src=\"/images/patterns/diagrams/adapter/example.png?id=9d2b6857ce256f2c669383ce4df3d0aa\" alt=\"Structure of the Adapter pattern example\" srcset=\"/images/patterns/diagrams/adapter/example.png?id=9d2b6857ce256f2c669383ce4df3d0aa 640w,/images/patterns/diagrams/adapter/example-1.5x.png?id=76e68b9cea3b371e465e81587e57e5d9 960w,/images/patterns/diagrams/adapter/example-2x.png?id=0ac62d1bc151e8ce6abad8e8502756cf 1280w\" sizes=\"(max-width: 720px) 100vw, 640px\" width=\"640\" style=\"aspect-ratio: 1.68;\" loading=\"lazy\" /><figcaption>\n<p>Adapting square pegs to round holes.</p>\n</figcaption></figure>\n<p>The Adapter pretends to be a round peg, with a radius equal to a half of the square’s diameter (in other words, the radius of the smallest circle that can accommodate the square peg).</p>\n<figure class=\"code\">\n<pre class=\"code\" lang=\"pseudocode\">// Say you have two classes with compatible interfaces:\n// RoundHole and RoundPeg.\nclass RoundHole is\n    constructor RoundHole(radius) { ... }\n\n    method getRadius() is\n        // Return the radius of the hole.\n\n    method fits(peg: RoundPeg) is\n        return this.getRadius() &gt;= peg.getRadius()\n\nclass RoundPeg is\n    constructor RoundPeg(radius) { ... }\n\n    method getRadius() is\n        // Return the radius of the peg.\n\n\n// But there's an incompatible class: SquarePeg.\nclass SquarePeg is\n    constructor SquarePeg(width) { ... }\n\n    method getWidth() is\n        // Return the square peg width.\n\n\n// An adapter class lets you fit square pegs into round holes.\n// It extends the RoundPeg class to let the adapter objects act\n// as round pegs.\nclass SquarePegAdapter extends RoundPeg is\n    // In reality, the adapter contains an instance of the\n    // SquarePeg class.\n    private field peg: SquarePeg\n\n    constructor SquarePegAdapter(peg: SquarePeg) is\n        this.peg = peg\n\n    method getRadius() is\n        // The adapter pretends that it's a round peg with a\n        // radius that could fit the square peg that the adapter\n        // actually wraps.\n        return peg.getWidth() * Math.sqrt(2) / 2\n\n\n// Somewhere in client code.\nhole = new RoundHole(5)\nrpeg = new RoundPeg(5)\nhole.fits(rpeg) // true\n\nsmall_sqpeg = new SquarePeg(5)\nlarge_sqpeg = new SquarePeg(10)\nhole.fits(small_sqpeg) // this won't compile (incompatible types)\n\nsmall_sqpeg_adapter = new SquarePegAdapter(small_sqpeg)\nlarge_sqpeg_adapter = new SquarePegAdapter(large_sqpeg)\nhole.fits(small_sqpeg_adapter) // true\nhole.fits(large_sqpeg_adapter) // false\n</pre>\n</figure>\n</div>\n<div class=\"section applicability-container\">\n<h2 id=\"applicability\"><i class=\"fa fa-lightbulb-on\" aria-hidden=\"true\"></i> Applicability</h2>\n<div class=\"applicability\">\n<div class=\"applicability-problem\">\n<p><i class=\"fa fa-fw fa-bug\" aria-hidden=\"true\"></i> Use the Adapter class when you want to use some existing class, but its interface isn’t compatible with the rest of your code.</p>\n</div><div class=\"applicability-solution\">\n<p><i class=\"fa fa-fw fa-bolt\" aria-hidden=\"true\"></i> The Adapter pattern lets you create a middle-layer class that serves as a translator between your code and a legacy class, a 3rd-party class or any other class with a weird interface.</p>\n</div>\n<div class=\"applicability-problem\">\n<p><i class=\"fa fa-fw fa-bug\" aria-hidden=\"true\"></i> Use the pattern when you want to reuse several existing subclasses that lack some common functionality that can’t be added to the superclass.</p>\n</div><div class=\"applicability-solution\">\n<p><i class=\"fa fa-fw fa-bolt\" aria-hidden=\"true\"></i> You could extend each subclass and put the missing functionality into new child classes. However, you’ll need to duplicate the code across all of these new classes, which <a href=\"/smells/duplicate-code\">smells really bad</a>.</p>\n<p>The much more elegant solution would be to put the missing functionality into an adapter class. Then you would wrap objects with missing features inside the adapter, gaining needed features dynamically. For this to work, the target classes must have a common interface, and the adapter’s field should follow that interface. This approach looks very similar to the <a href=\"/design-patterns/decorator\">Decorator</a> pattern.</p>\n</div>\n</div></div>\n<div class=\"section checklist\">\n<h2 id=\"checklist\"><i class=\"fa fa-clipboard-list-check\" aria-hidden=\"true\"></i> How to Implement</h2>\n<ol>\n<li>\n<p>Make sure that you have at least two classes with incompatible interfaces:</p>\n<ul>\n<li>A useful <em>service</em> class, which you can’t change (often 3rd-party, legacy or with lots of existing dependencies).</li>\n<li>One or several <em>client</em> classes that would benefit from using the service class.</li>\n</ul>\n</li>\n<li>\n<p>Declare the client interface and describe how clients communicate with the service.</p>\n</li>\n<li>\n<p>Create the adapter class and make it follow the client interface. Leave all the methods empty for now.</p>\n</li>\n<li>\n<p>Add a field to the adapter class to store a reference to the service object. The common practice is to initialize this field via the constructor, but sometimes it’s more convenient to pass it to the adapter when calling its methods.</p>\n</li>\n<li>\n<p>One by one, implement all methods of the client interface in the adapter class. The adapter should delegate most of the real work to the service object, handling only the interface or data format conversion.</p>\n</li>\n<li>\n<p>Clients should use the adapter via the client interface. This will let you change or extend the adapters without affecting the client code.</p>\n</li>\n</ol>\n</div>\n<div class=\"section pros-cons\">\n<h2 id=\"pros-cons\"><i class=\"fa fa-balance-scale\" aria-hidden=\"true\"></i> Pros and Cons</h2>\n<div class=\"row\"><div class=\"col-sm-6\">\n<ul>\n<li><i class=\"fa fa-fw fa-check\" aria-hidden=\"true\"></i> <em>Single Responsibility Principle</em>. You can separate the interface or data conversion code from the primary business logic of the program.</li>\n<li><i class=\"fa fa-fw fa-check\" aria-hidden=\"true\"></i> <em>Open/Closed Principle</em>. You can introduce new types of adapters into the program without breaking the existing client code, as long as they work with the adapters through the client interface.</li>\n</ul>\n</div><div class=\"col-sm-6\">\n<ul>\n<li><i class=\"fa fa-fw fa-times\" aria-hidden=\"true\"></i> The overall complexity of the code increases because you need to introduce a set of new interfaces and classes. Sometimes it’s simpler just to change the service class so that it matches the rest of your code.</li>\n</ul>\n</div></div></div>\n<div class=\"section relations\">\n<h2 id=\"relations\"><i class=\"fa fa-exchange-alt\" aria-hidden=\"true\"></i> Relations with Other Patterns</h2>\n<ul>\n<li>\n<p><a href=\"/design-patterns/bridge\">Bridge</a> is usually designed up-front, letting you develop parts of an application independently of each other. On the other hand, <a href=\"/design-patterns/adapter\">Adapter</a> is commonly used with an existing app to make some otherwise-incompatible classes work together nicely.</p>\n</li>\n<li>\n<p><a href=\"/design-patterns/adapter\">Adapter</a> provides a completely different interface for accessing an existing object. On the other hand, with the <a href=\"/design-patterns/decorator\">Decorator</a> pattern the interface either stays the same or gets extended. In addition, <em>Decorator</em> supports recursive composition, which isn’t possible when you use <em>Adapter</em>.</p>\n</li>\n<li>\n<p>With <a href=\"/design-patterns/adapter\">Adapter</a> you access an existing object via different interface. With <a href=\"/design-patterns/proxy\">Proxy</a>, the interface stays the same. With <a href=\"/design-patterns/decorator\">Decorator</a> you access the object via an enhanced interface.</p>\n</li>\n<li>\n<p><a href=\"/design-patterns/facade\">Facade</a> defines a new interface for existing objects, whereas <a href=\"/design-patterns/adapter\">Adapter</a> tries to make the existing interface usable. <em>Adapter</em> usually wraps just one object, while <em>Facade</em> works with an entire subsystem of objects.</p>\n</li>\n<li>\n<p><a href=\"/design-patterns/bridge\">Bridge</a>, <a href=\"/design-patterns/state\">State</a>, <a href=\"/design-patterns/strategy\">Strategy</a> (and to some degree <a href=\"/design-patterns/adapter\">Adapter</a>) have very similar structures. Indeed, all of these patterns are based on composition, which is delegating work to other objects. However, they all solve different problems. A pattern isn’t just a recipe for structuring your code in a specific way. It can also communicate to other developers the problem the pattern solves.</p>\n</li>\n</ul>\n</div>\n<div class=\"section implementations\">\n<h2 id=\"implementations\"><i class=\"fa fa-code\" aria-hidden=\"true\"></i> Code Examples</h2>\n<p><a href=\"/design-patterns/adapter/csharp/example\" title=\"Adapter in C#\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/csharp.svg?id=da64592defc6e86d57c39c66e9de3e58\" alt=\"Adapter in C#\" /></a>\n<a href=\"/design-patterns/adapter/cpp/example\" title=\"Adapter in C++\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/cpp.svg?id=f7782ed8b8666246bfcc3f8fefc3b858\" alt=\"Adapter in C++\" /></a>\n<a href=\"/design-patterns/adapter/go/example\" title=\"Adapter in Go\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/go.svg?id=1a89927eb99b1ea3fde7701d97970aca\" alt=\"Adapter in Go\" /></a>\n<a href=\"/design-patterns/adapter/java/example\" title=\"Adapter in Java\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/java.svg?id=e6d87e2dca08c953fe3acd1275ed4f4e\" alt=\"Adapter in Java\" /></a>\n<a href=\"/design-patterns/adapter/php/example\" title=\"Adapter in PHP\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/php.svg?id=be1906eb26b71ec1d3b93720d6156618\" alt=\"Adapter in PHP\" /></a>\n<a href=\"/design-patterns/adapter/python/example\" title=\"Adapter in Python\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/python.svg?id=6d815d43c0f7050a1151b43e51569c9f\" alt=\"Adapter in Python\" /></a>\n<a href=\"/design-patterns/adapter/ruby/example\" title=\"Adapter in Ruby\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/ruby.svg?id=b065b718c914bf8e960ef731600be1eb\" alt=\"Adapter in Ruby\" /></a>\n<a href=\"/design-patterns/adapter/rust/example\" title=\"Adapter in Rust\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/rust.svg?id=1f5698a4b5ae23fe79413511747e4a87\" alt=\"Adapter in Rust\" /></a>\n<a href=\"/design-patterns/adapter/swift/example\" title=\"Adapter in Swift\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/swift.svg?id=0b716c2d52ec3a48fbe91ac031070c1d\" alt=\"Adapter in Swift\" /></a>\n<a href=\"/design-patterns/adapter/typescript/example\" title=\"Adapter in TypeScript\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/typescript.svg?id=2239d0f16cb703540c205dd8cb0c0cb7\" alt=\"Adapter in TypeScript\" /></a></p>\n</div>\n\n\n    <div class=\"banner-set2\" id=\"book-promo\">\n            <div class=\"prom banner-content banner-bg banner-striped banner-with-image\" data-id=\"DP: 1: Support our free website and own the eBook!\" data-creative-id=\"standard-en\" data-position=\"content_bottom\">\n                <div class=\"banner-image\">\n                    <a href=\"/design-patterns/book\">\n                        <img width=\"200\" height=\"200\" loading=\"lazy\" src=\"/images/patterns/banners/patterns-book-banner-3.png?id=7d445df13c80287beaab234b4f3b698c\" srcset=\"/images/patterns/banners/patterns-book-banner-3-2x.png?id=0cc3f77ab421d1a5c02ee46488231c3a 2x\">\n                    </a>\n                </div>\n\n                <div class=\"banner-text\">\n                    <h3 class=\"title\">Support our free website and own the eBook!</h3>\n                    <ul style=\"font-size: 14px;\">\n                        <li style=\"margin: 0;\">22 design patterns and 8 principles explained in depth.</li>\n                        <li style=\"margin: 0;\">409 well-structured, easy to read, jargon-free pages.</li>\n                        <li style=\"margin: 0;\">225 clear and helpful illustrations and diagrams.</li>\n                        <li style=\"margin: 0;\">An archive with code examples in 11 languages.</li>\n                        <li style=\"margin: 0;\">All devices supported: PDF/EPUB/MOBI/KFX formats.</li>\n                    </ul>\n                    <a class=\"btn btn-secondary\" href=\"/design-patterns/book\"><i class=\"fa fa-book\" aria-hidden=\"true\"></i> Learn more…</a>\n                </div>\n            </div>\n        </div>\n\n    </article>\n\n<nav class=\"prev-next\">\n                    <div class=\"next\">\n                <h4>Read next</h4>\n                <a rel=\"next\" href=\"/design-patterns/bridge\" class=\"btn btn-primary\">Bridge&nbsp;<span class=\"fa fa-arrow-right\"></span></a>\n            </div>\n                            <div class=\"prev\">\n                <h4>Return</h4>\n                <a rel=\"prev\" href=\"/design-patterns/structural-patterns\" class=\"btn btn-default\"><span class=\"fa fa-arrow-left\"></span>&nbsp;Structural Patterns </a>\n            </div>\n            </nav>\n</div>\n\n<aside class=\"feature content-secondary\">\n    <div class=\"prom banner-sidebar banner-removable banner-removable-patterns\" data-id=\"DP: Sidebar\" data-creative-id=\"standard-sidebar-en\" data-position=\"sidebar\">\n        <div class=\"banner-inner\">\n            <div class=\"image3d-book-right\">\n                <div class=\"image3d-cover\" style=\"background: #0b3752;\">\n                    <a href=\"/design-patterns/book\">\n                        <img width=\"250\" height=\"375\" loading=\"lazy\" src=\"/images/patterns/book/web-cover-en.png?id=328861769fd11617674e3b8a7e2dd9e7\" srcset=\"/images/patterns/book/web-cover-en-2x.png?id=02940141c5652ed5a426d87390b16366 2x\">\n                    </a>\n                </div>\n            </div>\n            <div style=\"margin-top: 1rem\">\n                <p class=\"text-center\" >This article is a part of our eBook<br/><strong>Dive Into Design Patterns</strong>.</p>\n                <a href=\"/design-patterns/book\" class=\"btn btn-secondary btn-block\"><i class=\"fa fa-book\" aria-hidden=\"true\"></i> Learn more…</a>\n            </div>\n        </div>\n    </div>\n\n\n</aside>\n                    </div>\n    </main>\n\n    <aside class=\"sidebar main-menu\">\n    <div class=\"main-menu-controls\">\n        <button class=\"navigation-toggle\"><i class=\"fa fa-fw fa-times\"></i></button>\n    </div>\n    <div class=\"main-menu-list-wrapper nano\">\n        <div class=\"main-menu-list nano-content\">\n            <a class=\"menu-brand\" href=\"/\">\n                                    <img width=200 height=241 loading=\"lazy\" alt=\"Refactoring.Guru\" src=\"/images/content-public/logos/logo-new.png?id=97d554614702483f31e38b32e82d8e34\" srcset=\"/images/content-public/logos/logo-new-2x.png?id=3bc33294e095bab1d6fe9ae421d07837 2x\">\n                            </a>\n\n            <div class=\"menu-container\" style=\"position: relative\">\n                                <ul class=\"menu-list trail\">\n                            <li class=\"featured\">\n            <a href=\"/store\">\n                <i class=\"fa fa-fw fa-star\" aria-hidden=\"true\"></i> Premium Content\n            </a>\n    \n            <ul >\n                            <li class=\"featured menu-fs15\">\n            <a href=\"/design-patterns/book\">\n                <i class=\"fa fa-fw fa-book\" aria-hidden=\"true\"></i> Design Patterns eBook\n            </a>\n    \n    \n            </li>\n                                <li class=\"featured menu-fs15\">\n            <a href=\"/refactoring/course\">\n                <i class=\"fa fa-fw fa-graduation-cap\" aria-hidden=\"true\"></i> Refactoring Course\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring\">\n                <i class=\"fa fa-fw fa-scissors\" aria-hidden=\"true\"></i> Refactoring\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/refactoring/what-is-refactoring\">\n                What is Refactoring\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/refactoring/what-is-refactoring\">\n                Clean code\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/technical-debt\">\n                Technical debt\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/when\">\n                When to refactor\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/how-to\">\n                How to refactor\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/catalog\">\n                Catalog\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells\">\n                Code Smells\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/refactoring/smells/bloaters\">\n                Bloaters\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/long-method\">\n                Long Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/large-class\">\n                Large Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/primitive-obsession\">\n                Primitive Obsession\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/long-parameter-list\">\n                Long Parameter List\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/data-clumps\">\n                Data Clumps\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/oo-abusers\">\n                Object-Orientation Abusers\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/switch-statements\">\n                Switch Statements\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/temporary-field\">\n                Temporary Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/refused-bequest\">\n                Refused Bequest\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/alternative-classes-with-different-interfaces\">\n                Alternative Classes with Different Interfaces\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/change-preventers\">\n                Change Preventers\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/divergent-change\">\n                Divergent Change\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/shotgun-surgery\">\n                Shotgun Surgery\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/parallel-inheritance-hierarchies\">\n                Parallel Inheritance Hierarchies\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/dispensables\">\n                Dispensables\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/comments\">\n                Comments\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/duplicate-code\">\n                Duplicate Code\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/lazy-class\">\n                Lazy Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/data-class\">\n                Data Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/dead-code\">\n                Dead Code\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/speculative-generality\">\n                Speculative Generality\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/couplers\">\n                Couplers\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/feature-envy\">\n                Feature Envy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/inappropriate-intimacy\">\n                Inappropriate Intimacy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/message-chains\">\n                Message Chains\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/middle-man\">\n                Middle Man\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/other\">\n                Other Smells\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/incomplete-library-class\">\n                Incomplete Library Class\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques\">\n                Refactorings\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/refactoring/techniques/composing-methods\">\n                Composing Methods\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/extract-method\">\n                Extract Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/inline-method\">\n                Inline Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-variable\">\n                Extract Variable\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/inline-temp\">\n                Inline Temp\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-temp-with-query\">\n                Replace Temp with Query\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/split-temporary-variable\">\n                Split Temporary Variable\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-assignments-to-parameters\">\n                Remove Assignments to Parameters\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-method-with-method-object\">\n                Replace Method with Method Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/substitute-algorithm\">\n                Substitute Algorithm\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/moving-features-between-objects\">\n                Moving Features between Objects\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/move-method\">\n                Move Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/move-field\">\n                Move Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-class\">\n                Extract Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/inline-class\">\n                Inline Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/hide-delegate\">\n                Hide Delegate\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-middle-man\">\n                Remove Middle Man\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-foreign-method\">\n                Introduce Foreign Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-local-extension\">\n                Introduce Local Extension\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/organizing-data\">\n                Organizing Data\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/self-encapsulate-field\">\n                Self Encapsulate Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-data-value-with-object\">\n                Replace Data Value with Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/change-value-to-reference\">\n                Change Value to Reference\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/change-reference-to-value\">\n                Change Reference to Value\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-array-with-object\">\n                Replace Array with Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/duplicate-observed-data\">\n                Duplicate Observed Data\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/change-unidirectional-association-to-bidirectional\">\n                Change Unidirectional Association to Bidirectional\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/change-bidirectional-association-to-unidirectional\">\n                Change Bidirectional Association to Unidirectional\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-magic-number-with-symbolic-constant\">\n                Replace Magic Number with Symbolic Constant\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/encapsulate-field\">\n                Encapsulate Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/encapsulate-collection\">\n                Encapsulate Collection\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-type-code-with-class\">\n                Replace Type Code with Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-type-code-with-subclasses\">\n                Replace Type Code with Subclasses\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-type-code-with-state-strategy\">\n                Replace Type Code with State/Strategy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-subclass-with-fields\">\n                Replace Subclass with Fields\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/simplifying-conditional-expressions\">\n                Simplifying Conditional Expressions\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/decompose-conditional\">\n                Decompose Conditional\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/consolidate-conditional-expression\">\n                Consolidate Conditional Expression\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/consolidate-duplicate-conditional-fragments\">\n                Consolidate Duplicate Conditional Fragments\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-control-flag\">\n                Remove Control Flag\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-nested-conditional-with-guard-clauses\">\n                Replace Nested Conditional with Guard Clauses\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-conditional-with-polymorphism\">\n                Replace Conditional with Polymorphism\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-null-object\">\n                Introduce Null Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-assertion\">\n                Introduce Assertion\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/simplifying-method-calls\">\n                Simplifying Method Calls\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/rename-method\">\n                Rename Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/add-parameter\">\n                Add Parameter\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-parameter\">\n                Remove Parameter\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/separate-query-from-modifier\">\n                Separate Query from Modifier\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/parameterize-method\">\n                Parameterize Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-parameter-with-explicit-methods\">\n                Replace Parameter with Explicit Methods\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/preserve-whole-object\">\n                Preserve Whole Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-parameter-with-method-call\">\n                Replace Parameter with Method Call\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-parameter-object\">\n                Introduce Parameter Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-setting-method\">\n                Remove Setting Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/hide-method\">\n                Hide Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-constructor-with-factory-method\">\n                Replace Constructor with Factory Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-error-code-with-exception\">\n                Replace Error Code with Exception\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-exception-with-test\">\n                Replace Exception with Test\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/dealing-with-generalization\">\n                Dealing with Generalization\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/pull-up-field\">\n                Pull Up Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/pull-up-method\">\n                Pull Up Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/pull-up-constructor-body\">\n                Pull Up Constructor Body\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/push-down-method\">\n                Push Down Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/push-down-field\">\n                Push Down Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-subclass\">\n                Extract Subclass\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-superclass\">\n                Extract Superclass\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-interface\">\n                Extract Interface\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/collapse-hierarchy\">\n                Collapse Hierarchy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/form-template-method\">\n                Form Template Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-inheritance-with-delegation\">\n                Replace Inheritance with Delegation\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-delegation-with-inheritance\">\n                Replace Delegation with Inheritance\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"trail\">\n            <a href=\"/design-patterns\">\n                <i class=\"fa fa-fw fa-puzzle-piece\" aria-hidden=\"true\"></i> Design Patterns\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/what-is-pattern\">\n                What is a Pattern\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/what-is-pattern\">\n                What's a design pattern?\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/history\">\n                History of patterns\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/why-learn-patterns\">\n                Why should I learn patterns?\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/criticism\">\n                Criticism of patterns\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/classification\">\n                Classification of patterns\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/catalog\">\n                Catalog\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-third-level\">\n            <a href=\"/design-patterns/creational-patterns\">\n                Creational Patterns\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/factory-method\">\n                Factory Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/abstract-factory\">\n                Abstract Factory\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/builder\">\n                Builder\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/prototype\">\n                Prototype\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/singleton\">\n                Singleton\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"menu-third-level trail\">\n            <a href=\"/design-patterns/structural-patterns\">\n                Structural Patterns\n            </a>\n    \n            <ul >\n                            <li class=\"trail active\">\n            <a href=\"/design-patterns/adapter\">\n                Adapter\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/bridge\">\n                Bridge\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/composite\">\n                Composite\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/decorator\">\n                Decorator\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/facade\">\n                Facade\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/flyweight\">\n                Flyweight\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/proxy\">\n                Proxy\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"menu-third-level\">\n            <a href=\"/design-patterns/behavioral-patterns\">\n                Behavioral Patterns\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/chain-of-responsibility\">\n                Chain of Responsibility\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/command\">\n                Command\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/iterator\">\n                Iterator\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/mediator\">\n                Mediator\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/memento\">\n                Memento\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/observer\">\n                Observer\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/state\">\n                State\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/strategy\">\n                Strategy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/template-method\">\n                Template Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/visitor\">\n                Visitor\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"menu-code-examples\">\n            <a href=\"/design-patterns/examples\">\n                Code Examples\n            </a>\n    \n            <ul >\n                            <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/csharp\">\n                C#\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/cpp\">\n                C++\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/go\">\n                Go\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/java\">\n                Java\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/php\">\n                PHP\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/python\">\n                Python\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/ruby\">\n                Ruby\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/rust\">\n                Rust\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/swift\">\n                Swift\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/typescript\">\n                TypeScript\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n                </div>\n\n            <div class=\"main-menu-aux-controls\">\n                <a href=\"https://refactoring.guru/login\" title=\"Sign in\" style=\" display: inline-flex; align-items: center; gap: 6px; \"><svg style=\"width: 16px; height: 16px; filter:drop-shadow(0 1px 1px #74261e)\" class=\"inline-block mx-0\"  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\"opacity=\"0.4\" d=\"M352.7 222.4c3.2 1 6.5 1.6 10 1.6l21.3 0c17.7 0 32 14.3 32 32s-14.3 32-32 32l-21.3 0c-.8 0-1.7 0-2.5 0c-.9 0-1.7-.1-2.5-.1c-1.7-.1-3.4-.2-5-.4C357.4 414 391.1 512 432 512c44.2 0 80-114.6 80-256S476.2 0 432 0c-40.6 0-74.2 96.9-79.3 222.4z\"/><path fill=\"currentColor\"class=\"fa-primary\" d=\"M320 48a48 48 0 1 0 -96 0 48 48 0 1 0 96 0zM125.7 175.5c9.9-9.9 23.4-15.5 37.5-15.5c1.9 0 3.8 .1 5.6 .3L137.6 254c-9.3 28 1.7 58.8 26.8 74.5l86.2 53.9-25.4 88.8c-4.9 17 5 34.7 22 39.6s34.7-5 39.6-22l28.7-100.4c5.9-20.6-2.6-42.6-20.7-53.9L238 299l30.9-82.4 5.1 12.3C289 264.7 323.9 288 362.7 288l21.3 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-21.3 0c-12.9 0-24.6-7.8-29.5-19.7l-6.3-15c-14.6-35.1-44.1-61.9-80.5-73.1l-48.7-15c-11.1-3.4-22.7-5.2-34.4-5.2c-31 0-60.8 12.3-82.7 34.3L57.4 153.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l23.1-23.1zM91.2 352L32 352c-17.7 0-32 14.3-32 32s14.3 32 32 32l69.6 0c19 0 36.2-11.2 43.9-28.5L157 361.6l-9.5-6c-17.5-10.9-30.5-26.8-37.9-44.9L91.2 352z\"/></svg> Sign in</a>\n                <a href=\"https://feedback.refactoring.guru/\" class=\"userecho-public\" rel=\"nofollow\" title=\"Contact us\"><i class=\"fa fa-fw fa-fw fa-envelope\" aria-hidden=\"true\"></i> Contact us</a>\n            </div>\n        </div>\n    </div>\n</aside>\n\n    <nav class=\"navigation\" role=\"navigation\">\n    <div class=\"navigation-container\">\n        <a class=\"navigation-brand\" href=\"/\">\n            <img alt=\"Refactoring.Guru\"\n                 src=\"/images/content-public/logos/logo-new-mobile.png?id=ea18aa9b032eaa92835ed6d472b03b4a\"\n                 srcset=\"/images/content-public/logos/logo-new-mobile-2x.png?id=7ad5648bfd86ae2e8524147a72877c64 2x\">\n        </a>\n\n        <div class=\"shop-link d-none d-lg-block\" style=\"display: none !important;\">\n            <a class=\"btn btn-md btn-primary btn-featured\" href=\"/store\"><svg style=\"width: 28px; height: 28px; fill: currentColor; display: inline-block; margin-top: -14px;\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><!--! Font Awesome Pro 6.3.0 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2023 Fonticons, Inc. --><path d=\"M356 60l60 20-60 20-20 60-20-60L256 80l60-20L336 0l20 60zM464 208l48 16-48 16-16 48-16-48-48-16 48-16 16-48 16 48zm-243.8-9.8l33 66.9 73.8 10.7 59.8 8.7-43.3 42.2-53.4 52.1 12.6 73.5L313 512l-53.5-28.1-66-34.7-66 34.7L73.9 512l10.2-59.6 12.6-73.5L43.3 326.8 0 284.6l59.8-8.7 73.8-10.7 33-66.9L193.5 144l26.8 54.2zm26.1 114.4l-25-3.6-11.2-22.6-16.7-33.9-16.7 33.9L165.6 309l-25 3.6-37.4 5.4 27.1 26.4 18.1 17.6L144 387l-6.4 37.3 33.5-17.6 22.3-11.7 22.3 11.7 33.5 17.6L242.9 387l-4.3-24.9 18.1-17.6 27.1-26.4-37.4-5.4z\"/></svg>\n                Shop Now!</a>\n        </div>\n\n        <ul class=\"navigation-menu\">\n                            <li class=\"nav-locale dropdown dropdown-locales\">\n                    <button class=\"dropdown-toggle\" id=\"dropdownLanguage\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                        <i class=\"fa fa-fw fa-globe\" aria-hidden=\"true\"></i> <span class=\"caption d-none d-lg-inline-block\">English</span>\n                    </button>\n                    <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownLanguage\">\n                                                                                                                        <a href=\"https://refactoring.guru/design-patterns/adapter\" class=\"dropdown-item locale-link active\" data-locale=\"en\" title=\"English\">English</a>\n                                                                                                                                <a href=\"https://refactoring.guru/es/design-patterns/adapter\" class=\"dropdown-item locale-link \" data-locale=\"es\" title=\"Español\">Español</a>\n                                                                                                                                <a href=\"https://refactoring.guru/fr/design-patterns/adapter\" class=\"dropdown-item locale-link \" data-locale=\"fr\" title=\"Français\">Français</a>\n                                                                                                                                <a href=\"https://refactoring.guru/ja/design-patterns/adapter\" class=\"dropdown-item locale-link \" data-locale=\"ja\" title=\"日本語\">日本語</a>\n                                                                                                                                <a href=\"https://refactoring.guru/ko/design-patterns/adapter\" class=\"dropdown-item locale-link \" data-locale=\"ko\" title=\"한국어\">한국어</a>\n                                                                                                                                <a href=\"https://refactoring.guru/pl/design-patterns/adapter\" class=\"dropdown-item locale-link \" data-locale=\"pl\" title=\"Polski\">Polski</a>\n                                                                                                                                <a href=\"https://refactoring.guru/pt-br/design-patterns/adapter\" class=\"dropdown-item locale-link \" data-locale=\"pt-br\" title=\"Português Brasileiro\">Português Brasileiro</a>\n                                                                                                                                <a href=\"https://refactoring.guru/ru/design-patterns/adapter\" class=\"dropdown-item locale-link \" data-locale=\"ru\" title=\"Русский\">Русский</a>\n                                                                                                                                <a href=\"https://refactoring.guru/uk/design-patterns/adapter\" class=\"dropdown-item locale-link \" data-locale=\"uk\" title=\"Українська\">Українська</a>\n                                                                                                                                <a href=\"https://refactoringguru.cn/design-patterns/adapter\" class=\"dropdown-item locale-link \" data-locale=\"zh\" title=\"中文\">中文</a>\ndiv>\n                </li>\n                        <li class=\"nav-contacts\">\n                <a class=\"userecho-private\" href=\"https://feedback.refactoring.guru/?show_feedback_form_private=true\" rel=\"nofollow\" title=\"Contact us\">\n                    <i class=\"fa fa-fw fa-envelope\" aria-hidden=\"true\"></i> <span class=\"caption d-none d-xl-inline-block\">Contact us</span>\n                </a>\n            </li>\n                            <li class=\"nav-user\">\n                    <a href=\"https://refactoring.guru/login\" title=\"Sign in\"><span class=\"sign-in-icon\"><svg style=\"width: 24px; height: 24px; \" class=\"inline-block \"  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\"opacity=\"0.4\" d=\"M352.7 222.4c3.2 1 6.5 1.6 10 1.6l21.3 0c17.7 0 32 14.3 32 32s-14.3 32-32 32l-21.3 0c-.8 0-1.7 0-2.5 0c-.9 0-1.7-.1-2.5-.1c-1.7-.1-3.4-.2-5-.4C357.4 414 391.1 512 432 512c44.2 0 80-114.6 80-256S476.2 0 432 0c-40.6 0-74.2 96.9-79.3 222.4z\"/><path fill=\"currentColor\"class=\"fa-primary\" d=\"M320 48a48 48 0 1 0 -96 0 48 48 0 1 0 96 0zM125.7 175.5c9.9-9.9 23.4-15.5 37.5-15.5c1.9 0 3.8 .1 5.6 .3L137.6 254c-9.3 28 1.7 58.8 26.8 74.5l86.2 53.9-25.4 88.8c-4.9 17 5 34.7 22 39.6s34.7-5 39.6-22l28.7-100.4c5.9-20.6-2.6-42.6-20.7-53.9L238 299l30.9-82.4 5.1 12.3C289 264.7 323.9 288 362.7 288l21.3 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-21.3 0c-12.9 0-24.6-7.8-29.5-19.7l-6.3-15c-14.6-35.1-44.1-61.9-80.5-73.1l-48.7-15c-11.1-3.4-22.7-5.2-34.4-5.2c-31 0-60.8 12.3-82.7 34.3L57.4 153.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l23.1-23.1zM91.2 352L32 352c-17.7 0-32 14.3-32 32s14.3 32 32 32l69.6 0c19 0 36.2-11.2 43.9-28.5L157 361.6l-9.5-6c-17.5-10.9-30.5-26.8-37.9-44.9L91.2 352z\"/></svg></span> <span class=\"account-icon\" style=\"display:none\"><svg style=\"width: 24px; height: 24px; \" class=\"inline-block \"  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 576 512\"><path fill=\"currentColor\"opacity=\"0.4\" d=\"M64 270.5l224-196c74.7 65.4 149.4 130.7 224.1 196.1l.4 177.3c.1 35.4-28.6 64.1-64 64.1l-320.4 0c-35.3 0-64-28.6-64-64L64 270.5zM176.1 433.6c.1 .5 .1 1.1 .2 1.6c.2 1 .5 2 .9 3c.8 1.9 2 3.6 3.4 5.1c2.9 2.9 6.9 4.7 11.3 4.7l192 0c8.8 0 16-7.2 16-16c0-44.2-35.8-80-80-80l-64 0c-22.1 0-42.1 9-56.6 23.4c-7.2 7.2-13.1 15.9-17.1 25.4c-2 4.8-3.6 9.8-4.7 15c-.5 2.6-.9 5.3-1.2 7.9c-.1 1.3-.2 2.7-.3 4.1c-.1 1.4-.1 2.7-.1 4.1c0 .6 0 1.1 .1 1.6zm48.2-184.2c-.1 1.1-.2 2.2-.2 3.2c-.1 1.1-.1 2.2-.1 3.3s0 2.2 .1 3.3c.1 1.1 .1 2.2 .2 3.2c.2 2.1 .5 4.3 1 6.4c.9 4.2 2.1 8.2 3.7 12c3.2 7.7 7.9 14.6 13.7 20.3C254.3 312.8 270.3 320 288 320c35.3 0 64-28.7 64-64s-28.7-64-64-64c-17.7 0-33.7 7.2-45.3 18.7c-5.8 5.8-10.5 12.7-13.7 20.3c-1.6 3.8-2.9 7.8-3.7 12c-.4 2.1-.8 4.2-1 6.4z\"/><path fill=\"currentColor\"class=\"fa-primary\" d=\"M309.1 7.9C297-2.6 279-2.6 266.9 7.9l-256 224c-13.3 11.6-14.6 31.9-3 45.2s31.9 14.6 45.2 3L288 74.5 522.9 280.1c13.3 11.6 33.5 10.3 45.2-3s10.3-33.5-3-45.2L512 185.5 512 64c0-17.7-14.3-32-32-32l-32 0c-17.7 0-32 14.3-32 32l0 37.5L309.1 7.9zM352 256a64 64 0 1 0 -128 0 64 64 0 1 0 128 0zm-96 96c-44.2 0-80 35.8-80 80c0 8.8 7.2 16 16 16l192 0c8.8 0 16-7.2 16-16c0-44.2-35.8-80-80-80l-64 0z\"/></svg></span> <span class=\"sign-out-icon\" style=\"display:none\"><svg style=\"width: 24px; height: 24px; \" class=\"inline-block \"  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\"opacity=\"0.4\" d=\"M0 256C0 397.4 35.8 512 80 512c25.3 0 47.8-37.5 62.5-96L128 416c-.5 0-1.1 0-1.6 0c-.6 0-1.1-.1-1.6-.1c-1.1-.1-2.1-.3-3.2-.5c-2.1-.4-4.1-1.1-6-1.9c-3.8-1.6-7.3-4-10.2-6.9s-5.2-6.3-6.9-10.2c-.8-1.9-1.4-3.9-1.9-6c-.2-1.1-.4-2.3-.5-3.5c0-.3 0-.6-.1-.8c0-.2 0-.4 0-.7c0-.4 0-.7 0-.7c0-.5 0-.7 0-.9c0-.3 0-.6 0-.9c0 0 0-.3 0-.7c0-.2 0-.4 0-.7c0-.2 0-.4 .1-.8c0-.3 .1-.6 .1-.9c0-.2 .1-.4 .1-.7c.1-.8 .2-1.2 .3-1.7c.5-2.2 1.1-4.2 1.9-6.1c1.6-3.8 4-7.3 6.9-10.2c5.8-5.8 13.8-9.4 22.6-9.4l26.2 0c3.8-29.6 5.8-62.1 5.8-96c0-18.3-.6-36.1-1.7-53.4c-1.7-1.2-3.4-2.5-4.9-4c-.8-.8-1.6-1.6-2.2-2.5s-1.3-1.7-1.9-2.6c-1.2-1.8-2.1-3.6-2.9-5.5s-1.4-3.9-1.8-5.9c-.2-1-.3-2-.4-3s-.1-2-.2-3c0-8.3 3.1-16.5 9.4-22.8C141 63.1 112.8 0 80 0C35.8 0 0 114.6 0 256z\"/><path fill=\"currentColor\"class=\"fa-primary\" d=\"M416 48a48 48 0 1 0 -96 0 48 48 0 1 0 96 0zM221.7 175.5c9.9-9.9 23.4-15.5 37.5-15.5c1.9 0 3.8 .1 5.6 .3L233.6 254c-9.3 28 1.7 58.8 26.8 74.5l86.2 53.9-25.4 88.8c-4.9 17 5 34.7 22 39.6s34.7-5 39.6-22l28.7-100.4c5.9-20.6-2.6-42.6-20.7-53.9L334 299l30.9-82.4 5.1 12.3C385 264.7 419.9 288 458.7 288l21.3 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-21.3 0c-12.9 0-24.6-7.8-29.5-19.7l-6.3-15c-14.6-35.1-44.1-61.9-80.5-73.1l-48.7-15c-11.1-3.4-22.7-5.2-34.4-5.2c-31 0-60.8 12.3-82.7 34.3l-23.1 23.1c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l23.1-23.1zM187.2 352L128 352c-17.7 0-32 14.3-32 32s14.3 32 32 32l69.6 0c19 0 36.2-11.2 43.9-28.5L253 361.6l-9.5-6c-17.5-10.9-30.5-26.8-37.9-44.9L187.2 352z\"/></svg></span> <span class=\"caption d-none d-xl-inline-block\">Sign in</span></a>\n                </li>\n                        <li class=\"nav-menu\">\n                <button class=\"navigation-toggle\"><i class=\"fa fa-fw fa-bars\" aria-hidden=\"true\"></i></button>\n            </li>\n        </ul>\n    </div>\n</nav>\n\n    <footer class=\"footer center-content\">\n    <div class=\"footer-container center-content-container\">\n        <div class=\"footer-inner container-fluid\">\n            <div class=\"row\">\n                <div class=\"col-8 col-md-10\">\n                    <ul class=\"footer-list footer-list-horizontal\">\n                        <li><a href=\"/\">Home</a></li>\n                        <li><a href=\"/refactoring\">Refactoring</a></li>\n                        <li><a href=\"/design-patterns\">Design Patterns</a></li>\n                        <li><a href=\"/store\">Premium Content</a></li>\n                        <li><a href=\"https://gitbybit.com/\">Git Course</a></li>\n                        <li><a href=\"https://refactoring.userecho.com/\" rel=\"nofollow\" class=\"userecho-public\">Forum</a></li>\n                        <li><a href=\"https://refactoring.userecho.com/\" rel=\"nofollow\" class=\"userecho-private\">Contact us</a></li>\n                    </ul>\n                </div>\n                <div class=\"col-4 col-md-2\">\n                    <ul class=\"footer-list footer-list-iconic footer-list-right\">\n                                                    <li><a href=\"https://www.facebook.com/refactoring.guru\"><i class=\"fa fa-facebook-official\"></i></a></li>\n                                                <li><a href=\"/sendy/form\" rel=\"nofollow\"><i class=\"fa fa-envelope\" aria-hidden=\"true\"></i></a></li>\n                        <li><a href=\"https://github.com/RefactoringGuru\"><i class=\"fa fa-github-circled\"></i></a></li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"footer-second\">\n        <div class=\"footer-container center-content-container\">\n            <div class=\"footer-inner container-fluid\">\n                <div class=\"row\">\n                    <div class=\"col-12 col-sm-6\">\n                        <i class=\"fa fa-fw fa-copyright\"></i> 2014-2025 <a href=\"/\">Refactoring.Guru</a>. <span style=\"white-space: nowrap\">All rights reserved.</span><br>\n                        <i class=\"fa fa-fw fa-image\"></i> Illustrations by <a href=\"http://zhart.us/\" rel=\"nofollow\"><span style=\"white-space: nowrap\">Dmitry Zhart</span></a>\n                    </div>\n                    <div class=\"footer-links-right col-12 col-sm-6 mt-4 mt-sm-0\">\n                        <ul class=\"footer-list footer-list-horizontal footer-list-right\">\n                            <li><a href=\"/terms\"><span>Terms &amp; Conditions</span></a>\n                            </li>\n                            <li><a href=\"/privacy-policy\"><span>Privacy Policy</span></a>\n                            </li>\n                            <li><a href=\"/content-usage-policy\"><span>Content Usage Policy</span></a>\n                            </li>\n                            <li><a href=\"/site-about\"><span>About us</span></a>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n                                    <div class=\"row\">\n                        <div class=\"col-12 col-sm-4\">\n                            <div class=\"mt-4\">\n                                                                    <b>Ukrainian office:</b><br>\n                                    <object class=\"fa-fw\" style=\"height: 0.8rem; filter: invert(50%);\"  type=\"image/svg+xml\" data=\"/images/content-public/icons/fa-building.svg?id=afddb5806968b0a9acfc1df75a181234\">\n                                        <img class=\"fa-fw\" style=\"height: 0.8rem;\" src=\"/images/content-public/icons/fa-building.svg?id=afddb5806968b0a9acfc1df75a181234\" alt=\"Organization address\"/>\n                                    </object> FOP Olga Skobeleva<br>\n                                    <svg style=\"width: 16px; height: 16px; margin-right: 1px; fill: currentColor;\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\"><path d=\"M352 192c0-88.4-71.6-160-160-160S32 103.6 32 192c0 15.6 5.4 37 16.6 63.4c10.9 25.9 26.2 54 43.6 82.1c34.1 55.3 74.4 108.2 99.9 140c25.4-31.8 65.8-84.7 99.9-140c17.3-28.1 32.7-56.3 43.6-82.1C346.6 229 352 207.6 352 192zm32 0c0 87.4-117 243-168.3 307.2c-12.3 15.3-35.1 15.3-47.4 0C117 435 0 279.4 0 192C0 86 86 0 192 0S384 86 384 192zm-240 0a48 48 0 1 0 96 0 48 48 0 1 0 -96 0zm48 80a80 80 0 1 1 0-160 80 80 0 1 1 0 160z\"/></svg> Abolmasova 7<br>\n                                    <span style=\"margin-left: 21px;\">Kyiv, Ukraine, 02002</span><br>\n                                    <i class=\"fa fa-fw fa-envelope\"></i>  Email: support@refactoring.guru\n                                \n                            </div>\n                        </div>\n                        <div class=\"col-12 col-sm-4\">\n                            <div class=\"mt-4\">\n                                <b>Spanish office:</b><br>\n                                <object class=\"fa-fw\" style=\"height: 0.8rem; filter: invert(50%);\"  type=\"image/svg+xml\" data=\"/images/content-public/icons/fa-building.svg?id=afddb5806968b0a9acfc1df75a181234\">\n                                    <img class=\"fa-fw\" style=\"height: 0.8rem;\" src=\"/images/content-public/icons/fa-building.svg?id=afddb5806968b0a9acfc1df75a181234\" alt=\"Organization address\"/>\n                                </object> Oleksandr Shvets<br>\n                                <svg style=\"width: 16px; height: 16px; margin-right: 1px; fill: currentColor;\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\"><path d=\"M352 192c0-88.4-71.6-160-160-160S32 103.6 32 192c0 15.6 5.4 37 16.6 63.4c10.9 25.9 26.2 54 43.6 82.1c34.1 55.3 74.4 108.2 99.9 140c25.4-31.8 65.8-84.7 99.9-140c17.3-28.1 32.7-56.3 43.6-82.1C346.6 229 352 207.6 352 192zm32 0c0 87.4-117 243-168.3 307.2c-12.3 15.3-35.1 15.3-47.4 0C117 435 0 279.4 0 192C0 86 86 0 192 0S384 86 384 192zm-240 0a48 48 0 1 0 96 0 48 48 0 1 0 -96 0zm48 80a80 80 0 1 1 0-160 80 80 0 1 1 0 160z\"/></svg> Avda Pamplona 64<br>\n                                <span style=\"margin-left: 21px;\">Pamplona, Spain, 31009</span><br>\n                                <i class=\"fa fa-fw fa-envelope\"></i>  Email: support@refactoring.guru\n                            </div>\n                        </div>\n                    </div>\n                            </div>\n        </div>\n    </div>\n</footer>\n\n</div>\n\n\n    <script defer>\n    var CodeMirrorScripts = [\"/js/codemirror.min.js?id=f7ae4adf14bd00338caf8e95da733cc9\"];\n</script>\n\n\n\n    <script>window.loadContent = true;window.loadCart = true;</script>\n</body>\n</html>\n"},
{"title": null, "url": "https://refactoring.guru/design-patterns/singleton", "raw_html": "<!DOCTYPE html>\n<html lang=\"en\" dir=\"ltr\">\n<head prefix=\"og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# website: http://ogp.me/ns/website#\">\n    <meta charset=\"utf-8\">\n    <title>Singleton</title>\n\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n    <meta name=\"theme-color\" content=\"#A2E2FD\" />\n\n            <style>\n        .buy-widget-excl-local-taxes {\n            display: none;\n        }\n    </style>\n    \n    <link rel=\"preload\" href=\"/fonts/PTSans/ptsans-regular_en.woff2?1\" as=\"font\" type=\"font/woff2\" crossorigin>\n    <link rel=\"preload\" href=\"/fonts/PTSans/ptsans-bold_en.woff2?1\" as=\"font\" type=\"font/woff2\" crossorigin>\n        <link rel=\"preload\" href=\"/fonts/fontello/fontawesome.woff2?15843843\" as=\"font\" type=\"font/woff2\" crossorigin>\n    <link rel=\"preload\" href=\"/fonts/FiraCode/woff2/FiraCode-Regular_latin.woff2\" as=\"font\" type=\"font/woff2\" crossorigin>\n        <link rel=\"preconnect dns-prefetch\" href=\"https://cdn.paddle.com\">\n    <link rel=\"preconnect dns-prefetch\" href=\"https://www.googletagmanager.com\">\n\n    <link rel=\"alternate\" href=\"https://refactoring.guru/design-patterns/singleton\" hreflang=\"x-default\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/es/design-patterns/singleton\" hreflang=\"es\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/fr/design-patterns/singleton\" hreflang=\"fr\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/ja/design-patterns/singleton\" hreflang=\"ja\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/ko/design-patterns/singleton\" hreflang=\"ko\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/pl/design-patterns/singleton\" hreflang=\"pl\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/pt-br/design-patterns/singleton\" hreflang=\"pt-br\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/ru/design-patterns/singleton\" hreflang=\"ru\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/uk/design-patterns/singleton\" hreflang=\"uk\"/>\n    <link rel=\"alternate\" href=\"https://refactoringguru.cn/design-patterns/singleton\" hreflang=\"zh\"/>\n\n    <meta name=\"description\" content=\"Singleton is a creational design pattern that lets you ensure that a class has only one instance, while providing a global access point to this instance.\">\n\n    <link rel=\"canonical\" href=\"https://refactoring.guru/design-patterns/singleton\"/>\n\n    <link rel=\"icon\" type=\"image/x-icon\" href=\"/favicon.png\"/>\n\n        <meta property=\"fb:app_id\" content=\"666819623386327\"/>\n        <meta property=\"og:type\" content=\"website\"/>\n        <meta property=\"og:image\" content=\"https://refactoring.guru/images/refactoring/social/facebook-share-preview.png?id=dbf9e98269595be86eb668f365be6868\"/>\n    \n                    <link rel=\"stylesheet\" href=\"/css/public-packed.min.css?id=aaefab4da343b914b8dda9973604a9e8\">\n        <style type=\"text/css\">\n                    @font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_cyrillic-ext.woff2?1) format(\"woff2\");unicode-range:U+0460-052F,U+1C80-1C88,U+20B4,U+2DE0-2DFF,U+A640-A69F,U+FE2E-FE2F}@font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_cyrillic.woff2?1) format(\"woff2\");unicode-range:U+0400-045F,U+0490-0491,U+04B0-04B1,U+2116}@font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_latin-ext.woff2?1) format(\"woff2\");unicode-range:U+0100-024F,U+0259,U+1E00-1EFF,U+2020,U+20A0-20AB,U+20AD-20CF,U+2113,U+2C60-2C7F,U+A720-A7FF}@font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_latin.woff2?1) format(\"woff2\");unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}@font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_en.woff2?1) format(\"woff2\");unicode-range:U+0-FF,U+131,U+142,U+152,U+153,U+2BB,U+2BC,U+2C6,U+2DA,U+2DC,U+420,U+423,U+430,U+438-43A,U+43D,U+440,U+441,U+443,U+44C,U+457,U+2000-206F,U+2074,U+20AA-20AC,U+20B4,U+20B9,U+20BA,U+20BD,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_cyrillic-ext.woff2?1) format(\"woff2\");unicode-range:U+0460-052F,U+1C80-1C88,U+20B4,U+2DE0-2DFF,U+A640-A69F,U+FE2E-FE2F}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_cyrillic.woff2?1) format(\"woff2\");unicode-range:U+0400-045F,U+0490-0491,U+04B0-04B1,U+2116}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_latin-ext.woff2?1) format(\"woff2\");unicode-range:U+0100-024F,U+0259,U+1E00-1EFF,U+2020,U+20A0-20AB,U+20AD-20CF,U+2113,U+2C60-2C7F,U+A720-A7FF}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_latin.woff2?1) format(\"woff2\");unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_en.woff2?1) format(\"woff2\");unicode-range:U+0-FF,U+131,U+142,U+152,U+153,U+2BB,U+2BC,U+2C6,U+2DA,U+2DC,U+420,U+423,U+430,U+438-43A,U+43D,U+440,U+441,U+443,U+44C,U+457,U+2000-206F,U+2074,U+20AA-20AC,U+20B4,U+20B9,U+20BA,U+20BD,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}\n            </style>\n\n    \n            <script defer src=\"/js/public.min.js?id=1f19fe18ffe0fc844ede8a0f2ee64202\"></script>\n        <script defer src=\"/js/checkout.min.js?id=b4da9c5bd8b1cf504447c07ae8b7cd44\"></script>\n            <script defer src=\"https://cdn.paddle.com/paddle/v2/paddle.js\"></script>\n    <script async src=\"https://www.googletagmanager.com/gtag/js?id=G-SR8Y3GYQYC\"></script>\n\n    <script type=\"application/ld+json\">\n        {\"@context\": \"http://schema.org\", \"@graph\": [{\"@type\":\"Person\",\"@id\":\"https://refactoring.guru/#founder\",\"name\":\"Alexander Shvets\"},{\"@type\":\"Organization\",\"@id\":\"https://refactoring.guru/#organization\",\"name\":\"Refactoring.Guru\",\"description\":\"Refactoring.Guru makes it easy for you to discover everything you need to know about refactoring, design patterns, SOLID principles, and other smart programming topics.\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https://refactoring.guru/#organizationlogo\",\"url\":\"https://refactoring.guru/images/content-public/logos/logo-plain.png\",\"caption\":\"Refactoring.Guru\"},\"logo\":{\"@id\":\"https://refactoring.guru/#organizationlogo\"},\"founder\":{\"@id\":\"https://refactoring.guru/#founder\"},\"sameAs\":[\"https://www.facebook.com/refactoring.guru\",\"https://twitter.com/RefactoringGuru\",\"https://github.com/RefactoringGuru\"]},{\"@type\":\"WebSite\",\"@id\":\"https://refactoring.guru/#website\",\"url\":\"https://refactoring.guru/\",\"name\":\"Refactoring.Guru\",\"description\":\"Refactoring.Guru makes it easy for you to discover everything you need to know about refactoring, design patterns, SOLID principles, and other smart programming topics.\",\"author\":{\"@id\":\"https://refactoring.guru/#founder\"},\"publisher\":{\"@id\":\"https://refactoring.guru/#organization\"},\"copyrightYear\":2014},{\"@type\":\"WebPage\",\"@id\":\"https://refactoring.guru/design-patterns/singleton#webpage\",\"url\":\"https://refactoring.guru/design-patterns/singleton\",\"inLanguage\":\"en\",\"name\":\"Singleton\",\"description\":\"Singleton is a creational design pattern that lets you ensure that a class has only one instance, while providing a global access point to this instance.\",\"isPartOf\":{\"@id\":\"https://refactoring.guru#website\"},\"breadcrumb\":{\"@id\":\"https://refactoring.guru/design-patterns/singleton#breadcrumb\"},\"primaryImageOfPage\":{\"@id\":\"https://refactoring.guru/design-patterns/singleton#primaryimage\"},\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https://refactoring.guru/design-patterns/singleton#primaryimage\",\"url\":\"https://refactoring.guru/images/patterns/content/singleton/singleton-3x.png\",\"width\":1920,\"height\":1200}},{\"@type\":\"Article\",\"@id\":\"https://refactoring.guru/design-patterns/singleton#article\",\"isPartOf\":{\"@id\":\"https://refactoring.guru/design-patterns/singleton#webpage\"},\"mainEntityOfPage\":{\"@id\":\"https://refactoring.guru/design-patterns/singleton#webpage\"},\"author\":{\"@id\":\"https://refactoring.guru#founder\"},\"publisher\":{\"@id\":\"https://refactoring.guru#organization\"},\"headline\":\"Singleton\",\"datePublished\":\"2024-01-01\",\"dateModified\":\"2025-01-01\",\"articleSection\":\"Design Patterns\",\"image\":{\"@id\":\"https://refactoring.guru/design-patterns/singleton#primaryimage\"}},{\"@type\":\"BreadcrumbList\",\"@id\":\"https://refactoring.guru/design-patterns/singleton#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https://refactoring.guru\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Design Patterns\",\"item\":\"https://refactoring.guru/design-patterns\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"Creational Patterns\",\"item\":\"https://refactoring.guru/design-patterns/creational-patterns\"}]}] }\n    </script>\n\n    <script>\nfunction extend(){var extended={};var deep=false;var i=0;var length=arguments[\"length\"];if(Object[\"prototype\"][\"toString\"][\"call\"](arguments[0])=== '[object Boolean]'){deep= arguments[0];i++};var merge=function(obj){for(var prop in obj){if(Object[\"prototype\"][\"hasOwnProperty\"][\"call\"](obj,prop)){if(deep&& Object[\"prototype\"][\"toString\"][\"call\"](obj[prop])=== '[object Object]'){extended[prop]= extend(true,extended[prop],obj[prop])}else {extended[prop]= obj[prop]}}}};for(;i< length;i++){var obj=arguments[i];merge(obj)};return extended}\nfunction defer(method) {if (window.jQuery) {method();} else {setTimeout(function() { defer(method) }, 50);}}\n</script>\n<script>\n+function(sd){sd = (typeof sd === \"string\") ? JSON.parse(atob(sd)) : sd;for(var property in sd){if(window[property]!== null&&  typeof window[property]=== 'object'){window[property]= extend(true,window[property],sd[property])}else {window[property]= sd[property]}}}(\"eyJsb2NhbGUiOiJlbiIsImxvY2FsZV9wcmVmaXgiOiIiLCJsb2NhbGl6ZWRfdXJsX3ByZWZpeCI6Imh0dHBzOlwvXC9yZWZhY3RvcmluZy5ndXJ1XC8iLCJ1cmxfcHJlZml4IjoiaHR0cHM6XC9cL3JlZmFjdG9yaW5nLmd1cnVcLyIsImxvY2FsaXplZF91cmxfcHJlZml4X20iOiJodHRwczpcL1wvcmVmYWN0b3JpbmcuZ3VydVwvIiwidXJsX3ByZWZpeF9tIjoiaHR0cHM6XC9cL3JlZmFjdG9yaW5nLmd1cnVcLyIsInVzZXJfZWNob19hbGlhcyI6InJlZmFjdG9yaW5nIiwidXNlcl9lY2hvX2hvc3QiOiJmZWVkYmFjay5yZWZhY3RvcmluZy5ndXJ1IiwidXNlcl9lY2hvX3ByaXZhdGVfZm9ydW0iOiIyIiwidXNlcl9lY2hvX2xvY2FsZSI6ImVuIiwidXNlcl9lY2hvX3B1YmxpY19mb3J1bSI6IjMiLCJ1c2VyX2VjaG9fcHVibGljX2ZvcnVtX3VybCI6Imh0dHBzOlwvXC9mZWVkYmFjay5yZWZhY3RvcmluZy5ndXJ1XC8iLCJ1c2VyX2VjaG9fc3NvX3Rva2VuIjoiIn0=\");\n</script>\n\n<script>\n    window.dataLayer = window.dataLayer || [];\n    function gtag(){dataLayer.push(arguments);}\n    gtag('js', new Date());\n            gtag('set', 'linker', {'domains': [\"refactoring.guru,refactoringguru.cn\"]});\n        gtag('config', 'G-SR8Y3GYQYC', {\n        // Disable default page view, because we're going to report them on our own.\n        // This is done to report traffic on localized domains as part of the main website traffic\n        // See the Chinese overrides below.\n        send_page_view: false,\n    });\n</script>\n\n<script>\n    (() => {\n        // On first page view after returning from social network, we need to send the social login event.\n        (function detectSocialLogin() {\n            let getCookie = function (name) {\n                var nameEQ = name + \"=\";\n                var ca = document.cookie.split(';');\n                for (var i = 0; i < ca.length; i++) {\n                    var c = ca[i];\n                    while (c.charAt(0) == ' ') c = c.substring(1, c.length);\n                    if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);\n                }\n                return null;\n            };\n            window.social_login_provider = window.social_login_provider || getCookie('social_login_provider');\n            if (window.social_login_provider) {\n                gtag('set', {referrer: null});\n                gtag('event', 'login', {\"method\": window.social_login_provider});\n                // Delete cookie.\n                document.cookie = 'social_login_provider=; Path=/; Max-Age=-99999999;';\n            }\n        })();\n\n        function trackPageView(location, title) {\n            location = location || document.location.href;\n            title = title || document.title;\n\n            // This is show on https://refactoringguru.cn/ and alike.\n            if (typeof window.analytics_path_prefix === 'string') {\n                if (/^(https?:\\/\\/[^\\/]+?)\\/$/.test(location)) {\n                    location = location.replace(/(https?:\\/\\/[^\\/]+?)\\//, '$1' + window.analytics_path_prefix);\n                } else {\n                    location = location.replace(/(https?:\\/\\/[^\\/]+?)\\//, '$1' + window.analytics_path_prefix + '/');\n                }\n                gtag('set', {\n                    'page_location': location\n                });\n            }\n\n            // This is show on https://refactoring.guru/zh/login and alike.\n            if (typeof window.analytics_location_prefix === 'string') {\n                location = location.replace(/(https?:\\/\\/[^\\/]+?)\\//, window.analytics_location_prefix);\n                gtag('set', {\n                    'page_location': location\n                });\n            }\n\n            gtag('event', 'page_view', {\n                page_location: location,\n                page_title: title,\n                locale: window.locale ?? 'en'\n            });\n        }\n\n        if (window.loadContent) {\n            window.onPageLoad = window.onPageLoad || [];\n            window.onPageLoad.push({\n                func: function (context) {\n                    trackPageView(window.location.origin + context.canonicalPath, context.title);\n                },\n                afterAll: true,\n            });\n        }\n        else {\n            trackPageView();\n        }\n    })();\n</script>\n\n\n</head>\n<body class=\"locale-en   announcement   singleton\" data-body_class=\"singleton\">\n\n<div class=\"body-holder\">\n\n            <div class=\"announcement-block announcement-block-summer prom\" data-id=\"DIDP-announcement\" data-creative-id=\"en\" data-position=\"top\">\n        <span class=\"beach-and-sea\">\n            <span class=\"a1\"></span>\n            <span class=\"a2\"><span class=\"wave\"></span></span>\n            <span class=\"yacht\"></span>\n        </span>\n        <a href=\"/store\">\n            <img src=\"/images/content-public/ann/summer/sunbed.svg?id=b1e7314a63715a13870a6bd1a43613f7\" loading=\"lazy\" style=\"width: 32px; height:32px;vertical-align: middle; scale: -1 1 1;\">\n            <span class=\"announcement-link-text\">Summer SALE</span>\n            <img src=\"/images/content-public/ann/summer/reading-book.svg?id=36006ea720df8c171968cf613e8ea164\" loading=\"lazy\" style=\"width: 32px; height:32px;vertical-align: middle;\">\n        </a>\n    </div>\n\n    \n    <div class=\"cart-placeholder\">\n    <div class=\"cart-block-container\" style=\"display:none\">\n        <div class=\"cart-block btn-group\">\n            <a href=\"#checkout\" class=\"btn cart open-checkout\">\n                <span class=\"cart-text\"></span>&nbsp;<strong class=\"cart-total font-money\"></strong>\n            </a><a href=\"#checkout\" class=\"btn btn-secondary checkout open-checkout\"><i class=\"fa fa-shopping-cart\" aria-hidden=\"true\"></i> <span class=\"btn-text-span d-none d-sm-inline-block d-lg-none d-hg-inline-block\"></span></a>\n        </div>\n    </div>\n</div>\n    <main role=\"main\" class=\"main-content top-content center-content \" data-page_class=\"\">\n        <div class=\"main-content-container center-content-container\">\n                        <div class=\"pattern page text\">\n<article>\n    <div class=\"breadcrumb\">\n                                    <a class=\"home\" href=\"/\"><i class=\"fa fa-home\" aria-hidden=\"true\"></i></a>\n                                                / <a class=\"type\" href=\"/design-patterns\">Design Patterns</a>\n                                                / <a class=\"type\" href=\"/design-patterns/creational-patterns\">Creational Patterns</a>\n                        </div>\n    <h1 class=\"title\">Singleton</h1>\n\n    <script type=\"text/javascript\">\n        // Shorten examples titles for users.\n        var h1 = document.getElementsByTagName(\"H1\")[0];\n        if (h1.offsetHeight > 160) {\n            h1.className += ' smaller';\n        }\n\n        // Small beautification for pattern examples.\n        var title = h1.innerHTML;\n        title = title.replace(/^(Java|C\\+\\+|C#|PHP|Python|Ruby|Delphi): (.*)$/, '<strong>$1:</strong> $2');\n        h1.innerHTML = title;\n    </script>\n\n    \n    \n\n    <div class=\"section intent\">\n<h2 id=\"intent\"><i class=\"fa fa-flip-horizontal fa-comment-alt-dots\" aria-hidden=\"true\"></i> Intent</h2>\n<p><strong>Singleton</strong> is a creational design pattern that lets you ensure that a class has only one instance, while providing a global access point to this instance.</p>\n<figure class=\"image\"><img src=\"/images/patterns/content/singleton/singleton.png?id=108a0b9b5ea5c4426e0afa4504491d6f\" alt=\"Singleton pattern\" srcset=\"/images/patterns/content/singleton/singleton.png?id=108a0b9b5ea5c4426e0afa4504491d6f 640w,/images/patterns/content/singleton/singleton-1.5x.png?id=29490ad6cd1426c63cf5f88243a1701c 960w,/images/patterns/content/singleton/singleton-2x.png?id=accb2cc7594f7a491ce01dddf0d2f876 1280w\" sizes=\"(max-width: 720px) 100vw, 640px\" width=\"640\" style=\"aspect-ratio: 1.6;\" fetchpriority=\"high\" /></figure>\n</div>\n<div class=\"section problem\">\n<h2 id=\"problem\"><i class=\"fa fa-frown\" aria-hidden=\"true\"></i> Problem</h2>\n<p>The Singleton pattern solves two problems at the same time, violating the <em>Single Responsibility Principle</em>:</p>\n<ol>\n<li>\n<p><strong>Ensure that a class has just a single instance</strong>. Why would anyone want to control how many instances a class has? The most common reason for this is to control access to some shared resource—for example, a database or a file.</p>\n<p>Here’s how it works: imagine that you created an object, but after a while decided to create a new one. Instead of receiving a fresh object, you’ll get the one you already created.</p>\n<p>Note that this behavior is impossible to implement with a regular constructor since a constructor call <strong>must</strong> always return a new object by design.</p>\n</li>\n</ol>\n<figure class=\"image\"><img src=\"/images/patterns/content/singleton/singleton-comic-1-en.png?id=157509c5693a657ba465c7a9d58a7c25\" alt=\"The global access to an object\" srcset=\"/images/patterns/content/singleton/singleton-comic-1-en.png?id=157509c5693a657ba465c7a9d58a7c25 600w,/images/patterns/content/singleton/singleton-comic-1-en-1.5x.png?id=a7b61d84c09d0d8d23bc2df0ec1af0bb 900w,/images/patterns/content/singleton/singleton-comic-1-en-2x.png?id=05678e879d13f7f6a377bab7fba18acc 1200w\" sizes=\"(max-width: 720px) 100vw, 600px\" width=\"600\" style=\"aspect-ratio: 2;\" loading=\"lazy\" /><figcaption>\n<p>Clients may not even realize that they’re working with the same object all the time.</p>\n</figcaption></figure>\n<ol start=\"2\">\n<li>\n<p><strong>Provide a global access point to that instance</strong>. Remember those global variables that you (all right, me) used to store some essential objects? While they’re very handy, they’re also very unsafe since any code can potentially overwrite the contents of those variables and crash the app.</p>\n<p>Just like a global variable, the Singleton pattern lets you access some object from anywhere in the program. However, it also protects that instance from being overwritten by other code.</p>\n<p>There’s another side to this problem: you don’t want the code that solves problem #1 to be scattered all over your program. It’s much better to have it within one class, especially if the rest of your code already depends on it.</p>\n</li>\n</ol>\n<p>Nowadays, the Singleton pattern has become so popular that people may call something a <em>singleton</em> even if it solves just one of the listed problems.</p>\n</div>\n<div class=\"section solution\">\n<h2 id=\"solution\"><i class=\"fa fa-smile-beam\" aria-hidden=\"true\"></i> Solution</h2>\n<p>All implementations of the Singleton have these two steps in common:</p>\n<ul>\n<li>Make the default constructor private, to prevent other objects from using the <code>new</code> operator with the Singleton class.</li>\n<li>Create a static creation method that acts as a constructor. Under the hood, this method calls the private constructor to create an object and saves it in a static field. All following calls to this method return the cached object.</li>\n</ul>\n<p>If your code has access to the Singleton class, then it’s able to call the Singleton’s static method. So whenever that method is called, the same object is always returned.</p>\n</div>\n<div class=\"section analogy\">\n<h2 id=\"analogy\"><i class=\"fa fa-car-side\" aria-hidden=\"true\"></i> Real-World Analogy</h2>\n<p>The government is an excellent example of the Singleton pattern. A country can have only one official government. Regardless of the personal identities of the individuals who form governments, the title, “The Government of X”, is a global point of access that identifies the group of people in charge.</p>\n</div>\n<div class=\"section structure-container\">\n<h2 id=\"structure\"><i class=\"fa fa-sitemap\" aria-hidden=\"true\"></i> Structure</h2>\n<div class=\"structure\">\n<div class=\"struct-image1 struct-image\">\n<figure class=\"image\"><img class=\"structure-img-non-indexed d-none d-xl-block\" src=\"/images/patterns/diagrams/singleton/structure-en.png?id=4e4306d3a90f40d74c7a4d2d2506b8ec\" alt=\"The structure of the Singleton pattern\" srcset=\"/images/patterns/diagrams/singleton/structure-en.png?id=4e4306d3a90f40d74c7a4d2d2506b8ec 430w,/images/patterns/diagrams/singleton/structure-en-1.5x.png?id=91bf9c0046139f46d5f484fefabf67fc 645w,/images/patterns/diagrams/singleton/structure-en-2x.png?id=cae4853e43f06db09f249668c35d61a1 860w\" sizes=\"(max-width: 720px) 100vw, 430px\" width=\"430\" style=\"aspect-ratio: 1.48;\" loading=\"lazy\" /><img class=\"structure-img-indexed d-xl-none\" src=\"/images/patterns/diagrams/singleton/structure-en-indexed.png?id=b0217ae066cd3b757677d119551f9a8f\" alt=\"The structure of the Singleton pattern\" srcset=\"/images/patterns/diagrams/singleton/structure-en-indexed.png?id=b0217ae066cd3b757677d119551f9a8f 430w,/images/patterns/diagrams/singleton/structure-en-indexed-1.5x.png?id=2ff28af0464f779f92c0d6056ebeb078 645w,/images/patterns/diagrams/singleton/structure-en-indexed-2x.png?id=d552220be21d0eda3a8cbe5ccec6dad1 860w\" sizes=\"(max-width: 720px) 100vw, 430px\" width=\"430\" style=\"aspect-ratio: 1.48;\" loading=\"lazy\" /></figure>\n</div>\n<ol><li class=\"struct-li1\">\n<p>The <strong>Singleton</strong> class declares the static method <code>getInstance</code> that returns the same instance of its own class.</p>\n<p>The Singleton’s constructor should be hidden from the client code. Calling the <code>getInstance</code> method should be the only way of getting the Singleton object.</p>\n</li></ol>\n<style structure type=\"text/css\" >\n@media (min-width: 1200px) {\n.structure {\nmargin: 0;\nwidth: auto;\nheight: 380px;\n}\n\n.struct-image1 {\nleft: 180px;\ntop: 20px;\n}\n\n.struct-li1 {\nleft: 0px;\ntop: 170px;\nwidth: 310px;\n}\n\n}\n\n</style>\n</div></div>\n<div class=\"section pseudocode\">\n<h2 id=\"pseudocode\"><i class=\"fa fa-hashtag\" aria-hidden=\"true\"></i> Pseudocode</h2>\n<p>In this example, the database connection class acts as a <strong>Singleton</strong>. This class doesn’t have a public constructor, so the only way to get its object is to call the <code>getInstance</code> method. This method caches the first created object and returns it in all subsequent calls.</p>\n<figure class=\"code\">\n<pre class=\"code\" lang=\"pseudocode\">// The Database class defines the `getInstance` method that lets\n// clients access the same instance of a database connection\n// throughout the program.\nclass Database is\n    // The field for storing the singleton instance should be\n    // declared static.\n    private static field instance: Database\n\n    // The singleton's constructor should always be private to\n    // prevent direct construction calls with the `new`\n    // operator.\n    private constructor Database() is\n        // Some initialization code, such as the actual\n        // connection to a database server.\n        // ...\n\n    // The static method that controls access to the singleton\n    // instance.\n    public static method getInstance() is\n        if (Database.instance == null) then\n            acquireThreadLock() and then\n                // Ensure that the instance hasn't yet been\n                // initialized by another thread while this one\n                // has been waiting for the lock's release.\n                if (Database.instance == null) then\n                    Database.instance = new Database()\n        return Database.instance\n\n    // Finally, any singleton should define some business logic\n    // which can be executed on its instance.\n    public method query(sql) is\n        // For instance, all database queries of an app go\n        // through this method. Therefore, you can place\n        // throttling or caching logic here.\n        // ...\n\nclass Application is\n    method main() is\n        Database foo = Database.getInstance()\n        foo.query(&quot;SELECT ...&quot;)\n        // ...\n        Database bar = Database.getInstance()\n        bar.query(&quot;SELECT ...&quot;)\n        // The variable `bar` will contain the same object as\n        // the variable `foo`.\n</pre>\n</figure>\n</div>\n<div class=\"section applicability-container\">\n<h2 id=\"applicability\"><i class=\"fa fa-lightbulb-on\" aria-hidden=\"true\"></i> Applicability</h2>\n<div class=\"applicability\">\n<div class=\"applicability-problem\">\n<p><i class=\"fa fa-fw fa-bug\" aria-hidden=\"true\"></i> Use the Singleton pattern when a class in your program should have just a single instance available to all clients; for example, a single database object shared by different parts of the program.</p>\n</div><div class=\"applicability-solution\">\n<p><i class=\"fa fa-fw fa-bolt\" aria-hidden=\"true\"></i> The Singleton pattern disables all other means of creating objects of a class except for the special creation method. This method either creates a new object or returns an existing one if it has already been created.</p>\n</div>\n<div class=\"applicability-problem\">\n<p><i class=\"fa fa-fw fa-bug\" aria-hidden=\"true\"></i> Use the Singleton pattern when you need stricter control over global variables.</p>\n</div><div class=\"applicability-solution\">\n<p><i class=\"fa fa-fw fa-bolt\" aria-hidden=\"true\"></i> Unlike global variables, the Singleton pattern guarantees that there’s just one instance of a class. Nothing, except for the Singleton class itself, can replace the cached instance.</p>\n<p>Note that you can always adjust this limitation and allow creating any number of Singleton instances. The only piece of code that needs changing is the body of the <code>getInstance</code> method.</p>\n</div>\n</div></div>\n<div class=\"section checklist\">\n<h2 id=\"checklist\"><i class=\"fa fa-clipboard-list-check\" aria-hidden=\"true\"></i> How to Implement</h2>\n<ol>\n<li>\n<p>Add a private static field to the class for storing the singleton instance.</p>\n</li>\n<li>\n<p>Declare a public static creation method for getting the singleton instance.</p>\n</li>\n<li>\n<p>Implement “lazy initialization” inside the static method. It should create a new object on its first call and put it into the static field. The method should always return that instance on all subsequent calls.</p>\n</li>\n<li>\n<p>Make the constructor of the class private. The static method of the class will still be able to call the constructor, but not the other objects.</p>\n</li>\n<li>\n<p>Go over the client code and replace all direct calls to the singleton’s constructor with calls to its static creation method.</p>\n</li>\n</ol>\n</div>\n<div class=\"section pros-cons\">\n<h2 id=\"pros-cons\"><i class=\"fa fa-balance-scale\" aria-hidden=\"true\"></i> Pros and Cons</h2>\n<div class=\"row\"><div class=\"col-sm-6\">\n<ul>\n<li><i class=\"fa fa-fw fa-check\" aria-hidden=\"true\"></i> You can be sure that a class has only a single instance.</li>\n<li><i class=\"fa fa-fw fa-check\" aria-hidden=\"true\"></i> You gain a global access point to that instance.</li>\n<li><i class=\"fa fa-fw fa-check\" aria-hidden=\"true\"></i> The singleton object is initialized only when it’s requested for the first time.</li>\n</ul>\n</div><div class=\"col-sm-6\">\n<ul>\n<li><i class=\"fa fa-fw fa-times\" aria-hidden=\"true\"></i> Violates the <em>Single Responsibility Principle</em>. The pattern solves two problems at the time.</li>\n<li><i class=\"fa fa-fw fa-times\" aria-hidden=\"true\"></i> The Singleton pattern can mask bad design, for instance, when the components of the program know too much about each other.</li>\n<li><i class=\"fa fa-fw fa-times\" aria-hidden=\"true\"></i> The pattern requires special treatment in a multithreaded environment so that multiple threads won’t create a singleton object several times.</li>\n<li><i class=\"fa fa-fw fa-times\" aria-hidden=\"true\"></i> It may be difficult to unit test the client code of the Singleton because many test frameworks rely on inheritance when producing mock objects. Since the constructor of the singleton class is private and overriding static methods is impossible in most languages, you will need to think of a creative way to mock the singleton. Or just don’t write the tests. Or don’t use the Singleton pattern.</li>\n</ul>\n</div></div></div>\n<div class=\"section relations\">\n<h2 id=\"relations\"><i class=\"fa fa-exchange-alt\" aria-hidden=\"true\"></i> Relations with Other Patterns</h2>\n<ul>\n<li>\n<p>A <a href=\"/design-patterns/facade\">Facade</a> class can often be transformed into a <a href=\"/design-patterns/singleton\">Singleton</a> since a single facade object is sufficient in most cases.</p>\n</li>\n<li>\n<p><a href=\"/design-patterns/flyweight\">Flyweight</a> would resemble <a href=\"/design-patterns/singleton\">Singleton</a> if you somehow managed to reduce all shared states of the objects to just one flyweight object. But there are two fundamental differences between these patterns:</p>\n<ol>\n<li>There should be only one Singleton instance, whereas a <em>Flyweight</em> class can have multiple instances with different intrinsic states.</li>\n<li>The <em>Singleton</em> object can be mutable. Flyweight objects are immutable.</li>\n</ol>\n</li>\n<li>\n<p><a href=\"/design-patterns/abstract-factory\">Abstract Factories</a>, <a href=\"/design-patterns/builder\">Builders</a> and <a href=\"/design-patterns/prototype\">Prototypes</a> can all be implemented as <a href=\"/design-patterns/singleton\">Singletons</a>.</p>\n</li>\n</ul>\n</div>\n<div class=\"section implementations\">\n<h2 id=\"implementations\"><i class=\"fa fa-code\" aria-hidden=\"true\"></i> Code Examples</h2>\n<p><a href=\"/design-patterns/singleton/csharp/example\" title=\"Singleton in C#\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/csharp.svg?id=da64592defc6e86d57c39c66e9de3e58\" alt=\"Singleton in C#\" /></a>\n<a href=\"/design-patterns/singleton/cpp/example\" title=\"Singleton in C++\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/cpp.svg?id=f7782ed8b8666246bfcc3f8fefc3b858\" alt=\"Singleton in C++\" /></a>\n<a href=\"/design-patterns/singleton/go/example\" title=\"Singleton in Go\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/go.svg?id=1a89927eb99b1ea3fde7701d97970aca\" alt=\"Singleton in Go\" /></a>\n<a href=\"/design-patterns/singleton/java/example\" title=\"Singleton in Java\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/java.svg?id=e6d87e2dca08c953fe3acd1275ed4f4e\" alt=\"Singleton in Java\" /></a>\n<a href=\"/design-patterns/singleton/php/example\" title=\"Singleton in PHP\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/php.svg?id=be1906eb26b71ec1d3b93720d6156618\" alt=\"Singleton in PHP\" /></a>\n<a href=\"/design-patterns/singleton/python/example\" title=\"Singleton in Python\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/python.svg?id=6d815d43c0f7050a1151b43e51569c9f\" alt=\"Singleton in Python\" /></a>\n<a href=\"/design-patterns/singleton/ruby/example\" title=\"Singleton in Ruby\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/ruby.svg?id=b065b718c914bf8e960ef731600be1eb\" alt=\"Singleton in Ruby\" /></a>\n<a href=\"/design-patterns/singleton/rust/example\" title=\"Singleton in Rust\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/rust.svg?id=1f5698a4b5ae23fe79413511747e4a87\" alt=\"Singleton in Rust\" /></a>\n<a href=\"/design-patterns/singleton/swift/example\" title=\"Singleton in Swift\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/swift.svg?id=0b716c2d52ec3a48fbe91ac031070c1d\" alt=\"Singleton in Swift\" /></a>\n<a href=\"/design-patterns/singleton/typescript/example\" title=\"Singleton in TypeScript\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/typescript.svg?id=2239d0f16cb703540c205dd8cb0c0cb7\" alt=\"Singleton in TypeScript\" /></a></p>\n</div>\n\n\n    <div class=\"banner-set2\" id=\"book-promo\">\n            <div class=\"prom banner-content banner-bg banner-striped banner-with-image\" data-id=\"DP: 1: Support our free website and own the eBook!\" data-creative-id=\"standard-en\" data-position=\"content_bottom\">\n                <div class=\"banner-image\">\n                    <a href=\"/design-patterns/book\">\n                        <img width=\"200\" height=\"200\" loading=\"lazy\" src=\"/images/patterns/banners/patterns-book-banner-3.png?id=7d445df13c80287beaab234b4f3b698c\" srcset=\"/images/patterns/banners/patterns-book-banner-3-2x.png?id=0cc3f77ab421d1a5c02ee46488231c3a 2x\">\n                    </a>\n                </div>\n\n                <div class=\"banner-text\">\n                    <h3 class=\"title\">Support our free website and own the eBook!</h3>\n                    <ul style=\"font-size: 14px;\">\n                        <li style=\"margin: 0;\">22 design patterns and 8 principles explained in depth.</li>\n                        <li style=\"margin: 0;\">409 well-structured, easy to read, jargon-free pages.</li>\n                        <li style=\"margin: 0;\">225 clear and helpful illustrations and diagrams.</li>\n                        <li style=\"margin: 0;\">An archive with code examples in 11 languages.</li>\n                        <li style=\"margin: 0;\">All devices supported: PDF/EPUB/MOBI/KFX formats.</li>\n                    </ul>\n                    <a class=\"btn btn-secondary\" href=\"/design-patterns/book\"><i class=\"fa fa-book\" aria-hidden=\"true\"></i> Learn more…</a>\n                </div>\n            </div>\n        </div>\n\n    </article>\n\n<nav class=\"prev-next\">\n                    <div class=\"next\">\n                <h4>Read next</h4>\n                <a rel=\"next\" href=\"/design-patterns/structural-patterns\" class=\"btn btn-primary\">Structural Patterns&nbsp;<span class=\"fa fa-arrow-right\"></span></a>\n            </div>\n                            <div class=\"prev\">\n                <h4>Return</h4>\n                <a rel=\"prev\" href=\"/design-patterns/prototype\" class=\"btn btn-default\"><span class=\"fa fa-arrow-left\"></span>&nbsp;Prototype </a>\n            </div>\n            </nav>\n</div>\n\n<aside class=\"feature content-secondary\">\n    <div class=\"prom banner-sidebar banner-removable banner-removable-patterns\" data-id=\"DP: Sidebar\" data-creative-id=\"standard-sidebar-en\" data-position=\"sidebar\">\n        <div class=\"banner-inner\">\n            <div class=\"image3d-book-right\">\n                <div class=\"image3d-cover\" style=\"background: #0b3752;\">\n                    <a href=\"/design-patterns/book\">\n                        <img width=\"250\" height=\"375\" loading=\"lazy\" src=\"/images/patterns/book/web-cover-en.png?id=328861769fd11617674e3b8a7e2dd9e7\" srcset=\"/images/patterns/book/web-cover-en-2x.png?id=02940141c5652ed5a426d87390b16366 2x\">\n                    </a>\n                </div>\n            </div>\n            <div style=\"margin-top: 1rem\">\n                <p class=\"text-center\" >This article is a part of our eBook<br/><strong>Dive Into Design Patterns</strong>.</p>\n                <a href=\"/design-patterns/book\" class=\"btn btn-secondary btn-block\"><i class=\"fa fa-book\" aria-hidden=\"true\"></i> Learn more…</a>\n            </div>\n        </div>\n    </div>\n\n\n</aside>\n                    </div>\n    </main>\n\n    <aside class=\"sidebar main-menu\">\n    <div class=\"main-menu-controls\">\n        <button class=\"navigation-toggle\"><i class=\"fa fa-fw fa-times\"></i></button>\n    </div>\n    <div class=\"main-menu-list-wrapper nano\">\n        <div class=\"main-menu-list nano-content\">\n            <a class=\"menu-brand\" href=\"/\">\n                                    <img width=200 height=241 loading=\"lazy\" alt=\"Refactoring.Guru\" src=\"/images/content-public/logos/logo-new.png?id=97d554614702483f31e38b32e82d8e34\" srcset=\"/images/content-public/logos/logo-new-2x.png?id=3bc33294e095bab1d6fe9ae421d07837 2x\">\n                            </a>\n\n            <div class=\"menu-container\" style=\"position: relative\">\n                                <ul class=\"menu-list trail\">\n                            <li class=\"featured\">\n            <a href=\"/store\">\n                <i class=\"fa fa-fw fa-star\" aria-hidden=\"true\"></i> Premium Content\n            </a>\n    \n            <ul >\n                            <li class=\"featured menu-fs15\">\n            <a href=\"/design-patterns/book\">\n                <i class=\"fa fa-fw fa-book\" aria-hidden=\"true\"></i> Design Patterns eBook\n            </a>\n    \n    \n            </li>\n                                <li class=\"featured menu-fs15\">\n            <a href=\"/refactoring/course\">\n                <i class=\"fa fa-fw fa-graduation-cap\" aria-hidden=\"true\"></i> Refactoring Course\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring\">\n                <i class=\"fa fa-fw fa-scissors\" aria-hidden=\"true\"></i> Refactoring\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/refactoring/what-is-refactoring\">\n                What is Refactoring\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/refactoring/what-is-refactoring\">\n                Clean code\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/technical-debt\">\n                Technical debt\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/when\">\n                When to refactor\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/how-to\">\n                How to refactor\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/catalog\">\n                Catalog\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells\">\n                Code Smells\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/refactoring/smells/bloaters\">\n                Bloaters\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/long-method\">\n                Long Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/large-class\">\n                Large Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/primitive-obsession\">\n                Primitive Obsession\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/long-parameter-list\">\n                Long Parameter List\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/data-clumps\">\n                Data Clumps\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/oo-abusers\">\n                Object-Orientation Abusers\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/switch-statements\">\n                Switch Statements\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/temporary-field\">\n                Temporary Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/refused-bequest\">\n                Refused Bequest\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/alternative-classes-with-different-interfaces\">\n                Alternative Classes with Different Interfaces\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/change-preventers\">\n                Change Preventers\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/divergent-change\">\n                Divergent Change\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/shotgun-surgery\">\n                Shotgun Surgery\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/parallel-inheritance-hierarchies\">\n                Parallel Inheritance Hierarchies\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/dispensables\">\n                Dispensables\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/comments\">\n                Comments\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/duplicate-code\">\n                Duplicate Code\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/lazy-class\">\n                Lazy Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/data-class\">\n                Data Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/dead-code\">\n                Dead Code\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/speculative-generality\">\n                Speculative Generality\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/couplers\">\n                Couplers\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/feature-envy\">\n                Feature Envy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/inappropriate-intimacy\">\n                Inappropriate Intimacy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/message-chains\">\n                Message Chains\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/middle-man\">\n                Middle Man\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/other\">\n                Other Smells\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/incomplete-library-class\">\n                Incomplete Library Class\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques\">\n                Refactorings\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/refactoring/techniques/composing-methods\">\n                Composing Methods\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/extract-method\">\n                Extract Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/inline-method\">\n                Inline Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-variable\">\n                Extract Variable\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/inline-temp\">\n                Inline Temp\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-temp-with-query\">\n                Replace Temp with Query\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/split-temporary-variable\">\n                Split Temporary Variable\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-assignments-to-parameters\">\n                Remove Assignments to Parameters\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-method-with-method-object\">\n                Replace Method with Method Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/substitute-algorithm\">\n                Substitute Algorithm\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/moving-features-between-objects\">\n                Moving Features between Objects\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/move-method\">\n                Move Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/move-field\">\n                Move Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-class\">\n                Extract Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/inline-class\">\n                Inline Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/hide-delegate\">\n                Hide Delegate\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-middle-man\">\n                Remove Middle Man\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-foreign-method\">\n                Introduce Foreign Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-local-extension\">\n                Introduce Local Extension\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/organizing-data\">\n                Organizing Data\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/self-encapsulate-field\">\n                Self Encapsulate Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-data-value-with-object\">\n                Replace Data Value with Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/change-value-to-reference\">\n                Change Value to Reference\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/change-reference-to-value\">\n                Change Reference to Value\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-array-with-object\">\n                Replace Array with Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/duplicate-observed-data\">\n                Duplicate Observed Data\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/change-unidirectional-association-to-bidirectional\">\n                Change Unidirectional Association to Bidirectional\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/change-bidirectional-association-to-unidirectional\">\n                Change Bidirectional Association to Unidirectional\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-magic-number-with-symbolic-constant\">\n                Replace Magic Number with Symbolic Constant\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/encapsulate-field\">\n                Encapsulate Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/encapsulate-collection\">\n                Encapsulate Collection\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-type-code-with-class\">\n                Replace Type Code with Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-type-code-with-subclasses\">\n                Replace Type Code with Subclasses\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-type-code-with-state-strategy\">\n                Replace Type Code with State/Strategy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-subclass-with-fields\">\n                Replace Subclass with Fields\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/simplifying-conditional-expressions\">\n                Simplifying Conditional Expressions\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/decompose-conditional\">\n                Decompose Conditional\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/consolidate-conditional-expression\">\n                Consolidate Conditional Expression\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/consolidate-duplicate-conditional-fragments\">\n                Consolidate Duplicate Conditional Fragments\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-control-flag\">\n                Remove Control Flag\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-nested-conditional-with-guard-clauses\">\n                Replace Nested Conditional with Guard Clauses\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-conditional-with-polymorphism\">\n                Replace Conditional with Polymorphism\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-null-object\">\n                Introduce Null Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-assertion\">\n                Introduce Assertion\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/simplifying-method-calls\">\n                Simplifying Method Calls\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/rename-method\">\n                Rename Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/add-parameter\">\n                Add Parameter\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-parameter\">\n                Remove Parameter\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/separate-query-from-modifier\">\n                Separate Query from Modifier\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/parameterize-method\">\n                Parameterize Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-parameter-with-explicit-methods\">\n                Replace Parameter with Explicit Methods\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/preserve-whole-object\">\n                Preserve Whole Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-parameter-with-method-call\">\n                Replace Parameter with Method Call\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-parameter-object\">\n                Introduce Parameter Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-setting-method\">\n                Remove Setting Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/hide-method\">\n                Hide Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-constructor-with-factory-method\">\n                Replace Constructor with Factory Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-error-code-with-exception\">\n                Replace Error Code with Exception\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-exception-with-test\">\n                Replace Exception with Test\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/dealing-with-generalization\">\n                Dealing with Generalization\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/pull-up-field\">\n                Pull Up Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/pull-up-method\">\n                Pull Up Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/pull-up-constructor-body\">\n                Pull Up Constructor Body\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/push-down-method\">\n                Push Down Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/push-down-field\">\n                Push Down Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-subclass\">\n                Extract Subclass\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-superclass\">\n                Extract Superclass\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-interface\">\n                Extract Interface\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/collapse-hierarchy\">\n                Collapse Hierarchy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/form-template-method\">\n                Form Template Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-inheritance-with-delegation\">\n                Replace Inheritance with Delegation\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-delegation-with-inheritance\">\n                Replace Delegation with Inheritance\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"trail\">\n            <a href=\"/design-patterns\">\n                <i class=\"fa fa-fw fa-puzzle-piece\" aria-hidden=\"true\"></i> Design Patterns\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/what-is-pattern\">\n                What is a Pattern\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/what-is-pattern\">\n                What's a design pattern?\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/history\">\n                History of patterns\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/why-learn-patterns\">\n                Why should I learn patterns?\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/criticism\">\n                Criticism of patterns\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/classification\">\n                Classification of patterns\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/catalog\">\n                Catalog\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-third-level trail\">\n            <a href=\"/design-patterns/creational-patterns\">\n                Creational Patterns\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/factory-method\">\n                Factory Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/abstract-factory\">\n                Abstract Factory\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/builder\">\n                Builder\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/prototype\">\n                Prototype\n            </a>\n    \n    \n            </li>\n                                <li class=\"trail active\">\n            <a href=\"/design-patterns/singleton\">\n                Singleton\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"menu-third-level\">\n            <a href=\"/design-patterns/structural-patterns\">\n                Structural Patterns\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/adapter\">\n                Adapter\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/bridge\">\n                Bridge\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/composite\">\n                Composite\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/decorator\">\n                Decorator\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/facade\">\n                Facade\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/flyweight\">\n                Flyweight\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/proxy\">\n                Proxy\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"menu-third-level\">\n            <a href=\"/design-patterns/behavioral-patterns\">\n                Behavioral Patterns\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/chain-of-responsibility\">\n                Chain of Responsibility\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/command\">\n                Command\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/iterator\">\n                Iterator\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/mediator\">\n                Mediator\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/memento\">\n                Memento\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/observer\">\n                Observer\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/state\">\n                State\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/strategy\">\n                Strategy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/template-method\">\n                Template Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/visitor\">\n                Visitor\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"menu-code-examples\">\n            <a href=\"/design-patterns/examples\">\n                Code Examples\n            </a>\n    \n            <ul >\n                            <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/csharp\">\n                C#\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/cpp\">\n                C++\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/go\">\n                Go\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/java\">\n                Java\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/php\">\n                PHP\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/python\">\n                Python\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/ruby\">\n                Ruby\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/rust\">\n                Rust\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/swift\">\n                Swift\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/typescript\">\n                TypeScript\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n                </div>\n\n            <div class=\"main-menu-aux-controls\">\n                <a href=\"https://refactoring.guru/login\" title=\"Sign in\" style=\" display: inline-flex; align-items: center; gap: 6px; \"><svg style=\"width: 16px; height: 16px; filter:drop-shadow(0 1px 1px #74261e)\" class=\"inline-block mx-0\"  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\"opacity=\"0.4\" d=\"M352.7 222.4c3.2 1 6.5 1.6 10 1.6l21.3 0c17.7 0 32 14.3 32 32s-14.3 32-32 32l-21.3 0c-.8 0-1.7 0-2.5 0c-.9 0-1.7-.1-2.5-.1c-1.7-.1-3.4-.2-5-.4C357.4 414 391.1 512 432 512c44.2 0 80-114.6 80-256S476.2 0 432 0c-40.6 0-74.2 96.9-79.3 222.4z\"/><path fill=\"currentColor\"class=\"fa-primary\" d=\"M320 48a48 48 0 1 0 -96 0 48 48 0 1 0 96 0zM125.7 175.5c9.9-9.9 23.4-15.5 37.5-15.5c1.9 0 3.8 .1 5.6 .3L137.6 254c-9.3 28 1.7 58.8 26.8 74.5l86.2 53.9-25.4 88.8c-4.9 17 5 34.7 22 39.6s34.7-5 39.6-22l28.7-100.4c5.9-20.6-2.6-42.6-20.7-53.9L238 299l30.9-82.4 5.1 12.3C289 264.7 323.9 288 362.7 288l21.3 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-21.3 0c-12.9 0-24.6-7.8-29.5-19.7l-6.3-15c-14.6-35.1-44.1-61.9-80.5-73.1l-48.7-15c-11.1-3.4-22.7-5.2-34.4-5.2c-31 0-60.8 12.3-82.7 34.3L57.4 153.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l23.1-23.1zM91.2 352L32 352c-17.7 0-32 14.3-32 32s14.3 32 32 32l69.6 0c19 0 36.2-11.2 43.9-28.5L157 361.6l-9.5-6c-17.5-10.9-30.5-26.8-37.9-44.9L91.2 352z\"/></svg> Sign in</a>\n                <a href=\"https://feedback.refactoring.guru/\" class=\"userecho-public\" rel=\"nofollow\" title=\"Contact us\"><i class=\"fa fa-fw fa-fw fa-envelope\" aria-hidden=\"true\"></i> Contact us</a>\n            </div>\n        </div>\n    </div>\n</aside>\n\n    <nav class=\"navigation\" role=\"navigation\">\n    <div class=\"navigation-container\">\n        <a class=\"navigation-brand\" href=\"/\">\n            <img alt=\"Refactoring.Guru\"\n                 src=\"/images/content-public/logos/logo-new-mobile.png?id=ea18aa9b032eaa92835ed6d472b03b4a\"\n                 srcset=\"/images/content-public/logos/logo-new-mobile-2x.png?id=7ad5648bfd86ae2e8524147a72877c64 2x\">\n        </a>\n\n        <div class=\"shop-link d-none d-lg-block\" style=\"display: none !important;\">\n            <a class=\"btn btn-md btn-primary btn-featured\" href=\"/store\"><svg style=\"width: 28px; height: 28px; fill: currentColor; display: inline-block; margin-top: -14px;\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><!--! Font Awesome Pro 6.3.0 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2023 Fonticons, Inc. --><path d=\"M356 60l60 20-60 20-20 60-20-60L256 80l60-20L336 0l20 60zM464 208l48 16-48 16-16 48-16-48-48-16 48-16 16-48 16 48zm-243.8-9.8l33 66.9 73.8 10.7 59.8 8.7-43.3 42.2-53.4 52.1 12.6 73.5L313 512l-53.5-28.1-66-34.7-66 34.7L73.9 512l10.2-59.6 12.6-73.5L43.3 326.8 0 284.6l59.8-8.7 73.8-10.7 33-66.9L193.5 144l26.8 54.2zm26.1 114.4l-25-3.6-11.2-22.6-16.7-33.9-16.7 33.9L165.6 309l-25 3.6-37.4 5.4 27.1 26.4 18.1 17.6L144 387l-6.4 37.3 33.5-17.6 22.3-11.7 22.3 11.7 33.5 17.6L242.9 387l-4.3-24.9 18.1-17.6 27.1-26.4-37.4-5.4z\"/></svg>\n                Shop Now!</a>\n        </div>\n\n        <ul class=\"navigation-menu\">\n                            <li class=\"nav-locale dropdown dropdown-locales\">\n                    <button class=\"dropdown-toggle\" id=\"dropdownLanguage\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                        <i class=\"fa fa-fw fa-globe\" aria-hidden=\"true\"></i> <span class=\"caption d-none d-lg-inline-block\">English</span>\n                    </button>\n                    <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownLanguage\">\n                                                                                                                        <a href=\"https://refactoring.guru/design-patterns/singleton\" class=\"dropdown-item locale-link active\" data-locale=\"en\" title=\"English\">English</a>\n                                                                                                                                <a href=\"https://refactoring.guru/es/design-patterns/singleton\" class=\"dropdown-item locale-link \" data-locale=\"es\" title=\"Español\">Español</a>\n                                                                                                                                <a href=\"https://refactoring.guru/fr/design-patterns/singleton\" class=\"dropdown-item locale-link \" data-locale=\"fr\" title=\"Français\">Français</a>\n                                                                                                                                <a href=\"https://refactoring.guru/ja/design-patterns/singleton\" class=\"dropdown-item locale-link \" data-locale=\"ja\" title=\"日本語\">日本語</a>\n                                                                                                                                <a href=\"https://refactoring.guru/ko/design-patterns/singleton\" class=\"dropdown-item locale-link \" data-locale=\"ko\" title=\"한국어\">한국어</a>\n                                                                                                                                <a href=\"https://refactoring.guru/pl/design-patterns/singleton\" class=\"dropdown-item locale-link \" data-locale=\"pl\" title=\"Polski\">Polski</a>\n                                                                                                                                <a href=\"https://refactoring.guru/pt-br/design-patterns/singleton\" class=\"dropdown-item locale-link \" data-locale=\"pt-br\" title=\"Português Brasileiro\">Português Brasileiro</a>\n                                                                                                                                <a href=\"https://refactoring.guru/ru/design-patterns/singleton\" class=\"dropdown-item locale-link \" data-locale=\"ru\" title=\"Русский\">Русский</a>\n                                                                                                                                <a href=\"https://refactoring.guru/uk/design-patterns/singleton\" class=\"dropdown-item locale-link \" data-locale=\"uk\" title=\"Українська\">Українська</a>\n                                                                                                                                <a href=\"https://refactoringguru.cn/design-patterns/singleton\" class=\"dropdown-item locale-link \" data-locale=\"zh\" title=\"中文\">中文</a>\ndiv>\n                </li>\n                        <li class=\"nav-contacts\">\n                <a class=\"userecho-private\" href=\"https://feedback.refactoring.guru/?show_feedback_form_private=true\" rel=\"nofollow\" title=\"Contact us\">\n                    <i class=\"fa fa-fw fa-envelope\" aria-hidden=\"true\"></i> <span class=\"caption d-none d-xl-inline-block\">Contact us</span>\n                </a>\n            </li>\n                            <li class=\"nav-user\">\n                    <a href=\"https://refactoring.guru/login\" title=\"Sign in\"><span class=\"sign-in-icon\"><svg style=\"width: 24px; height: 24px; \" class=\"inline-block \"  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\"opacity=\"0.4\" d=\"M352.7 222.4c3.2 1 6.5 1.6 10 1.6l21.3 0c17.7 0 32 14.3 32 32s-14.3 32-32 32l-21.3 0c-.8 0-1.7 0-2.5 0c-.9 0-1.7-.1-2.5-.1c-1.7-.1-3.4-.2-5-.4C357.4 414 391.1 512 432 512c44.2 0 80-114.6 80-256S476.2 0 432 0c-40.6 0-74.2 96.9-79.3 222.4z\"/><path fill=\"currentColor\"class=\"fa-primary\" d=\"M320 48a48 48 0 1 0 -96 0 48 48 0 1 0 96 0zM125.7 175.5c9.9-9.9 23.4-15.5 37.5-15.5c1.9 0 3.8 .1 5.6 .3L137.6 254c-9.3 28 1.7 58.8 26.8 74.5l86.2 53.9-25.4 88.8c-4.9 17 5 34.7 22 39.6s34.7-5 39.6-22l28.7-100.4c5.9-20.6-2.6-42.6-20.7-53.9L238 299l30.9-82.4 5.1 12.3C289 264.7 323.9 288 362.7 288l21.3 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-21.3 0c-12.9 0-24.6-7.8-29.5-19.7l-6.3-15c-14.6-35.1-44.1-61.9-80.5-73.1l-48.7-15c-11.1-3.4-22.7-5.2-34.4-5.2c-31 0-60.8 12.3-82.7 34.3L57.4 153.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l23.1-23.1zM91.2 352L32 352c-17.7 0-32 14.3-32 32s14.3 32 32 32l69.6 0c19 0 36.2-11.2 43.9-28.5L157 361.6l-9.5-6c-17.5-10.9-30.5-26.8-37.9-44.9L91.2 352z\"/></svg></span> <span class=\"account-icon\" style=\"display:none\"><svg style=\"width: 24px; height: 24px; \" class=\"inline-block \"  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 576 512\"><path fill=\"currentColor\"opacity=\"0.4\" d=\"M64 270.5l224-196c74.7 65.4 149.4 130.7 224.1 196.1l.4 177.3c.1 35.4-28.6 64.1-64 64.1l-320.4 0c-35.3 0-64-28.6-64-64L64 270.5zM176.1 433.6c.1 .5 .1 1.1 .2 1.6c.2 1 .5 2 .9 3c.8 1.9 2 3.6 3.4 5.1c2.9 2.9 6.9 4.7 11.3 4.7l192 0c8.8 0 16-7.2 16-16c0-44.2-35.8-80-80-80l-64 0c-22.1 0-42.1 9-56.6 23.4c-7.2 7.2-13.1 15.9-17.1 25.4c-2 4.8-3.6 9.8-4.7 15c-.5 2.6-.9 5.3-1.2 7.9c-.1 1.3-.2 2.7-.3 4.1c-.1 1.4-.1 2.7-.1 4.1c0 .6 0 1.1 .1 1.6zm48.2-184.2c-.1 1.1-.2 2.2-.2 3.2c-.1 1.1-.1 2.2-.1 3.3s0 2.2 .1 3.3c.1 1.1 .1 2.2 .2 3.2c.2 2.1 .5 4.3 1 6.4c.9 4.2 2.1 8.2 3.7 12c3.2 7.7 7.9 14.6 13.7 20.3C254.3 312.8 270.3 320 288 320c35.3 0 64-28.7 64-64s-28.7-64-64-64c-17.7 0-33.7 7.2-45.3 18.7c-5.8 5.8-10.5 12.7-13.7 20.3c-1.6 3.8-2.9 7.8-3.7 12c-.4 2.1-.8 4.2-1 6.4z\"/><path fill=\"currentColor\"class=\"fa-primary\" d=\"M309.1 7.9C297-2.6 279-2.6 266.9 7.9l-256 224c-13.3 11.6-14.6 31.9-3 45.2s31.9 14.6 45.2 3L288 74.5 522.9 280.1c13.3 11.6 33.5 10.3 45.2-3s10.3-33.5-3-45.2L512 185.5 512 64c0-17.7-14.3-32-32-32l-32 0c-17.7 0-32 14.3-32 32l0 37.5L309.1 7.9zM352 256a64 64 0 1 0 -128 0 64 64 0 1 0 128 0zm-96 96c-44.2 0-80 35.8-80 80c0 8.8 7.2 16 16 16l192 0c8.8 0 16-7.2 16-16c0-44.2-35.8-80-80-80l-64 0z\"/></svg></span> <span class=\"sign-out-icon\" style=\"display:none\"><svg style=\"width: 24px; height: 24px; \" class=\"inline-block \"  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\"opacity=\"0.4\" d=\"M0 256C0 397.4 35.8 512 80 512c25.3 0 47.8-37.5 62.5-96L128 416c-.5 0-1.1 0-1.6 0c-.6 0-1.1-.1-1.6-.1c-1.1-.1-2.1-.3-3.2-.5c-2.1-.4-4.1-1.1-6-1.9c-3.8-1.6-7.3-4-10.2-6.9s-5.2-6.3-6.9-10.2c-.8-1.9-1.4-3.9-1.9-6c-.2-1.1-.4-2.3-.5-3.5c0-.3 0-.6-.1-.8c0-.2 0-.4 0-.7c0-.4 0-.7 0-.7c0-.5 0-.7 0-.9c0-.3 0-.6 0-.9c0 0 0-.3 0-.7c0-.2 0-.4 0-.7c0-.2 0-.4 .1-.8c0-.3 .1-.6 .1-.9c0-.2 .1-.4 .1-.7c.1-.8 .2-1.2 .3-1.7c.5-2.2 1.1-4.2 1.9-6.1c1.6-3.8 4-7.3 6.9-10.2c5.8-5.8 13.8-9.4 22.6-9.4l26.2 0c3.8-29.6 5.8-62.1 5.8-96c0-18.3-.6-36.1-1.7-53.4c-1.7-1.2-3.4-2.5-4.9-4c-.8-.8-1.6-1.6-2.2-2.5s-1.3-1.7-1.9-2.6c-1.2-1.8-2.1-3.6-2.9-5.5s-1.4-3.9-1.8-5.9c-.2-1-.3-2-.4-3s-.1-2-.2-3c0-8.3 3.1-16.5 9.4-22.8C141 63.1 112.8 0 80 0C35.8 0 0 114.6 0 256z\"/><path fill=\"currentColor\"class=\"fa-primary\" d=\"M416 48a48 48 0 1 0 -96 0 48 48 0 1 0 96 0zM221.7 175.5c9.9-9.9 23.4-15.5 37.5-15.5c1.9 0 3.8 .1 5.6 .3L233.6 254c-9.3 28 1.7 58.8 26.8 74.5l86.2 53.9-25.4 88.8c-4.9 17 5 34.7 22 39.6s34.7-5 39.6-22l28.7-100.4c5.9-20.6-2.6-42.6-20.7-53.9L334 299l30.9-82.4 5.1 12.3C385 264.7 419.9 288 458.7 288l21.3 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-21.3 0c-12.9 0-24.6-7.8-29.5-19.7l-6.3-15c-14.6-35.1-44.1-61.9-80.5-73.1l-48.7-15c-11.1-3.4-22.7-5.2-34.4-5.2c-31 0-60.8 12.3-82.7 34.3l-23.1 23.1c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l23.1-23.1zM187.2 352L128 352c-17.7 0-32 14.3-32 32s14.3 32 32 32l69.6 0c19 0 36.2-11.2 43.9-28.5L253 361.6l-9.5-6c-17.5-10.9-30.5-26.8-37.9-44.9L187.2 352z\"/></svg></span> <span class=\"caption d-none d-xl-inline-block\">Sign in</span></a>\n                </li>\n                        <li class=\"nav-menu\">\n                <button class=\"navigation-toggle\"><i class=\"fa fa-fw fa-bars\" aria-hidden=\"true\"></i></button>\n            </li>\n        </ul>\n    </div>\n</nav>\n\n    <footer class=\"footer center-content\">\n    <div class=\"footer-container center-content-container\">\n        <div class=\"footer-inner container-fluid\">\n            <div class=\"row\">\n                <div class=\"col-8 col-md-10\">\n                    <ul class=\"footer-list footer-list-horizontal\">\n                        <li><a href=\"/\">Home</a></li>\n                        <li><a href=\"/refactoring\">Refactoring</a></li>\n                        <li><a href=\"/design-patterns\">Design Patterns</a></li>\n                        <li><a href=\"/store\">Premium Content</a></li>\n                        <li><a href=\"https://gitbybit.com/\">Git Course</a></li>\n                        <li><a href=\"https://refactoring.userecho.com/\" rel=\"nofollow\" class=\"userecho-public\">Forum</a></li>\n                        <li><a href=\"https://refactoring.userecho.com/\" rel=\"nofollow\" class=\"userecho-private\">Contact us</a></li>\n                    </ul>\n                </div>\n                <div class=\"col-4 col-md-2\">\n                    <ul class=\"footer-list footer-list-iconic footer-list-right\">\n                                                    <li><a href=\"https://www.facebook.com/refactoring.guru\"><i class=\"fa fa-facebook-official\"></i></a></li>\n                                                <li><a href=\"/sendy/form\" rel=\"nofollow\"><i class=\"fa fa-envelope\" aria-hidden=\"true\"></i></a></li>\n                        <li><a href=\"https://github.com/RefactoringGuru\"><i class=\"fa fa-github-circled\"></i></a></li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"footer-second\">\n        <div class=\"footer-container center-content-container\">\n            <div class=\"footer-inner container-fluid\">\n                <div class=\"row\">\n                    <div class=\"col-12 col-sm-6\">\n                        <i class=\"fa fa-fw fa-copyright\"></i> 2014-2025 <a href=\"/\">Refactoring.Guru</a>. <span style=\"white-space: nowrap\">All rights reserved.</span><br>\n                        <i class=\"fa fa-fw fa-image\"></i> Illustrations by <a href=\"http://zhart.us/\" rel=\"nofollow\"><span style=\"white-space: nowrap\">Dmitry Zhart</span></a>\n                    </div>\n                    <div class=\"footer-links-right col-12 col-sm-6 mt-4 mt-sm-0\">\n                        <ul class=\"footer-list footer-list-horizontal footer-list-right\">\n                            <li><a href=\"/terms\"><span>Terms &amp; Conditions</span></a>\n                            </li>\n                            <li><a href=\"/privacy-policy\"><span>Privacy Policy</span></a>\n                            </li>\n                            <li><a href=\"/content-usage-policy\"><span>Content Usage Policy</span></a>\n                            </li>\n                            <li><a href=\"/site-about\"><span>About us</span></a>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n                                    <div class=\"row\">\n                        <div class=\"col-12 col-sm-4\">\n                            <div class=\"mt-4\">\n                                                                    <b>Ukrainian office:</b><br>\n                                    <object class=\"fa-fw\" style=\"height: 0.8rem; filter: invert(50%);\"  type=\"image/svg+xml\" data=\"/images/content-public/icons/fa-building.svg?id=afddb5806968b0a9acfc1df75a181234\">\n                                        <img class=\"fa-fw\" style=\"height: 0.8rem;\" src=\"/images/content-public/icons/fa-building.svg?id=afddb5806968b0a9acfc1df75a181234\" alt=\"Organization address\"/>\n                                    </object> FOP Olga Skobeleva<br>\n                                    <svg style=\"width: 16px; height: 16px; margin-right: 1px; fill: currentColor;\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\"><path d=\"M352 192c0-88.4-71.6-160-160-160S32 103.6 32 192c0 15.6 5.4 37 16.6 63.4c10.9 25.9 26.2 54 43.6 82.1c34.1 55.3 74.4 108.2 99.9 140c25.4-31.8 65.8-84.7 99.9-140c17.3-28.1 32.7-56.3 43.6-82.1C346.6 229 352 207.6 352 192zm32 0c0 87.4-117 243-168.3 307.2c-12.3 15.3-35.1 15.3-47.4 0C117 435 0 279.4 0 192C0 86 86 0 192 0S384 86 384 192zm-240 0a48 48 0 1 0 96 0 48 48 0 1 0 -96 0zm48 80a80 80 0 1 1 0-160 80 80 0 1 1 0 160z\"/></svg> Abolmasova 7<br>\n                                    <span style=\"margin-left: 21px;\">Kyiv, Ukraine, 02002</span><br>\n                                    <i class=\"fa fa-fw fa-envelope\"></i>  Email: support@refactoring.guru\n                                \n                            </div>\n                        </div>\n                        <div class=\"col-12 col-sm-4\">\n                            <div class=\"mt-4\">\n                                <b>Spanish office:</b><br>\n                                <object class=\"fa-fw\" style=\"height: 0.8rem; filter: invert(50%);\"  type=\"image/svg+xml\" data=\"/images/content-public/icons/fa-building.svg?id=afddb5806968b0a9acfc1df75a181234\">\n                                    <img class=\"fa-fw\" style=\"height: 0.8rem;\" src=\"/images/content-public/icons/fa-building.svg?id=afddb5806968b0a9acfc1df75a181234\" alt=\"Organization address\"/>\n                                </object> Oleksandr Shvets<br>\n                                <svg style=\"width: 16px; height: 16px; margin-right: 1px; fill: currentColor;\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\"><path d=\"M352 192c0-88.4-71.6-160-160-160S32 103.6 32 192c0 15.6 5.4 37 16.6 63.4c10.9 25.9 26.2 54 43.6 82.1c34.1 55.3 74.4 108.2 99.9 140c25.4-31.8 65.8-84.7 99.9-140c17.3-28.1 32.7-56.3 43.6-82.1C346.6 229 352 207.6 352 192zm32 0c0 87.4-117 243-168.3 307.2c-12.3 15.3-35.1 15.3-47.4 0C117 435 0 279.4 0 192C0 86 86 0 192 0S384 86 384 192zm-240 0a48 48 0 1 0 96 0 48 48 0 1 0 -96 0zm48 80a80 80 0 1 1 0-160 80 80 0 1 1 0 160z\"/></svg> Avda Pamplona 64<br>\n                                <span style=\"margin-left: 21px;\">Pamplona, Spain, 31009</span><br>\n                                <i class=\"fa fa-fw fa-envelope\"></i>  Email: support@refactoring.guru\n                            </div>\n                        </div>\n                    </div>\n                            </div>\n        </div>\n    </div>\n</footer>\n\n</div>\n\n\n    <script defer>\n    var CodeMirrorScripts = [\"/js/codemirror.min.js?id=f7ae4adf14bd00338caf8e95da733cc9\"];\n</script>\n\n\n\n    <script>window.loadContent = true;window.loadCart = true;</script>\n</body>\n</html>\n"},
{"title": null, "url": "https://refactoring.guru/design-patterns/prototype", "raw_html": "<!DOCTYPE html>\n<html lang=\"en\" dir=\"ltr\">\n<head prefix=\"og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# website: http://ogp.me/ns/website#\">\n    <meta charset=\"utf-8\">\n    <title>Prototype</title>\n\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n    <meta name=\"theme-color\" content=\"#A2E2FD\" />\n\n            <style>\n        .buy-widget-excl-local-taxes {\n            display: none;\n        }\n    </style>\n    \n    <link rel=\"preload\" href=\"/fonts/PTSans/ptsans-regular_en.woff2?1\" as=\"font\" type=\"font/woff2\" crossorigin>\n    <link rel=\"preload\" href=\"/fonts/PTSans/ptsans-bold_en.woff2?1\" as=\"font\" type=\"font/woff2\" crossorigin>\n        <link rel=\"preload\" href=\"/fonts/fontello/fontawesome.woff2?15843843\" as=\"font\" type=\"font/woff2\" crossorigin>\n    <link rel=\"preload\" href=\"/fonts/FiraCode/woff2/FiraCode-Regular_latin.woff2\" as=\"font\" type=\"font/woff2\" crossorigin>\n        <link rel=\"preconnect dns-prefetch\" href=\"https://cdn.paddle.com\">\n    <link rel=\"preconnect dns-prefetch\" href=\"https://www.googletagmanager.com\">\n\n    <link rel=\"alternate\" href=\"https://refactoring.guru/design-patterns/prototype\" hreflang=\"x-default\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/es/design-patterns/prototype\" hreflang=\"es\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/fr/design-patterns/prototype\" hreflang=\"fr\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/ja/design-patterns/prototype\" hreflang=\"ja\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/ko/design-patterns/prototype\" hreflang=\"ko\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/pl/design-patterns/prototype\" hreflang=\"pl\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/pt-br/design-patterns/prototype\" hreflang=\"pt-br\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/ru/design-patterns/prototype\" hreflang=\"ru\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/uk/design-patterns/prototype\" hreflang=\"uk\"/>\n    <link rel=\"alternate\" href=\"https://refactoringguru.cn/design-patterns/prototype\" hreflang=\"zh\"/>\n\n    <meta name=\"description\" content=\"Prototype is a creational design pattern that lets you copy existing objects without making your code dependent on their classes.\">\n\n    <link rel=\"canonical\" href=\"https://refactoring.guru/design-patterns/prototype\"/>\n\n    <link rel=\"icon\" type=\"image/x-icon\" href=\"/favicon.png\"/>\n\n        <meta property=\"fb:app_id\" content=\"666819623386327\"/>\n        <meta property=\"og:type\" content=\"website\"/>\n        <meta property=\"og:image\" content=\"https://refactoring.guru/images/refactoring/social/facebook-share-preview.png?id=dbf9e98269595be86eb668f365be6868\"/>\n    \n                    <link rel=\"stylesheet\" href=\"/css/public-packed.min.css?id=aaefab4da343b914b8dda9973604a9e8\">\n        <style type=\"text/css\">\n                    @font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_cyrillic-ext.woff2?1) format(\"woff2\");unicode-range:U+0460-052F,U+1C80-1C88,U+20B4,U+2DE0-2DFF,U+A640-A69F,U+FE2E-FE2F}@font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_cyrillic.woff2?1) format(\"woff2\");unicode-range:U+0400-045F,U+0490-0491,U+04B0-04B1,U+2116}@font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_latin-ext.woff2?1) format(\"woff2\");unicode-range:U+0100-024F,U+0259,U+1E00-1EFF,U+2020,U+20A0-20AB,U+20AD-20CF,U+2113,U+2C60-2C7F,U+A720-A7FF}@font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_latin.woff2?1) format(\"woff2\");unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}@font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_en.woff2?1) format(\"woff2\");unicode-range:U+0-FF,U+131,U+142,U+152,U+153,U+2BB,U+2BC,U+2C6,U+2DA,U+2DC,U+420,U+423,U+430,U+438-43A,U+43D,U+440,U+441,U+443,U+44C,U+457,U+2000-206F,U+2074,U+20AA-20AC,U+20B4,U+20B9,U+20BA,U+20BD,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_cyrillic-ext.woff2?1) format(\"woff2\");unicode-range:U+0460-052F,U+1C80-1C88,U+20B4,U+2DE0-2DFF,U+A640-A69F,U+FE2E-FE2F}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_cyrillic.woff2?1) format(\"woff2\");unicode-range:U+0400-045F,U+0490-0491,U+04B0-04B1,U+2116}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_latin-ext.woff2?1) format(\"woff2\");unicode-range:U+0100-024F,U+0259,U+1E00-1EFF,U+2020,U+20A0-20AB,U+20AD-20CF,U+2113,U+2C60-2C7F,U+A720-A7FF}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_latin.woff2?1) format(\"woff2\");unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_en.woff2?1) format(\"woff2\");unicode-range:U+0-FF,U+131,U+142,U+152,U+153,U+2BB,U+2BC,U+2C6,U+2DA,U+2DC,U+420,U+423,U+430,U+438-43A,U+43D,U+440,U+441,U+443,U+44C,U+457,U+2000-206F,U+2074,U+20AA-20AC,U+20B4,U+20B9,U+20BA,U+20BD,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}\n            </style>\n\n    \n            <script defer src=\"/js/public.min.js?id=1f19fe18ffe0fc844ede8a0f2ee64202\"></script>\n        <script defer src=\"/js/checkout.min.js?id=b4da9c5bd8b1cf504447c07ae8b7cd44\"></script>\n            <script defer src=\"https://cdn.paddle.com/paddle/v2/paddle.js\"></script>\n    <script async src=\"https://www.googletagmanager.com/gtag/js?id=G-SR8Y3GYQYC\"></script>\n\n    <script type=\"application/ld+json\">\n        {\"@context\": \"http://schema.org\", \"@graph\": [{\"@type\":\"Person\",\"@id\":\"https://refactoring.guru/#founder\",\"name\":\"Alexander Shvets\"},{\"@type\":\"Organization\",\"@id\":\"https://refactoring.guru/#organization\",\"name\":\"Refactoring.Guru\",\"description\":\"Refactoring.Guru makes it easy for you to discover everything you need to know about refactoring, design patterns, SOLID principles, and other smart programming topics.\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https://refactoring.guru/#organizationlogo\",\"url\":\"https://refactoring.guru/images/content-public/logos/logo-plain.png\",\"caption\":\"Refactoring.Guru\"},\"logo\":{\"@id\":\"https://refactoring.guru/#organizationlogo\"},\"founder\":{\"@id\":\"https://refactoring.guru/#founder\"},\"sameAs\":[\"https://www.facebook.com/refactoring.guru\",\"https://twitter.com/RefactoringGuru\",\"https://github.com/RefactoringGuru\"]},{\"@type\":\"WebSite\",\"@id\":\"https://refactoring.guru/#website\",\"url\":\"https://refactoring.guru/\",\"name\":\"Refactoring.Guru\",\"description\":\"Refactoring.Guru makes it easy for you to discover everything you need to know about refactoring, design patterns, SOLID principles, and other smart programming topics.\",\"author\":{\"@id\":\"https://refactoring.guru/#founder\"},\"publisher\":{\"@id\":\"https://refactoring.guru/#organization\"},\"copyrightYear\":2014},{\"@type\":\"WebPage\",\"@id\":\"https://refactoring.guru/design-patterns/prototype#webpage\",\"url\":\"https://refactoring.guru/design-patterns/prototype\",\"inLanguage\":\"en\",\"name\":\"Prototype\",\"description\":\"Prototype is a creational design pattern that lets you copy existing objects without making your code dependent on their classes.\",\"isPartOf\":{\"@id\":\"https://refactoring.guru#website\"},\"breadcrumb\":{\"@id\":\"https://refactoring.guru/design-patterns/prototype#breadcrumb\"},\"primaryImageOfPage\":{\"@id\":\"https://refactoring.guru/design-patterns/prototype#primaryimage\"},\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https://refactoring.guru/design-patterns/prototype#primaryimage\",\"url\":\"https://refactoring.guru/images/patterns/content/prototype/prototype-3x.png\",\"width\":1920,\"height\":1200}},{\"@type\":\"Article\",\"@id\":\"https://refactoring.guru/design-patterns/prototype#article\",\"isPartOf\":{\"@id\":\"https://refactoring.guru/design-patterns/prototype#webpage\"},\"mainEntityOfPage\":{\"@id\":\"https://refactoring.guru/design-patterns/prototype#webpage\"},\"author\":{\"@id\":\"https://refactoring.guru#founder\"},\"publisher\":{\"@id\":\"https://refactoring.guru#organization\"},\"headline\":\"Prototype\",\"datePublished\":\"2024-01-01\",\"dateModified\":\"2025-01-01\",\"articleSection\":\"Design Patterns\",\"image\":{\"@id\":\"https://refactoring.guru/design-patterns/prototype#primaryimage\"}},{\"@type\":\"BreadcrumbList\",\"@id\":\"https://refactoring.guru/design-patterns/prototype#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https://refactoring.guru\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Design Patterns\",\"item\":\"https://refactoring.guru/design-patterns\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"Creational Patterns\",\"item\":\"https://refactoring.guru/design-patterns/creational-patterns\"}]}] }\n    </script>\n\n    <script>\nfunction extend(){var extended={};var deep=false;var i=0;var length=arguments[\"length\"];if(Object[\"prototype\"][\"toString\"][\"call\"](arguments[0])=== '[object Boolean]'){deep= arguments[0];i++};var merge=function(obj){for(var prop in obj){if(Object[\"prototype\"][\"hasOwnProperty\"][\"call\"](obj,prop)){if(deep&& Object[\"prototype\"][\"toString\"][\"call\"](obj[prop])=== '[object Object]'){extended[prop]= extend(true,extended[prop],obj[prop])}else {extended[prop]= obj[prop]}}}};for(;i< length;i++){var obj=arguments[i];merge(obj)};return extended}\nfunction defer(method) {if (window.jQuery) {method();} else {setTimeout(function() { defer(method) }, 50);}}\n</script>\n<script>\n+function(sd){sd = (typeof sd === \"string\") ? JSON.parse(atob(sd)) : sd;for(var property in sd){if(window[property]!== null&&  typeof window[property]=== 'object'){window[property]= extend(true,window[property],sd[property])}else {window[property]= sd[property]}}}(\"eyJsb2NhbGUiOiJlbiIsImxvY2FsZV9wcmVmaXgiOiIiLCJsb2NhbGl6ZWRfdXJsX3ByZWZpeCI6Imh0dHBzOlwvXC9yZWZhY3RvcmluZy5ndXJ1XC8iLCJ1cmxfcHJlZml4IjoiaHR0cHM6XC9cL3JlZmFjdG9yaW5nLmd1cnVcLyIsImxvY2FsaXplZF91cmxfcHJlZml4X20iOiJodHRwczpcL1wvcmVmYWN0b3JpbmcuZ3VydVwvIiwidXJsX3ByZWZpeF9tIjoiaHR0cHM6XC9cL3JlZmFjdG9yaW5nLmd1cnVcLyIsInVzZXJfZWNob19hbGlhcyI6InJlZmFjdG9yaW5nIiwidXNlcl9lY2hvX2hvc3QiOiJmZWVkYmFjay5yZWZhY3RvcmluZy5ndXJ1IiwidXNlcl9lY2hvX3ByaXZhdGVfZm9ydW0iOiIyIiwidXNlcl9lY2hvX2xvY2FsZSI6ImVuIiwidXNlcl9lY2hvX3B1YmxpY19mb3J1bSI6IjMiLCJ1c2VyX2VjaG9fcHVibGljX2ZvcnVtX3VybCI6Imh0dHBzOlwvXC9mZWVkYmFjay5yZWZhY3RvcmluZy5ndXJ1XC8iLCJ1c2VyX2VjaG9fc3NvX3Rva2VuIjoiIn0=\");\n</script>\n\n<script>\n    window.dataLayer = window.dataLayer || [];\n    function gtag(){dataLayer.push(arguments);}\n    gtag('js', new Date());\n            gtag('set', 'linker', {'domains': [\"refactoring.guru,refactoringguru.cn\"]});\n        gtag('config', 'G-SR8Y3GYQYC', {\n        // Disable default page view, because we're going to report them on our own.\n        // This is done to report traffic on localized domains as part of the main website traffic\n        // See the Chinese overrides below.\n        send_page_view: false,\n    });\n</script>\n\n<script>\n    (() => {\n        // On first page view after returning from social network, we need to send the social login event.\n        (function detectSocialLogin() {\n            let getCookie = function (name) {\n                var nameEQ = name + \"=\";\n                var ca = document.cookie.split(';');\n                for (var i = 0; i < ca.length; i++) {\n                    var c = ca[i];\n                    while (c.charAt(0) == ' ') c = c.substring(1, c.length);\n                    if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);\n                }\n                return null;\n            };\n            window.social_login_provider = window.social_login_provider || getCookie('social_login_provider');\n            if (window.social_login_provider) {\n                gtag('set', {referrer: null});\n                gtag('event', 'login', {\"method\": window.social_login_provider});\n                // Delete cookie.\n                document.cookie = 'social_login_provider=; Path=/; Max-Age=-99999999;';\n            }\n        })();\n\n        function trackPageView(location, title) {\n            location = location || document.location.href;\n            title = title || document.title;\n\n            // This is show on https://refactoringguru.cn/ and alike.\n            if (typeof window.analytics_path_prefix === 'string') {\n                if (/^(https?:\\/\\/[^\\/]+?)\\/$/.test(location)) {\n                    location = location.replace(/(https?:\\/\\/[^\\/]+?)\\//, '$1' + window.analytics_path_prefix);\n                } else {\n                    location = location.replace(/(https?:\\/\\/[^\\/]+?)\\//, '$1' + window.analytics_path_prefix + '/');\n                }\n                gtag('set', {\n                    'page_location': location\n                });\n            }\n\n            // This is show on https://refactoring.guru/zh/login and alike.\n            if (typeof window.analytics_location_prefix === 'string') {\n                location = location.replace(/(https?:\\/\\/[^\\/]+?)\\//, window.analytics_location_prefix);\n                gtag('set', {\n                    'page_location': location\n                });\n            }\n\n            gtag('event', 'page_view', {\n                page_location: location,\n                page_title: title,\n                locale: window.locale ?? 'en'\n            });\n        }\n\n        if (window.loadContent) {\n            window.onPageLoad = window.onPageLoad || [];\n            window.onPageLoad.push({\n                func: function (context) {\n                    trackPageView(window.location.origin + context.canonicalPath, context.title);\n                },\n                afterAll: true,\n            });\n        }\n        else {\n            trackPageView();\n        }\n    })();\n</script>\n\n\n</head>\n<body class=\"locale-en   announcement   prototype\" data-body_class=\"prototype\">\n\n<div class=\"body-holder\">\n\n            <div class=\"announcement-block announcement-block-summer prom\" data-id=\"DIDP-announcement\" data-creative-id=\"en\" data-position=\"top\">\n        <span class=\"beach-and-sea\">\n            <span class=\"a1\"></span>\n            <span class=\"a2\"><span class=\"wave\"></span></span>\n            <span class=\"yacht\"></span>\n        </span>\n        <a href=\"/store\">\n            <img src=\"/images/content-public/ann/summer/sunbed.svg?id=b1e7314a63715a13870a6bd1a43613f7\" loading=\"lazy\" style=\"width: 32px; height:32px;vertical-align: middle; scale: -1 1 1;\">\n            <span class=\"announcement-link-text\">Summer SALE</span>\n            <img src=\"/images/content-public/ann/summer/reading-book.svg?id=36006ea720df8c171968cf613e8ea164\" loading=\"lazy\" style=\"width: 32px; height:32px;vertical-align: middle;\">\n        </a>\n    </div>\n\n    \n    <div class=\"cart-placeholder\">\n    <div class=\"cart-block-container\" style=\"display:none\">\n        <div class=\"cart-block btn-group\">\n            <a href=\"#checkout\" class=\"btn cart open-checkout\">\n                <span class=\"cart-text\"></span>&nbsp;<strong class=\"cart-total font-money\"></strong>\n            </a><a href=\"#checkout\" class=\"btn btn-secondary checkout open-checkout\"><i class=\"fa fa-shopping-cart\" aria-hidden=\"true\"></i> <span class=\"btn-text-span d-none d-sm-inline-block d-lg-none d-hg-inline-block\"></span></a>\n        </div>\n    </div>\n</div>\n    <main role=\"main\" class=\"main-content top-content center-content \" data-page_class=\"\">\n        <div class=\"main-content-container center-content-container\">\n                        <div class=\"pattern page text\">\n<article>\n    <div class=\"breadcrumb\">\n                                    <a class=\"home\" href=\"/\"><i class=\"fa fa-home\" aria-hidden=\"true\"></i></a>\n                                                / <a class=\"type\" href=\"/design-patterns\">Design Patterns</a>\n                                                / <a class=\"type\" href=\"/design-patterns/creational-patterns\">Creational Patterns</a>\n                        </div>\n    <h1 class=\"title\">Prototype</h1>\n\n    <script type=\"text/javascript\">\n        // Shorten examples titles for users.\n        var h1 = document.getElementsByTagName(\"H1\")[0];\n        if (h1.offsetHeight > 160) {\n            h1.className += ' smaller';\n        }\n\n        // Small beautification for pattern examples.\n        var title = h1.innerHTML;\n        title = title.replace(/^(Java|C\\+\\+|C#|PHP|Python|Ruby|Delphi): (.*)$/, '<strong>$1:</strong> $2');\n        h1.innerHTML = title;\n    </script>\n\n            <div class=\"aka\">\n            Also known as: <span style=\"display:inline-block\">Clone</span>\n        </div>\n    \n    \n\n    <div class=\"section intent\">\n<h2 id=\"intent\"><i class=\"fa fa-flip-horizontal fa-comment-alt-dots\" aria-hidden=\"true\"></i> Intent</h2>\n<p><strong>Prototype</strong> is a creational design pattern that lets you copy existing objects without making your code dependent on their classes.</p>\n<figure class=\"image\"><img src=\"/images/patterns/content/prototype/prototype.png?id=e912b1ada20bbf7b2ffc09e93b9fab20\" alt=\"Prototype Design Pattern\" srcset=\"/images/patterns/content/prototype/prototype.png?id=e912b1ada20bbf7b2ffc09e93b9fab20 640w,/images/patterns/content/prototype/prototype-1.5x.png?id=a0f76894fb657783b65b9ed899857468 960w,/images/patterns/content/prototype/prototype-2x.png?id=670789c80c8a114e25838ede2da4a881 1280w\" sizes=\"(max-width: 720px) 100vw, 640px\" width=\"640\" style=\"aspect-ratio: 1.6;\" fetchpriority=\"high\" /></figure>\n</div>\n<div class=\"section problem\">\n<h2 id=\"problem\"><i class=\"fa fa-frown\" aria-hidden=\"true\"></i> Problem</h2>\n<p>Say you have an object, and you want to create an exact copy of it. How would you do it? First, you have to create a new object of the same class. Then you have to go through all the fields of the original object and copy their values over to the new object.</p>\n<p>Nice! But there’s a catch. Not all objects can be copied that way because some of the object’s fields may be private and not visible from outside of the object itself.</p>\n<figure class=\"image\"><img src=\"/images/patterns/content/prototype/prototype-comic-1-en.png?id=4cc45ae42e26cc9533a6ac540713d1fa\" alt=\"What can go wrong when copying things &quot;from the outside&quot;?\" srcset=\"/images/patterns/content/prototype/prototype-comic-1-en.png?id=4cc45ae42e26cc9533a6ac540713d1fa 600w,/images/patterns/content/prototype/prototype-comic-1-en-1.5x.png?id=6c44fe035234a3432e7181bb73db1c80 900w,/images/patterns/content/prototype/prototype-comic-1-en-2x.png?id=1f5b9eeb00df663f4630ca6d38c4804d 1200w\" sizes=\"(max-width: 720px) 100vw, 600px\" width=\"600\" style=\"aspect-ratio: 2;\" loading=\"lazy\" /><figcaption>\n<p>Copying an object “from the outside” <a href=\"/cargo-cult\">isn’t</a> always possible.</p>\n</figcaption></figure>\n<p>There’s one more problem with the direct approach. Since you have to know the object’s class to create a duplicate, your code becomes dependent on that class. If the extra dependency doesn’t scare you, there’s another catch. Sometimes you only know the interface that the object follows, but not its concrete class, when, for example, a parameter in a method accepts any objects that follow some interface.</p>\n</div>\n<div class=\"section solution\">\n<h2 id=\"solution\"><i class=\"fa fa-smile-beam\" aria-hidden=\"true\"></i> Solution</h2>\n<p>The Prototype pattern delegates the cloning process to the actual objects that are being cloned. The pattern declares a common interface for all objects that support cloning. This interface lets you clone an object without coupling your code to the class of that object. Usually, such an interface contains just a single <code>clone</code> method.</p>\n<p>The implementation of the <code>clone</code> method is very similar in all classes. The method creates an object of the current class and carries over all of the field values of the old object into the new one. You can even copy private fields because most programming languages let objects access private fields of other objects that belong to the same class.</p>\n<p>An object that supports cloning is called a <em>prototype</em>. When your objects have dozens of fields and hundreds of possible configurations, cloning them might serve as an alternative to subclassing.</p>\n<figure class=\"image\"><img src=\"/images/patterns/content/prototype/prototype-comic-2-en.png?id=e1df2dc39404c5eb2d485b7ae7c9914f\" alt=\"Pre-built prototypes\" srcset=\"/images/patterns/content/prototype/prototype-comic-2-en.png?id=e1df2dc39404c5eb2d485b7ae7c9914f 343w,/images/patterns/content/prototype/prototype-comic-2-en-1.5x.png?id=11f0e701b7e78777025bedaaf036f6a3 515w,/images/patterns/content/prototype/prototype-comic-2-en-2x.png?id=dda1589983832b69aee763037293beab 687w\" sizes=\"(max-width: 720px) 100vw, 343px\" width=\"343\" style=\"aspect-ratio: 1.14;\" loading=\"lazy\" /><figcaption>\n<p>Pre-built prototypes can be an alternative to subclassing.</p>\n</figcaption></figure>\n<p>Here’s how it works: you create a set of objects, configured in various ways. When you need an object like the one you’ve configured, you just clone a prototype instead of constructing a new object from scratch.</p>\n</div>\n<div class=\"section analogy\">\n<h2 id=\"analogy\"><i class=\"fa fa-car-side\" aria-hidden=\"true\"></i> Real-World Analogy</h2>\n<p>In real life, prototypes are used for performing various tests before starting mass production of a product. However, in this case, prototypes don’t participate in any actual production, playing a passive role instead.</p>\n<figure class=\"image\"><img src=\"/images/patterns/content/prototype/prototype-comic-3-en.png?id=ff16dedbd0c10944d27bf87d2adcf8a6\" alt=\"The cell division\" srcset=\"/images/patterns/content/prototype/prototype-comic-3-en.png?id=ff16dedbd0c10944d27bf87d2adcf8a6 600w,/images/patterns/content/prototype/prototype-comic-3-en-1.5x.png?id=308d1e79f37742ce29555d4b4c18b4c2 900w,/images/patterns/content/prototype/prototype-comic-3-en-2x.png?id=63dd16812865486d174b646882effd9a 1200w\" sizes=\"(max-width: 720px) 100vw, 600px\" width=\"600\" style=\"aspect-ratio: 2;\" loading=\"lazy\" /><figcaption>\n<p>The division of a cell.</p>\n</figcaption></figure>\n<p>Since industrial prototypes don’t really copy themselves, a much closer analogy to the pattern is the process of mitotic cell division (biology, remember?). After mitotic division, a pair of identical cells is formed. The original cell acts as a prototype and takes an active role in creating the copy.</p>\n</div>\n<div class=\"section structure-container\">\n<h2 id=\"structure\"><i class=\"fa fa-sitemap\" aria-hidden=\"true\"></i> Structure</h2>\n<div class=\"structure\">\n<h4>Basic implementation</h4>\n<div class=\"prototype-normal\">\n<div class=\"struct-image1 struct-image\">\n<figure class=\"image\"><img class=\"structure-img-non-indexed d-none d-xl-block\" src=\"/images/patterns/diagrams/prototype/structure.png?id=088102c5e9785ff45debbbce86f4df81\" alt=\"The structure of the Prototype design pattern\" srcset=\"/images/patterns/diagrams/prototype/structure.png?id=088102c5e9785ff45debbbce86f4df81 500w,/images/patterns/diagrams/prototype/structure-1.5x.png?id=beec6a1a5242268e10e39f9fdc0b894b 750w,/images/patterns/diagrams/prototype/structure-2x.png?id=ba75079f42f08028ae4cdbda0cfecc26 1000w\" sizes=\"(max-width: 720px) 100vw, 500px\" width=\"500\" style=\"aspect-ratio: 1.25;\" loading=\"lazy\" /><img class=\"structure-img-indexed d-xl-none\" src=\"/images/patterns/diagrams/prototype/structure-indexed.png?id=0e1c809842f5c43aca0541a2eba1f844\" alt=\"The structure of the Prototype design pattern\" srcset=\"/images/patterns/diagrams/prototype/structure-indexed.png?id=0e1c809842f5c43aca0541a2eba1f844 520w,/images/patterns/diagrams/prototype/structure-indexed-1.5x.png?id=05b072b5b83f5ff1024a7ba448ea9d59 780w,/images/patterns/diagrams/prototype/structure-indexed-2x.png?id=74584ac729c0f6b49d2a97a53cc266ff 1040w\" sizes=\"(max-width: 720px) 100vw, 520px\" width=\"520\" style=\"aspect-ratio: 1.27;\" loading=\"lazy\" /></figure>\n</div>\n</div>\n<ol><li class=\"struct-li1\">\n<p>The <strong>Prototype</strong> interface declares the cloning methods. In most cases, it’s a single <code>clone</code> method.</p>\n</li>\n<li class=\"struct-li2\">\n<p>The <strong>Concrete Prototype</strong> class implements the cloning method. In addition to copying the original object’s data to the clone, this method may also handle some edge cases of the cloning process related to cloning linked objects, untangling recursive dependencies, etc.</p>\n</li>\n<li class=\"struct-li3\">\n<p>The <strong>Client</strong> can produce a copy of any object that follows the prototype interface.</p>\n</li></ol>\n<h4>Prototype registry implementation</h4>\n<div class=\"prototype-pool\">\n<div class=\"struct-image2 struct-image\">\n<figure class=\"image\"><img class=\"structure-img-non-indexed d-none d-xl-block\" src=\"/images/patterns/diagrams/prototype/structure-prototype-cache.png?id=609c2af5d14ed55dcbb218a00f98e7d5\" alt=\"The prototype registry\" srcset=\"/images/patterns/diagrams/prototype/structure-prototype-cache.png?id=609c2af5d14ed55dcbb218a00f98e7d5 550w,/images/patterns/diagrams/prototype/structure-prototype-cache-1.5x.png?id=8ca0b829185d49c5acbe19966a0659d4 825w,/images/patterns/diagrams/prototype/structure-prototype-cache-2x.png?id=a1e4514bbcc9b10968b856f19b407105 1100w\" sizes=\"(max-width: 720px) 100vw, 550px\" width=\"550\" style=\"aspect-ratio: 1.15;\" loading=\"lazy\" /><img class=\"structure-img-indexed d-xl-none\" src=\"/images/patterns/diagrams/prototype/structure-prototype-cache-indexed.png?id=10a4a84a1a318f59dbc2b806fc936d04\" alt=\"The prototype registry\" srcset=\"/images/patterns/diagrams/prototype/structure-prototype-cache-indexed.png?id=10a4a84a1a318f59dbc2b806fc936d04 550w,/images/patterns/diagrams/prototype/structure-prototype-cache-indexed-1.5x.png?id=cb56c95533a4020368c48db9f9e2a37d 825w,/images/patterns/diagrams/prototype/structure-prototype-cache-indexed-2x.png?id=47b99eb7ae51158bdbb31deea4f5e98f 1100w\" sizes=\"(max-width: 720px) 100vw, 550px\" width=\"550\" style=\"aspect-ratio: 1.12;\" loading=\"lazy\" /></figure>\n</div>\n</div>\n<ol><li class=\"struct-li4\">\n<p>The <strong>Prototype Registry</strong> provides an easy way to access frequently-used prototypes. It stores a set of pre-built objects that are ready to be copied. The simplest prototype registry is a <code>name → prototype</code> hash map. However, if you need better search criteria than a simple name, you can build a much more robust version of the registry.</p>\n</li></ol>\n<style structure type=\"text/css\" >\n@media (min-width: 1200px) {\n.structure {\nmargin: 0;\nwidth: auto;\nheight: 1190px;\n}\n\n.prototype-normal {\nheight: 490px;\n}\n\n.prototype-pool {\nheight: 500px;\n}\n\n.struct-image1 {\nleft: 0px;\ntop: 170px;\n}\n\n.struct-li1 {\nleft: 300px;\ntop: 70px;\nwidth: 260px;\n}\n\n.struct-li2 {\nleft: 510px;\ntop: 310px;\nwidth: 280px;\n}\n\n.struct-li3 {\nleft: 0px;\ntop: 70px;\nwidth: 240px;\n}\n\n.struct-image2 {\nleft: 100px;\ntop: 670px;\n}\n\n.struct-li4 {\nleft: 0px;\ntop: 1020px;\nwidth: 390px;\n}\n}\n\n</style>\n</div></div>\n<div class=\"section pseudocode\">\n<h2 id=\"pseudocode\"><i class=\"fa fa-hashtag\" aria-hidden=\"true\"></i> Pseudocode</h2>\n<p>In this example, the <strong>Prototype</strong> pattern lets you produce exact copies of geometric objects, without coupling the code to their classes.</p>\n<figure class=\"image\"><img src=\"/images/patterns/diagrams/prototype/example.png?id=47bc6c1058cb100b81e675b5ca6bda6c\" alt=\"The structure of the Prototype pattern example\" srcset=\"/images/patterns/diagrams/prototype/example.png?id=47bc6c1058cb100b81e675b5ca6bda6c 470w,/images/patterns/diagrams/prototype/example-1.5x.png?id=067f3a2415370fadf5f92aadaa12b5e2 705w,/images/patterns/diagrams/prototype/example-2x.png?id=80393e0df17ae8130e5ada832d494949 940w\" sizes=\"(max-width: 720px) 100vw, 470px\" width=\"470\" style=\"aspect-ratio: 1.42;\" loading=\"lazy\" /><figcaption>\n<p>Cloning a set of objects that belong to a class hierarchy.</p>\n</figcaption></figure>\n<p>All shape classes follow the same interface, which provides a cloning method. A subclass may call the parent’s cloning method before copying its own field values to the resulting object.</p>\n<figure class=\"code\">\n<pre class=\"code\" lang=\"pseudocode\">// Base prototype.\nabstract class Shape is\n    field X: int\n    field Y: int\n    field color: string\n\n    // A regular constructor.\n    constructor Shape() is\n        // ...\n\n    // The prototype constructor. A fresh object is initialized\n    // with values from the existing object.\n    constructor Shape(source: Shape) is\n        this()\n        this.X = source.X\n        this.Y = source.Y\n        this.color = source.color\n\n    // The clone operation returns one of the Shape subclasses.\n    abstract method clone():Shape\n\n\n// Concrete prototype. The cloning method creates a new object\n// in one go by calling the constructor of the current class and\n// passing the current object as the constructor's argument.\n// Performing all the actual copying in the constructor helps to\n// keep the result consistent: the constructor will not return a\n// result until the new object is fully built; thus, no object\n// can have a reference to a partially-built clone.\nclass Rectangle extends Shape is\n    field width: int\n    field height: int\n\n    constructor Rectangle(source: Rectangle) is\n        // A parent constructor call is needed to copy private\n        // fields defined in the parent class.\n        super(source)\n        this.width = source.width\n        this.height = source.height\n\n    method clone():Shape is\n        return new Rectangle(this)\n\n\nclass Circle extends Shape is\n    field radius: int\n\n    constructor Circle(source: Circle) is\n        super(source)\n        this.radius = source.radius\n\n    method clone():Shape is\n        return new Circle(this)\n\n\n// Somewhere in the client code.\nclass Application is\n    field shapes: array of Shape\n\n    constructor Application() is\n        Circle circle = new Circle()\n        circle.X = 10\n        circle.Y = 10\n        circle.radius = 20\n        shapes.add(circle)\n\n        Circle anotherCircle = circle.clone()\n        shapes.add(anotherCircle)\n        // The `anotherCircle` variable contains an exact copy\n        // of the `circle` object.\n\n        Rectangle rectangle = new Rectangle()\n        rectangle.width = 10\n        rectangle.height = 20\n        shapes.add(rectangle)\n\n    method businessLogic() is\n        // Prototype rocks because it lets you produce a copy of\n        // an object without knowing anything about its type.\n        Array shapesCopy = new Array of Shapes.\n\n        // For instance, we don't know the exact elements in the\n        // shapes array. All we know is that they are all\n        // shapes. But thanks to polymorphism, when we call the\n        // `clone` method on a shape the program checks its real\n        // class and runs the appropriate clone method defined\n        // in that class. That's why we get proper clones\n        // instead of a set of simple Shape objects.\n        foreach (s in shapes) do\n            shapesCopy.add(s.clone())\n\n        // The `shapesCopy` array contains exact copies of the\n        // `shape` array's children.\n</pre>\n</figure>\n</div>\n<div class=\"section applicability-container\">\n<h2 id=\"applicability\"><i class=\"fa fa-lightbulb-on\" aria-hidden=\"true\"></i> Applicability</h2>\n<div class=\"applicability\">\n<div class=\"applicability-problem\">\n<p><i class=\"fa fa-fw fa-bug\" aria-hidden=\"true\"></i> Use the Prototype pattern when your code shouldn’t depend on the concrete classes of objects that you need to copy.</p>\n</div><div class=\"applicability-solution\">\n<p><i class=\"fa fa-fw fa-bolt\" aria-hidden=\"true\"></i> This happens a lot when your code works with objects passed to you from 3rd-party code via some interface. The concrete classes of these objects are unknown, and you couldn’t depend on them even if you wanted to.</p>\n<p>The Prototype pattern provides the client code with a general interface for working with all objects that support cloning. This interface makes the client code independent from the concrete classes of objects that it clones.</p>\n</div>\n<div class=\"applicability-problem\">\n<p><i class=\"fa fa-fw fa-bug\" aria-hidden=\"true\"></i> Use the pattern when you want to reduce the number of subclasses that only differ in the way they initialize their respective objects.</p>\n</div><div class=\"applicability-solution\">\n<p><i class=\"fa fa-fw fa-bolt\" aria-hidden=\"true\"></i> Suppose you have a complex class that requires a laborious configuration before it can be used. There are several common ways to configure this class, and this code is scattered through your app. To reduce the duplication, you create several subclasses and put every common configuration code into their constructors. You solved the duplication problem, but now you have lots of dummy subclasses.</p>\n<p>The Prototype pattern lets you use a set of pre-built objects configured in various ways as prototypes. Instead of instantiating a subclass that matches some configuration, the client can simply look for an appropriate prototype and clone it.</p>\n</div>\n</div></div>\n<div class=\"section checklist\">\n<h2 id=\"checklist\"><i class=\"fa fa-clipboard-list-check\" aria-hidden=\"true\"></i> How to Implement</h2>\n<ol>\n<li>\n<p>Create the prototype interface and declare the <code>clone</code> method in it. Or just add the method to all classes of an existing class hierarchy, if you have one.</p>\n</li>\n<li>\n<p>A prototype class must define the alternative constructor that accepts an object of that class as an argument. The constructor must copy the values of all fields defined in the class from the passed object into the newly created instance. If you’re changing a subclass, you must call the parent constructor to let the superclass handle the cloning of its private fields.</p>\n<p>If your programming language doesn’t support method overloading, you won’t be able to create a separate “prototype” constructor. Thus, copying the object’s data into the newly created clone will have to be performed within the <code>clone</code> method. Still, having this code in a regular constructor is safer because the resulting object is returned fully configured right after you call the <code>new</code> operator.</p>\n</li>\n<li>\n<p>The cloning method usually consists of just one line: running a <code>new</code> operator with the prototypical version of the constructor. Note, that every class must explicitly override the cloning method and use its own class name along with the <code>new</code> operator. Otherwise, the cloning method may produce an object of a parent class.</p>\n</li>\n<li>\n<p>Optionally, create a centralized prototype registry to store a catalog of frequently used prototypes.</p>\n<p>You can implement the registry as a new factory class or put it in the base prototype class with a static method for fetching the prototype. This method should search for a prototype based on search criteria that the client code passes to the method. The criteria might either be a simple string tag or a complex set of search parameters. After the appropriate prototype is found, the registry should clone it and return the copy to the client.</p>\n<p>Finally, replace the direct calls to the subclasses’ constructors with calls to the factory method of the prototype registry.</p>\n</li>\n</ol>\n</div>\n<div class=\"section pros-cons\">\n<h2 id=\"pros-cons\"><i class=\"fa fa-balance-scale\" aria-hidden=\"true\"></i> Pros and Cons</h2>\n<div class=\"row\"><div class=\"col-sm-6\">\n<ul>\n<li><i class=\"fa fa-fw fa-check\" aria-hidden=\"true\"></i> You can clone objects without coupling to their concrete classes.</li>\n<li><i class=\"fa fa-fw fa-check\" aria-hidden=\"true\"></i> You can get rid of repeated initialization code in favor of cloning pre-built prototypes.</li>\n<li><i class=\"fa fa-fw fa-check\" aria-hidden=\"true\"></i> You can produce complex objects more conveniently.</li>\n<li><i class=\"fa fa-fw fa-check\" aria-hidden=\"true\"></i> You get an alternative to inheritance when dealing with configuration presets for complex objects.</li>\n</ul>\n</div><div class=\"col-sm-6\">\n<ul>\n<li><i class=\"fa fa-fw fa-times\" aria-hidden=\"true\"></i> Cloning complex objects that have circular references might be very tricky.</li>\n</ul>\n</div></div></div>\n<div class=\"section relations\">\n<h2 id=\"relations\"><i class=\"fa fa-exchange-alt\" aria-hidden=\"true\"></i> Relations with Other Patterns</h2>\n<ul>\n<li>\n<p>Many designs start by using <a href=\"/design-patterns/factory-method\">Factory Method</a> (less complicated and more customizable via subclasses) and evolve toward <a href=\"/design-patterns/abstract-factory\">Abstract Factory</a>, <a href=\"/design-patterns/prototype\">Prototype</a>, or <a href=\"/design-patterns/builder\">Builder</a> (more flexible, but more complicated).</p>\n</li>\n<li>\n<p><a href=\"/design-patterns/abstract-factory\">Abstract Factory</a> classes are often based on a set of <a href=\"/design-patterns/factory-method\">Factory Methods</a>, but you can also use <a href=\"/design-patterns/prototype\">Prototype</a> to compose the methods on these classes.</p>\n</li>\n<li>\n<p><a href=\"/design-patterns/prototype\">Prototype</a> can help when you need to save copies of <a href=\"/design-patterns/command\">Commands</a> into history.</p>\n</li>\n<li>\n<p>Designs that make heavy use of <a href=\"/design-patterns/composite\">Composite</a> and <a href=\"/design-patterns/decorator\">Decorator</a> can often benefit from using <a href=\"/design-patterns/prototype\">Prototype</a>. Applying the pattern lets you clone complex structures instead of re-constructing them from scratch.</p>\n</li>\n<li>\n<p><a href=\"/design-patterns/prototype\">Prototype</a> isn’t based on inheritance, so it doesn’t have its drawbacks. On the other hand, <em>Prototype</em> requires a complicated initialization of the cloned object. <a href=\"/design-patterns/factory-method\">Factory Method</a> is based on inheritance but doesn’t require an initialization step.</p>\n</li>\n<li>\n<p>Sometimes <a href=\"/design-patterns/prototype\">Prototype</a> can be a simpler alternative to <a href=\"/design-patterns/memento\">Memento</a>. This works if the object, the state of which you want to store in the history, is fairly straightforward and doesn’t have links to external resources, or the links are easy to re-establish.</p>\n</li>\n<li>\n<p><a href=\"/design-patterns/abstract-factory\">Abstract Factories</a>, <a href=\"/design-patterns/builder\">Builders</a> and <a href=\"/design-patterns/prototype\">Prototypes</a> can all be implemented as <a href=\"/design-patterns/singleton\">Singletons</a>.</p>\n</li>\n</ul>\n</div>\n<div class=\"section implementations\">\n<h2 id=\"implementations\"><i class=\"fa fa-code\" aria-hidden=\"true\"></i> Code Examples</h2>\n<p><a href=\"/design-patterns/prototype/csharp/example\" title=\"Prototype in C#\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/csharp.svg?id=da64592defc6e86d57c39c66e9de3e58\" alt=\"Prototype in C#\" /></a>\n<a href=\"/design-patterns/prototype/cpp/example\" title=\"Prototype in C++\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/cpp.svg?id=f7782ed8b8666246bfcc3f8fefc3b858\" alt=\"Prototype in C++\" /></a>\n<a href=\"/design-patterns/prototype/go/example\" title=\"Prototype in Go\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/go.svg?id=1a89927eb99b1ea3fde7701d97970aca\" alt=\"Prototype in Go\" /></a>\n<a href=\"/design-patterns/prototype/java/example\" title=\"Prototype in Java\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/java.svg?id=e6d87e2dca08c953fe3acd1275ed4f4e\" alt=\"Prototype in Java\" /></a>\n<a href=\"/design-patterns/prototype/php/example\" title=\"Prototype in PHP\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/php.svg?id=be1906eb26b71ec1d3b93720d6156618\" alt=\"Prototype in PHP\" /></a>\n<a href=\"/design-patterns/prototype/python/example\" title=\"Prototype in Python\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/python.svg?id=6d815d43c0f7050a1151b43e51569c9f\" alt=\"Prototype in Python\" /></a>\n<a href=\"/design-patterns/prototype/ruby/example\" title=\"Prototype in Ruby\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/ruby.svg?id=b065b718c914bf8e960ef731600be1eb\" alt=\"Prototype in Ruby\" /></a>\n<a href=\"/design-patterns/prototype/rust/example\" title=\"Prototype in Rust\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/rust.svg?id=1f5698a4b5ae23fe79413511747e4a87\" alt=\"Prototype in Rust\" /></a>\n<a href=\"/design-patterns/prototype/swift/example\" title=\"Prototype in Swift\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/swift.svg?id=0b716c2d52ec3a48fbe91ac031070c1d\" alt=\"Prototype in Swift\" /></a>\n<a href=\"/design-patterns/prototype/typescript/example\" title=\"Prototype in TypeScript\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/typescript.svg?id=2239d0f16cb703540c205dd8cb0c0cb7\" alt=\"Prototype in TypeScript\" /></a></p>\n</div>\n\n\n    <div class=\"banner-set2\" id=\"book-promo\">\n            <div class=\"prom banner-content banner-bg banner-striped banner-with-image\" data-id=\"DP: 1: Support our free website and own the eBook!\" data-creative-id=\"standard-en\" data-position=\"content_bottom\">\n                <div class=\"banner-image\">\n                    <a href=\"/design-patterns/book\">\n                        <img width=\"200\" height=\"200\" loading=\"lazy\" src=\"/images/patterns/banners/patterns-book-banner-3.png?id=7d445df13c80287beaab234b4f3b698c\" srcset=\"/images/patterns/banners/patterns-book-banner-3-2x.png?id=0cc3f77ab421d1a5c02ee46488231c3a 2x\">\n                    </a>\n                </div>\n\n                <div class=\"banner-text\">\n                    <h3 class=\"title\">Support our free website and own the eBook!</h3>\n                    <ul style=\"font-size: 14px;\">\n                        <li style=\"margin: 0;\">22 design patterns and 8 principles explained in depth.</li>\n                        <li style=\"margin: 0;\">409 well-structured, easy to read, jargon-free pages.</li>\n                        <li style=\"margin: 0;\">225 clear and helpful illustrations and diagrams.</li>\n                        <li style=\"margin: 0;\">An archive with code examples in 11 languages.</li>\n                        <li style=\"margin: 0;\">All devices supported: PDF/EPUB/MOBI/KFX formats.</li>\n                    </ul>\n                    <a class=\"btn btn-secondary\" href=\"/design-patterns/book\"><i class=\"fa fa-book\" aria-hidden=\"true\"></i> Learn more…</a>\n                </div>\n            </div>\n        </div>\n\n    </article>\n\n<nav class=\"prev-next\">\n                    <div class=\"next\">\n                <h4>Read next</h4>\n                <a rel=\"next\" href=\"/design-patterns/singleton\" class=\"btn btn-primary\">Singleton&nbsp;<span class=\"fa fa-arrow-right\"></span></a>\n            </div>\n                            <div class=\"prev\">\n                <h4>Return</h4>\n                <a rel=\"prev\" href=\"/design-patterns/builder\" class=\"btn btn-default\"><span class=\"fa fa-arrow-left\"></span>&nbsp;Builder </a>\n            </div>\n            </nav>\n</div>\n\n<aside class=\"feature content-secondary\">\n    <div class=\"prom banner-sidebar banner-removable banner-removable-patterns\" data-id=\"DP: Sidebar\" data-creative-id=\"standard-sidebar-en\" data-position=\"sidebar\">\n        <div class=\"banner-inner\">\n            <div class=\"image3d-book-right\">\n                <div class=\"image3d-cover\" style=\"background: #0b3752;\">\n                    <a href=\"/design-patterns/book\">\n                        <img width=\"250\" height=\"375\" loading=\"lazy\" src=\"/images/patterns/book/web-cover-en.png?id=328861769fd11617674e3b8a7e2dd9e7\" srcset=\"/images/patterns/book/web-cover-en-2x.png?id=02940141c5652ed5a426d87390b16366 2x\">\n                    </a>\n                </div>\n            </div>\n            <div style=\"margin-top: 1rem\">\n                <p class=\"text-center\" >This article is a part of our eBook<br/><strong>Dive Into Design Patterns</strong>.</p>\n                <a href=\"/design-patterns/book\" class=\"btn btn-secondary btn-block\"><i class=\"fa fa-book\" aria-hidden=\"true\"></i> Learn more…</a>\n            </div>\n        </div>\n    </div>\n\n\n</aside>\n                    </div>\n    </main>\n\n    <aside class=\"sidebar main-menu\">\n    <div class=\"main-menu-controls\">\n        <button class=\"navigation-toggle\"><i class=\"fa fa-fw fa-times\"></i></button>\n    </div>\n    <div class=\"main-menu-list-wrapper nano\">\n        <div class=\"main-menu-list nano-content\">\n            <a class=\"menu-brand\" href=\"/\">\n                                    <img width=200 height=241 loading=\"lazy\" alt=\"Refactoring.Guru\" src=\"/images/content-public/logos/logo-new.png?id=97d554614702483f31e38b32e82d8e34\" srcset=\"/images/content-public/logos/logo-new-2x.png?id=3bc33294e095bab1d6fe9ae421d07837 2x\">\n                            </a>\n\n            <div class=\"menu-container\" style=\"position: relative\">\n                                <ul class=\"menu-list trail\">\n                            <li class=\"featured\">\n            <a href=\"/store\">\n                <i class=\"fa fa-fw fa-star\" aria-hidden=\"true\"></i> Premium Content\n            </a>\n    \n            <ul >\n                            <li class=\"featured menu-fs15\">\n            <a href=\"/design-patterns/book\">\n                <i class=\"fa fa-fw fa-book\" aria-hidden=\"true\"></i> Design Patterns eBook\n            </a>\n    \n    \n            </li>\n                                <li class=\"featured menu-fs15\">\n            <a href=\"/refactoring/course\">\n                <i class=\"fa fa-fw fa-graduation-cap\" aria-hidden=\"true\"></i> Refactoring Course\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring\">\n                <i class=\"fa fa-fw fa-scissors\" aria-hidden=\"true\"></i> Refactoring\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/refactoring/what-is-refactoring\">\n                What is Refactoring\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/refactoring/what-is-refactoring\">\n                Clean code\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/technical-debt\">\n                Technical debt\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/when\">\n                When to refactor\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/how-to\">\n                How to refactor\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/catalog\">\n                Catalog\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells\">\n                Code Smells\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/refactoring/smells/bloaters\">\n                Bloaters\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/long-method\">\n                Long Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/large-class\">\n                Large Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/primitive-obsession\">\n                Primitive Obsession\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/long-parameter-list\">\n                Long Parameter List\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/data-clumps\">\n                Data Clumps\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/oo-abusers\">\n                Object-Orientation Abusers\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/switch-statements\">\n                Switch Statements\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/temporary-field\">\n                Temporary Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/refused-bequest\">\n                Refused Bequest\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/alternative-classes-with-different-interfaces\">\n                Alternative Classes with Different Interfaces\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/change-preventers\">\n                Change Preventers\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/divergent-change\">\n                Divergent Change\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/shotgun-surgery\">\n                Shotgun Surgery\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/parallel-inheritance-hierarchies\">\n                Parallel Inheritance Hierarchies\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/dispensables\">\n                Dispensables\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/comments\">\n                Comments\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/duplicate-code\">\n                Duplicate Code\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/lazy-class\">\n                Lazy Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/data-class\">\n                Data Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/dead-code\">\n                Dead Code\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/speculative-generality\">\n                Speculative Generality\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/couplers\">\n                Couplers\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/feature-envy\">\n                Feature Envy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/inappropriate-intimacy\">\n                Inappropriate Intimacy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/message-chains\">\n                Message Chains\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/middle-man\">\n                Middle Man\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/other\">\n                Other Smells\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/incomplete-library-class\">\n                Incomplete Library Class\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques\">\n                Refactorings\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/refactoring/techniques/composing-methods\">\n                Composing Methods\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/extract-method\">\n                Extract Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/inline-method\">\n                Inline Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-variable\">\n                Extract Variable\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/inline-temp\">\n                Inline Temp\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-temp-with-query\">\n                Replace Temp with Query\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/split-temporary-variable\">\n                Split Temporary Variable\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-assignments-to-parameters\">\n                Remove Assignments to Parameters\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-method-with-method-object\">\n                Replace Method with Method Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/substitute-algorithm\">\n                Substitute Algorithm\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/moving-features-between-objects\">\n                Moving Features between Objects\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/move-method\">\n                Move Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/move-field\">\n                Move Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-class\">\n                Extract Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/inline-class\">\n                Inline Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/hide-delegate\">\n                Hide Delegate\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-middle-man\">\n                Remove Middle Man\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-foreign-method\">\n                Introduce Foreign Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-local-extension\">\n                Introduce Local Extension\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/organizing-data\">\n                Organizing Data\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/self-encapsulate-field\">\n                Self Encapsulate Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-data-value-with-object\">\n                Replace Data Value with Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/change-value-to-reference\">\n                Change Value to Reference\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/change-reference-to-value\">\n                Change Reference to Value\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-array-with-object\">\n                Replace Array with Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/duplicate-observed-data\">\n                Duplicate Observed Data\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/change-unidirectional-association-to-bidirectional\">\n                Change Unidirectional Association to Bidirectional\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/change-bidirectional-association-to-unidirectional\">\n                Change Bidirectional Association to Unidirectional\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-magic-number-with-symbolic-constant\">\n                Replace Magic Number with Symbolic Constant\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/encapsulate-field\">\n                Encapsulate Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/encapsulate-collection\">\n                Encapsulate Collection\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-type-code-with-class\">\n                Replace Type Code with Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-type-code-with-subclasses\">\n                Replace Type Code with Subclasses\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-type-code-with-state-strategy\">\n                Replace Type Code with State/Strategy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-subclass-with-fields\">\n                Replace Subclass with Fields\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/simplifying-conditional-expressions\">\n                Simplifying Conditional Expressions\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/decompose-conditional\">\n                Decompose Conditional\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/consolidate-conditional-expression\">\n                Consolidate Conditional Expression\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/consolidate-duplicate-conditional-fragments\">\n                Consolidate Duplicate Conditional Fragments\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-control-flag\">\n                Remove Control Flag\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-nested-conditional-with-guard-clauses\">\n                Replace Nested Conditional with Guard Clauses\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-conditional-with-polymorphism\">\n                Replace Conditional with Polymorphism\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-null-object\">\n                Introduce Null Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-assertion\">\n                Introduce Assertion\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/simplifying-method-calls\">\n                Simplifying Method Calls\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/rename-method\">\n                Rename Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/add-parameter\">\n                Add Parameter\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-parameter\">\n                Remove Parameter\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/separate-query-from-modifier\">\n                Separate Query from Modifier\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/parameterize-method\">\n                Parameterize Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-parameter-with-explicit-methods\">\n                Replace Parameter with Explicit Methods\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/preserve-whole-object\">\n                Preserve Whole Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-parameter-with-method-call\">\n                Replace Parameter with Method Call\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-parameter-object\">\n                Introduce Parameter Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-setting-method\">\n                Remove Setting Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/hide-method\">\n                Hide Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-constructor-with-factory-method\">\n                Replace Constructor with Factory Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-error-code-with-exception\">\n                Replace Error Code with Exception\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-exception-with-test\">\n                Replace Exception with Test\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/dealing-with-generalization\">\n                Dealing with Generalization\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/pull-up-field\">\n                Pull Up Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/pull-up-method\">\n                Pull Up Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/pull-up-constructor-body\">\n                Pull Up Constructor Body\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/push-down-method\">\n                Push Down Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/push-down-field\">\n                Push Down Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-subclass\">\n                Extract Subclass\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-superclass\">\n                Extract Superclass\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-interface\">\n                Extract Interface\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/collapse-hierarchy\">\n                Collapse Hierarchy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/form-template-method\">\n                Form Template Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-inheritance-with-delegation\">\n                Replace Inheritance with Delegation\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-delegation-with-inheritance\">\n                Replace Delegation with Inheritance\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"trail\">\n            <a href=\"/design-patterns\">\n                <i class=\"fa fa-fw fa-puzzle-piece\" aria-hidden=\"true\"></i> Design Patterns\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/what-is-pattern\">\n                What is a Pattern\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/what-is-pattern\">\n                What's a design pattern?\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/history\">\n                History of patterns\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/why-learn-patterns\">\n                Why should I learn patterns?\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/criticism\">\n                Criticism of patterns\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/classification\">\n                Classification of patterns\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/catalog\">\n                Catalog\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-third-level trail\">\n            <a href=\"/design-patterns/creational-patterns\">\n                Creational Patterns\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/factory-method\">\n                Factory Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/abstract-factory\">\n                Abstract Factory\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/builder\">\n                Builder\n            </a>\n    \n    \n            </li>\n                                <li class=\"trail active\">\n            <a href=\"/design-patterns/prototype\">\n                Prototype\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/singleton\">\n                Singleton\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"menu-third-level\">\n            <a href=\"/design-patterns/structural-patterns\">\n                Structural Patterns\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/adapter\">\n                Adapter\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/bridge\">\n                Bridge\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/composite\">\n                Composite\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/decorator\">\n                Decorator\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/facade\">\n                Facade\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/flyweight\">\n                Flyweight\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/proxy\">\n                Proxy\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"menu-third-level\">\n            <a href=\"/design-patterns/behavioral-patterns\">\n                Behavioral Patterns\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/chain-of-responsibility\">\n                Chain of Responsibility\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/command\">\n                Command\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/iterator\">\n                Iterator\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/mediator\">\n                Mediator\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/memento\">\n                Memento\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/observer\">\n                Observer\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/state\">\n                State\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/strategy\">\n                Strategy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/template-method\">\n                Template Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/visitor\">\n                Visitor\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"menu-code-examples\">\n            <a href=\"/design-patterns/examples\">\n                Code Examples\n            </a>\n    \n            <ul >\n                            <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/csharp\">\n                C#\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/cpp\">\n                C++\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/go\">\n                Go\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/java\">\n                Java\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/php\">\n                PHP\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/python\">\n                Python\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/ruby\">\n                Ruby\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/rust\">\n                Rust\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/swift\">\n                Swift\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/typescript\">\n                TypeScript\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n                </div>\n\n            <div class=\"main-menu-aux-controls\">\n                <a href=\"https://refactoring.guru/login\" title=\"Sign in\" style=\" display: inline-flex; align-items: center; gap: 6px; \"><svg style=\"width: 16px; height: 16px; filter:drop-shadow(0 1px 1px #74261e)\" class=\"inline-block mx-0\"  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\"opacity=\"0.4\" d=\"M352.7 222.4c3.2 1 6.5 1.6 10 1.6l21.3 0c17.7 0 32 14.3 32 32s-14.3 32-32 32l-21.3 0c-.8 0-1.7 0-2.5 0c-.9 0-1.7-.1-2.5-.1c-1.7-.1-3.4-.2-5-.4C357.4 414 391.1 512 432 512c44.2 0 80-114.6 80-256S476.2 0 432 0c-40.6 0-74.2 96.9-79.3 222.4z\"/><path fill=\"currentColor\"class=\"fa-primary\" d=\"M320 48a48 48 0 1 0 -96 0 48 48 0 1 0 96 0zM125.7 175.5c9.9-9.9 23.4-15.5 37.5-15.5c1.9 0 3.8 .1 5.6 .3L137.6 254c-9.3 28 1.7 58.8 26.8 74.5l86.2 53.9-25.4 88.8c-4.9 17 5 34.7 22 39.6s34.7-5 39.6-22l28.7-100.4c5.9-20.6-2.6-42.6-20.7-53.9L238 299l30.9-82.4 5.1 12.3C289 264.7 323.9 288 362.7 288l21.3 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-21.3 0c-12.9 0-24.6-7.8-29.5-19.7l-6.3-15c-14.6-35.1-44.1-61.9-80.5-73.1l-48.7-15c-11.1-3.4-22.7-5.2-34.4-5.2c-31 0-60.8 12.3-82.7 34.3L57.4 153.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l23.1-23.1zM91.2 352L32 352c-17.7 0-32 14.3-32 32s14.3 32 32 32l69.6 0c19 0 36.2-11.2 43.9-28.5L157 361.6l-9.5-6c-17.5-10.9-30.5-26.8-37.9-44.9L91.2 352z\"/></svg> Sign in</a>\n                <a href=\"https://feedback.refactoring.guru/\" class=\"userecho-public\" rel=\"nofollow\" title=\"Contact us\"><i class=\"fa fa-fw fa-fw fa-envelope\" aria-hidden=\"true\"></i> Contact us</a>\n            </div>\n        </div>\n    </div>\n</aside>\n\n    <nav class=\"navigation\" role=\"navigation\">\n    <div class=\"navigation-container\">\n        <a class=\"navigation-brand\" href=\"/\">\n            <img alt=\"Refactoring.Guru\"\n                 src=\"/images/content-public/logos/logo-new-mobile.png?id=ea18aa9b032eaa92835ed6d472b03b4a\"\n                 srcset=\"/images/content-public/logos/logo-new-mobile-2x.png?id=7ad5648bfd86ae2e8524147a72877c64 2x\">\n        </a>\n\n        <div class=\"shop-link d-none d-lg-block\" style=\"display: none !important;\">\n            <a class=\"btn btn-md btn-primary btn-featured\" href=\"/store\"><svg style=\"width: 28px; height: 28px; fill: currentColor; display: inline-block; margin-top: -14px;\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><!--! Font Awesome Pro 6.3.0 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2023 Fonticons, Inc. --><path d=\"M356 60l60 20-60 20-20 60-20-60L256 80l60-20L336 0l20 60zM464 208l48 16-48 16-16 48-16-48-48-16 48-16 16-48 16 48zm-243.8-9.8l33 66.9 73.8 10.7 59.8 8.7-43.3 42.2-53.4 52.1 12.6 73.5L313 512l-53.5-28.1-66-34.7-66 34.7L73.9 512l10.2-59.6 12.6-73.5L43.3 326.8 0 284.6l59.8-8.7 73.8-10.7 33-66.9L193.5 144l26.8 54.2zm26.1 114.4l-25-3.6-11.2-22.6-16.7-33.9-16.7 33.9L165.6 309l-25 3.6-37.4 5.4 27.1 26.4 18.1 17.6L144 387l-6.4 37.3 33.5-17.6 22.3-11.7 22.3 11.7 33.5 17.6L242.9 387l-4.3-24.9 18.1-17.6 27.1-26.4-37.4-5.4z\"/></svg>\n                Shop Now!</a>\n        </div>\n\n        <ul class=\"navigation-menu\">\n                            <li class=\"nav-locale dropdown dropdown-locales\">\n                    <button class=\"dropdown-toggle\" id=\"dropdownLanguage\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                        <i class=\"fa fa-fw fa-globe\" aria-hidden=\"true\"></i> <span class=\"caption d-none d-lg-inline-block\">English</span>\n                    </button>\n                    <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownLanguage\">\n                                                                                                                        <a href=\"https://refactoring.guru/design-patterns/prototype\" class=\"dropdown-item locale-link active\" data-locale=\"en\" title=\"English\">English</a>\n                                                                                                                                <a href=\"https://refactoring.guru/es/design-patterns/prototype\" class=\"dropdown-item locale-link \" data-locale=\"es\" title=\"Español\">Español</a>\n                                                                                                                                <a href=\"https://refactoring.guru/fr/design-patterns/prototype\" class=\"dropdown-item locale-link \" data-locale=\"fr\" title=\"Français\">Français</a>\n                                                                                                                                <a href=\"https://refactoring.guru/ja/design-patterns/prototype\" class=\"dropdown-item locale-link \" data-locale=\"ja\" title=\"日本語\">日本語</a>\n                                                                                                                                <a href=\"https://refactoring.guru/ko/design-patterns/prototype\" class=\"dropdown-item locale-link \" data-locale=\"ko\" title=\"한국어\">한국어</a>\n                                                                                                                                <a href=\"https://refactoring.guru/pl/design-patterns/prototype\" class=\"dropdown-item locale-link \" data-locale=\"pl\" title=\"Polski\">Polski</a>\n                                                                                                                                <a href=\"https://refactoring.guru/pt-br/design-patterns/prototype\" class=\"dropdown-item locale-link \" data-locale=\"pt-br\" title=\"Português Brasileiro\">Português Brasileiro</a>\n                                                                                                                                <a href=\"https://refactoring.guru/ru/design-patterns/prototype\" class=\"dropdown-item locale-link \" data-locale=\"ru\" title=\"Русский\">Русский</a>\n                                                                                                                                <a href=\"https://refactoring.guru/uk/design-patterns/prototype\" class=\"dropdown-item locale-link \" data-locale=\"uk\" title=\"Українська\">Українська</a>\n                                                                                                                                <a href=\"https://refactoringguru.cn/design-patterns/prototype\" class=\"dropdown-item locale-link \" data-locale=\"zh\" title=\"中文\">中文</a>\ndiv>\n                </li>\n                        <li class=\"nav-contacts\">\n                <a class=\"userecho-private\" href=\"https://feedback.refactoring.guru/?show_feedback_form_private=true\" rel=\"nofollow\" title=\"Contact us\">\n                    <i class=\"fa fa-fw fa-envelope\" aria-hidden=\"true\"></i> <span class=\"caption d-none d-xl-inline-block\">Contact us</span>\n                </a>\n            </li>\n                            <li class=\"nav-user\">\n                    <a href=\"https://refactoring.guru/login\" title=\"Sign in\"><span class=\"sign-in-icon\"><svg style=\"width: 24px; height: 24px; \" class=\"inline-block \"  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\"opacity=\"0.4\" d=\"M352.7 222.4c3.2 1 6.5 1.6 10 1.6l21.3 0c17.7 0 32 14.3 32 32s-14.3 32-32 32l-21.3 0c-.8 0-1.7 0-2.5 0c-.9 0-1.7-.1-2.5-.1c-1.7-.1-3.4-.2-5-.4C357.4 414 391.1 512 432 512c44.2 0 80-114.6 80-256S476.2 0 432 0c-40.6 0-74.2 96.9-79.3 222.4z\"/><path fill=\"currentColor\"class=\"fa-primary\" d=\"M320 48a48 48 0 1 0 -96 0 48 48 0 1 0 96 0zM125.7 175.5c9.9-9.9 23.4-15.5 37.5-15.5c1.9 0 3.8 .1 5.6 .3L137.6 254c-9.3 28 1.7 58.8 26.8 74.5l86.2 53.9-25.4 88.8c-4.9 17 5 34.7 22 39.6s34.7-5 39.6-22l28.7-100.4c5.9-20.6-2.6-42.6-20.7-53.9L238 299l30.9-82.4 5.1 12.3C289 264.7 323.9 288 362.7 288l21.3 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-21.3 0c-12.9 0-24.6-7.8-29.5-19.7l-6.3-15c-14.6-35.1-44.1-61.9-80.5-73.1l-48.7-15c-11.1-3.4-22.7-5.2-34.4-5.2c-31 0-60.8 12.3-82.7 34.3L57.4 153.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l23.1-23.1zM91.2 352L32 352c-17.7 0-32 14.3-32 32s14.3 32 32 32l69.6 0c19 0 36.2-11.2 43.9-28.5L157 361.6l-9.5-6c-17.5-10.9-30.5-26.8-37.9-44.9L91.2 352z\"/></svg></span> <span class=\"account-icon\" style=\"display:none\"><svg style=\"width: 24px; height: 24px; \" class=\"inline-block \"  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 576 512\"><path fill=\"currentColor\"opacity=\"0.4\" d=\"M64 270.5l224-196c74.7 65.4 149.4 130.7 224.1 196.1l.4 177.3c.1 35.4-28.6 64.1-64 64.1l-320.4 0c-35.3 0-64-28.6-64-64L64 270.5zM176.1 433.6c.1 .5 .1 1.1 .2 1.6c.2 1 .5 2 .9 3c.8 1.9 2 3.6 3.4 5.1c2.9 2.9 6.9 4.7 11.3 4.7l192 0c8.8 0 16-7.2 16-16c0-44.2-35.8-80-80-80l-64 0c-22.1 0-42.1 9-56.6 23.4c-7.2 7.2-13.1 15.9-17.1 25.4c-2 4.8-3.6 9.8-4.7 15c-.5 2.6-.9 5.3-1.2 7.9c-.1 1.3-.2 2.7-.3 4.1c-.1 1.4-.1 2.7-.1 4.1c0 .6 0 1.1 .1 1.6zm48.2-184.2c-.1 1.1-.2 2.2-.2 3.2c-.1 1.1-.1 2.2-.1 3.3s0 2.2 .1 3.3c.1 1.1 .1 2.2 .2 3.2c.2 2.1 .5 4.3 1 6.4c.9 4.2 2.1 8.2 3.7 12c3.2 7.7 7.9 14.6 13.7 20.3C254.3 312.8 270.3 320 288 320c35.3 0 64-28.7 64-64s-28.7-64-64-64c-17.7 0-33.7 7.2-45.3 18.7c-5.8 5.8-10.5 12.7-13.7 20.3c-1.6 3.8-2.9 7.8-3.7 12c-.4 2.1-.8 4.2-1 6.4z\"/><path fill=\"currentColor\"class=\"fa-primary\" d=\"M309.1 7.9C297-2.6 279-2.6 266.9 7.9l-256 224c-13.3 11.6-14.6 31.9-3 45.2s31.9 14.6 45.2 3L288 74.5 522.9 280.1c13.3 11.6 33.5 10.3 45.2-3s10.3-33.5-3-45.2L512 185.5 512 64c0-17.7-14.3-32-32-32l-32 0c-17.7 0-32 14.3-32 32l0 37.5L309.1 7.9zM352 256a64 64 0 1 0 -128 0 64 64 0 1 0 128 0zm-96 96c-44.2 0-80 35.8-80 80c0 8.8 7.2 16 16 16l192 0c8.8 0 16-7.2 16-16c0-44.2-35.8-80-80-80l-64 0z\"/></svg></span> <span class=\"sign-out-icon\" style=\"display:none\"><svg style=\"width: 24px; height: 24px; \" class=\"inline-block \"  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\"opacity=\"0.4\" d=\"M0 256C0 397.4 35.8 512 80 512c25.3 0 47.8-37.5 62.5-96L128 416c-.5 0-1.1 0-1.6 0c-.6 0-1.1-.1-1.6-.1c-1.1-.1-2.1-.3-3.2-.5c-2.1-.4-4.1-1.1-6-1.9c-3.8-1.6-7.3-4-10.2-6.9s-5.2-6.3-6.9-10.2c-.8-1.9-1.4-3.9-1.9-6c-.2-1.1-.4-2.3-.5-3.5c0-.3 0-.6-.1-.8c0-.2 0-.4 0-.7c0-.4 0-.7 0-.7c0-.5 0-.7 0-.9c0-.3 0-.6 0-.9c0 0 0-.3 0-.7c0-.2 0-.4 0-.7c0-.2 0-.4 .1-.8c0-.3 .1-.6 .1-.9c0-.2 .1-.4 .1-.7c.1-.8 .2-1.2 .3-1.7c.5-2.2 1.1-4.2 1.9-6.1c1.6-3.8 4-7.3 6.9-10.2c5.8-5.8 13.8-9.4 22.6-9.4l26.2 0c3.8-29.6 5.8-62.1 5.8-96c0-18.3-.6-36.1-1.7-53.4c-1.7-1.2-3.4-2.5-4.9-4c-.8-.8-1.6-1.6-2.2-2.5s-1.3-1.7-1.9-2.6c-1.2-1.8-2.1-3.6-2.9-5.5s-1.4-3.9-1.8-5.9c-.2-1-.3-2-.4-3s-.1-2-.2-3c0-8.3 3.1-16.5 9.4-22.8C141 63.1 112.8 0 80 0C35.8 0 0 114.6 0 256z\"/><path fill=\"currentColor\"class=\"fa-primary\" d=\"M416 48a48 48 0 1 0 -96 0 48 48 0 1 0 96 0zM221.7 175.5c9.9-9.9 23.4-15.5 37.5-15.5c1.9 0 3.8 .1 5.6 .3L233.6 254c-9.3 28 1.7 58.8 26.8 74.5l86.2 53.9-25.4 88.8c-4.9 17 5 34.7 22 39.6s34.7-5 39.6-22l28.7-100.4c5.9-20.6-2.6-42.6-20.7-53.9L334 299l30.9-82.4 5.1 12.3C385 264.7 419.9 288 458.7 288l21.3 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-21.3 0c-12.9 0-24.6-7.8-29.5-19.7l-6.3-15c-14.6-35.1-44.1-61.9-80.5-73.1l-48.7-15c-11.1-3.4-22.7-5.2-34.4-5.2c-31 0-60.8 12.3-82.7 34.3l-23.1 23.1c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l23.1-23.1zM187.2 352L128 352c-17.7 0-32 14.3-32 32s14.3 32 32 32l69.6 0c19 0 36.2-11.2 43.9-28.5L253 361.6l-9.5-6c-17.5-10.9-30.5-26.8-37.9-44.9L187.2 352z\"/></svg></span> <span class=\"caption d-none d-xl-inline-block\">Sign in</span></a>\n                </li>\n                        <li class=\"nav-menu\">\n                <button class=\"navigation-toggle\"><i class=\"fa fa-fw fa-bars\" aria-hidden=\"true\"></i></button>\n            </li>\n        </ul>\n    </div>\n</nav>\n\n    <footer class=\"footer center-content\">\n    <div class=\"footer-container center-content-container\">\n        <div class=\"footer-inner container-fluid\">\n            <div class=\"row\">\n                <div class=\"col-8 col-md-10\">\n                    <ul class=\"footer-list footer-list-horizontal\">\n                        <li><a href=\"/\">Home</a></li>\n                        <li><a href=\"/refactoring\">Refactoring</a></li>\n                        <li><a href=\"/design-patterns\">Design Patterns</a></li>\n                        <li><a href=\"/store\">Premium Content</a></li>\n                        <li><a href=\"https://gitbybit.com/\">Git Course</a></li>\n                        <li><a href=\"https://refactoring.userecho.com/\" rel=\"nofollow\" class=\"userecho-public\">Forum</a></li>\n                        <li><a href=\"https://refactoring.userecho.com/\" rel=\"nofollow\" class=\"userecho-private\">Contact us</a></li>\n                    </ul>\n                </div>\n                <div class=\"col-4 col-md-2\">\n                    <ul class=\"footer-list footer-list-iconic footer-list-right\">\n                                                    <li><a href=\"https://www.facebook.com/refactoring.guru\"><i class=\"fa fa-facebook-official\"></i></a></li>\n                                                <li><a href=\"/sendy/form\" rel=\"nofollow\"><i class=\"fa fa-envelope\" aria-hidden=\"true\"></i></a></li>\n                        <li><a href=\"https://github.com/RefactoringGuru\"><i class=\"fa fa-github-circled\"></i></a></li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"footer-second\">\n        <div class=\"footer-container center-content-container\">\n            <div class=\"footer-inner container-fluid\">\n                <div class=\"row\">\n                    <div class=\"col-12 col-sm-6\">\n                        <i class=\"fa fa-fw fa-copyright\"></i> 2014-2025 <a href=\"/\">Refactoring.Guru</a>. <span style=\"white-space: nowrap\">All rights reserved.</span><br>\n                        <i class=\"fa fa-fw fa-image\"></i> Illustrations by <a href=\"http://zhart.us/\" rel=\"nofollow\"><span style=\"white-space: nowrap\">Dmitry Zhart</span></a>\n                    </div>\n                    <div class=\"footer-links-right col-12 col-sm-6 mt-4 mt-sm-0\">\n                        <ul class=\"footer-list footer-list-horizontal footer-list-right\">\n                            <li><a href=\"/terms\"><span>Terms &amp; Conditions</span></a>\n                            </li>\n                            <li><a href=\"/privacy-policy\"><span>Privacy Policy</span></a>\n                            </li>\n                            <li><a href=\"/content-usage-policy\"><span>Content Usage Policy</span></a>\n                            </li>\n                            <li><a href=\"/site-about\"><span>About us</span></a>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n                                    <div class=\"row\">\n                        <div class=\"col-12 col-sm-4\">\n                            <div class=\"mt-4\">\n                                                                    <b>Ukrainian office:</b><br>\n                                    <object class=\"fa-fw\" style=\"height: 0.8rem; filter: invert(50%);\"  type=\"image/svg+xml\" data=\"/images/content-public/icons/fa-building.svg?id=afddb5806968b0a9acfc1df75a181234\">\n                                        <img class=\"fa-fw\" style=\"height: 0.8rem;\" src=\"/images/content-public/icons/fa-building.svg?id=afddb5806968b0a9acfc1df75a181234\" alt=\"Organization address\"/>\n                                    </object> FOP Olga Skobeleva<br>\n                                    <svg style=\"width: 16px; height: 16px; margin-right: 1px; fill: currentColor;\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\"><path d=\"M352 192c0-88.4-71.6-160-160-160S32 103.6 32 192c0 15.6 5.4 37 16.6 63.4c10.9 25.9 26.2 54 43.6 82.1c34.1 55.3 74.4 108.2 99.9 140c25.4-31.8 65.8-84.7 99.9-140c17.3-28.1 32.7-56.3 43.6-82.1C346.6 229 352 207.6 352 192zm32 0c0 87.4-117 243-168.3 307.2c-12.3 15.3-35.1 15.3-47.4 0C117 435 0 279.4 0 192C0 86 86 0 192 0S384 86 384 192zm-240 0a48 48 0 1 0 96 0 48 48 0 1 0 -96 0zm48 80a80 80 0 1 1 0-160 80 80 0 1 1 0 160z\"/></svg> Abolmasova 7<br>\n                                    <span style=\"margin-left: 21px;\">Kyiv, Ukraine, 02002</span><br>\n                                    <i class=\"fa fa-fw fa-envelope\"></i>  Email: support@refactoring.guru\n                                \n                            </div>\n                        </div>\n                        <div class=\"col-12 col-sm-4\">\n                            <div class=\"mt-4\">\n                                <b>Spanish office:</b><br>\n                                <object class=\"fa-fw\" style=\"height: 0.8rem; filter: invert(50%);\"  type=\"image/svg+xml\" data=\"/images/content-public/icons/fa-building.svg?id=afddb5806968b0a9acfc1df75a181234\">\n                                    <img class=\"fa-fw\" style=\"height: 0.8rem;\" src=\"/images/content-public/icons/fa-building.svg?id=afddb5806968b0a9acfc1df75a181234\" alt=\"Organization address\"/>\n                                </object> Oleksandr Shvets<br>\n                                <svg style=\"width: 16px; height: 16px; margin-right: 1px; fill: currentColor;\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\"><path d=\"M352 192c0-88.4-71.6-160-160-160S32 103.6 32 192c0 15.6 5.4 37 16.6 63.4c10.9 25.9 26.2 54 43.6 82.1c34.1 55.3 74.4 108.2 99.9 140c25.4-31.8 65.8-84.7 99.9-140c17.3-28.1 32.7-56.3 43.6-82.1C346.6 229 352 207.6 352 192zm32 0c0 87.4-117 243-168.3 307.2c-12.3 15.3-35.1 15.3-47.4 0C117 435 0 279.4 0 192C0 86 86 0 192 0S384 86 384 192zm-240 0a48 48 0 1 0 96 0 48 48 0 1 0 -96 0zm48 80a80 80 0 1 1 0-160 80 80 0 1 1 0 160z\"/></svg> Avda Pamplona 64<br>\n                                <span style=\"margin-left: 21px;\">Pamplona, Spain, 31009</span><br>\n                                <i class=\"fa fa-fw fa-envelope\"></i>  Email: support@refactoring.guru\n                            </div>\n                        </div>\n                    </div>\n                            </div>\n        </div>\n    </div>\n</footer>\n\n</div>\n\n\n    <script defer>\n    var CodeMirrorScripts = [\"/js/codemirror.min.js?id=f7ae4adf14bd00338caf8e95da733cc9\"];\n</script>\n\n\n\n    <script>window.loadContent = true;window.loadCart = true;</script>\n</body>\n</html>\n"},
{"title": null, "url": "https://refactoring.guru/design-patterns/builder", "raw_html": "<!DOCTYPE html>\n<html lang=\"en\" dir=\"ltr\">\n<head prefix=\"og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# website: http://ogp.me/ns/website#\">\n    <meta charset=\"utf-8\">\n    <title>Builder</title>\n\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n    <meta name=\"theme-color\" content=\"#A2E2FD\" />\n\n            <style>\n        .buy-widget-excl-local-taxes {\n            display: none;\n        }\n    </style>\n    \n    <link rel=\"preload\" href=\"/fonts/PTSans/ptsans-regular_en.woff2?1\" as=\"font\" type=\"font/woff2\" crossorigin>\n    <link rel=\"preload\" href=\"/fonts/PTSans/ptsans-bold_en.woff2?1\" as=\"font\" type=\"font/woff2\" crossorigin>\n        <link rel=\"preload\" href=\"/fonts/fontello/fontawesome.woff2?15843843\" as=\"font\" type=\"font/woff2\" crossorigin>\n    <link rel=\"preload\" href=\"/fonts/FiraCode/woff2/FiraCode-Regular_latin.woff2\" as=\"font\" type=\"font/woff2\" crossorigin>\n        <link rel=\"preconnect dns-prefetch\" href=\"https://cdn.paddle.com\">\n    <link rel=\"preconnect dns-prefetch\" href=\"https://www.googletagmanager.com\">\n\n    <link rel=\"alternate\" href=\"https://refactoring.guru/design-patterns/builder\" hreflang=\"x-default\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/es/design-patterns/builder\" hreflang=\"es\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/fr/design-patterns/builder\" hreflang=\"fr\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/ja/design-patterns/builder\" hreflang=\"ja\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/ko/design-patterns/builder\" hreflang=\"ko\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/pl/design-patterns/builder\" hreflang=\"pl\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/pt-br/design-patterns/builder\" hreflang=\"pt-br\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/ru/design-patterns/builder\" hreflang=\"ru\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/uk/design-patterns/builder\" hreflang=\"uk\"/>\n    <link rel=\"alternate\" href=\"https://refactoringguru.cn/design-patterns/builder\" hreflang=\"zh\"/>\n\n    <meta name=\"description\" content=\"Builder is a creational design pattern that lets you construct complex objects step by step. The pattern allows you to produce different types and representations of an object using the same construction code.\">\n\n    <link rel=\"canonical\" href=\"https://refactoring.guru/design-patterns/builder\"/>\n\n    <link rel=\"icon\" type=\"image/x-icon\" href=\"/favicon.png\"/>\n\n        <meta property=\"fb:app_id\" content=\"666819623386327\"/>\n        <meta property=\"og:type\" content=\"website\"/>\n        <meta property=\"og:image\" content=\"https://refactoring.guru/images/refactoring/social/facebook-share-preview.png?id=dbf9e98269595be86eb668f365be6868\"/>\n    \n                    <link rel=\"stylesheet\" href=\"/css/public-packed.min.css?id=aaefab4da343b914b8dda9973604a9e8\">\n        <style type=\"text/css\">\n                    @font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_cyrillic-ext.woff2?1) format(\"woff2\");unicode-range:U+0460-052F,U+1C80-1C88,U+20B4,U+2DE0-2DFF,U+A640-A69F,U+FE2E-FE2F}@font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_cyrillic.woff2?1) format(\"woff2\");unicode-range:U+0400-045F,U+0490-0491,U+04B0-04B1,U+2116}@font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_latin-ext.woff2?1) format(\"woff2\");unicode-range:U+0100-024F,U+0259,U+1E00-1EFF,U+2020,U+20A0-20AB,U+20AD-20CF,U+2113,U+2C60-2C7F,U+A720-A7FF}@font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_latin.woff2?1) format(\"woff2\");unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}@font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_en.woff2?1) format(\"woff2\");unicode-range:U+0-FF,U+131,U+142,U+152,U+153,U+2BB,U+2BC,U+2C6,U+2DA,U+2DC,U+420,U+423,U+430,U+438-43A,U+43D,U+440,U+441,U+443,U+44C,U+457,U+2000-206F,U+2074,U+20AA-20AC,U+20B4,U+20B9,U+20BA,U+20BD,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_cyrillic-ext.woff2?1) format(\"woff2\");unicode-range:U+0460-052F,U+1C80-1C88,U+20B4,U+2DE0-2DFF,U+A640-A69F,U+FE2E-FE2F}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_cyrillic.woff2?1) format(\"woff2\");unicode-range:U+0400-045F,U+0490-0491,U+04B0-04B1,U+2116}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_latin-ext.woff2?1) format(\"woff2\");unicode-range:U+0100-024F,U+0259,U+1E00-1EFF,U+2020,U+20A0-20AB,U+20AD-20CF,U+2113,U+2C60-2C7F,U+A720-A7FF}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_latin.woff2?1) format(\"woff2\");unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_en.woff2?1) format(\"woff2\");unicode-range:U+0-FF,U+131,U+142,U+152,U+153,U+2BB,U+2BC,U+2C6,U+2DA,U+2DC,U+420,U+423,U+430,U+438-43A,U+43D,U+440,U+441,U+443,U+44C,U+457,U+2000-206F,U+2074,U+20AA-20AC,U+20B4,U+20B9,U+20BA,U+20BD,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}\n            </style>\n\n    \n            <script defer src=\"/js/public.min.js?id=1f19fe18ffe0fc844ede8a0f2ee64202\"></script>\n        <script defer src=\"/js/checkout.min.js?id=b4da9c5bd8b1cf504447c07ae8b7cd44\"></script>\n            <script defer src=\"https://cdn.paddle.com/paddle/v2/paddle.js\"></script>\n    <script async src=\"https://www.googletagmanager.com/gtag/js?id=G-SR8Y3GYQYC\"></script>\n\n    <script type=\"application/ld+json\">\n        {\"@context\": \"http://schema.org\", \"@graph\": [{\"@type\":\"Person\",\"@id\":\"https://refactoring.guru/#founder\",\"name\":\"Alexander Shvets\"},{\"@type\":\"Organization\",\"@id\":\"https://refactoring.guru/#organization\",\"name\":\"Refactoring.Guru\",\"description\":\"Refactoring.Guru makes it easy for you to discover everything you need to know about refactoring, design patterns, SOLID principles, and other smart programming topics.\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https://refactoring.guru/#organizationlogo\",\"url\":\"https://refactoring.guru/images/content-public/logos/logo-plain.png\",\"caption\":\"Refactoring.Guru\"},\"logo\":{\"@id\":\"https://refactoring.guru/#organizationlogo\"},\"founder\":{\"@id\":\"https://refactoring.guru/#founder\"},\"sameAs\":[\"https://www.facebook.com/refactoring.guru\",\"https://twitter.com/RefactoringGuru\",\"https://github.com/RefactoringGuru\"]},{\"@type\":\"WebSite\",\"@id\":\"https://refactoring.guru/#website\",\"url\":\"https://refactoring.guru/\",\"name\":\"Refactoring.Guru\",\"description\":\"Refactoring.Guru makes it easy for you to discover everything you need to know about refactoring, design patterns, SOLID principles, and other smart programming topics.\",\"author\":{\"@id\":\"https://refactoring.guru/#founder\"},\"publisher\":{\"@id\":\"https://refactoring.guru/#organization\"},\"copyrightYear\":2014},{\"@type\":\"WebPage\",\"@id\":\"https://refactoring.guru/design-patterns/builder#webpage\",\"url\":\"https://refactoring.guru/design-patterns/builder\",\"inLanguage\":\"en\",\"name\":\"Builder\",\"description\":\"Builder is a creational design pattern that lets you construct complex objects step by step. The pattern allows you to produce different types and representations of an object using the same construction code.\",\"isPartOf\":{\"@id\":\"https://refactoring.guru#website\"},\"breadcrumb\":{\"@id\":\"https://refactoring.guru/design-patterns/builder#breadcrumb\"},\"primaryImageOfPage\":{\"@id\":\"https://refactoring.guru/design-patterns/builder#primaryimage\"},\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https://refactoring.guru/design-patterns/builder#primaryimage\",\"url\":\"https://refactoring.guru/images/patterns/content/builder/builder-en-3x.png\",\"width\":1920,\"height\":1200}},{\"@type\":\"Article\",\"@id\":\"https://refactoring.guru/design-patterns/builder#article\",\"isPartOf\":{\"@id\":\"https://refactoring.guru/design-patterns/builder#webpage\"},\"mainEntityOfPage\":{\"@id\":\"https://refactoring.guru/design-patterns/builder#webpage\"},\"author\":{\"@id\":\"https://refactoring.guru#founder\"},\"publisher\":{\"@id\":\"https://refactoring.guru#organization\"},\"headline\":\"Builder\",\"datePublished\":\"2024-01-01\",\"dateModified\":\"2025-01-01\",\"articleSection\":\"Design Patterns\",\"image\":{\"@id\":\"https://refactoring.guru/design-patterns/builder#primaryimage\"}},{\"@type\":\"BreadcrumbList\",\"@id\":\"https://refactoring.guru/design-patterns/builder#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https://refactoring.guru\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Design Patterns\",\"item\":\"https://refactoring.guru/design-patterns\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"Creational Patterns\",\"item\":\"https://refactoring.guru/design-patterns/creational-patterns\"}]}] }\n    </script>\n\n    <script>\nfunction extend(){var extended={};var deep=false;var i=0;var length=arguments[\"length\"];if(Object[\"prototype\"][\"toString\"][\"call\"](arguments[0])=== '[object Boolean]'){deep= arguments[0];i++};var merge=function(obj){for(var prop in obj){if(Object[\"prototype\"][\"hasOwnProperty\"][\"call\"](obj,prop)){if(deep&& Object[\"prototype\"][\"toString\"][\"call\"](obj[prop])=== '[object Object]'){extended[prop]= extend(true,extended[prop],obj[prop])}else {extended[prop]= obj[prop]}}}};for(;i< length;i++){var obj=arguments[i];merge(obj)};return extended}\nfunction defer(method) {if (window.jQuery) {method();} else {setTimeout(function() { defer(method) }, 50);}}\n</script>\n<script>\n+function(sd){sd = (typeof sd === \"string\") ? JSON.parse(atob(sd)) : sd;for(var property in sd){if(window[property]!== null&&  typeof window[property]=== 'object'){window[property]= extend(true,window[property],sd[property])}else {window[property]= sd[property]}}}(\"eyJsb2NhbGUiOiJlbiIsImxvY2FsZV9wcmVmaXgiOiIiLCJsb2NhbGl6ZWRfdXJsX3ByZWZpeCI6Imh0dHBzOlwvXC9yZWZhY3RvcmluZy5ndXJ1XC8iLCJ1cmxfcHJlZml4IjoiaHR0cHM6XC9cL3JlZmFjdG9yaW5nLmd1cnVcLyIsImxvY2FsaXplZF91cmxfcHJlZml4X20iOiJodHRwczpcL1wvcmVmYWN0b3JpbmcuZ3VydVwvIiwidXJsX3ByZWZpeF9tIjoiaHR0cHM6XC9cL3JlZmFjdG9yaW5nLmd1cnVcLyIsInVzZXJfZWNob19hbGlhcyI6InJlZmFjdG9yaW5nIiwidXNlcl9lY2hvX2hvc3QiOiJmZWVkYmFjay5yZWZhY3RvcmluZy5ndXJ1IiwidXNlcl9lY2hvX3ByaXZhdGVfZm9ydW0iOiIyIiwidXNlcl9lY2hvX2xvY2FsZSI6ImVuIiwidXNlcl9lY2hvX3B1YmxpY19mb3J1bSI6IjMiLCJ1c2VyX2VjaG9fcHVibGljX2ZvcnVtX3VybCI6Imh0dHBzOlwvXC9mZWVkYmFjay5yZWZhY3RvcmluZy5ndXJ1XC8iLCJ1c2VyX2VjaG9fc3NvX3Rva2VuIjoiIn0=\");\n</script>\n\n<script>\n    window.dataLayer = window.dataLayer || [];\n    function gtag(){dataLayer.push(arguments);}\n    gtag('js', new Date());\n            gtag('set', 'linker', {'domains': [\"refactoring.guru,refactoringguru.cn\"]});\n        gtag('config', 'G-SR8Y3GYQYC', {\n        // Disable default page view, because we're going to report them on our own.\n        // This is done to report traffic on localized domains as part of the main website traffic\n        // See the Chinese overrides below.\n        send_page_view: false,\n    });\n</script>\n\n<script>\n    (() => {\n        // On first page view after returning from social network, we need to send the social login event.\n        (function detectSocialLogin() {\n            let getCookie = function (name) {\n                var nameEQ = name + \"=\";\n                var ca = document.cookie.split(';');\n                for (var i = 0; i < ca.length; i++) {\n                    var c = ca[i];\n                    while (c.charAt(0) == ' ') c = c.substring(1, c.length);\n                    if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);\n                }\n                return null;\n            };\n            window.social_login_provider = window.social_login_provider || getCookie('social_login_provider');\n            if (window.social_login_provider) {\n                gtag('set', {referrer: null});\n                gtag('event', 'login', {\"method\": window.social_login_provider});\n                // Delete cookie.\n                document.cookie = 'social_login_provider=; Path=/; Max-Age=-99999999;';\n            }\n        })();\n\n        function trackPageView(location, title) {\n            location = location || document.location.href;\n            title = title || document.title;\n\n            // This is show on https://refactoringguru.cn/ and alike.\n            if (typeof window.analytics_path_prefix === 'string') {\n                if (/^(https?:\\/\\/[^\\/]+?)\\/$/.test(location)) {\n                    location = location.replace(/(https?:\\/\\/[^\\/]+?)\\//, '$1' + window.analytics_path_prefix);\n                } else {\n                    location = location.replace(/(https?:\\/\\/[^\\/]+?)\\//, '$1' + window.analytics_path_prefix + '/');\n                }\n                gtag('set', {\n                    'page_location': location\n                });\n            }\n\n            // This is show on https://refactoring.guru/zh/login and alike.\n            if (typeof window.analytics_location_prefix === 'string') {\n                location = location.replace(/(https?:\\/\\/[^\\/]+?)\\//, window.analytics_location_prefix);\n                gtag('set', {\n                    'page_location': location\n                });\n            }\n\n            gtag('event', 'page_view', {\n                page_location: location,\n                page_title: title,\n                locale: window.locale ?? 'en'\n            });\n        }\n\n        if (window.loadContent) {\n            window.onPageLoad = window.onPageLoad || [];\n            window.onPageLoad.push({\n                func: function (context) {\n                    trackPageView(window.location.origin + context.canonicalPath, context.title);\n                },\n                afterAll: true,\n            });\n        }\n        else {\n            trackPageView();\n        }\n    })();\n</script>\n\n\n</head>\n<body class=\"locale-en   announcement   builder\" data-body_class=\"builder\">\n\n<div class=\"body-holder\">\n\n            <div class=\"announcement-block announcement-block-summer prom\" data-id=\"DIDP-announcement\" data-creative-id=\"en\" data-position=\"top\">\n        <span class=\"beach-and-sea\">\n            <span class=\"a1\"></span>\n            <span class=\"a2\"><span class=\"wave\"></span></span>\n            <span class=\"yacht\"></span>\n        </span>\n        <a href=\"/store\">\n            <img src=\"/images/content-public/ann/summer/sunbed.svg?id=b1e7314a63715a13870a6bd1a43613f7\" loading=\"lazy\" style=\"width: 32px; height:32px;vertical-align: middle; scale: -1 1 1;\">\n            <span class=\"announcement-link-text\">Summer SALE</span>\n            <img src=\"/images/content-public/ann/summer/reading-book.svg?id=36006ea720df8c171968cf613e8ea164\" loading=\"lazy\" style=\"width: 32px; height:32px;vertical-align: middle;\">\n        </a>\n    </div>\n\n    \n    <div class=\"cart-placeholder\">\n    <div class=\"cart-block-container\" style=\"display:none\">\n        <div class=\"cart-block btn-group\">\n            <a href=\"#checkout\" class=\"btn cart open-checkout\">\n                <span class=\"cart-text\"></span>&nbsp;<strong class=\"cart-total font-money\"></strong>\n            </a><a href=\"#checkout\" class=\"btn btn-secondary checkout open-checkout\"><i class=\"fa fa-shopping-cart\" aria-hidden=\"true\"></i> <span class=\"btn-text-span d-none d-sm-inline-block d-lg-none d-hg-inline-block\"></span></a>\n        </div>\n    </div>\n</div>\n    <main role=\"main\" class=\"main-content top-content center-content \" data-page_class=\"\">\n        <div class=\"main-content-container center-content-container\">\n                        <div class=\"pattern page text\">\n<article>\n    <div class=\"breadcrumb\">\n                                    <a class=\"home\" href=\"/\"><i class=\"fa fa-home\" aria-hidden=\"true\"></i></a>\n                                                / <a class=\"type\" href=\"/design-patterns\">Design Patterns</a>\n                                                / <a class=\"type\" href=\"/design-patterns/creational-patterns\">Creational Patterns</a>\n                        </div>\n    <h1 class=\"title\">Builder</h1>\n\n    <script type=\"text/javascript\">\n        // Shorten examples titles for users.\n        var h1 = document.getElementsByTagName(\"H1\")[0];\n        if (h1.offsetHeight > 160) {\n            h1.className += ' smaller';\n        }\n\n        // Small beautification for pattern examples.\n        var title = h1.innerHTML;\n        title = title.replace(/^(Java|C\\+\\+|C#|PHP|Python|Ruby|Delphi): (.*)$/, '<strong>$1:</strong> $2');\n        h1.innerHTML = title;\n    </script>\n\n    \n    \n\n    <div class=\"section intent\">\n<h2 id=\"intent\"><i class=\"fa fa-flip-horizontal fa-comment-alt-dots\" aria-hidden=\"true\"></i> Intent</h2>\n<p><strong>Builder</strong> is a creational design pattern that lets you construct complex objects step by step. The pattern allows you to produce different types and representations of an object using the same construction code.</p>\n<figure class=\"image\"><img src=\"/images/patterns/content/builder/builder-en.png?id=617612423ea3752477dc90929115b3ee\" alt=\"Builder design pattern\" srcset=\"/images/patterns/content/builder/builder-en.png?id=617612423ea3752477dc90929115b3ee 640w,/images/patterns/content/builder/builder-en-1.5x.png?id=cfd4148e3bdc07d41a84b1a7a1d278f8 960w,/images/patterns/content/builder/builder-en-2x.png?id=8da2aa97abfdabf265e622579fc448a1 1280w\" sizes=\"(max-width: 720px) 100vw, 640px\" width=\"640\" style=\"aspect-ratio: 1.6;\" fetchpriority=\"high\" /></figure>\n</div>\n<div class=\"section problem\">\n<h2 id=\"problem\"><i class=\"fa fa-frown\" aria-hidden=\"true\"></i> Problem</h2>\n<p>Imagine a complex object that requires laborious, step-by-step initialization of many fields and nested objects. Such initialization code is usually buried inside a monstrous constructor with lots of parameters. Or even worse: scattered all over the client code.</p>\n<figure class=\"image\"><img src=\"/images/patterns/diagrams/builder/problem1.png?id=11e715c5c97811f848c48e0f399bb05e\" alt=\"Lots of subclasses create another problem\" srcset=\"/images/patterns/diagrams/builder/problem1.png?id=11e715c5c97811f848c48e0f399bb05e 600w,/images/patterns/diagrams/builder/problem1-1.5x.png?id=a46778018c4f0f4bbf2357940c1f5f40 900w,/images/patterns/diagrams/builder/problem1-2x.png?id=02ffbd7ad294600e42aa78989d441b4d 1200w\" sizes=\"(max-width: 720px) 100vw, 600px\" width=\"600\" style=\"aspect-ratio: 1.71;\" loading=\"lazy\" /><figcaption>\n<p>You might make the program too complex by creating a subclass for every possible configuration of an object.</p>\n</figcaption></figure>\n<p>For example, let’s think about how to create a <code>House</code> object. To build a simple house, you need to construct four walls and a floor, install a door, fit a pair of windows, and build a roof. But what if you want a bigger, brighter house, with a backyard and other goodies (like a heating system, plumbing, and electrical wiring)?</p>\n<p>The simplest solution is to extend the base <code>House</code> class and create a set of subclasses to cover all combinations of the parameters. But eventually you’ll end up with a considerable number of subclasses. Any new parameter, such as the porch style, will require growing this hierarchy even more.</p>\n<p>There’s another approach that doesn’t involve breeding subclasses. You can create a giant constructor right in the base <code>House</code> class with all possible parameters that control the house object. While this approach indeed eliminates the need for subclasses, it creates another problem.</p>\n<figure class=\"image\"><img src=\"/images/patterns/diagrams/builder/problem2.png?id=2e91039b6c7d2d2df6ee519983a3b036\" alt=\"The telescoping constructor\" srcset=\"/images/patterns/diagrams/builder/problem2.png?id=2e91039b6c7d2d2df6ee519983a3b036 600w,/images/patterns/diagrams/builder/problem2-1.5x.png?id=3d302cf2762fd04d70cbb91cb54e923c 900w,/images/patterns/diagrams/builder/problem2-2x.png?id=5e7975a91c0e4f4ba960f908cc9c2ea2 1200w\" sizes=\"(max-width: 720px) 100vw, 600px\" width=\"600\" style=\"aspect-ratio: 1.71;\" loading=\"lazy\" /><figcaption>\n<p>The constructor with lots of parameters has its downside: not all the parameters are needed at all times.</p>\n</figcaption></figure>\n<p>In most cases most of the parameters will be unused, making <a href=\"/smells/long-parameter-list\">the constructor calls pretty ugly</a>. For instance, only a fraction of houses have swimming pools, so the parameters related to swimming pools will be useless nine times out of ten.</p>\n</div>\n<div class=\"section solution\">\n<h2 id=\"solution\"><i class=\"fa fa-smile-beam\" aria-hidden=\"true\"></i> Solution</h2>\n<p>The Builder pattern suggests that you extract the object construction code out of its own class and move it to separate objects called <em>builders</em>.</p>\n<figure class=\"image\"><img src=\"/images/patterns/diagrams/builder/solution1.png?id=8ce82137f8935998de802cae59e00e11\" alt=\"Applying the Builder pattern\" srcset=\"/images/patterns/diagrams/builder/solution1.png?id=8ce82137f8935998de802cae59e00e11 410w,/images/patterns/diagrams/builder/solution1-1.5x.png?id=8ab77eb73760a75c35940bae243d43f2 615w,/images/patterns/diagrams/builder/solution1-2x.png?id=a9c2ab02f0b2aca1a7512022194dd113 820w\" sizes=\"(max-width: 720px) 100vw, 410px\" width=\"410\" style=\"aspect-ratio: 1.46;\" loading=\"lazy\" /><figcaption>\n<p>The Builder pattern lets you construct complex objects step by step. The Builder doesn’t allow other objects to access the product while it’s being built.</p>\n</figcaption></figure>\n<p>The pattern organizes object construction into a set of steps (<code>buildWalls</code>, <code>buildDoor</code>, etc.). To create an object, you execute a series of these steps on a builder object. The important part is that you don’t need to call all of the steps. You can call only those steps that are necessary for producing a particular configuration of an object.</p>\n<p>Some of the construction steps might require different implementation when you need to build various representations of the product. For example, walls of a cabin may be built of wood, but the castle walls must be built with stone.</p>\n<p>In this case, you can create several different builder classes that implement the same set of building steps, but in a different manner. Then you can use these builders in the construction process (i.e., an ordered set of calls to the building steps) to produce different kinds of objects.</p>\n<figure class=\"image\"><img src=\"/images/patterns/content/builder/builder-comic-1-en.png?id=605a699e1cb1241162db0530c7c1af4c\" srcset=\"/images/patterns/content/builder/builder-comic-1-en.png?id=605a699e1cb1241162db0530c7c1af4c 600w,/images/patterns/content/builder/builder-comic-1-en-1.5x.png?id=76cdbb286c9fa310e5b67c6ed25ad4e8 900w,/images/patterns/content/builder/builder-comic-1-en-2x.png?id=99728c9881fbf45fd3b6e0e3373935f1 1200w\" sizes=\"(max-width: 720px) 100vw, 600px\" width=\"600\" style=\"aspect-ratio: 2;\" loading=\"lazy\" /><figcaption>\n<p>Different builders execute the same task in various ways.</p>\n</figcaption></figure>\n<p>For example, imagine a builder that builds everything from wood and glass, a second one that builds everything with stone and iron and a third one that uses gold and diamonds. By calling the same set of steps, you get a regular house from the first builder, a small castle from the second and a palace from the third. However, this would only work if the client code that calls the building steps is able to interact with builders using a common interface.</p>\n<h4>Director</h4>\n<p>You can go further and extract a series of calls to the builder steps you use to construct a product into a separate class called <em>director</em>. The director class defines the order in which to execute the building steps, while the builder provides the implementation for those steps.</p>\n<figure class=\"image\"><img src=\"/images/patterns/content/builder/builder-comic-2-en.png?id=e19ff53e1494c06178476e2b8c068ec8\" srcset=\"/images/patterns/content/builder/builder-comic-2-en.png?id=e19ff53e1494c06178476e2b8c068ec8 343w,/images/patterns/content/builder/builder-comic-2-en-1.5x.png?id=dd6b9f1c3b74272f0eb68173eb653964 515w,/images/patterns/content/builder/builder-comic-2-en-2x.png?id=15035f2ea0317a93eca0177fc7ce2f22 687w\" sizes=\"(max-width: 720px) 100vw, 343px\" width=\"343\" style=\"aspect-ratio: 1.14;\" loading=\"lazy\" /><figcaption>\n<p>The director knows which building steps to execute to get a working product.</p>\n</figcaption></figure>\n<p>Having a director class in your program isn’t strictly necessary. You can always call the building steps in a specific order directly from the client code. However, the director class might be a good place to put various construction routines so you can reuse them across your program.</p>\n<p>In addition, the director class completely hides the details of product construction from the client code. The client only needs to associate a builder with a director, launch the construction with the director, and get the result from the builder.</p>\n</div>\n<div class=\"section structure-container\">\n<h2 id=\"structure\"><i class=\"fa fa-sitemap\" aria-hidden=\"true\"></i> Structure</h2>\n<div class=\"structure\">\n<div class=\"struct-image1 struct-image\">\n<figure class=\"image\"><img class=\"structure-img-non-indexed d-none d-xl-block\" src=\"/images/patterns/diagrams/builder/structure.png?id=fe9e23559923ea0657aa5fe75efef333\" alt=\"Structure of the Builder design pattern\" srcset=\"/images/patterns/diagrams/builder/structure.png?id=fe9e23559923ea0657aa5fe75efef333 460w,/images/patterns/diagrams/builder/structure-1.5x.png?id=91ea8cd3137b403542c23abf63938f00 690w,/images/patterns/diagrams/builder/structure-2x.png?id=dca1b1508e23c266cbedc80ffb84311a 920w\" sizes=\"(max-width: 720px) 100vw, 460px\" width=\"460\" style=\"aspect-ratio: 0.79;\" loading=\"lazy\" /><img class=\"structure-img-indexed d-xl-none\" src=\"/images/patterns/diagrams/builder/structure-indexed.png?id=44b3d763ce91dbada5d8394ef777437f\" alt=\"Structure of the Builder design pattern\" srcset=\"/images/patterns/diagrams/builder/structure-indexed.png?id=44b3d763ce91dbada5d8394ef777437f 470w,/images/patterns/diagrams/builder/structure-indexed-1.5x.png?id=d57a6ff9342ea31736ea98e5066e0748 705w,/images/patterns/diagrams/builder/structure-indexed-2x.png?id=153eed9a51784cbe00d0ca8b3d6b268d 940w\" sizes=\"(max-width: 720px) 100vw, 470px\" width=\"470\" style=\"aspect-ratio: 0.81;\" loading=\"lazy\" /></figure>\n</div>\n<ol><li class=\"struct-li1\">\n<p>The <strong>Builder</strong> interface declares product construction steps that are common to all types of builders.</p>\n</li>\n<li class=\"struct-li2\">\n<p><strong>Concrete Builders</strong> provide different implementations of the construction steps. Concrete builders may produce products that don’t follow the common interface.</p>\n</li>\n<li class=\"struct-li3\">\n<p><strong>Products</strong> are resulting objects. Products constructed by different builders don’t have to belong to the same class hierarchy or interface.</p>\n</li>\n<li class=\"struct-li4\">\n<p>The <strong>Director</strong> class defines the order in which to call construction steps, so you can create and reuse specific configurations of products.</p>\n</li>\n<li class=\"struct-li5\">\n<p>The <strong>Client</strong> must associate one of the builder objects with the director. Usually, it’s done just once, via parameters of the director’s constructor. Then the director uses that builder object for all further construction. However, there’s an alternative approach for when the client passes the builder object to the production method of the director. In this case, you can use a different builder each time you produce something with the director.</p>\n</li></ol>\n<style structure type=\"text/css\" >\n@media (min-width: 1200px) {\n.structure {\nmargin: 0;\nwidth: auto;\nheight: 620px;\n}\n\n.struct-image {\nleft: 190px;\ntop: 0px;\n}\n\n.struct-li1 {\nleft: 0px;\ntop: 120px;\nwidth: 210px;\n}\n\n.struct-li2 {\nleft: 0px;\ntop: 260px;\nwidth: 180px;\n}\n\n.struct-li3 {\nleft: 0px;\ntop: 480px;\nwidth: 180px;\n}\n\n.struct-li4 {\nleft: 660px;\ntop: 140px;\nwidth: 210px;\n}\n\n.struct-li5 {\nleft: 660px;\ntop: 290px;\nwidth: 210px;\n}\n}\n\n</style>\n</div></div>\n<div class=\"section pseudocode\">\n<h2 id=\"pseudocode\"><i class=\"fa fa-hashtag\" aria-hidden=\"true\"></i> Pseudocode</h2>\n<p>This example of the <strong>Builder</strong> pattern illustrates how you can reuse the same object construction code when building different types of products, such as cars, and create the corresponding manuals for them.</p>\n<figure class=\"image\"><img src=\"/images/patterns/diagrams/builder/example-en.png?id=8386bdde073f993b5dfc4727697cf2fe\" alt=\"The structure of the Builder pattern example\" srcset=\"/images/patterns/diagrams/builder/example-en.png?id=8386bdde073f993b5dfc4727697cf2fe 500w,/images/patterns/diagrams/builder/example-en-1.5x.png?id=0f141ecb8991b743245f46a14b0cbffc 750w,/images/patterns/diagrams/builder/example-en-2x.png?id=d961b9d70bf16679f472119bbbe214da 1000w\" sizes=\"(max-width: 720px) 100vw, 500px\" width=\"500\" style=\"aspect-ratio: 0.85;\" loading=\"lazy\" /><figcaption>\n<p>The example of step-by-step construction of cars and the user guides that fit those car models.</p>\n</figcaption></figure>\n<p>A car is a complex object that can be constructed in a hundred different ways. Instead of bloating the <code>Car</code> class with a huge constructor, we extracted the car assembly code into a separate car builder class. This class has a set of methods for configuring various parts of a car.</p>\n<p>If the client code needs to assemble a special, fine-tuned model of a car, it can work with the builder directly. On the other hand, the client can delegate the assembly to the director class, which knows how to use a builder to construct several of the most popular models of cars.</p>\n<p>You might be shocked, but every car needs a manual (seriously, who reads them?). The manual describes every feature of the car, so the details in the manuals vary across the different models. That’s why it makes sense to reuse an existing construction process for both real cars and their respective manuals. Of course, building a manual isn’t the same as building a car, and that’s why we must provide another builder class that specializes in composing manuals. This class implements the same building methods as its car-building sibling, but instead of crafting car parts, it describes them. By passing these builders to the same director object, we can construct either a car or a manual.</p>\n<p>The final part is fetching the resulting object. A metal car and a paper manual, although related, are still very different things. We can’t place a method for fetching results in the director without coupling the director to concrete product classes. Hence, we obtain the result of the construction from the builder which performed the job.</p>\n<figure class=\"code\">\n<pre class=\"code\" lang=\"pseudocode\">// Using the Builder pattern makes sense only when your products\n// are quite complex and require extensive configuration. The\n// following two products are related, although they don't have\n// a common interface.\nclass Car is\n    // A car can have a GPS, trip computer and some number of\n    // seats. Different models of cars (sports car, SUV,\n    // cabriolet) might have different features installed or\n    // enabled.\n\nclass Manual is\n    // Each car should have a user manual that corresponds to\n    // the car's configuration and describes all its features.\n\n\n// The builder interface specifies methods for creating the\n// different parts of the product objects.\ninterface Builder is\n    method reset()\n    method setSeats(...)\n    method setEngine(...)\n    method setTripComputer(...)\n    method setGPS(...)\n\n// The concrete builder classes follow the builder interface and\n// provide specific implementations of the building steps. Your\n// program may have several variations of builders, each\n// implemented differently.\nclass CarBuilder implements Builder is\n    private field car:Car\n\n    // A fresh builder instance should contain a blank product\n    // object which it uses in further assembly.\n    constructor CarBuilder() is\n        this.reset()\n\n    // The reset method clears the object being built.\n    method reset() is\n        this.car = new Car()\n\n    // All production steps work with the same product instance.\n    method setSeats(...) is\n        // Set the number of seats in the car.\n\n    method setEngine(...) is\n        // Install a given engine.\n\n    method setTripComputer(...) is\n        // Install a trip computer.\n\n    method setGPS(...) is\n        // Install a global positioning system.\n\n    // Concrete builders are supposed to provide their own\n    // methods for retrieving results. That's because various\n    // types of builders may create entirely different products\n    // that don't all follow the same interface. Therefore such\n    // methods can't be declared in the builder interface (at\n    // least not in a statically-typed programming language).\n    //\n    // Usually, after returning the end result to the client, a\n    // builder instance is expected to be ready to start\n    // producing another product. That's why it's a usual\n    // practice to call the reset method at the end of the\n    // `getProduct` method body. However, this behavior isn't\n    // mandatory, and you can make your builder wait for an\n    // explicit reset call from the client code before disposing\n    // of the previous result.\n    method getProduct():Car is\n        product = this.car\n        this.reset()\n        return product\n\n// Unlike other creational patterns, builder lets you construct\n// products that don't follow the common interface.\nclass CarManualBuilder implements Builder is\n    private field manual:Manual\n\n    constructor CarManualBuilder() is\n        this.reset()\n\n    method reset() is\n        this.manual = new Manual()\n\n    method setSeats(...) is\n        // Document car seat features.\n\n    method setEngine(...) is\n        // Add engine instructions.\n\n    method setTripComputer(...) is\n        // Add trip computer instructions.\n\n    method setGPS(...) is\n        // Add GPS instructions.\n\n    method getProduct():Manual is\n        // Return the manual and reset the builder.\n\n\n// The director is only responsible for executing the building\n// steps in a particular sequence. It's helpful when producing\n// products according to a specific order or configuration.\n// Strictly speaking, the director class is optional, since the\n// client can control builders directly.\nclass Director is\n    // The director works with any builder instance that the\n    // client code passes to it. This way, the client code may\n    // alter the final type of the newly assembled product.\n    // The director can construct several product variations\n    // using the same building steps.\n    method constructSportsCar(builder: Builder) is\n        builder.reset()\n        builder.setSeats(2)\n        builder.setEngine(new SportEngine())\n        builder.setTripComputer(true)\n        builder.setGPS(true)\n\n    method constructSUV(builder: Builder) is\n        // ...\n\n\n// The client code creates a builder object, passes it to the\n// director and then initiates the construction process. The end\n// result is retrieved from the builder object.\nclass Application is\n\n    method makeCar() is\n        director = new Director()\n\n        CarBuilder builder = new CarBuilder()\n        director.constructSportsCar(builder)\n        Car car = builder.getProduct()\n\n        CarManualBuilder builder = new CarManualBuilder()\n        director.constructSportsCar(builder)\n\n        // The final product is often retrieved from a builder\n        // object since the director isn't aware of and not\n        // dependent on concrete builders and products.\n        Manual manual = builder.getProduct()\n</pre>\n</figure>\n</div>\n<div class=\"section applicability-container\">\n<h2 id=\"applicability\"><i class=\"fa fa-lightbulb-on\" aria-hidden=\"true\"></i> Applicability</h2>\n<div class=\"applicability\">\n<div class=\"applicability-problem\">\n<p><i class=\"fa fa-fw fa-bug\" aria-hidden=\"true\"></i> Use the Builder pattern to get rid of a “telescoping constructor”.</p>\n</div><div class=\"applicability-solution\">\n<p><i class=\"fa fa-fw fa-bolt\" aria-hidden=\"true\"></i> Say you have a constructor with ten optional parameters. Calling such a beast is very inconvenient; therefore, you overload the constructor and create several shorter versions with fewer parameters. These constructors still refer to the main one, passing some default values into any omitted parameters.</p>\n<figure class=\"code\">\n<pre class=\"code\" lang=\"java\">class Pizza {\n    Pizza(int size) { ... }\n    Pizza(int size, boolean cheese) { ... }\n    Pizza(int size, boolean cheese, boolean pepperoni) { ... }\n    // ...\n</pre>\n<figcaption>\n<p>Creating such a monster is only possible in languages that support method overloading, such as C# or Java.</p>\n</figcaption>\n</figure>\n<p>The Builder pattern lets you build objects step by step, using only those steps that you really need. After implementing the pattern, you don’t have to cram dozens of parameters into your constructors anymore.</p>\n</div>\n<div class=\"applicability-problem\">\n<p><i class=\"fa fa-fw fa-bug\" aria-hidden=\"true\"></i> Use the Builder pattern when you want your code to be able to create different representations of some product (for example, stone and wooden houses).</p>\n</div><div class=\"applicability-solution\">\n<p><i class=\"fa fa-fw fa-bolt\" aria-hidden=\"true\"></i> The Builder pattern can be applied when construction of various representations of the product involves similar steps that differ only in the details.</p>\n<p>The base builder interface defines all possible construction steps, and concrete builders implement these steps to construct particular representations of the product. Meanwhile, the director class guides the order of construction.</p>\n</div>\n<div class=\"applicability-problem\">\n<p><i class=\"fa fa-fw fa-bug\" aria-hidden=\"true\"></i> Use the Builder to construct <a href=\"/design-patterns/composite\">Composite</a> trees or other complex objects.</p>\n</div><div class=\"applicability-solution\">\n<p><i class=\"fa fa-fw fa-bolt\" aria-hidden=\"true\"></i> The Builder pattern lets you construct products step-by-step. You could defer execution of some steps without breaking the final product. You can even call steps recursively, which comes in handy when you need to build an object tree.</p>\n<p>A builder doesn’t expose the unfinished product while running construction steps. This prevents the client code from fetching an incomplete result.</p>\n</div>\n</div></div>\n<div class=\"section checklist\">\n<h2 id=\"checklist\"><i class=\"fa fa-clipboard-list-check\" aria-hidden=\"true\"></i> How to Implement</h2>\n<ol>\n<li>\n<p>Make sure that you can clearly define the common construction steps for building all available product representations. Otherwise, you won’t be able to proceed with implementing the pattern.</p>\n</li>\n<li>\n<p>Declare these steps in the base builder interface.</p>\n</li>\n<li>\n<p>Create a concrete builder class for each of the product representations and implement their construction steps.</p>\n<p>Don’t forget about implementing a method for fetching the result of the construction. The reason why this method can’t be declared inside the builder interface is that various builders may construct products that don’t have a common interface. Therefore, you don’t know what would be the return type for such a method. However, if you’re dealing with products from a single hierarchy, the fetching method can be safely added to the base interface.</p>\n</li>\n<li>\n<p>Think about creating a director class. It may encapsulate various ways to construct a product using the same builder object.</p>\n</li>\n<li>\n<p>The client code creates both the builder and the director objects. Before construction starts, the client must pass a builder object to the director. Usually, the client does this only once, via parameters of the director’s class constructor. The director uses the builder object in all further construction. There’s an alternative approach, where the builder is passed to a specific product construction method of the director.</p>\n</li>\n<li>\n<p>The construction result can be obtained directly from the director only if all products follow the same interface. Otherwise, the client should fetch the result from the builder.</p>\n</li>\n</ol>\n</div>\n<div class=\"section pros-cons\">\n<h2 id=\"pros-cons\"><i class=\"fa fa-balance-scale\" aria-hidden=\"true\"></i> Pros and Cons</h2>\n<div class=\"row\"><div class=\"col-sm-6\">\n<ul>\n<li><i class=\"fa fa-fw fa-check\" aria-hidden=\"true\"></i> You can construct objects step-by-step, defer construction steps or run steps recursively.</li>\n<li><i class=\"fa fa-fw fa-check\" aria-hidden=\"true\"></i> You can reuse the same construction code when building various representations of products.</li>\n<li><i class=\"fa fa-fw fa-check\" aria-hidden=\"true\"></i> <em>Single Responsibility Principle</em>. You can isolate complex construction code from the business logic of the product.</li>\n</ul>\n</div><div class=\"col-sm-6\">\n<ul>\n<li><i class=\"fa fa-fw fa-times\" aria-hidden=\"true\"></i> The overall complexity of the code increases since the pattern requires creating multiple new classes.</li>\n</ul>\n</div></div></div>\n<div class=\"section relations\">\n<h2 id=\"relations\"><i class=\"fa fa-exchange-alt\" aria-hidden=\"true\"></i> Relations with Other Patterns</h2>\n<ul>\n<li>\n<p>Many designs start by using <a href=\"/design-patterns/factory-method\">Factory Method</a> (less complicated and more customizable via subclasses) and evolve toward <a href=\"/design-patterns/abstract-factory\">Abstract Factory</a>, <a href=\"/design-patterns/prototype\">Prototype</a>, or <a href=\"/design-patterns/builder\">Builder</a> (more flexible, but more complicated).</p>\n</li>\n<li>\n<p><a href=\"/design-patterns/builder\">Builder</a> focuses on constructing complex objects step by step. <a href=\"/design-patterns/abstract-factory\">Abstract Factory</a> specializes in creating families of related objects. <em>Abstract Factory</em> returns the product immediately, whereas <em>Builder</em> lets you run some additional construction steps before fetching the product.</p>\n</li>\n<li>\n<p>You can use <a href=\"/design-patterns/builder\">Builder</a> when creating complex <a href=\"/design-patterns/composite\">Composite</a> trees because you can program its construction steps to work recursively.</p>\n</li>\n<li>\n<p>You can combine <a href=\"/design-patterns/builder\">Builder</a> with <a href=\"/design-patterns/bridge\">Bridge</a>: the director class plays the role of the abstraction, while different builders act as implementations.</p>\n</li>\n<li>\n<p><a href=\"/design-patterns/abstract-factory\">Abstract Factories</a>, <a href=\"/design-patterns/builder\">Builders</a> and <a href=\"/design-patterns/prototype\">Prototypes</a> can all be implemented as <a href=\"/design-patterns/singleton\">Singletons</a>.</p>\n</li>\n</ul>\n</div>\n<div class=\"section implementations\">\n<h2 id=\"implementations\"><i class=\"fa fa-code\" aria-hidden=\"true\"></i> Code Examples</h2>\n<p><a href=\"/design-patterns/builder/csharp/example\" title=\"Builder in C#\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/csharp.svg?id=da64592defc6e86d57c39c66e9de3e58\" alt=\"Builder in C#\" /></a>\n<a href=\"/design-patterns/builder/cpp/example\" title=\"Builder in C++\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/cpp.svg?id=f7782ed8b8666246bfcc3f8fefc3b858\" alt=\"Builder in C++\" /></a>\n<a href=\"/design-patterns/builder/go/example\" title=\"Builder in Go\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/go.svg?id=1a89927eb99b1ea3fde7701d97970aca\" alt=\"Builder in Go\" /></a>\n<a href=\"/design-patterns/builder/java/example\" title=\"Builder in Java\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/java.svg?id=e6d87e2dca08c953fe3acd1275ed4f4e\" alt=\"Builder in Java\" /></a>\n<a href=\"/design-patterns/builder/php/example\" title=\"Builder in PHP\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/php.svg?id=be1906eb26b71ec1d3b93720d6156618\" alt=\"Builder in PHP\" /></a>\n<a href=\"/design-patterns/builder/python/example\" title=\"Builder in Python\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/python.svg?id=6d815d43c0f7050a1151b43e51569c9f\" alt=\"Builder in Python\" /></a>\n<a href=\"/design-patterns/builder/ruby/example\" title=\"Builder in Ruby\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/ruby.svg?id=b065b718c914bf8e960ef731600be1eb\" alt=\"Builder in Ruby\" /></a>\n<a href=\"/design-patterns/builder/rust/example\" title=\"Builder in Rust\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/rust.svg?id=1f5698a4b5ae23fe79413511747e4a87\" alt=\"Builder in Rust\" /></a>\n<a href=\"/design-patterns/builder/swift/example\" title=\"Builder in Swift\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/swift.svg?id=0b716c2d52ec3a48fbe91ac031070c1d\" alt=\"Builder in Swift\" /></a>\n<a href=\"/design-patterns/builder/typescript/example\" title=\"Builder in TypeScript\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/typescript.svg?id=2239d0f16cb703540c205dd8cb0c0cb7\" alt=\"Builder in TypeScript\" /></a></p>\n</div>\n\n\n    <div class=\"banner-set2\" id=\"book-promo\">\n            <div class=\"prom banner-content banner-bg banner-striped banner-with-image\" data-id=\"DP: 1: Support our free website and own the eBook!\" data-creative-id=\"standard-en\" data-position=\"content_bottom\">\n                <div class=\"banner-image\">\n                    <a href=\"/design-patterns/book\">\n                        <img width=\"200\" height=\"200\" loading=\"lazy\" src=\"/images/patterns/banners/patterns-book-banner-3.png?id=7d445df13c80287beaab234b4f3b698c\" srcset=\"/images/patterns/banners/patterns-book-banner-3-2x.png?id=0cc3f77ab421d1a5c02ee46488231c3a 2x\">\n                    </a>\n                </div>\n\n                <div class=\"banner-text\">\n                    <h3 class=\"title\">Support our free website and own the eBook!</h3>\n                    <ul style=\"font-size: 14px;\">\n                        <li style=\"margin: 0;\">22 design patterns and 8 principles explained in depth.</li>\n                        <li style=\"margin: 0;\">409 well-structured, easy to read, jargon-free pages.</li>\n                        <li style=\"margin: 0;\">225 clear and helpful illustrations and diagrams.</li>\n                        <li style=\"margin: 0;\">An archive with code examples in 11 languages.</li>\n                        <li style=\"margin: 0;\">All devices supported: PDF/EPUB/MOBI/KFX formats.</li>\n                    </ul>\n                    <a class=\"btn btn-secondary\" href=\"/design-patterns/book\"><i class=\"fa fa-book\" aria-hidden=\"true\"></i> Learn more…</a>\n                </div>\n            </div>\n        </div>\n\n    </article>\n\n<nav class=\"prev-next\">\n                    <div class=\"next\">\n                <h4>Read next</h4>\n                <a rel=\"next\" href=\"/design-patterns/prototype\" class=\"btn btn-primary\">Prototype&nbsp;<span class=\"fa fa-arrow-right\"></span></a>\n            </div>\n                            <div class=\"prev\">\n                <h4>Return</h4>\n                <a rel=\"prev\" href=\"/design-patterns/factory-comparison\" class=\"btn btn-default\"><span class=\"fa fa-arrow-left\"></span>&nbsp;Factory Comparison </a>\n            </div>\n            </nav>\n</div>\n\n<aside class=\"feature content-secondary\">\n    <div class=\"prom banner-sidebar banner-removable banner-removable-patterns\" data-id=\"DP: Sidebar\" data-creative-id=\"standard-sidebar-en\" data-position=\"sidebar\">\n        <div class=\"banner-inner\">\n            <div class=\"image3d-book-right\">\n                <div class=\"image3d-cover\" style=\"background: #0b3752;\">\n                    <a href=\"/design-patterns/book\">\n                        <img width=\"250\" height=\"375\" loading=\"lazy\" src=\"/images/patterns/book/web-cover-en.png?id=328861769fd11617674e3b8a7e2dd9e7\" srcset=\"/images/patterns/book/web-cover-en-2x.png?id=02940141c5652ed5a426d87390b16366 2x\">\n                    </a>\n                </div>\n            </div>\n            <div style=\"margin-top: 1rem\">\n                <p class=\"text-center\" >This article is a part of our eBook<br/><strong>Dive Into Design Patterns</strong>.</p>\n                <a href=\"/design-patterns/book\" class=\"btn btn-secondary btn-block\"><i class=\"fa fa-book\" aria-hidden=\"true\"></i> Learn more…</a>\n            </div>\n        </div>\n    </div>\n\n\n</aside>\n                    </div>\n    </main>\n\n    <aside class=\"sidebar main-menu\">\n    <div class=\"main-menu-controls\">\n        <button class=\"navigation-toggle\"><i class=\"fa fa-fw fa-times\"></i></button>\n    </div>\n    <div class=\"main-menu-list-wrapper nano\">\n        <div class=\"main-menu-list nano-content\">\n            <a class=\"menu-brand\" href=\"/\">\n                                    <img width=200 height=241 loading=\"lazy\" alt=\"Refactoring.Guru\" src=\"/images/content-public/logos/logo-new.png?id=97d554614702483f31e38b32e82d8e34\" srcset=\"/images/content-public/logos/logo-new-2x.png?id=3bc33294e095bab1d6fe9ae421d07837 2x\">\n                            </a>\n\n            <div class=\"menu-container\" style=\"position: relative\">\n                                <ul class=\"menu-list trail\">\n                            <li class=\"featured\">\n            <a href=\"/store\">\n                <i class=\"fa fa-fw fa-star\" aria-hidden=\"true\"></i> Premium Content\n            </a>\n    \n            <ul >\n                            <li class=\"featured menu-fs15\">\n            <a href=\"/design-patterns/book\">\n                <i class=\"fa fa-fw fa-book\" aria-hidden=\"true\"></i> Design Patterns eBook\n            </a>\n    \n    \n            </li>\n                                <li class=\"featured menu-fs15\">\n            <a href=\"/refactoring/course\">\n                <i class=\"fa fa-fw fa-graduation-cap\" aria-hidden=\"true\"></i> Refactoring Course\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring\">\n                <i class=\"fa fa-fw fa-scissors\" aria-hidden=\"true\"></i> Refactoring\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/refactoring/what-is-refactoring\">\n                What is Refactoring\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/refactoring/what-is-refactoring\">\n                Clean code\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/technical-debt\">\n                Technical debt\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/when\">\n                When to refactor\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/how-to\">\n                How to refactor\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/catalog\">\n                Catalog\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells\">\n                Code Smells\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/refactoring/smells/bloaters\">\n                Bloaters\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/long-method\">\n                Long Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/large-class\">\n                Large Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/primitive-obsession\">\n                Primitive Obsession\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/long-parameter-list\">\n                Long Parameter List\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/data-clumps\">\n                Data Clumps\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/oo-abusers\">\n                Object-Orientation Abusers\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/switch-statements\">\n                Switch Statements\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/temporary-field\">\n                Temporary Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/refused-bequest\">\n                Refused Bequest\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/alternative-classes-with-different-interfaces\">\n                Alternative Classes with Different Interfaces\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/change-preventers\">\n                Change Preventers\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/divergent-change\">\n                Divergent Change\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/shotgun-surgery\">\n                Shotgun Surgery\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/parallel-inheritance-hierarchies\">\n                Parallel Inheritance Hierarchies\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/dispensables\">\n                Dispensables\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/comments\">\n                Comments\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/duplicate-code\">\n                Duplicate Code\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/lazy-class\">\n                Lazy Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/data-class\">\n                Data Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/dead-code\">\n                Dead Code\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/speculative-generality\">\n                Speculative Generality\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/couplers\">\n                Couplers\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/feature-envy\">\n                Feature Envy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/inappropriate-intimacy\">\n                Inappropriate Intimacy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/message-chains\">\n                Message Chains\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/middle-man\">\n                Middle Man\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/other\">\n                Other Smells\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/incomplete-library-class\">\n                Incomplete Library Class\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques\">\n                Refactorings\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/refactoring/techniques/composing-methods\">\n                Composing Methods\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/extract-method\">\n                Extract Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/inline-method\">\n                Inline Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-variable\">\n                Extract Variable\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/inline-temp\">\n                Inline Temp\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-temp-with-query\">\n                Replace Temp with Query\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/split-temporary-variable\">\n                Split Temporary Variable\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-assignments-to-parameters\">\n                Remove Assignments to Parameters\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-method-with-method-object\">\n                Replace Method with Method Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/substitute-algorithm\">\n                Substitute Algorithm\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/moving-features-between-objects\">\n                Moving Features between Objects\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/move-method\">\n                Move Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/move-field\">\n                Move Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-class\">\n                Extract Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/inline-class\">\n                Inline Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/hide-delegate\">\n                Hide Delegate\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-middle-man\">\n                Remove Middle Man\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-foreign-method\">\n                Introduce Foreign Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-local-extension\">\n                Introduce Local Extension\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/organizing-data\">\n                Organizing Data\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/self-encapsulate-field\">\n                Self Encapsulate Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-data-value-with-object\">\n                Replace Data Value with Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/change-value-to-reference\">\n                Change Value to Reference\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/change-reference-to-value\">\n                Change Reference to Value\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-array-with-object\">\n                Replace Array with Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/duplicate-observed-data\">\n                Duplicate Observed Data\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/change-unidirectional-association-to-bidirectional\">\n                Change Unidirectional Association to Bidirectional\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/change-bidirectional-association-to-unidirectional\">\n                Change Bidirectional Association to Unidirectional\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-magic-number-with-symbolic-constant\">\n                Replace Magic Number with Symbolic Constant\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/encapsulate-field\">\n                Encapsulate Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/encapsulate-collection\">\n                Encapsulate Collection\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-type-code-with-class\">\n                Replace Type Code with Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-type-code-with-subclasses\">\n                Replace Type Code with Subclasses\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-type-code-with-state-strategy\">\n                Replace Type Code with State/Strategy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-subclass-with-fields\">\n                Replace Subclass with Fields\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/simplifying-conditional-expressions\">\n                Simplifying Conditional Expressions\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/decompose-conditional\">\n                Decompose Conditional\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/consolidate-conditional-expression\">\n                Consolidate Conditional Expression\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/consolidate-duplicate-conditional-fragments\">\n                Consolidate Duplicate Conditional Fragments\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-control-flag\">\n                Remove Control Flag\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-nested-conditional-with-guard-clauses\">\n                Replace Nested Conditional with Guard Clauses\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-conditional-with-polymorphism\">\n                Replace Conditional with Polymorphism\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-null-object\">\n                Introduce Null Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-assertion\">\n                Introduce Assertion\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/simplifying-method-calls\">\n                Simplifying Method Calls\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/rename-method\">\n                Rename Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/add-parameter\">\n                Add Parameter\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-parameter\">\n                Remove Parameter\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/separate-query-from-modifier\">\n                Separate Query from Modifier\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/parameterize-method\">\n                Parameterize Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-parameter-with-explicit-methods\">\n                Replace Parameter with Explicit Methods\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/preserve-whole-object\">\n                Preserve Whole Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-parameter-with-method-call\">\n                Replace Parameter with Method Call\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-parameter-object\">\n                Introduce Parameter Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-setting-method\">\n                Remove Setting Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/hide-method\">\n                Hide Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-constructor-with-factory-method\">\n                Replace Constructor with Factory Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-error-code-with-exception\">\n                Replace Error Code with Exception\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-exception-with-test\">\n                Replace Exception with Test\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/dealing-with-generalization\">\n                Dealing with Generalization\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/pull-up-field\">\n                Pull Up Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/pull-up-method\">\n                Pull Up Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/pull-up-constructor-body\">\n                Pull Up Constructor Body\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/push-down-method\">\n                Push Down Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/push-down-field\">\n                Push Down Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-subclass\">\n                Extract Subclass\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-superclass\">\n                Extract Superclass\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-interface\">\n                Extract Interface\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/collapse-hierarchy\">\n                Collapse Hierarchy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/form-template-method\">\n                Form Template Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-inheritance-with-delegation\">\n                Replace Inheritance with Delegation\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-delegation-with-inheritance\">\n                Replace Delegation with Inheritance\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"trail\">\n            <a href=\"/design-patterns\">\n                <i class=\"fa fa-fw fa-puzzle-piece\" aria-hidden=\"true\"></i> Design Patterns\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/what-is-pattern\">\n                What is a Pattern\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/what-is-pattern\">\n                What's a design pattern?\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/history\">\n                History of patterns\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/why-learn-patterns\">\n                Why should I learn patterns?\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/criticism\">\n                Criticism of patterns\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/classification\">\n                Classification of patterns\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/catalog\">\n                Catalog\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-third-level trail\">\n            <a href=\"/design-patterns/creational-patterns\">\n                Creational Patterns\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/factory-method\">\n                Factory Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/abstract-factory\">\n                Abstract Factory\n            </a>\n    \n    \n            </li>\n                                <li class=\"trail active\">\n            <a href=\"/design-patterns/builder\">\n                Builder\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/prototype\">\n                Prototype\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/singleton\">\n                Singleton\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"menu-third-level\">\n            <a href=\"/design-patterns/structural-patterns\">\n                Structural Patterns\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/adapter\">\n                Adapter\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/bridge\">\n                Bridge\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/composite\">\n                Composite\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/decorator\">\n                Decorator\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/facade\">\n                Facade\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/flyweight\">\n                Flyweight\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/proxy\">\n                Proxy\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"menu-third-level\">\n            <a href=\"/design-patterns/behavioral-patterns\">\n                Behavioral Patterns\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/chain-of-responsibility\">\n                Chain of Responsibility\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/command\">\n                Command\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/iterator\">\n                Iterator\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/mediator\">\n                Mediator\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/memento\">\n                Memento\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/observer\">\n                Observer\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/state\">\n                State\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/strategy\">\n                Strategy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/template-method\">\n                Template Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/visitor\">\n                Visitor\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"menu-code-examples\">\n            <a href=\"/design-patterns/examples\">\n                Code Examples\n            </a>\n    \n            <ul >\n                            <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/csharp\">\n                C#\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/cpp\">\n                C++\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/go\">\n                Go\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/java\">\n                Java\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/php\">\n                PHP\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/python\">\n                Python\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/ruby\">\n                Ruby\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/rust\">\n                Rust\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/swift\">\n                Swift\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/typescript\">\n                TypeScript\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n                </div>\n\n            <div class=\"main-menu-aux-controls\">\n                <a href=\"https://refactoring.guru/login\" title=\"Sign in\" style=\" display: inline-flex; align-items: center; gap: 6px; \"><svg style=\"width: 16px; height: 16px; filter:drop-shadow(0 1px 1px #74261e)\" class=\"inline-block mx-0\"  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\"opacity=\"0.4\" d=\"M352.7 222.4c3.2 1 6.5 1.6 10 1.6l21.3 0c17.7 0 32 14.3 32 32s-14.3 32-32 32l-21.3 0c-.8 0-1.7 0-2.5 0c-.9 0-1.7-.1-2.5-.1c-1.7-.1-3.4-.2-5-.4C357.4 414 391.1 512 432 512c44.2 0 80-114.6 80-256S476.2 0 432 0c-40.6 0-74.2 96.9-79.3 222.4z\"/><path fill=\"currentColor\"class=\"fa-primary\" d=\"M320 48a48 48 0 1 0 -96 0 48 48 0 1 0 96 0zM125.7 175.5c9.9-9.9 23.4-15.5 37.5-15.5c1.9 0 3.8 .1 5.6 .3L137.6 254c-9.3 28 1.7 58.8 26.8 74.5l86.2 53.9-25.4 88.8c-4.9 17 5 34.7 22 39.6s34.7-5 39.6-22l28.7-100.4c5.9-20.6-2.6-42.6-20.7-53.9L238 299l30.9-82.4 5.1 12.3C289 264.7 323.9 288 362.7 288l21.3 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-21.3 0c-12.9 0-24.6-7.8-29.5-19.7l-6.3-15c-14.6-35.1-44.1-61.9-80.5-73.1l-48.7-15c-11.1-3.4-22.7-5.2-34.4-5.2c-31 0-60.8 12.3-82.7 34.3L57.4 153.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l23.1-23.1zM91.2 352L32 352c-17.7 0-32 14.3-32 32s14.3 32 32 32l69.6 0c19 0 36.2-11.2 43.9-28.5L157 361.6l-9.5-6c-17.5-10.9-30.5-26.8-37.9-44.9L91.2 352z\"/></svg> Sign in</a>\n                <a href=\"https://feedback.refactoring.guru/\" class=\"userecho-public\" rel=\"nofollow\" title=\"Contact us\"><i class=\"fa fa-fw fa-fw fa-envelope\" aria-hidden=\"true\"></i> Contact us</a>\n            </div>\n        </div>\n    </div>\n</aside>\n\n    <nav class=\"navigation\" role=\"navigation\">\n    <div class=\"navigation-container\">\n        <a class=\"navigation-brand\" href=\"/\">\n            <img alt=\"Refactoring.Guru\"\n                 src=\"/images/content-public/logos/logo-new-mobile.png?id=ea18aa9b032eaa92835ed6d472b03b4a\"\n                 srcset=\"/images/content-public/logos/logo-new-mobile-2x.png?id=7ad5648bfd86ae2e8524147a72877c64 2x\">\n        </a>\n\n        <div class=\"shop-link d-none d-lg-block\" style=\"display: none !important;\">\n            <a class=\"btn btn-md btn-primary btn-featured\" href=\"/store\"><svg style=\"width: 28px; height: 28px; fill: currentColor; display: inline-block; margin-top: -14px;\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><!--! Font Awesome Pro 6.3.0 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2023 Fonticons, Inc. --><path d=\"M356 60l60 20-60 20-20 60-20-60L256 80l60-20L336 0l20 60zM464 208l48 16-48 16-16 48-16-48-48-16 48-16 16-48 16 48zm-243.8-9.8l33 66.9 73.8 10.7 59.8 8.7-43.3 42.2-53.4 52.1 12.6 73.5L313 512l-53.5-28.1-66-34.7-66 34.7L73.9 512l10.2-59.6 12.6-73.5L43.3 326.8 0 284.6l59.8-8.7 73.8-10.7 33-66.9L193.5 144l26.8 54.2zm26.1 114.4l-25-3.6-11.2-22.6-16.7-33.9-16.7 33.9L165.6 309l-25 3.6-37.4 5.4 27.1 26.4 18.1 17.6L144 387l-6.4 37.3 33.5-17.6 22.3-11.7 22.3 11.7 33.5 17.6L242.9 387l-4.3-24.9 18.1-17.6 27.1-26.4-37.4-5.4z\"/></svg>\n                Shop Now!</a>\n        </div>\n\n        <ul class=\"navigation-menu\">\n                            <li class=\"nav-locale dropdown dropdown-locales\">\n                    <button class=\"dropdown-toggle\" id=\"dropdownLanguage\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                        <i class=\"fa fa-fw fa-globe\" aria-hidden=\"true\"></i> <span class=\"caption d-none d-lg-inline-block\">English</span>\n                    </button>\n                    <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownLanguage\">\n                                                                                                                        <a href=\"https://refactoring.guru/design-patterns/builder\" class=\"dropdown-item locale-link active\" data-locale=\"en\" title=\"English\">English</a>\n                                                                                                                                <a href=\"https://refactoring.guru/es/design-patterns/builder\" class=\"dropdown-item locale-link \" data-locale=\"es\" title=\"Español\">Español</a>\n                                                                                                                                <a href=\"https://refactoring.guru/fr/design-patterns/builder\" class=\"dropdown-item locale-link \" data-locale=\"fr\" title=\"Français\">Français</a>\n                                                                                                                                <a href=\"https://refactoring.guru/ja/design-patterns/builder\" class=\"dropdown-item locale-link \" data-locale=\"ja\" title=\"日本語\">日本語</a>\n                                                                                                                                <a href=\"https://refactoring.guru/ko/design-patterns/builder\" class=\"dropdown-item locale-link \" data-locale=\"ko\" title=\"한국어\">한국어</a>\n                                                                                                                                <a href=\"https://refactoring.guru/pl/design-patterns/builder\" class=\"dropdown-item locale-link \" data-locale=\"pl\" title=\"Polski\">Polski</a>\n                                                                                                                                <a href=\"https://refactoring.guru/pt-br/design-patterns/builder\" class=\"dropdown-item locale-link \" data-locale=\"pt-br\" title=\"Português Brasileiro\">Português Brasileiro</a>\n                                                                                                                                <a href=\"https://refactoring.guru/ru/design-patterns/builder\" class=\"dropdown-item locale-link \" data-locale=\"ru\" title=\"Русский\">Русский</a>\n                                                                                                                                <a href=\"https://refactoring.guru/uk/design-patterns/builder\" class=\"dropdown-item locale-link \" data-locale=\"uk\" title=\"Українська\">Українська</a>\n                                                                                                                                <a href=\"https://refactoringguru.cn/design-patterns/builder\" class=\"dropdown-item locale-link \" data-locale=\"zh\" title=\"中文\">中文</a>\ndiv>\n                </li>\n                        <li class=\"nav-contacts\">\n                <a class=\"userecho-private\" href=\"https://feedback.refactoring.guru/?show_feedback_form_private=true\" rel=\"nofollow\" title=\"Contact us\">\n                    <i class=\"fa fa-fw fa-envelope\" aria-hidden=\"true\"></i> <span class=\"caption d-none d-xl-inline-block\">Contact us</span>\n                </a>\n            </li>\n                            <li class=\"nav-user\">\n                    <a href=\"https://refactoring.guru/login\" title=\"Sign in\"><span class=\"sign-in-icon\"><svg style=\"width: 24px; height: 24px; \" class=\"inline-block \"  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\"opacity=\"0.4\" d=\"M352.7 222.4c3.2 1 6.5 1.6 10 1.6l21.3 0c17.7 0 32 14.3 32 32s-14.3 32-32 32l-21.3 0c-.8 0-1.7 0-2.5 0c-.9 0-1.7-.1-2.5-.1c-1.7-.1-3.4-.2-5-.4C357.4 414 391.1 512 432 512c44.2 0 80-114.6 80-256S476.2 0 432 0c-40.6 0-74.2 96.9-79.3 222.4z\"/><path fill=\"currentColor\"class=\"fa-primary\" d=\"M320 48a48 48 0 1 0 -96 0 48 48 0 1 0 96 0zM125.7 175.5c9.9-9.9 23.4-15.5 37.5-15.5c1.9 0 3.8 .1 5.6 .3L137.6 254c-9.3 28 1.7 58.8 26.8 74.5l86.2 53.9-25.4 88.8c-4.9 17 5 34.7 22 39.6s34.7-5 39.6-22l28.7-100.4c5.9-20.6-2.6-42.6-20.7-53.9L238 299l30.9-82.4 5.1 12.3C289 264.7 323.9 288 362.7 288l21.3 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-21.3 0c-12.9 0-24.6-7.8-29.5-19.7l-6.3-15c-14.6-35.1-44.1-61.9-80.5-73.1l-48.7-15c-11.1-3.4-22.7-5.2-34.4-5.2c-31 0-60.8 12.3-82.7 34.3L57.4 153.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l23.1-23.1zM91.2 352L32 352c-17.7 0-32 14.3-32 32s14.3 32 32 32l69.6 0c19 0 36.2-11.2 43.9-28.5L157 361.6l-9.5-6c-17.5-10.9-30.5-26.8-37.9-44.9L91.2 352z\"/></svg></span> <span class=\"account-icon\" style=\"display:none\"><svg style=\"width: 24px; height: 24px; \" class=\"inline-block \"  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 576 512\"><path fill=\"currentColor\"opacity=\"0.4\" d=\"M64 270.5l224-196c74.7 65.4 149.4 130.7 224.1 196.1l.4 177.3c.1 35.4-28.6 64.1-64 64.1l-320.4 0c-35.3 0-64-28.6-64-64L64 270.5zM176.1 433.6c.1 .5 .1 1.1 .2 1.6c.2 1 .5 2 .9 3c.8 1.9 2 3.6 3.4 5.1c2.9 2.9 6.9 4.7 11.3 4.7l192 0c8.8 0 16-7.2 16-16c0-44.2-35.8-80-80-80l-64 0c-22.1 0-42.1 9-56.6 23.4c-7.2 7.2-13.1 15.9-17.1 25.4c-2 4.8-3.6 9.8-4.7 15c-.5 2.6-.9 5.3-1.2 7.9c-.1 1.3-.2 2.7-.3 4.1c-.1 1.4-.1 2.7-.1 4.1c0 .6 0 1.1 .1 1.6zm48.2-184.2c-.1 1.1-.2 2.2-.2 3.2c-.1 1.1-.1 2.2-.1 3.3s0 2.2 .1 3.3c.1 1.1 .1 2.2 .2 3.2c.2 2.1 .5 4.3 1 6.4c.9 4.2 2.1 8.2 3.7 12c3.2 7.7 7.9 14.6 13.7 20.3C254.3 312.8 270.3 320 288 320c35.3 0 64-28.7 64-64s-28.7-64-64-64c-17.7 0-33.7 7.2-45.3 18.7c-5.8 5.8-10.5 12.7-13.7 20.3c-1.6 3.8-2.9 7.8-3.7 12c-.4 2.1-.8 4.2-1 6.4z\"/><path fill=\"currentColor\"class=\"fa-primary\" d=\"M309.1 7.9C297-2.6 279-2.6 266.9 7.9l-256 224c-13.3 11.6-14.6 31.9-3 45.2s31.9 14.6 45.2 3L288 74.5 522.9 280.1c13.3 11.6 33.5 10.3 45.2-3s10.3-33.5-3-45.2L512 185.5 512 64c0-17.7-14.3-32-32-32l-32 0c-17.7 0-32 14.3-32 32l0 37.5L309.1 7.9zM352 256a64 64 0 1 0 -128 0 64 64 0 1 0 128 0zm-96 96c-44.2 0-80 35.8-80 80c0 8.8 7.2 16 16 16l192 0c8.8 0 16-7.2 16-16c0-44.2-35.8-80-80-80l-64 0z\"/></svg></span> <span class=\"sign-out-icon\" style=\"display:none\"><svg style=\"width: 24px; height: 24px; \" class=\"inline-block \"  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\"opacity=\"0.4\" d=\"M0 256C0 397.4 35.8 512 80 512c25.3 0 47.8-37.5 62.5-96L128 416c-.5 0-1.1 0-1.6 0c-.6 0-1.1-.1-1.6-.1c-1.1-.1-2.1-.3-3.2-.5c-2.1-.4-4.1-1.1-6-1.9c-3.8-1.6-7.3-4-10.2-6.9s-5.2-6.3-6.9-10.2c-.8-1.9-1.4-3.9-1.9-6c-.2-1.1-.4-2.3-.5-3.5c0-.3 0-.6-.1-.8c0-.2 0-.4 0-.7c0-.4 0-.7 0-.7c0-.5 0-.7 0-.9c0-.3 0-.6 0-.9c0 0 0-.3 0-.7c0-.2 0-.4 0-.7c0-.2 0-.4 .1-.8c0-.3 .1-.6 .1-.9c0-.2 .1-.4 .1-.7c.1-.8 .2-1.2 .3-1.7c.5-2.2 1.1-4.2 1.9-6.1c1.6-3.8 4-7.3 6.9-10.2c5.8-5.8 13.8-9.4 22.6-9.4l26.2 0c3.8-29.6 5.8-62.1 5.8-96c0-18.3-.6-36.1-1.7-53.4c-1.7-1.2-3.4-2.5-4.9-4c-.8-.8-1.6-1.6-2.2-2.5s-1.3-1.7-1.9-2.6c-1.2-1.8-2.1-3.6-2.9-5.5s-1.4-3.9-1.8-5.9c-.2-1-.3-2-.4-3s-.1-2-.2-3c0-8.3 3.1-16.5 9.4-22.8C141 63.1 112.8 0 80 0C35.8 0 0 114.6 0 256z\"/><path fill=\"currentColor\"class=\"fa-primary\" d=\"M416 48a48 48 0 1 0 -96 0 48 48 0 1 0 96 0zM221.7 175.5c9.9-9.9 23.4-15.5 37.5-15.5c1.9 0 3.8 .1 5.6 .3L233.6 254c-9.3 28 1.7 58.8 26.8 74.5l86.2 53.9-25.4 88.8c-4.9 17 5 34.7 22 39.6s34.7-5 39.6-22l28.7-100.4c5.9-20.6-2.6-42.6-20.7-53.9L334 299l30.9-82.4 5.1 12.3C385 264.7 419.9 288 458.7 288l21.3 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-21.3 0c-12.9 0-24.6-7.8-29.5-19.7l-6.3-15c-14.6-35.1-44.1-61.9-80.5-73.1l-48.7-15c-11.1-3.4-22.7-5.2-34.4-5.2c-31 0-60.8 12.3-82.7 34.3l-23.1 23.1c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l23.1-23.1zM187.2 352L128 352c-17.7 0-32 14.3-32 32s14.3 32 32 32l69.6 0c19 0 36.2-11.2 43.9-28.5L253 361.6l-9.5-6c-17.5-10.9-30.5-26.8-37.9-44.9L187.2 352z\"/></svg></span> <span class=\"caption d-none d-xl-inline-block\">Sign in</span></a>\n                </li>\n                        <li class=\"nav-menu\">\n                <button class=\"navigation-toggle\"><i class=\"fa fa-fw fa-bars\" aria-hidden=\"true\"></i></button>\n            </li>\n        </ul>\n    </div>\n</nav>\n\n    <footer class=\"footer center-content\">\n    <div class=\"footer-container center-content-container\">\n        <div class=\"footer-inner container-fluid\">\n            <div class=\"row\">\n                <div class=\"col-8 col-md-10\">\n                    <ul class=\"footer-list footer-list-horizontal\">\n                        <li><a href=\"/\">Home</a></li>\n                        <li><a href=\"/refactoring\">Refactoring</a></li>\n                        <li><a href=\"/design-patterns\">Design Patterns</a></li>\n                        <li><a href=\"/store\">Premium Content</a></li>\n                        <li><a href=\"https://gitbybit.com/\">Git Course</a></li>\n                        <li><a href=\"https://refactoring.userecho.com/\" rel=\"nofollow\" class=\"userecho-public\">Forum</a></li>\n                        <li><a href=\"https://refactoring.userecho.com/\" rel=\"nofollow\" class=\"userecho-private\">Contact us</a></li>\n                    </ul>\n                </div>\n                <div class=\"col-4 col-md-2\">\n                    <ul class=\"footer-list footer-list-iconic footer-list-right\">\n                                                    <li><a href=\"https://www.facebook.com/refactoring.guru\"><i class=\"fa fa-facebook-official\"></i></a></li>\n                                                <li><a href=\"/sendy/form\" rel=\"nofollow\"><i class=\"fa fa-envelope\" aria-hidden=\"true\"></i></a></li>\n                        <li><a href=\"https://github.com/RefactoringGuru\"><i class=\"fa fa-github-circled\"></i></a></li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"footer-second\">\n        <div class=\"footer-container center-content-container\">\n            <div class=\"footer-inner container-fluid\">\n                <div class=\"row\">\n                    <div class=\"col-12 col-sm-6\">\n                        <i class=\"fa fa-fw fa-copyright\"></i> 2014-2025 <a href=\"/\">Refactoring.Guru</a>. <span style=\"white-space: nowrap\">All rights reserved.</span><br>\n                        <i class=\"fa fa-fw fa-image\"></i> Illustrations by <a href=\"http://zhart.us/\" rel=\"nofollow\"><span style=\"white-space: nowrap\">Dmitry Zhart</span></a>\n                    </div>\n                    <div class=\"footer-links-right col-12 col-sm-6 mt-4 mt-sm-0\">\n                        <ul class=\"footer-list footer-list-horizontal footer-list-right\">\n                            <li><a href=\"/terms\"><span>Terms &amp; Conditions</span></a>\n                            </li>\n                            <li><a href=\"/privacy-policy\"><span>Privacy Policy</span></a>\n                            </li>\n                            <li><a href=\"/content-usage-policy\"><span>Content Usage Policy</span></a>\n                            </li>\n                            <li><a href=\"/site-about\"><span>About us</span></a>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n                                    <div class=\"row\">\n                        <div class=\"col-12 col-sm-4\">\n                            <div class=\"mt-4\">\n                                                                    <b>Ukrainian office:</b><br>\n                                    <object class=\"fa-fw\" style=\"height: 0.8rem; filter: invert(50%);\"  type=\"image/svg+xml\" data=\"/images/content-public/icons/fa-building.svg?id=afddb5806968b0a9acfc1df75a181234\">\n                                        <img class=\"fa-fw\" style=\"height: 0.8rem;\" src=\"/images/content-public/icons/fa-building.svg?id=afddb5806968b0a9acfc1df75a181234\" alt=\"Organization address\"/>\n                                    </object> FOP Olga Skobeleva<br>\n                                    <svg style=\"width: 16px; height: 16px; margin-right: 1px; fill: currentColor;\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\"><path d=\"M352 192c0-88.4-71.6-160-160-160S32 103.6 32 192c0 15.6 5.4 37 16.6 63.4c10.9 25.9 26.2 54 43.6 82.1c34.1 55.3 74.4 108.2 99.9 140c25.4-31.8 65.8-84.7 99.9-140c17.3-28.1 32.7-56.3 43.6-82.1C346.6 229 352 207.6 352 192zm32 0c0 87.4-117 243-168.3 307.2c-12.3 15.3-35.1 15.3-47.4 0C117 435 0 279.4 0 192C0 86 86 0 192 0S384 86 384 192zm-240 0a48 48 0 1 0 96 0 48 48 0 1 0 -96 0zm48 80a80 80 0 1 1 0-160 80 80 0 1 1 0 160z\"/></svg> Abolmasova 7<br>\n                                    <span style=\"margin-left: 21px;\">Kyiv, Ukraine, 02002</span><br>\n                                    <i class=\"fa fa-fw fa-envelope\"></i>  Email: support@refactoring.guru\n                                \n                            </div>\n                        </div>\n                        <div class=\"col-12 col-sm-4\">\n                            <div class=\"mt-4\">\n                                <b>Spanish office:</b><br>\n                                <object class=\"fa-fw\" style=\"height: 0.8rem; filter: invert(50%);\"  type=\"image/svg+xml\" data=\"/images/content-public/icons/fa-building.svg?id=afddb5806968b0a9acfc1df75a181234\">\n                                    <img class=\"fa-fw\" style=\"height: 0.8rem;\" src=\"/images/content-public/icons/fa-building.svg?id=afddb5806968b0a9acfc1df75a181234\" alt=\"Organization address\"/>\n                                </object> Oleksandr Shvets<br>\n                                <svg style=\"width: 16px; height: 16px; margin-right: 1px; fill: currentColor;\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\"><path d=\"M352 192c0-88.4-71.6-160-160-160S32 103.6 32 192c0 15.6 5.4 37 16.6 63.4c10.9 25.9 26.2 54 43.6 82.1c34.1 55.3 74.4 108.2 99.9 140c25.4-31.8 65.8-84.7 99.9-140c17.3-28.1 32.7-56.3 43.6-82.1C346.6 229 352 207.6 352 192zm32 0c0 87.4-117 243-168.3 307.2c-12.3 15.3-35.1 15.3-47.4 0C117 435 0 279.4 0 192C0 86 86 0 192 0S384 86 384 192zm-240 0a48 48 0 1 0 96 0 48 48 0 1 0 -96 0zm48 80a80 80 0 1 1 0-160 80 80 0 1 1 0 160z\"/></svg> Avda Pamplona 64<br>\n                                <span style=\"margin-left: 21px;\">Pamplona, Spain, 31009</span><br>\n                                <i class=\"fa fa-fw fa-envelope\"></i>  Email: support@refactoring.guru\n                            </div>\n                        </div>\n                    </div>\n                            </div>\n        </div>\n    </div>\n</footer>\n\n</div>\n\n\n    <script defer>\n    var CodeMirrorScripts = [\"/js/codemirror.min.js?id=f7ae4adf14bd00338caf8e95da733cc9\"];\n</script>\n\n\n\n    <script>window.loadContent = true;window.loadCart = true;</script>\n</body>\n</html>\n"},
{"title": null, "url": "https://refactoring.guru/design-patterns/abstract-factory", "raw_html": "<!DOCTYPE html>\n<html lang=\"en\" dir=\"ltr\">\n<head prefix=\"og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# website: http://ogp.me/ns/website#\">\n    <meta charset=\"utf-8\">\n    <title>Abstract Factory</title>\n\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n    <meta name=\"theme-color\" content=\"#A2E2FD\" />\n\n            <style>\n        .buy-widget-excl-local-taxes {\n            display: none;\n        }\n    </style>\n    \n    <link rel=\"preload\" href=\"/fonts/PTSans/ptsans-regular_en.woff2?1\" as=\"font\" type=\"font/woff2\" crossorigin>\n    <link rel=\"preload\" href=\"/fonts/PTSans/ptsans-bold_en.woff2?1\" as=\"font\" type=\"font/woff2\" crossorigin>\n        <link rel=\"preload\" href=\"/fonts/fontello/fontawesome.woff2?15843843\" as=\"font\" type=\"font/woff2\" crossorigin>\n    <link rel=\"preload\" href=\"/fonts/FiraCode/woff2/FiraCode-Regular_latin.woff2\" as=\"font\" type=\"font/woff2\" crossorigin>\n        <link rel=\"preconnect dns-prefetch\" href=\"https://cdn.paddle.com\">\n    <link rel=\"preconnect dns-prefetch\" href=\"https://www.googletagmanager.com\">\n\n    <link rel=\"alternate\" href=\"https://refactoring.guru/design-patterns/abstract-factory\" hreflang=\"x-default\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/es/design-patterns/abstract-factory\" hreflang=\"es\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/fr/design-patterns/abstract-factory\" hreflang=\"fr\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/ja/design-patterns/abstract-factory\" hreflang=\"ja\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/ko/design-patterns/abstract-factory\" hreflang=\"ko\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/pl/design-patterns/abstract-factory\" hreflang=\"pl\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/pt-br/design-patterns/abstract-factory\" hreflang=\"pt-br\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/ru/design-patterns/abstract-factory\" hreflang=\"ru\"/>\n    <link rel=\"alternate\" href=\"https://refactoring.guru/uk/design-patterns/abstract-factory\" hreflang=\"uk\"/>\n    <link rel=\"alternate\" href=\"https://refactoringguru.cn/design-patterns/abstract-factory\" hreflang=\"zh\"/>\n\n    <meta name=\"description\" content=\"Abstract Factory is a creational design pattern that lets you produce families of related objects without specifying their concrete classes.\">\n\n    <link rel=\"canonical\" href=\"https://refactoring.guru/design-patterns/abstract-factory\"/>\n\n    <link rel=\"icon\" type=\"image/x-icon\" href=\"/favicon.png\"/>\n\n        <meta property=\"fb:app_id\" content=\"666819623386327\"/>\n        <meta property=\"og:type\" content=\"website\"/>\n        <meta property=\"og:image\" content=\"https://refactoring.guru/images/refactoring/social/facebook-share-preview.png?id=dbf9e98269595be86eb668f365be6868\"/>\n    \n                    <link rel=\"stylesheet\" href=\"/css/public-packed.min.css?id=aaefab4da343b914b8dda9973604a9e8\">\n        <style type=\"text/css\">\n                    @font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_cyrillic-ext.woff2?1) format(\"woff2\");unicode-range:U+0460-052F,U+1C80-1C88,U+20B4,U+2DE0-2DFF,U+A640-A69F,U+FE2E-FE2F}@font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_cyrillic.woff2?1) format(\"woff2\");unicode-range:U+0400-045F,U+0490-0491,U+04B0-04B1,U+2116}@font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_latin-ext.woff2?1) format(\"woff2\");unicode-range:U+0100-024F,U+0259,U+1E00-1EFF,U+2020,U+20A0-20AB,U+20AD-20CF,U+2113,U+2C60-2C7F,U+A720-A7FF}@font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_latin.woff2?1) format(\"woff2\");unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}@font-face{font-family:'PT Sans';font-style:normal;font-weight:400;font-display:swap;src:local(\"PT Sans\"),local(\"PTSans-Regular\"),url(/fonts/PTSans/ptsans-regular_en.woff2?1) format(\"woff2\");unicode-range:U+0-FF,U+131,U+142,U+152,U+153,U+2BB,U+2BC,U+2C6,U+2DA,U+2DC,U+420,U+423,U+430,U+438-43A,U+43D,U+440,U+441,U+443,U+44C,U+457,U+2000-206F,U+2074,U+20AA-20AC,U+20B4,U+20B9,U+20BA,U+20BD,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_cyrillic-ext.woff2?1) format(\"woff2\");unicode-range:U+0460-052F,U+1C80-1C88,U+20B4,U+2DE0-2DFF,U+A640-A69F,U+FE2E-FE2F}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_cyrillic.woff2?1) format(\"woff2\");unicode-range:U+0400-045F,U+0490-0491,U+04B0-04B1,U+2116}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_latin-ext.woff2?1) format(\"woff2\");unicode-range:U+0100-024F,U+0259,U+1E00-1EFF,U+2020,U+20A0-20AB,U+20AD-20CF,U+2113,U+2C60-2C7F,U+A720-A7FF}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_latin.woff2?1) format(\"woff2\");unicode-range:U+0000-00FF,U+0131,U+0152-0153,U+02BB-02BC,U+02C6,U+02DA,U+02DC,U+2000-206F,U+2074,U+20AC,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}@font-face{font-family:'PT Sans';font-style:normal;font-weight:700;font-display:swap;src:local(\"PT Sans Bold\"),local(\"PTSans-Bold\"),url(/fonts/PTSans/ptsans-bold_en.woff2?1) format(\"woff2\");unicode-range:U+0-FF,U+131,U+142,U+152,U+153,U+2BB,U+2BC,U+2C6,U+2DA,U+2DC,U+420,U+423,U+430,U+438-43A,U+43D,U+440,U+441,U+443,U+44C,U+457,U+2000-206F,U+2074,U+20AA-20AC,U+20B4,U+20B9,U+20BA,U+20BD,U+2122,U+2191,U+2193,U+2212,U+2215,U+FEFF,U+FFFD}\n            </style>\n\n    \n            <script defer src=\"/js/public.min.js?id=1f19fe18ffe0fc844ede8a0f2ee64202\"></script>\n        <script defer src=\"/js/checkout.min.js?id=b4da9c5bd8b1cf504447c07ae8b7cd44\"></script>\n            <script defer src=\"https://cdn.paddle.com/paddle/v2/paddle.js\"></script>\n    <script async src=\"https://www.googletagmanager.com/gtag/js?id=G-SR8Y3GYQYC\"></script>\n\n    <script type=\"application/ld+json\">\n        {\"@context\": \"http://schema.org\", \"@graph\": [{\"@type\":\"Person\",\"@id\":\"https://refactoring.guru/#founder\",\"name\":\"Alexander Shvets\"},{\"@type\":\"Organization\",\"@id\":\"https://refactoring.guru/#organization\",\"name\":\"Refactoring.Guru\",\"description\":\"Refactoring.Guru makes it easy for you to discover everything you need to know about refactoring, design patterns, SOLID principles, and other smart programming topics.\",\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https://refactoring.guru/#organizationlogo\",\"url\":\"https://refactoring.guru/images/content-public/logos/logo-plain.png\",\"caption\":\"Refactoring.Guru\"},\"logo\":{\"@id\":\"https://refactoring.guru/#organizationlogo\"},\"founder\":{\"@id\":\"https://refactoring.guru/#founder\"},\"sameAs\":[\"https://www.facebook.com/refactoring.guru\",\"https://twitter.com/RefactoringGuru\",\"https://github.com/RefactoringGuru\"]},{\"@type\":\"WebSite\",\"@id\":\"https://refactoring.guru/#website\",\"url\":\"https://refactoring.guru/\",\"name\":\"Refactoring.Guru\",\"description\":\"Refactoring.Guru makes it easy for you to discover everything you need to know about refactoring, design patterns, SOLID principles, and other smart programming topics.\",\"author\":{\"@id\":\"https://refactoring.guru/#founder\"},\"publisher\":{\"@id\":\"https://refactoring.guru/#organization\"},\"copyrightYear\":2014},{\"@type\":\"WebPage\",\"@id\":\"https://refactoring.guru/design-patterns/abstract-factory#webpage\",\"url\":\"https://refactoring.guru/design-patterns/abstract-factory\",\"inLanguage\":\"en\",\"name\":\"Abstract Factory\",\"description\":\"Abstract Factory is a creational design pattern that lets you produce families of related objects without specifying their concrete classes.\",\"isPartOf\":{\"@id\":\"https://refactoring.guru#website\"},\"breadcrumb\":{\"@id\":\"https://refactoring.guru/design-patterns/abstract-factory#breadcrumb\"},\"primaryImageOfPage\":{\"@id\":\"https://refactoring.guru/design-patterns/abstract-factory#primaryimage\"},\"image\":{\"@type\":\"ImageObject\",\"@id\":\"https://refactoring.guru/design-patterns/abstract-factory#primaryimage\",\"url\":\"https://refactoring.guru/images/patterns/content/abstract-factory/abstract-factory-en-3x.png\",\"width\":1920,\"height\":1200}},{\"@type\":\"Article\",\"@id\":\"https://refactoring.guru/design-patterns/abstract-factory#article\",\"isPartOf\":{\"@id\":\"https://refactoring.guru/design-patterns/abstract-factory#webpage\"},\"mainEntityOfPage\":{\"@id\":\"https://refactoring.guru/design-patterns/abstract-factory#webpage\"},\"author\":{\"@id\":\"https://refactoring.guru#founder\"},\"publisher\":{\"@id\":\"https://refactoring.guru#organization\"},\"headline\":\"Abstract Factory\",\"datePublished\":\"2024-01-01\",\"dateModified\":\"2025-01-01\",\"articleSection\":\"Design Patterns\",\"image\":{\"@id\":\"https://refactoring.guru/design-patterns/abstract-factory#primaryimage\"}},{\"@type\":\"BreadcrumbList\",\"@id\":\"https://refactoring.guru/design-patterns/abstract-factory#breadcrumb\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"name\":\"Home\",\"item\":\"https://refactoring.guru\"},{\"@type\":\"ListItem\",\"position\":2,\"name\":\"Design Patterns\",\"item\":\"https://refactoring.guru/design-patterns\"},{\"@type\":\"ListItem\",\"position\":3,\"name\":\"Creational Patterns\",\"item\":\"https://refactoring.guru/design-patterns/creational-patterns\"}]}] }\n    </script>\n\n    <script>\nfunction extend(){var extended={};var deep=false;var i=0;var length=arguments[\"length\"];if(Object[\"prototype\"][\"toString\"][\"call\"](arguments[0])=== '[object Boolean]'){deep= arguments[0];i++};var merge=function(obj){for(var prop in obj){if(Object[\"prototype\"][\"hasOwnProperty\"][\"call\"](obj,prop)){if(deep&& Object[\"prototype\"][\"toString\"][\"call\"](obj[prop])=== '[object Object]'){extended[prop]= extend(true,extended[prop],obj[prop])}else {extended[prop]= obj[prop]}}}};for(;i< length;i++){var obj=arguments[i];merge(obj)};return extended}\nfunction defer(method) {if (window.jQuery) {method();} else {setTimeout(function() { defer(method) }, 50);}}\n</script>\n<script>\n+function(sd){sd = (typeof sd === \"string\") ? JSON.parse(atob(sd)) : sd;for(var property in sd){if(window[property]!== null&&  typeof window[property]=== 'object'){window[property]= extend(true,window[property],sd[property])}else {window[property]= sd[property]}}}(\"eyJsb2NhbGUiOiJlbiIsImxvY2FsZV9wcmVmaXgiOiIiLCJsb2NhbGl6ZWRfdXJsX3ByZWZpeCI6Imh0dHBzOlwvXC9yZWZhY3RvcmluZy5ndXJ1XC8iLCJ1cmxfcHJlZml4IjoiaHR0cHM6XC9cL3JlZmFjdG9yaW5nLmd1cnVcLyIsImxvY2FsaXplZF91cmxfcHJlZml4X20iOiJodHRwczpcL1wvcmVmYWN0b3JpbmcuZ3VydVwvIiwidXJsX3ByZWZpeF9tIjoiaHR0cHM6XC9cL3JlZmFjdG9yaW5nLmd1cnVcLyIsInVzZXJfZWNob19hbGlhcyI6InJlZmFjdG9yaW5nIiwidXNlcl9lY2hvX2hvc3QiOiJmZWVkYmFjay5yZWZhY3RvcmluZy5ndXJ1IiwidXNlcl9lY2hvX3ByaXZhdGVfZm9ydW0iOiIyIiwidXNlcl9lY2hvX2xvY2FsZSI6ImVuIiwidXNlcl9lY2hvX3B1YmxpY19mb3J1bSI6IjMiLCJ1c2VyX2VjaG9fcHVibGljX2ZvcnVtX3VybCI6Imh0dHBzOlwvXC9mZWVkYmFjay5yZWZhY3RvcmluZy5ndXJ1XC8iLCJ1c2VyX2VjaG9fc3NvX3Rva2VuIjoiIn0=\");\n</script>\n\n<script>\n    window.dataLayer = window.dataLayer || [];\n    function gtag(){dataLayer.push(arguments);}\n    gtag('js', new Date());\n            gtag('set', 'linker', {'domains': [\"refactoring.guru,refactoringguru.cn\"]});\n        gtag('config', 'G-SR8Y3GYQYC', {\n        // Disable default page view, because we're going to report them on our own.\n        // This is done to report traffic on localized domains as part of the main website traffic\n        // See the Chinese overrides below.\n        send_page_view: false,\n    });\n</script>\n\n<script>\n    (() => {\n        // On first page view after returning from social network, we need to send the social login event.\n        (function detectSocialLogin() {\n            let getCookie = function (name) {\n                var nameEQ = name + \"=\";\n                var ca = document.cookie.split(';');\n                for (var i = 0; i < ca.length; i++) {\n                    var c = ca[i];\n                    while (c.charAt(0) == ' ') c = c.substring(1, c.length);\n                    if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);\n                }\n                return null;\n            };\n            window.social_login_provider = window.social_login_provider || getCookie('social_login_provider');\n            if (window.social_login_provider) {\n                gtag('set', {referrer: null});\n                gtag('event', 'login', {\"method\": window.social_login_provider});\n                // Delete cookie.\n                document.cookie = 'social_login_provider=; Path=/; Max-Age=-99999999;';\n            }\n        })();\n\n        function trackPageView(location, title) {\n            location = location || document.location.href;\n            title = title || document.title;\n\n            // This is show on https://refactoringguru.cn/ and alike.\n            if (typeof window.analytics_path_prefix === 'string') {\n                if (/^(https?:\\/\\/[^\\/]+?)\\/$/.test(location)) {\n                    location = location.replace(/(https?:\\/\\/[^\\/]+?)\\//, '$1' + window.analytics_path_prefix);\n                } else {\n                    location = location.replace(/(https?:\\/\\/[^\\/]+?)\\//, '$1' + window.analytics_path_prefix + '/');\n                }\n                gtag('set', {\n                    'page_location': location\n                });\n            }\n\n            // This is show on https://refactoring.guru/zh/login and alike.\n            if (typeof window.analytics_location_prefix === 'string') {\n                location = location.replace(/(https?:\\/\\/[^\\/]+?)\\//, window.analytics_location_prefix);\n                gtag('set', {\n                    'page_location': location\n                });\n            }\n\n            gtag('event', 'page_view', {\n                page_location: location,\n                page_title: title,\n                locale: window.locale ?? 'en'\n            });\n        }\n\n        if (window.loadContent) {\n            window.onPageLoad = window.onPageLoad || [];\n            window.onPageLoad.push({\n                func: function (context) {\n                    trackPageView(window.location.origin + context.canonicalPath, context.title);\n                },\n                afterAll: true,\n            });\n        }\n        else {\n            trackPageView();\n        }\n    })();\n</script>\n\n\n</head>\n<body class=\"locale-en   announcement   abstract-factory\" data-body_class=\"abstract-factory\">\n\n<div class=\"body-holder\">\n\n            <div class=\"announcement-block announcement-block-summer prom\" data-id=\"DIDP-announcement\" data-creative-id=\"en\" data-position=\"top\">\n        <span class=\"beach-and-sea\">\n            <span class=\"a1\"></span>\n            <span class=\"a2\"><span class=\"wave\"></span></span>\n            <span class=\"yacht\"></span>\n        </span>\n        <a href=\"/store\">\n            <img src=\"/images/content-public/ann/summer/sunbed.svg?id=b1e7314a63715a13870a6bd1a43613f7\" loading=\"lazy\" style=\"width: 32px; height:32px;vertical-align: middle; scale: -1 1 1;\">\n            <span class=\"announcement-link-text\">Summer SALE</span>\n            <img src=\"/images/content-public/ann/summer/reading-book.svg?id=36006ea720df8c171968cf613e8ea164\" loading=\"lazy\" style=\"width: 32px; height:32px;vertical-align: middle;\">\n        </a>\n    </div>\n\n    \n    <div class=\"cart-placeholder\">\n    <div class=\"cart-block-container\" style=\"display:none\">\n        <div class=\"cart-block btn-group\">\n            <a href=\"#checkout\" class=\"btn cart open-checkout\">\n                <span class=\"cart-text\"></span>&nbsp;<strong class=\"cart-total font-money\"></strong>\n            </a><a href=\"#checkout\" class=\"btn btn-secondary checkout open-checkout\"><i class=\"fa fa-shopping-cart\" aria-hidden=\"true\"></i> <span class=\"btn-text-span d-none d-sm-inline-block d-lg-none d-hg-inline-block\"></span></a>\n        </div>\n    </div>\n</div>\n    <main role=\"main\" class=\"main-content top-content center-content \" data-page_class=\"\">\n        <div class=\"main-content-container center-content-container\">\n                        <div class=\"pattern page text\">\n<article>\n    <div class=\"breadcrumb\">\n                                    <a class=\"home\" href=\"/\"><i class=\"fa fa-home\" aria-hidden=\"true\"></i></a>\n                                                / <a class=\"type\" href=\"/design-patterns\">Design Patterns</a>\n                                                / <a class=\"type\" href=\"/design-patterns/creational-patterns\">Creational Patterns</a>\n                        </div>\n    <h1 class=\"title\">Abstract Factory</h1>\n\n    <script type=\"text/javascript\">\n        // Shorten examples titles for users.\n        var h1 = document.getElementsByTagName(\"H1\")[0];\n        if (h1.offsetHeight > 160) {\n            h1.className += ' smaller';\n        }\n\n        // Small beautification for pattern examples.\n        var title = h1.innerHTML;\n        title = title.replace(/^(Java|C\\+\\+|C#|PHP|Python|Ruby|Delphi): (.*)$/, '<strong>$1:</strong> $2');\n        h1.innerHTML = title;\n    </script>\n\n    \n    \n\n    <div class=\"section intent\">\n<h2 id=\"intent\"><i class=\"fa fa-flip-horizontal fa-comment-alt-dots\" aria-hidden=\"true\"></i> Intent</h2>\n<p><strong>Abstract Factory</strong> is a creational design pattern that lets you produce families of related objects without specifying their concrete classes.</p>\n<figure class=\"image\"><img src=\"/images/patterns/content/abstract-factory/abstract-factory-en.png?id=d0210ee255712a245fead94a3fafabe0\" alt=\"Abstract Factory pattern\" srcset=\"/images/patterns/content/abstract-factory/abstract-factory-en.png?id=d0210ee255712a245fead94a3fafabe0 640w,/images/patterns/content/abstract-factory/abstract-factory-en-1.5x.png?id=c0cb95bcdeda5fc9df4840e8b6316ac3 960w,/images/patterns/content/abstract-factory/abstract-factory-en-2x.png?id=a488ca862db731876fa0513bb2105640 1280w\" sizes=\"(max-width: 720px) 100vw, 640px\" width=\"640\" style=\"aspect-ratio: 1.6;\" fetchpriority=\"high\" /></figure>\n</div>\n<div class=\"section problem\">\n<h2 id=\"problem\"><i class=\"fa fa-frown\" aria-hidden=\"true\"></i> Problem</h2>\n<p>Imagine that you’re creating a furniture shop simulator. Your code consists of classes that represent:</p>\n<ol>\n<li>\n<p>A family of related products, say: <code>Chair</code> + <code>Sofa</code> + <code>CoffeeTable</code>.</p>\n</li>\n<li>\n<p>Several variants of this family. For example, products <code>Chair</code> + <code>Sofa</code> + <code>CoffeeTable</code> are available in these variants: <code>Modern</code>, <code>Victorian</code>, <code>ArtDeco</code>.</p>\n</li>\n</ol>\n<figure class=\"image\"><img src=\"/images/patterns/diagrams/abstract-factory/problem-en.png?id=e38c307511e684828be898de02d6c268\" alt=\"Product families and their variants.\" srcset=\"/images/patterns/diagrams/abstract-factory/problem-en.png?id=e38c307511e684828be898de02d6c268 420w,/images/patterns/diagrams/abstract-factory/problem-en-1.5x.png?id=6055a66f7a4f424792a7a07cf116f55d 630w,/images/patterns/diagrams/abstract-factory/problem-en-2x.png?id=7de667bc24583c3ac03ccb80f3613cfe 840w\" sizes=\"(max-width: 720px) 100vw, 420px\" width=\"420\" style=\"aspect-ratio: 1.4;\" loading=\"lazy\" /><figcaption>\n<p>Product families and their variants.</p>\n</figcaption></figure>\n<p>You need a way to create individual furniture objects so that they match other objects of the same family. Customers get quite mad when they receive non-matching furniture.</p>\n<figure class=\"image\"><img src=\"/images/patterns/content/abstract-factory/abstract-factory-comic-1-en.png?id=f4012920c5034122eedbb0c9fec0cdb3\" srcset=\"/images/patterns/content/abstract-factory/abstract-factory-comic-1-en.png?id=f4012920c5034122eedbb0c9fec0cdb3 600w,/images/patterns/content/abstract-factory/abstract-factory-comic-1-en-1.5x.png?id=00f48d1c1854a6973a10d5488a82122a 900w,/images/patterns/content/abstract-factory/abstract-factory-comic-1-en-2x.png?id=e2d4e7bbdd41899a3a85ebefa88bca3e 1200w\" sizes=\"(max-width: 720px) 100vw, 600px\" width=\"600\" style=\"aspect-ratio: 2;\" loading=\"lazy\" /><figcaption>\n<p>A Modern-style sofa doesn’t match Victorian-style chairs.</p>\n</figcaption></figure>\n<p>Also, you don’t want to change existing code when adding new products or families of products to the program. Furniture vendors update their catalogs very often, and you wouldn’t want to change the core code each time it happens.</p>\n</div>\n<div class=\"section solution\">\n<h2 id=\"solution\"><i class=\"fa fa-smile-beam\" aria-hidden=\"true\"></i> Solution</h2>\n<p>The first thing the Abstract Factory pattern suggests is to explicitly declare interfaces for each distinct product of the product family (e.g., chair, sofa or coffee table). Then you can make all variants of products follow those interfaces. For example, all chair variants can implement the <code>Chair</code> interface; all coffee table variants can implement the <code>CoffeeTable</code> interface, and so on.</p>\n<figure class=\"image\"><img src=\"/images/patterns/diagrams/abstract-factory/solution1.png?id=71f2018d8bb443b9cce90d57110675e3\" alt=\"The Chairs class hierarchy\" srcset=\"/images/patterns/diagrams/abstract-factory/solution1.png?id=71f2018d8bb443b9cce90d57110675e3 420w,/images/patterns/diagrams/abstract-factory/solution1-1.5x.png?id=4366e971c850514cde5d33cb7956de8b 630w,/images/patterns/diagrams/abstract-factory/solution1-2x.png?id=eacec286153e058db9255d26541c0529 840w\" sizes=\"(max-width: 720px) 100vw, 420px\" width=\"420\" style=\"aspect-ratio: 1.5;\" loading=\"lazy\" /><figcaption>\n<p>All variants of the same object must be moved to a single class hierarchy.</p>\n</figcaption></figure>\n<p>The next move is to declare the <em>Abstract Factory</em>—an interface with a list of creation methods for all products that are part of the product family (for example, <code>createChair</code>, <code>createSofa</code> and <code>createCoffeeTable</code>). These methods must return <strong>abstract</strong> product types represented by the interfaces we extracted previously: <code>Chair</code>, <code>Sofa</code>, <code>CoffeeTable</code> and so on.</p>\n<figure class=\"image\"><img src=\"/images/patterns/diagrams/abstract-factory/solution2.png?id=53975d6e4714c6f942633a879f7ac571\" alt=\"The _Factories_ class hierarchy\" srcset=\"/images/patterns/diagrams/abstract-factory/solution2.png?id=53975d6e4714c6f942633a879f7ac571 640w,/images/patterns/diagrams/abstract-factory/solution2-1.5x.png?id=581a6cdc0dcd5511f1c30e509b1d4a7f 960w,/images/patterns/diagrams/abstract-factory/solution2-2x.png?id=b21557081f75ac7b4110427e89a10378 1280w\" sizes=\"(max-width: 720px) 100vw, 640px\" width=\"640\" style=\"aspect-ratio: 2;\" loading=\"lazy\" /><figcaption>\n<p>Each concrete factory corresponds to a specific product variant.</p>\n</figcaption></figure>\n<p>Now, how about the product variants? For each variant of a product family, we create a separate factory class based on the <code>AbstractFactory</code> interface. A factory is a class that returns products of a particular kind. For example, the <code>ModernFurnitureFactory</code> can only create <code>ModernChair</code>, <code>ModernSofa</code> and <code>ModernCoffeeTable</code> objects.</p>\n<p>The client code has to work with both factories and products via their respective abstract interfaces. This lets you change the type of a factory that you pass to the client code, as well as the product variant that the client code receives, without breaking the actual client code.</p>\n<figure class=\"image\"><img src=\"/images/patterns/content/abstract-factory/abstract-factory-comic-2-en.png?id=fbce1a263acfefc76074fd20fae7b8c3\" srcset=\"/images/patterns/content/abstract-factory/abstract-factory-comic-2-en.png?id=fbce1a263acfefc76074fd20fae7b8c3 600w,/images/patterns/content/abstract-factory/abstract-factory-comic-2-en-1.5x.png?id=455338a4d7c25d4a46819260e79ffa0b 900w,/images/patterns/content/abstract-factory/abstract-factory-comic-2-en-2x.png?id=824023e4cfdc6f4d2457e6dc3e51ccfb 1200w\" sizes=\"(max-width: 720px) 100vw, 600px\" width=\"600\" style=\"aspect-ratio: 2;\" loading=\"lazy\" /><figcaption>\n<p>The client shouldn’t care about the concrete class of the factory it works with.</p>\n</figcaption></figure>\n<p>Say the client wants a factory to produce a chair. The client doesn’t have to be aware of the factory’s class, nor does it matter what kind of chair it gets. Whether it’s a Modern model or a Victorian-style chair, the client must treat all chairs in the same manner, using the abstract <code>Chair</code> interface. With this approach, the only thing that the client knows about the chair is that it implements the <code>sitOn</code> method in some way. Also, whichever variant of the chair is returned, it’ll always match the type of sofa or coffee table produced by the same factory object.</p>\n<p>There’s one more thing left to clarify: if the client is only exposed to the abstract interfaces, what creates the actual factory objects? Usually, the application creates a concrete factory object at the initialization stage. Just before that, the app must select the factory type depending on the configuration or the environment settings.</p>\n</div>\n<div class=\"section structure-container\">\n<h2 id=\"structure\"><i class=\"fa fa-sitemap\" aria-hidden=\"true\"></i> Structure</h2>\n<div class=\"structure\">\n<div class=\"struct-image1 struct-image\">\n<figure class=\"image\"><img class=\"structure-img-non-indexed d-none d-xl-block\" src=\"/images/patterns/diagrams/abstract-factory/structure.png?id=a3112cdd98765406af94595a3c5e7762\" alt=\"Abstract Factory design pattern\" srcset=\"/images/patterns/diagrams/abstract-factory/structure.png?id=a3112cdd98765406af94595a3c5e7762 720w,/images/patterns/diagrams/abstract-factory/structure-1.5x.png?id=d2964e541620d9c087e693bd0e0a0836 1080w,/images/patterns/diagrams/abstract-factory/structure-2x.png?id=c4d3634ec2e74e02a0fe1a83ce9b50f6 1440w\" sizes=\"(max-width: 720px) 100vw, 640px\" width=\"720\" style=\"aspect-ratio: 1.6;\" loading=\"lazy\" /><img class=\"structure-img-indexed d-xl-none\" src=\"/images/patterns/diagrams/abstract-factory/structure-indexed.png?id=6ae1c99cbd90cf58753c633624fb1a04\" alt=\"Abstract Factory design pattern\" srcset=\"/images/patterns/diagrams/abstract-factory/structure-indexed.png?id=6ae1c99cbd90cf58753c633624fb1a04 700w,/images/patterns/diagrams/abstract-factory/structure-indexed-1.5x.png?id=473be2975c5716162e6969e6532210ac 1050w,/images/patterns/diagrams/abstract-factory/structure-indexed-2x.png?id=cb6d4e1e89826c42966dc7097374f889 1400w\" sizes=\"(max-width: 720px) 100vw, 640px\" width=\"700\" style=\"aspect-ratio: 1.56;\" loading=\"lazy\" /></figure>\n</div>\n<ol><li class=\"struct-li1\">\n<p><strong>Abstract Products</strong> declare interfaces for a set of distinct but related products which make up a product family.</p>\n</li>\n<li class=\"struct-li2\">\n<p><strong>Concrete Products</strong> are various implementations of abstract products, grouped by variants. Each abstract product (chair/sofa) must be implemented in all given variants (Victorian/Modern).</p>\n</li>\n<li class=\"struct-li3\">\n<p>The <strong>Abstract Factory</strong> interface declares a set of methods for creating each of the abstract products.</p>\n</li>\n<li class=\"struct-li4\">\n<p><strong>Concrete Factories</strong> implement creation methods of the abstract factory. Each concrete factory corresponds to a specific variant of products and creates only those product variants.</p>\n</li>\n<li class=\"struct-li5\">\n<p>Although concrete factories instantiate concrete products, signatures of their creation methods must return corresponding <em>abstract</em> products. This way the client code that uses a factory doesn’t get coupled to the specific variant of the product it gets from a factory. The <strong>Client</strong> can work with any concrete factory/product variant, as long as it communicates with their objects via abstract interfaces.</p>\n</li></ol>\n<style structure type=\"text/css\" >\n@media (min-width: 1200px) {\n.structure {\nmargin: 0;\nwidth: auto;\nheight: 620px;\n}\n\n.struct-image1 {\nleft: 160px;\ntop: 30px;\n}\n\n.struct-li1 {\nleft: 0px;\ntop: 160px;\nwidth: 150px;\n}\n\n.struct-li2 {\nleft: 0px;\ntop: 10px;\nwidth: 350px;\n}\n\n.struct-li3 {\nleft: 630px;\ntop: 40px;\nwidth: 210px;\n}\n\n.struct-li4 {\nleft: 10px;\ntop: 500px;\nwidth: 310px;\n}\n\n.struct-li5 {\nleft: 340px;\ntop: 500px;\nwidth: 530px;\n}\n\n}\n\n</style>\n</div></div>\n<div class=\"section pseudocode\">\n<h2 id=\"pseudocode\"><i class=\"fa fa-hashtag\" aria-hidden=\"true\"></i> Pseudocode</h2>\n<p>This example illustrates how the <strong>Abstract Factory</strong> pattern can be used for creating cross-platform UI elements without coupling the client code to concrete UI classes, while keeping all created elements consistent with a selected operating system.</p>\n<figure class=\"image\"><img src=\"/images/patterns/diagrams/abstract-factory/example.png?id=5928a61d18bf00b047463471c599100a\" alt=\"The class diagram for the Abstract Factory pattern example\" srcset=\"/images/patterns/diagrams/abstract-factory/example.png?id=5928a61d18bf00b047463471c599100a 640w,/images/patterns/diagrams/abstract-factory/example-1.5x.png?id=baee3bac793ec97e0ec91c49d9382e7d 960w,/images/patterns/diagrams/abstract-factory/example-2x.png?id=eb5127b1d6486f6fad73be2d5e444449 1280w\" sizes=\"(max-width: 720px) 100vw, 640px\" width=\"640\" style=\"aspect-ratio: 1.42;\" loading=\"lazy\" /><figcaption>\n<p>The cross-platform UI classes example.</p>\n</figcaption></figure>\n<p>The same UI elements in a cross-platform application are expected to behave similarly, but look a little bit different under different operating systems. Moreover, it’s your job to make sure that the UI elements match the style of the current operating system. You wouldn’t want your program to render macOS controls when it’s executed in Windows.</p>\n<p>The Abstract Factory interface declares a set of creation methods that the client code can use to produce different types of UI elements. Concrete factories correspond to specific operating systems and create the UI elements that match that particular OS.</p>\n<p>It works like this: when an application launches, it checks the type of the current operating system. The app uses this information to create a factory object from a class that matches the operating system. The rest of the code uses this factory to create UI elements. This prevents the wrong elements from being created.</p>\n<p>With this approach, the client code doesn’t depend on concrete classes of factories and UI elements as long as it works with these objects via their abstract interfaces. This also lets the client code support other factories or UI elements that you might add in the future.</p>\n<p>As a result, you don’t need to modify the client code each time you add a new variation of UI elements to your app. You just have to create a new factory class that produces these elements and slightly modify the app’s initialization code so it selects that class when appropriate.</p>\n<figure class=\"code\">\n<pre class=\"code\" lang=\"pseudocode\">// The abstract factory interface declares a set of methods that\n// return different abstract products. These products are called\n// a family and are related by a high-level theme or concept.\n// Products of one family are usually able to collaborate among\n// themselves. A family of products may have several variants,\n// but the products of one variant are incompatible with the\n// products of another variant.\ninterface GUIFactory is\n    method createButton():Button\n    method createCheckbox():Checkbox\n\n\n// Concrete factories produce a family of products that belong\n// to a single variant. The factory guarantees that the\n// resulting products are compatible. Signatures of the concrete\n// factory's methods return an abstract product, while inside\n// the method a concrete product is instantiated.\nclass WinFactory implements GUIFactory is\n    method createButton():Button is\n        return new WinButton()\n    method createCheckbox():Checkbox is\n        return new WinCheckbox()\n\n// Each concrete factory has a corresponding product variant.\nclass MacFactory implements GUIFactory is\n    method createButton():Button is\n        return new MacButton()\n    method createCheckbox():Checkbox is\n        return new MacCheckbox()\n\n\n// Each distinct product of a product family should have a base\n// interface. All variants of the product must implement this\n// interface.\ninterface Button is\n    method paint()\n\n// Concrete products are created by corresponding concrete\n// factories.\nclass WinButton implements Button is\n    method paint() is\n        // Render a button in Windows style.\n\nclass MacButton implements Button is\n    method paint() is\n        // Render a button in macOS style.\n\n// Here's the base interface of another product. All products\n// can interact with each other, but proper interaction is\n// possible only between products of the same concrete variant.\ninterface Checkbox is\n    method paint()\n\nclass WinCheckbox implements Checkbox is\n    method paint() is\n        // Render a checkbox in Windows style.\n\nclass MacCheckbox implements Checkbox is\n    method paint() is\n        // Render a checkbox in macOS style.\n\n\n// The client code works with factories and products only\n// through abstract types: GUIFactory, Button and Checkbox. This\n// lets you pass any factory or product subclass to the client\n// code without breaking it.\nclass Application is\n    private field factory: GUIFactory\n    private field button: Button\n    constructor Application(factory: GUIFactory) is\n        this.factory = factory\n    method createUI() is\n        this.button = factory.createButton()\n    method paint() is\n        button.paint()\n\n\n// The application picks the factory type depending on the\n// current configuration or environment settings and creates it\n// at runtime (usually at the initialization stage).\nclass ApplicationConfigurator is\n    method main() is\n        config = readApplicationConfigFile()\n\n        if (config.OS == &quot;Windows&quot;) then\n            factory = new WinFactory()\n        else if (config.OS == &quot;Mac&quot;) then\n            factory = new MacFactory()\n        else\n            throw new Exception(&quot;Error! Unknown operating system.&quot;)\n\n        Application app = new Application(factory)\n</pre>\n</figure>\n</div>\n<div class=\"section applicability-container\">\n<h2 id=\"applicability\"><i class=\"fa fa-lightbulb-on\" aria-hidden=\"true\"></i> Applicability</h2>\n<div class=\"applicability\">\n<div class=\"applicability-problem\">\n<p><i class=\"fa fa-fw fa-bug\" aria-hidden=\"true\"></i> Use the Abstract Factory when your code needs to work with various families of related products, but you don’t want it to depend on the concrete classes of those products—they might be unknown beforehand or you simply want to allow for future extensibility.</p>\n</div><div class=\"applicability-solution\">\n<p><i class=\"fa fa-fw fa-bolt\" aria-hidden=\"true\"></i> The Abstract Factory provides you with an interface for creating objects from each class of the product family. As long as your code creates objects via this interface, you don’t have to worry about creating the wrong variant of a product which doesn’t match the products already created by your app.</p>\n</div>\n<div class=\"applicability-problem\">\n<p><i class=\"fa fa-fw fa-bug\" aria-hidden=\"true\"></i> Consider implementing the Abstract Factory when you have a class with a set of <a href=\"/design-patterns/factory-method\">Factory Methods</a> that blur its primary responsibility.</p>\n</div><div class=\"applicability-solution\">\n<p><i class=\"fa fa-fw fa-bolt\" aria-hidden=\"true\"></i> In a well-designed program <em>each class is responsible only for one thing</em>. When a class deals with multiple product types, it may be worth extracting its factory methods into a stand-alone factory class or a full-blown Abstract Factory implementation.</p>\n</div>\n</div></div>\n<div class=\"section checklist\">\n<h2 id=\"checklist\"><i class=\"fa fa-clipboard-list-check\" aria-hidden=\"true\"></i> How to Implement</h2>\n<ol>\n<li>\n<p>Map out a matrix of distinct product types versus variants of these products.</p>\n</li>\n<li>\n<p>Declare abstract product interfaces for all product types. Then make all concrete product classes implement these interfaces.</p>\n</li>\n<li>\n<p>Declare the abstract factory interface with a set of creation methods for all abstract products.</p>\n</li>\n<li>\n<p>Implement a set of concrete factory classes, one for each product variant.</p>\n</li>\n<li>\n<p>Create factory initialization code somewhere in the app. It should instantiate one of the concrete factory classes, depending on the application configuration or the current environment. Pass this factory object to all classes that construct products.</p>\n</li>\n<li>\n<p>Scan through the code and find all direct calls to product constructors. Replace them with calls to the appropriate creation method on the factory object.</p>\n</li>\n</ol>\n</div>\n<div class=\"section pros-cons\">\n<h2 id=\"pros-cons\"><i class=\"fa fa-balance-scale\" aria-hidden=\"true\"></i> Pros and Cons</h2>\n<div class=\"row\"><div class=\"col-sm-6\">\n<ul>\n<li><i class=\"fa fa-fw fa-check\" aria-hidden=\"true\"></i> You can be sure that the products you’re getting from a factory are compatible with each other.</li>\n<li><i class=\"fa fa-fw fa-check\" aria-hidden=\"true\"></i> You avoid tight coupling between concrete products and client code.</li>\n<li><i class=\"fa fa-fw fa-check\" aria-hidden=\"true\"></i> <em>Single Responsibility Principle</em>. You can extract the product creation code into one place, making the code easier to support.</li>\n<li><i class=\"fa fa-fw fa-check\" aria-hidden=\"true\"></i> <em>Open/Closed Principle</em>. You can introduce new variants of products without breaking existing client code.</li>\n</ul>\n</div><div class=\"col-sm-6\">\n<ul>\n<li><i class=\"fa fa-fw fa-times\" aria-hidden=\"true\"></i> The code may become more complicated than it should be, since a lot of new interfaces and classes are introduced along with the pattern.</li>\n</ul>\n</div></div></div>\n<div class=\"section relations\">\n<h2 id=\"relations\"><i class=\"fa fa-exchange-alt\" aria-hidden=\"true\"></i> Relations with Other Patterns</h2>\n<ul>\n<li>\n<p>Many designs start by using <a href=\"/design-patterns/factory-method\">Factory Method</a> (less complicated and more customizable via subclasses) and evolve toward <a href=\"/design-patterns/abstract-factory\">Abstract Factory</a>, <a href=\"/design-patterns/prototype\">Prototype</a>, or <a href=\"/design-patterns/builder\">Builder</a> (more flexible, but more complicated).</p>\n</li>\n<li>\n<p><a href=\"/design-patterns/builder\">Builder</a> focuses on constructing complex objects step by step. <a href=\"/design-patterns/abstract-factory\">Abstract Factory</a> specializes in creating families of related objects. <em>Abstract Factory</em> returns the product immediately, whereas <em>Builder</em> lets you run some additional construction steps before fetching the product.</p>\n</li>\n<li>\n<p><a href=\"/design-patterns/abstract-factory\">Abstract Factory</a> classes are often based on a set of <a href=\"/design-patterns/factory-method\">Factory Methods</a>, but you can also use <a href=\"/design-patterns/prototype\">Prototype</a> to compose the methods on these classes.</p>\n</li>\n<li>\n<p><a href=\"/design-patterns/abstract-factory\">Abstract Factory</a> can serve as an alternative to <a href=\"/design-patterns/facade\">Facade</a> when you only want to hide the way the subsystem objects are created from the client code.</p>\n</li>\n<li>\n<p>You can use <a href=\"/design-patterns/abstract-factory\">Abstract Factory</a> along with <a href=\"/design-patterns/bridge\">Bridge</a>. This pairing is useful when some abstractions defined by <em>Bridge</em> can only work with specific implementations. In this case, <em>Abstract Factory</em> can encapsulate these relations and hide the complexity from the client code.</p>\n</li>\n<li>\n<p><a href=\"/design-patterns/abstract-factory\">Abstract Factories</a>, <a href=\"/design-patterns/builder\">Builders</a> and <a href=\"/design-patterns/prototype\">Prototypes</a> can all be implemented as <a href=\"/design-patterns/singleton\">Singletons</a>.</p>\n</li>\n</ul>\n</div>\n<div class=\"section implementations\">\n<h2 id=\"implementations\"><i class=\"fa fa-code\" aria-hidden=\"true\"></i> Code Examples</h2>\n<p><a href=\"/design-patterns/abstract-factory/csharp/example\" title=\"Abstract Factory in C#\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/csharp.svg?id=da64592defc6e86d57c39c66e9de3e58\" alt=\"Abstract Factory in C#\" /></a>\n<a href=\"/design-patterns/abstract-factory/cpp/example\" title=\"Abstract Factory in C++\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/cpp.svg?id=f7782ed8b8666246bfcc3f8fefc3b858\" alt=\"Abstract Factory in C++\" /></a>\n<a href=\"/design-patterns/abstract-factory/go/example\" title=\"Abstract Factory in Go\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/go.svg?id=1a89927eb99b1ea3fde7701d97970aca\" alt=\"Abstract Factory in Go\" /></a>\n<a href=\"/design-patterns/abstract-factory/java/example\" title=\"Abstract Factory in Java\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/java.svg?id=e6d87e2dca08c953fe3acd1275ed4f4e\" alt=\"Abstract Factory in Java\" /></a>\n<a href=\"/design-patterns/abstract-factory/php/example\" title=\"Abstract Factory in PHP\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/php.svg?id=be1906eb26b71ec1d3b93720d6156618\" alt=\"Abstract Factory in PHP\" /></a>\n<a href=\"/design-patterns/abstract-factory/python/example\" title=\"Abstract Factory in Python\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/python.svg?id=6d815d43c0f7050a1151b43e51569c9f\" alt=\"Abstract Factory in Python\" /></a>\n<a href=\"/design-patterns/abstract-factory/ruby/example\" title=\"Abstract Factory in Ruby\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/ruby.svg?id=b065b718c914bf8e960ef731600be1eb\" alt=\"Abstract Factory in Ruby\" /></a>\n<a href=\"/design-patterns/abstract-factory/rust/example\" title=\"Abstract Factory in Rust\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/rust.svg?id=1f5698a4b5ae23fe79413511747e4a87\" alt=\"Abstract Factory in Rust\" /></a>\n<a href=\"/design-patterns/abstract-factory/swift/example\" title=\"Abstract Factory in Swift\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/swift.svg?id=0b716c2d52ec3a48fbe91ac031070c1d\" alt=\"Abstract Factory in Swift\" /></a>\n<a href=\"/design-patterns/abstract-factory/typescript/example\" title=\"Abstract Factory in TypeScript\" class=\"prog-lang-link\"><img width=\"53\" height=\"53\" loading=\"lazy\" src=\"/images/patterns/icons/typescript.svg?id=2239d0f16cb703540c205dd8cb0c0cb7\" alt=\"Abstract Factory in TypeScript\" /></a></p>\n</div>\n<div class=\"section extras\">\n<h2 id=\"extras\"><i class=\"fa fa-gift\" aria-hidden=\"true\"></i> Extra Content</h2>\n<ul>\n<li>Read our <a href=\"/design-patterns/factory-comparison\">Factory Comparison</a> to learn more about the differences between various factory patterns and concepts.</li>\n</ul>\n</div>\n\n\n    <div class=\"banner-set2\" id=\"book-promo\">\n            <div class=\"prom banner-content banner-bg banner-striped banner-with-image\" data-id=\"DP: 1: Support our free website and own the eBook!\" data-creative-id=\"standard-en\" data-position=\"content_bottom\">\n                <div class=\"banner-image\">\n                    <a href=\"/design-patterns/book\">\n                        <img width=\"200\" height=\"200\" loading=\"lazy\" src=\"/images/patterns/banners/patterns-book-banner-3.png?id=7d445df13c80287beaab234b4f3b698c\" srcset=\"/images/patterns/banners/patterns-book-banner-3-2x.png?id=0cc3f77ab421d1a5c02ee46488231c3a 2x\">\n                    </a>\n                </div>\n\n                <div class=\"banner-text\">\n                    <h3 class=\"title\">Support our free website and own the eBook!</h3>\n                    <ul style=\"font-size: 14px;\">\n                        <li style=\"margin: 0;\">22 design patterns and 8 principles explained in depth.</li>\n                        <li style=\"margin: 0;\">409 well-structured, easy to read, jargon-free pages.</li>\n                        <li style=\"margin: 0;\">225 clear and helpful illustrations and diagrams.</li>\n                        <li style=\"margin: 0;\">An archive with code examples in 11 languages.</li>\n                        <li style=\"margin: 0;\">All devices supported: PDF/EPUB/MOBI/KFX formats.</li>\n                    </ul>\n                    <a class=\"btn btn-secondary\" href=\"/design-patterns/book\"><i class=\"fa fa-book\" aria-hidden=\"true\"></i> Learn more…</a>\n                </div>\n            </div>\n        </div>\n\n    </article>\n\n<nav class=\"prev-next\">\n                    <div class=\"next\">\n                <h4>Read next</h4>\n                <a rel=\"next\" href=\"/design-patterns/factory-comparison\" class=\"btn btn-primary\">Factory Comparison&nbsp;<span class=\"fa fa-arrow-right\"></span></a>\n            </div>\n                            <div class=\"prev\">\n                <h4>Return</h4>\n                <a rel=\"prev\" href=\"/design-patterns/factory-method\" class=\"btn btn-default\"><span class=\"fa fa-arrow-left\"></span>&nbsp;Factory Method </a>\n            </div>\n            </nav>\n</div>\n\n<aside class=\"feature content-secondary\">\n    <div class=\"prom banner-sidebar banner-removable banner-removable-patterns\" data-id=\"DP: Sidebar\" data-creative-id=\"standard-sidebar-en\" data-position=\"sidebar\">\n        <div class=\"banner-inner\">\n            <div class=\"image3d-book-right\">\n                <div class=\"image3d-cover\" style=\"background: #0b3752;\">\n                    <a href=\"/design-patterns/book\">\n                        <img width=\"250\" height=\"375\" loading=\"lazy\" src=\"/images/patterns/book/web-cover-en.png?id=328861769fd11617674e3b8a7e2dd9e7\" srcset=\"/images/patterns/book/web-cover-en-2x.png?id=02940141c5652ed5a426d87390b16366 2x\">\n                    </a>\n                </div>\n            </div>\n            <div style=\"margin-top: 1rem\">\n                <p class=\"text-center\" >This article is a part of our eBook<br/><strong>Dive Into Design Patterns</strong>.</p>\n                <a href=\"/design-patterns/book\" class=\"btn btn-secondary btn-block\"><i class=\"fa fa-book\" aria-hidden=\"true\"></i> Learn more…</a>\n            </div>\n        </div>\n    </div>\n\n\n</aside>\n                    </div>\n    </main>\n\n    <aside class=\"sidebar main-menu\">\n    <div class=\"main-menu-controls\">\n        <button class=\"navigation-toggle\"><i class=\"fa fa-fw fa-times\"></i></button>\n    </div>\n    <div class=\"main-menu-list-wrapper nano\">\n        <div class=\"main-menu-list nano-content\">\n            <a class=\"menu-brand\" href=\"/\">\n                                    <img width=200 height=241 loading=\"lazy\" alt=\"Refactoring.Guru\" src=\"/images/content-public/logos/logo-new.png?id=97d554614702483f31e38b32e82d8e34\" srcset=\"/images/content-public/logos/logo-new-2x.png?id=3bc33294e095bab1d6fe9ae421d07837 2x\">\n                            </a>\n\n            <div class=\"menu-container\" style=\"position: relative\">\n                                <ul class=\"menu-list trail\">\n                            <li class=\"featured\">\n            <a href=\"/store\">\n                <i class=\"fa fa-fw fa-star\" aria-hidden=\"true\"></i> Premium Content\n            </a>\n    \n            <ul >\n                            <li class=\"featured menu-fs15\">\n            <a href=\"/design-patterns/book\">\n                <i class=\"fa fa-fw fa-book\" aria-hidden=\"true\"></i> Design Patterns eBook\n            </a>\n    \n    \n            </li>\n                                <li class=\"featured menu-fs15\">\n            <a href=\"/refactoring/course\">\n                <i class=\"fa fa-fw fa-graduation-cap\" aria-hidden=\"true\"></i> Refactoring Course\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring\">\n                <i class=\"fa fa-fw fa-scissors\" aria-hidden=\"true\"></i> Refactoring\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/refactoring/what-is-refactoring\">\n                What is Refactoring\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/refactoring/what-is-refactoring\">\n                Clean code\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/technical-debt\">\n                Technical debt\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/when\">\n                When to refactor\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/how-to\">\n                How to refactor\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/catalog\">\n                Catalog\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells\">\n                Code Smells\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/refactoring/smells/bloaters\">\n                Bloaters\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/long-method\">\n                Long Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/large-class\">\n                Large Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/primitive-obsession\">\n                Primitive Obsession\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/long-parameter-list\">\n                Long Parameter List\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/data-clumps\">\n                Data Clumps\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/oo-abusers\">\n                Object-Orientation Abusers\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/switch-statements\">\n                Switch Statements\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/temporary-field\">\n                Temporary Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/refused-bequest\">\n                Refused Bequest\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/alternative-classes-with-different-interfaces\">\n                Alternative Classes with Different Interfaces\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/change-preventers\">\n                Change Preventers\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/divergent-change\">\n                Divergent Change\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/shotgun-surgery\">\n                Shotgun Surgery\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/parallel-inheritance-hierarchies\">\n                Parallel Inheritance Hierarchies\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/dispensables\">\n                Dispensables\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/comments\">\n                Comments\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/duplicate-code\">\n                Duplicate Code\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/lazy-class\">\n                Lazy Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/data-class\">\n                Data Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/dead-code\">\n                Dead Code\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/speculative-generality\">\n                Speculative Generality\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/couplers\">\n                Couplers\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/feature-envy\">\n                Feature Envy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/inappropriate-intimacy\">\n                Inappropriate Intimacy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/message-chains\">\n                Message Chains\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/smells/middle-man\">\n                Middle Man\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/smells/other\">\n                Other Smells\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/smells/incomplete-library-class\">\n                Incomplete Library Class\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques\">\n                Refactorings\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/refactoring/techniques/composing-methods\">\n                Composing Methods\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/extract-method\">\n                Extract Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/inline-method\">\n                Inline Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-variable\">\n                Extract Variable\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/inline-temp\">\n                Inline Temp\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-temp-with-query\">\n                Replace Temp with Query\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/split-temporary-variable\">\n                Split Temporary Variable\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-assignments-to-parameters\">\n                Remove Assignments to Parameters\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-method-with-method-object\">\n                Replace Method with Method Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/substitute-algorithm\">\n                Substitute Algorithm\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/moving-features-between-objects\">\n                Moving Features between Objects\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/move-method\">\n                Move Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/move-field\">\n                Move Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-class\">\n                Extract Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/inline-class\">\n                Inline Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/hide-delegate\">\n                Hide Delegate\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-middle-man\">\n                Remove Middle Man\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-foreign-method\">\n                Introduce Foreign Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-local-extension\">\n                Introduce Local Extension\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/organizing-data\">\n                Organizing Data\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/self-encapsulate-field\">\n                Self Encapsulate Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-data-value-with-object\">\n                Replace Data Value with Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/change-value-to-reference\">\n                Change Value to Reference\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/change-reference-to-value\">\n                Change Reference to Value\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-array-with-object\">\n                Replace Array with Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/duplicate-observed-data\">\n                Duplicate Observed Data\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/change-unidirectional-association-to-bidirectional\">\n                Change Unidirectional Association to Bidirectional\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/change-bidirectional-association-to-unidirectional\">\n                Change Bidirectional Association to Unidirectional\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-magic-number-with-symbolic-constant\">\n                Replace Magic Number with Symbolic Constant\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/encapsulate-field\">\n                Encapsulate Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/encapsulate-collection\">\n                Encapsulate Collection\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-type-code-with-class\">\n                Replace Type Code with Class\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-type-code-with-subclasses\">\n                Replace Type Code with Subclasses\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-type-code-with-state-strategy\">\n                Replace Type Code with State/Strategy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-subclass-with-fields\">\n                Replace Subclass with Fields\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/simplifying-conditional-expressions\">\n                Simplifying Conditional Expressions\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/decompose-conditional\">\n                Decompose Conditional\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/consolidate-conditional-expression\">\n                Consolidate Conditional Expression\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/consolidate-duplicate-conditional-fragments\">\n                Consolidate Duplicate Conditional Fragments\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-control-flag\">\n                Remove Control Flag\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-nested-conditional-with-guard-clauses\">\n                Replace Nested Conditional with Guard Clauses\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-conditional-with-polymorphism\">\n                Replace Conditional with Polymorphism\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-null-object\">\n                Introduce Null Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-assertion\">\n                Introduce Assertion\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/simplifying-method-calls\">\n                Simplifying Method Calls\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/rename-method\">\n                Rename Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/add-parameter\">\n                Add Parameter\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-parameter\">\n                Remove Parameter\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/separate-query-from-modifier\">\n                Separate Query from Modifier\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/parameterize-method\">\n                Parameterize Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-parameter-with-explicit-methods\">\n                Replace Parameter with Explicit Methods\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/preserve-whole-object\">\n                Preserve Whole Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-parameter-with-method-call\">\n                Replace Parameter with Method Call\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/introduce-parameter-object\">\n                Introduce Parameter Object\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/remove-setting-method\">\n                Remove Setting Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/hide-method\">\n                Hide Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-constructor-with-factory-method\">\n                Replace Constructor with Factory Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-error-code-with-exception\">\n                Replace Error Code with Exception\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-exception-with-test\">\n                Replace Exception with Test\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/refactoring/techniques/dealing-with-generalization\">\n                Dealing with Generalization\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/pull-up-field\">\n                Pull Up Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/pull-up-method\">\n                Pull Up Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/pull-up-constructor-body\">\n                Pull Up Constructor Body\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/push-down-method\">\n                Push Down Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/push-down-field\">\n                Push Down Field\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-subclass\">\n                Extract Subclass\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-superclass\">\n                Extract Superclass\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/extract-interface\">\n                Extract Interface\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/collapse-hierarchy\">\n                Collapse Hierarchy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/form-template-method\">\n                Form Template Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-inheritance-with-delegation\">\n                Replace Inheritance with Delegation\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/replace-delegation-with-inheritance\">\n                Replace Delegation with Inheritance\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"trail\">\n            <a href=\"/design-patterns\">\n                <i class=\"fa fa-fw fa-puzzle-piece\" aria-hidden=\"true\"></i> Design Patterns\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/what-is-pattern\">\n                What is a Pattern\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/what-is-pattern\">\n                What's a design pattern?\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/history\">\n                History of patterns\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/why-learn-patterns\">\n                Why should I learn patterns?\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/criticism\">\n                Criticism of patterns\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/classification\">\n                Classification of patterns\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/catalog\">\n                Catalog\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-third-level trail\">\n            <a href=\"/design-patterns/creational-patterns\">\n                Creational Patterns\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/factory-method\">\n                Factory Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"trail active\">\n            <a href=\"/design-patterns/abstract-factory\">\n                Abstract Factory\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/builder\">\n                Builder\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/prototype\">\n                Prototype\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/singleton\">\n                Singleton\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"menu-third-level\">\n            <a href=\"/design-patterns/structural-patterns\">\n                Structural Patterns\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/adapter\">\n                Adapter\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/bridge\">\n                Bridge\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/composite\">\n                Composite\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/decorator\">\n                Decorator\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/facade\">\n                Facade\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/flyweight\">\n                Flyweight\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/proxy\">\n                Proxy\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"menu-third-level\">\n            <a href=\"/design-patterns/behavioral-patterns\">\n                Behavioral Patterns\n            </a>\n    \n            <ul >\n                            <li class=\"\">\n            <a href=\"/design-patterns/chain-of-responsibility\">\n                Chain of Responsibility\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/command\">\n                Command\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/iterator\">\n                Iterator\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/mediator\">\n                Mediator\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/memento\">\n                Memento\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/observer\">\n                Observer\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/state\">\n                State\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/strategy\">\n                Strategy\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/template-method\">\n                Template Method\n            </a>\n    \n    \n            </li>\n                                <li class=\"\">\n            <a href=\"/design-patterns/visitor\">\n                Visitor\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                                <li class=\"menu-code-examples\">\n            <a href=\"/design-patterns/examples\">\n                Code Examples\n            </a>\n    \n            <ul >\n                            <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/csharp\">\n                C#\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/cpp\">\n                C++\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/go\">\n                Go\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/java\">\n                Java\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/php\">\n                PHP\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/python\">\n                Python\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/ruby\">\n                Ruby\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/rust\">\n                Rust\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/swift\">\n                Swift\n            </a>\n    \n    \n            </li>\n                                <li class=\"menu-code-examples-item\">\n            <a href=\"/design-patterns/typescript\">\n                TypeScript\n            </a>\n    \n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n            </li>\n                        </ul>\n    \n                </div>\n\n            <div class=\"main-menu-aux-controls\">\n                <a href=\"https://refactoring.guru/login\" title=\"Sign in\" style=\" display: inline-flex; align-items: center; gap: 6px; \"><svg style=\"width: 16px; height: 16px; filter:drop-shadow(0 1px 1px #74261e)\" class=\"inline-block mx-0\"  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\"opacity=\"0.4\" d=\"M352.7 222.4c3.2 1 6.5 1.6 10 1.6l21.3 0c17.7 0 32 14.3 32 32s-14.3 32-32 32l-21.3 0c-.8 0-1.7 0-2.5 0c-.9 0-1.7-.1-2.5-.1c-1.7-.1-3.4-.2-5-.4C357.4 414 391.1 512 432 512c44.2 0 80-114.6 80-256S476.2 0 432 0c-40.6 0-74.2 96.9-79.3 222.4z\"/><path fill=\"currentColor\"class=\"fa-primary\" d=\"M320 48a48 48 0 1 0 -96 0 48 48 0 1 0 96 0zM125.7 175.5c9.9-9.9 23.4-15.5 37.5-15.5c1.9 0 3.8 .1 5.6 .3L137.6 254c-9.3 28 1.7 58.8 26.8 74.5l86.2 53.9-25.4 88.8c-4.9 17 5 34.7 22 39.6s34.7-5 39.6-22l28.7-100.4c5.9-20.6-2.6-42.6-20.7-53.9L238 299l30.9-82.4 5.1 12.3C289 264.7 323.9 288 362.7 288l21.3 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-21.3 0c-12.9 0-24.6-7.8-29.5-19.7l-6.3-15c-14.6-35.1-44.1-61.9-80.5-73.1l-48.7-15c-11.1-3.4-22.7-5.2-34.4-5.2c-31 0-60.8 12.3-82.7 34.3L57.4 153.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l23.1-23.1zM91.2 352L32 352c-17.7 0-32 14.3-32 32s14.3 32 32 32l69.6 0c19 0 36.2-11.2 43.9-28.5L157 361.6l-9.5-6c-17.5-10.9-30.5-26.8-37.9-44.9L91.2 352z\"/></svg> Sign in</a>\n                <a href=\"https://feedback.refactoring.guru/\" class=\"userecho-public\" rel=\"nofollow\" title=\"Contact us\"><i class=\"fa fa-fw fa-fw fa-envelope\" aria-hidden=\"true\"></i> Contact us</a>\n            </div>\n        </div>\n    </div>\n</aside>\n\n    <nav class=\"navigation\" role=\"navigation\">\n    <div class=\"navigation-container\">\n        <a class=\"navigation-brand\" href=\"/\">\n            <img alt=\"Refactoring.Guru\"\n                 src=\"/images/content-public/logos/logo-new-mobile.png?id=ea18aa9b032eaa92835ed6d472b03b4a\"\n                 srcset=\"/images/content-public/logos/logo-new-mobile-2x.png?id=7ad5648bfd86ae2e8524147a72877c64 2x\">\n        </a>\n\n        <div class=\"shop-link d-none d-lg-block\" style=\"display: none !important;\">\n            <a class=\"btn btn-md btn-primary btn-featured\" href=\"/store\"><svg style=\"width: 28px; height: 28px; fill: currentColor; display: inline-block; margin-top: -14px;\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><!--! Font Awesome Pro 6.3.0 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2023 Fonticons, Inc. --><path d=\"M356 60l60 20-60 20-20 60-20-60L256 80l60-20L336 0l20 60zM464 208l48 16-48 16-16 48-16-48-48-16 48-16 16-48 16 48zm-243.8-9.8l33 66.9 73.8 10.7 59.8 8.7-43.3 42.2-53.4 52.1 12.6 73.5L313 512l-53.5-28.1-66-34.7-66 34.7L73.9 512l10.2-59.6 12.6-73.5L43.3 326.8 0 284.6l59.8-8.7 73.8-10.7 33-66.9L193.5 144l26.8 54.2zm26.1 114.4l-25-3.6-11.2-22.6-16.7-33.9-16.7 33.9L165.6 309l-25 3.6-37.4 5.4 27.1 26.4 18.1 17.6L144 387l-6.4 37.3 33.5-17.6 22.3-11.7 22.3 11.7 33.5 17.6L242.9 387l-4.3-24.9 18.1-17.6 27.1-26.4-37.4-5.4z\"/></svg>\n                Shop Now!</a>\n        </div>\n\n        <ul class=\"navigation-menu\">\n                            <li class=\"nav-locale dropdown dropdown-locales\">\n                    <button class=\"dropdown-toggle\" id=\"dropdownLanguage\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                        <i class=\"fa fa-fw fa-globe\" aria-hidden=\"true\"></i> <span class=\"caption d-none d-lg-inline-block\">English</span>\n                    </button>\n                    <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownLanguage\">\n                                                                                                                        <a href=\"https://refactoring.guru/design-patterns/abstract-factory\" class=\"dropdown-item locale-link active\" data-locale=\"en\" title=\"English\">English</a>\n                                                                                                                                <a href=\"https://refactoring.guru/es/design-patterns/abstract-factory\" class=\"dropdown-item locale-link \" data-locale=\"es\" title=\"Español\">Español</a>\n                                                                                                                                <a href=\"https://refactoring.guru/fr/design-patterns/abstract-factory\" class=\"dropdown-item locale-link \" data-locale=\"fr\" title=\"Français\">Français</a>\n                                                                                                                                <a href=\"https://refactoring.guru/ja/design-patterns/abstract-factory\" class=\"dropdown-item locale-link \" data-locale=\"ja\" title=\"日本語\">日本語</a>\n                                                                                                                                <a href=\"https://refactoring.guru/ko/design-patterns/abstract-factory\" class=\"dropdown-item locale-link \" data-locale=\"ko\" title=\"한국어\">한국어</a>\n                                                                                                                                <a href=\"https://refactoring.guru/pl/design-patterns/abstract-factory\" class=\"dropdown-item locale-link \" data-locale=\"pl\" title=\"Polski\">Polski</a>\n                                                                                                                                <a href=\"https://refactoring.guru/pt-br/design-patterns/abstract-factory\" class=\"dropdown-item locale-link \" data-locale=\"pt-br\" title=\"Português Brasileiro\">Português Brasileiro</a>\n                                                                                                                                <a href=\"https://refactoring.guru/ru/design-patterns/abstract-factory\" class=\"dropdown-item locale-link \" data-locale=\"ru\" title=\"Русский\">Русский</a>\n                                                                                                                                <a href=\"https://refactoring.guru/uk/design-patterns/abstract-factory\" class=\"dropdown-item locale-link \" data-locale=\"uk\" title=\"Українська\">Українська</a>\n                                                                                                                                <a href=\"https://refactoringguru.cn/design-patterns/abstract-factory\" class=\"dropdown-item locale-link \" data-locale=\"zh\" title=\"中文\">中文</a>\ndiv>\n                </li>\n                        <li class=\"nav-contacts\">\n                <a class=\"userecho-private\" href=\"https://feedback.refactoring.guru/?show_feedback_form_private=true\" rel=\"nofollow\" title=\"Contact us\">\n                    <i class=\"fa fa-fw fa-envelope\" aria-hidden=\"true\"></i> <span class=\"caption d-none d-xl-inline-block\">Contact us</span>\n                </a>\n            </li>\n                            <li class=\"nav-user\">\n                    <a href=\"https://refactoring.guru/login\" title=\"Sign in\"><span class=\"sign-in-icon\"><svg style=\"width: 24px; height: 24px; \" class=\"inline-block \"  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\"opacity=\"0.4\" d=\"M352.7 222.4c3.2 1 6.5 1.6 10 1.6l21.3 0c17.7 0 32 14.3 32 32s-14.3 32-32 32l-21.3 0c-.8 0-1.7 0-2.5 0c-.9 0-1.7-.1-2.5-.1c-1.7-.1-3.4-.2-5-.4C357.4 414 391.1 512 432 512c44.2 0 80-114.6 80-256S476.2 0 432 0c-40.6 0-74.2 96.9-79.3 222.4z\"/><path fill=\"currentColor\"class=\"fa-primary\" d=\"M320 48a48 48 0 1 0 -96 0 48 48 0 1 0 96 0zM125.7 175.5c9.9-9.9 23.4-15.5 37.5-15.5c1.9 0 3.8 .1 5.6 .3L137.6 254c-9.3 28 1.7 58.8 26.8 74.5l86.2 53.9-25.4 88.8c-4.9 17 5 34.7 22 39.6s34.7-5 39.6-22l28.7-100.4c5.9-20.6-2.6-42.6-20.7-53.9L238 299l30.9-82.4 5.1 12.3C289 264.7 323.9 288 362.7 288l21.3 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-21.3 0c-12.9 0-24.6-7.8-29.5-19.7l-6.3-15c-14.6-35.1-44.1-61.9-80.5-73.1l-48.7-15c-11.1-3.4-22.7-5.2-34.4-5.2c-31 0-60.8 12.3-82.7 34.3L57.4 153.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l23.1-23.1zM91.2 352L32 352c-17.7 0-32 14.3-32 32s14.3 32 32 32l69.6 0c19 0 36.2-11.2 43.9-28.5L157 361.6l-9.5-6c-17.5-10.9-30.5-26.8-37.9-44.9L91.2 352z\"/></svg></span> <span class=\"account-icon\" style=\"display:none\"><svg style=\"width: 24px; height: 24px; \" class=\"inline-block \"  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 576 512\"><path fill=\"currentColor\"opacity=\"0.4\" d=\"M64 270.5l224-196c74.7 65.4 149.4 130.7 224.1 196.1l.4 177.3c.1 35.4-28.6 64.1-64 64.1l-320.4 0c-35.3 0-64-28.6-64-64L64 270.5zM176.1 433.6c.1 .5 .1 1.1 .2 1.6c.2 1 .5 2 .9 3c.8 1.9 2 3.6 3.4 5.1c2.9 2.9 6.9 4.7 11.3 4.7l192 0c8.8 0 16-7.2 16-16c0-44.2-35.8-80-80-80l-64 0c-22.1 0-42.1 9-56.6 23.4c-7.2 7.2-13.1 15.9-17.1 25.4c-2 4.8-3.6 9.8-4.7 15c-.5 2.6-.9 5.3-1.2 7.9c-.1 1.3-.2 2.7-.3 4.1c-.1 1.4-.1 2.7-.1 4.1c0 .6 0 1.1 .1 1.6zm48.2-184.2c-.1 1.1-.2 2.2-.2 3.2c-.1 1.1-.1 2.2-.1 3.3s0 2.2 .1 3.3c.1 1.1 .1 2.2 .2 3.2c.2 2.1 .5 4.3 1 6.4c.9 4.2 2.1 8.2 3.7 12c3.2 7.7 7.9 14.6 13.7 20.3C254.3 312.8 270.3 320 288 320c35.3 0 64-28.7 64-64s-28.7-64-64-64c-17.7 0-33.7 7.2-45.3 18.7c-5.8 5.8-10.5 12.7-13.7 20.3c-1.6 3.8-2.9 7.8-3.7 12c-.4 2.1-.8 4.2-1 6.4z\"/><path fill=\"currentColor\"class=\"fa-primary\" d=\"M309.1 7.9C297-2.6 279-2.6 266.9 7.9l-256 224c-13.3 11.6-14.6 31.9-3 45.2s31.9 14.6 45.2 3L288 74.5 522.9 280.1c13.3 11.6 33.5 10.3 45.2-3s10.3-33.5-3-45.2L512 185.5 512 64c0-17.7-14.3-32-32-32l-32 0c-17.7 0-32 14.3-32 32l0 37.5L309.1 7.9zM352 256a64 64 0 1 0 -128 0 64 64 0 1 0 128 0zm-96 96c-44.2 0-80 35.8-80 80c0 8.8 7.2 16 16 16l192 0c8.8 0 16-7.2 16-16c0-44.2-35.8-80-80-80l-64 0z\"/></svg></span> <span class=\"sign-out-icon\" style=\"display:none\"><svg style=\"width: 24px; height: 24px; \" class=\"inline-block \"  xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path fill=\"currentColor\"opacity=\"0.4\" d=\"M0 256C0 397.4 35.8 512 80 512c25.3 0 47.8-37.5 62.5-96L128 416c-.5 0-1.1 0-1.6 0c-.6 0-1.1-.1-1.6-.1c-1.1-.1-2.1-.3-3.2-.5c-2.1-.4-4.1-1.1-6-1.9c-3.8-1.6-7.3-4-10.2-6.9s-5.2-6.3-6.9-10.2c-.8-1.9-1.4-3.9-1.9-6c-.2-1.1-.4-2.3-.5-3.5c0-.3 0-.6-.1-.8c0-.2 0-.4 0-.7c0-.4 0-.7 0-.7c0-.5 0-.7 0-.9c0-.3 0-.6 0-.9c0 0 0-.3 0-.7c0-.2 0-.4 0-.7c0-.2 0-.4 .1-.8c0-.3 .1-.6 .1-.9c0-.2 .1-.4 .1-.7c.1-.8 .2-1.2 .3-1.7c.5-2.2 1.1-4.2 1.9-6.1c1.6-3.8 4-7.3 6.9-10.2c5.8-5.8 13.8-9.4 22.6-9.4l26.2 0c3.8-29.6 5.8-62.1 5.8-96c0-18.3-.6-36.1-1.7-53.4c-1.7-1.2-3.4-2.5-4.9-4c-.8-.8-1.6-1.6-2.2-2.5s-1.3-1.7-1.9-2.6c-1.2-1.8-2.1-3.6-2.9-5.5s-1.4-3.9-1.8-5.9c-.2-1-.3-2-.4-3s-.1-2-.2-3c0-8.3 3.1-16.5 9.4-22.8C141 63.1 112.8 0 80 0C35.8 0 0 114.6 0 256z\"/><path fill=\"currentColor\"class=\"fa-primary\" d=\"M416 48a48 48 0 1 0 -96 0 48 48 0 1 0 96 0zM221.7 175.5c9.9-9.9 23.4-15.5 37.5-15.5c1.9 0 3.8 .1 5.6 .3L233.6 254c-9.3 28 1.7 58.8 26.8 74.5l86.2 53.9-25.4 88.8c-4.9 17 5 34.7 22 39.6s34.7-5 39.6-22l28.7-100.4c5.9-20.6-2.6-42.6-20.7-53.9L334 299l30.9-82.4 5.1 12.3C385 264.7 419.9 288 458.7 288l21.3 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-21.3 0c-12.9 0-24.6-7.8-29.5-19.7l-6.3-15c-14.6-35.1-44.1-61.9-80.5-73.1l-48.7-15c-11.1-3.4-22.7-5.2-34.4-5.2c-31 0-60.8 12.3-82.7 34.3l-23.1 23.1c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l23.1-23.1zM187.2 352L128 352c-17.7 0-32 14.3-32 32s14.3 32 32 32l69.6 0c19 0 36.2-11.2 43.9-28.5L253 361.6l-9.5-6c-17.5-10.9-30.5-26.8-37.9-44.9L187.2 352z\"/></svg></span> <span class=\"caption d-none d-xl-inline-block\">Sign in</span></a>\n                </li>\n                        <li class=\"nav-menu\">\n                <button class=\"navigation-toggle\"><i class=\"fa fa-fw fa-bars\" aria-hidden=\"true\"></i></button>\n            </li>\n        </ul>\n    </div>\n</nav>\n\n    <footer class=\"footer center-content\">\n    <div class=\"footer-container center-content-container\">\n        <div class=\"footer-inner container-fluid\">\n            <div class=\"row\">\n                <div class=\"col-8 col-md-10\">\n                    <ul class=\"footer-list footer-list-horizontal\">\n                        <li><a href=\"/\">Home</a></li>\n                        <li><a href=\"/refactoring\">Refactoring</a></li>\n                        <li><a href=\"/design-patterns\">Design Patterns</a></li>\n                        <li><a href=\"/store\">Premium Content</a></li>\n                        <li><a href=\"https://gitbybit.com/\">Git Course</a></li>\n                        <li><a href=\"https://refactoring.userecho.com/\" rel=\"nofollow\" class=\"userecho-public\">Forum</a></li>\n                        <li><a href=\"https://refactoring.userecho.com/\" rel=\"nofollow\" class=\"userecho-private\">Contact us</a></li>\n                    </ul>\n                </div>\n                <div class=\"col-4 col-md-2\">\n                    <ul class=\"footer-list footer-list-iconic footer-list-right\">\n                                                    <li><a href=\"https://www.facebook.com/refactoring.guru\"><i class=\"fa fa-facebook-official\"></i></a></li>\n                                                <li><a href=\"/sendy/form\" rel=\"nofollow\"><i class=\"fa fa-envelope\" aria-hidden=\"true\"></i></a></li>\n                        <li><a href=\"https://github.com/RefactoringGuru\"><i class=\"fa fa-github-circled\"></i></a></li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"footer-second\">\n        <div class=\"footer-container center-content-container\">\n            <div class=\"footer-inner container-fluid\">\n                <div class=\"row\">\n                    <div class=\"col-12 col-sm-6\">\n                        <i class=\"fa fa-fw fa-copyright\"></i> 2014-2025 <a href=\"/\">Refactoring.Guru</a>. <span style=\"white-space: nowrap\">All rights reserved.</span><br>\n                        <i class=\"fa fa-fw fa-image\"></i> Illustrations by <a href=\"http://zhart.us/\" rel=\"nofollow\"><span style=\"white-space: nowrap\">Dmitry Zhart</span></a>\n                    </div>\n                    <div class=\"footer-links-right col-12 col-sm-6 mt-4 mt-sm-0\">\n                        <ul class=\"footer-list footer-list-horizontal footer-list-right\">\n                            <li><a href=\"/terms\"><span>Terms &amp; Conditions</span></a>\n                            </li>\n                            <li><a href=\"/privacy-policy\"><span>Privacy Policy</span></a>\n                            </li>\n                            <li><a href=\"/content-usage-policy\"><span>Content Usage Policy</span></a>\n                            </li>\n                            <li><a href=\"/site-about\"><span>About us</span></a>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n                                    <div class=\"row\">\n                        <div class=\"col-12 col-sm-4\">\n                            <div class=\"mt-4\">\n                                                                    <b>Ukrainian office:</b><br>\n                                    <object class=\"fa-fw\" style=\"height: 0.8rem; filter: invert(50%);\"  type=\"image/svg+xml\" data=\"/images/content-public/icons/fa-building.svg?id=afddb5806968b0a9acfc1df75a181234\">\n                                        <img class=\"fa-fw\" style=\"height: 0.8rem;\" src=\"/images/content-public/icons/fa-building.svg?id=afddb5806968b0a9acfc1df75a181234\" alt=\"Organization address\"/>\n                                    </object> FOP Olga Skobeleva<br>\n                                    <svg style=\"width: 16px; height: 16px; margin-right: 1px; fill: currentColor;\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\"><path d=\"M352 192c0-88.4-71.6-160-160-160S32 103.6 32 192c0 15.6 5.4 37 16.6 63.4c10.9 25.9 26.2 54 43.6 82.1c34.1 55.3 74.4 108.2 99.9 140c25.4-31.8 65.8-84.7 99.9-140c17.3-28.1 32.7-56.3 43.6-82.1C346.6 229 352 207.6 352 192zm32 0c0 87.4-117 243-168.3 307.2c-12.3 15.3-35.1 15.3-47.4 0C117 435 0 279.4 0 192C0 86 86 0 192 0S384 86 384 192zm-240 0a48 48 0 1 0 96 0 48 48 0 1 0 -96 0zm48 80a80 80 0 1 1 0-160 80 80 0 1 1 0 160z\"/></svg> Abolmasova 7<br>\n                                    <span style=\"margin-left: 21px;\">Kyiv, Ukraine, 02002</span><br>\n                                    <i class=\"fa fa-fw fa-envelope\"></i>  Email: support@refactoring.guru\n                                \n                            </div>\n                        </div>\n                        <div class=\"col-12 col-sm-4\">\n                            <div class=\"mt-4\">\n                                <b>Spanish office:</b><br>\n                                <object class=\"fa-fw\" style=\"height: 0.8rem; filter: invert(50%);\"  type=\"image/svg+xml\" data=\"/images/content-public/icons/fa-building.svg?id=afddb5806968b0a9acfc1df75a181234\">\n                                    <img class=\"fa-fw\" style=\"height: 0.8rem;\" src=\"/images/content-public/icons/fa-building.svg?id=afddb5806968b0a9acfc1df75a181234\" alt=\"Organization address\"/>\n                                </object> Oleksandr Shvets<br>\n                                <svg style=\"width: 16px; height: 16px; margin-right: 1px; fill: currentColor;\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 384 512\"><path d=\"M352 192c0-88.4-71.6-160-160-160S32 103.6 32 192c0 15.6 5.4 37 16.6 63.4c10.9 25.9 26.2 54 43.6 82.1c34.1 55.3 74.4 108.2 99.9 140c25.4-31.8 65.8-84.7 99.9-140c17.3-28.1 32.7-56.3 43.6-82.1C346.6 229 352 207.6 352 192zm32 0c0 87.4-117 243-168.3 307.2c-12.3 15.3-35.1 15.3-47.4 0C117 435 0 279.4 0 192C0 86 86 0 192 0S384 86 384 192zm-240 0a48 48 0 1 0 96 0 48 48 0 1 0 -96 0zm48 80a80 80 0 1 1 0-160 80 80 0 1 1 0 160z\"/></svg> Avda Pamplona 64<br>\n                                <span style=\"margin-left: 21px;\">Pamplona, Spain, 31009</span><br>\n                                <i class=\"fa fa-fw fa-envelope\"></i>  Email: support@refactoring.guru\n                            </div>\n                        </div>\n                    </div>\n                            </div>\n        </div>\n    </div>\n</footer>\n\n</div>\n\n\n    <script defer>\n    var CodeMirrorScripts = [\"/js/codemirror.min.js?id=f7ae4adf14bd00338caf8e95da733cc9\"];\n</script>\n\n\n\n    <script>window.loadContent = true;window.loadCart = true;</script>\n</body>\n</html>\n"}
]